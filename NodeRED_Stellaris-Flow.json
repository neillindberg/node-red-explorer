{
    "_rev": "2-c0ad1fd3dceb077b5ecc9b8e5f984fad",
    "_id": "Stellaris-Flow-10.1/flow",
    "flow": [
        {
            "disabled": false,
            "info": "",
            "type": "tab",
            "id": "57a5a054.9dfd3",
            "label": "System"
        },
        {
            "disabled": false,
            "info": "",
            "type": "tab",
            "id": "61ffb71b.d286f",
            "label": "Devices"
        },
        {
            "disabled": false,
            "info": "",
            "type": "tab",
            "id": "c1ec6ee7.981a18",
            "label": "Sim"
        },
        {
            "disabled": false,
            "info": "",
            "type": "tab",
            "id": "1dff07f1.603c08",
            "label": "Users"
        },
        {
            "disabled": false,
            "info": "",
            "type": "tab",
            "id": "a17d8665.50cb88",
            "label": "Tickets"
        },
        {
            "disabled": false,
            "info": "",
            "type": "tab",
            "id": "c012d9b9.f1e028",
            "label": "Pairing"
        },
        {
            "disabled": false,
            "info": "",
            "type": "tab",
            "id": "fc9978cc.27301",
            "label": "Files"
        },
        {
            "disabled": false,
            "info": "",
            "type": "tab",
            "id": "c13a158d.882c9",
            "label": "Logs"
        },
        {
            "disabled": false,
            "info": "",
            "type": "tab",
            "id": "429bd64.63fc828",
            "label": "Data App"
        },
        {
            "disabled": false,
            "info": "These flows are for general maintenance",
            "type": "tab",
            "id": "92b74b12.836b78",
            "label": "Maintenance"
        },
        {
            "disabled": false,
            "info": "",
            "type": "tab",
            "id": "8c1ef78e.3b4798",
            "label": "DashDB"
        },
        {
            "info": "It looks at the following object to find the object to apply the delete process.\nmsg.records.object\nmsg.payload\nIt then sets msg.records.object with that object\nIf msg.records.delete list exist it goes through each record in msg.object and delete any field that match the list.",
            "category": "",
            "name": "Clean Records 2.1",
            "in": [
                {
                    "y": 160,
                    "x": 80,
                    "wires": [
                        {
                            "id": "f9ef366a.b61188"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "313bd1d3.01c06e",
            "out": [
                {
                    "y": 140,
                    "x": 920,
                    "wires": [
                        {
                            "id": "51211fa9.904fe",
                            "port": 0
                        },
                        {
                            "id": "f9ef366a.b61188",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "Returns act in order of existance:\nmsg.records.returns\nmsg.records.object\nmsg.payload\n\nIf returns exists it uses the array of objectNames and creates a JSON return object containing the msg.objectNames in the order they appear on the list.\nIf object exists it returns msg.object.\nOtherwise it returns the payload unchanged.",
            "category": "",
            "name": "Returns 2.3",
            "in": [
                {
                    "y": 200,
                    "x": 80,
                    "wires": [
                        {
                            "id": "e20763f5.33406"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "bc6ff87.05a2908",
            "out": []
        },
        {
            "info": "Variables uses:\n msg.cloudant[\"server\", \"request\", \"body\", ]\nUses msg.cloudant.server as the abse url for the cloudant instance.\nIf not found it creates it from VCAP_CLOUDANT global variable.\nFormats the url using the cloudant base address and \n20190515 2.2 Changed auth to explicit basic header, deleted old versions",
            "category": "",
            "name": "Cloudant Http 2.2",
            "in": [
                {
                    "y": 220,
                    "x": 40,
                    "wires": [
                        {
                            "id": "54621c9b.f201d4"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "d35dd8d5.3b2a88",
            "out": [
                {
                    "y": 220,
                    "x": 2400,
                    "wires": [
                        {
                            "id": "2a03c952.1c9bc6",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "",
            "name": "Cloudant Setup 2.0",
            "in": [
                {
                    "y": 160,
                    "x": 60,
                    "wires": [
                        {
                            "id": "1addfec1.69f9f1"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "f83a5f50.ef8e",
            "out": [
                {
                    "y": 160,
                    "x": 960,
                    "wires": [
                        {
                            "id": "30b52c07.dc8dd4",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "copies msg.payload to msg.inputs.body and deletes the payload\ncopies msg.inputs.body.fitler_options to msg.fitlers.options if it exist\n\nChecks msg.inputs.body for required and allowed fields from:\nmsg.inputs.required\nmsg.inputs.allowed\n\nChecks msg.filters.options for required and allowed fields from:\nmsg.filters.required\nmsg.fitlers.allowed\n\nChecks for email format\nChecks for uid format\n\nChecks msg.inputs.params and add those values to msg.filters.options\n\nProcess all msg.filters.options and remove \"\" and [] filters from the list.\nProcess the reminder of filters and separate them in 3 lists:\nmsg.filters.values single value filters\nmsg.filters.arrays array of values filters\nmsg.filters.dates _range_begin and _range_end filters\n",
            "category": "",
            "name": "Inputs 2.2",
            "in": [
                {
                    "y": 120,
                    "x": 80,
                    "wires": [
                        {
                            "id": "9366b740.5b24c8"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "71afa3f9.81defc",
            "out": [
                {
                    "y": 100,
                    "x": 1960,
                    "wires": [
                        {
                            "id": "1cce4f59.4185d1",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "Imprements Node-Red Authentication for each API",
            "category": "",
            "name": "Authentication 2.1",
            "in": [
                {
                    "y": 160,
                    "x": 20,
                    "wires": [
                        {
                            "id": "bfe490a.2c4cf7"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "3962857e.44abba",
            "out": [
                {
                    "y": 80,
                    "x": 1340,
                    "wires": [
                        {
                            "id": "81dc9242.80e54",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "msg.email =\n{\n  \"send\": \"true\",\n  \"template_type\": \"default\",\n  \"fields\": {},\n  \"to\": [\"to@b.com\"],\n  \"cc\": [\"cc@b.com\"]\n  \"bcc\": [\"bcc@b.com\"]\n  \"topic\": \"\"\n}\nOverrides:\nmsg.email.send === \"false\"\nor\nmsg.email.send === \"true\"\nmsg.api.debug === \"true\"\nmsg.debug.email.to = <override email>\n\nTemplate fields out replaced:\n{{{field}}}",
            "category": "",
            "name": "Email 2.2",
            "in": [
                {
                    "y": 100,
                    "x": 40,
                    "wires": [
                        {
                            "id": "bb960040.7d816"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "5dbd57cc.fc9bb8",
            "out": [
                {
                    "y": 80,
                    "x": 2240,
                    "wires": [
                        {
                            "id": "96c73689.41cd78",
                            "port": 0
                        },
                        {
                            "id": "bb960040.7d816",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "Set \npayload to JSON with the following fields:\n{ \n  \"api_name\": <common name of the API>,\n  \"test_name\": <name of the test>,\n  \"object\": <field in the record to be inserted in payload>\n}\n\nReturns record[object] in payload\nIf no record is found a node.warn is returned and flow stops",
            "name": "Cloudant Test Data 2.0",
            "in": [
                {
                    "y": 40,
                    "x": 40,
                    "wires": [
                        {
                            "id": "34cfd7dc.07ad48"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "42e57474.0f0cac",
            "out": [
                {
                    "y": 40,
                    "x": 800,
                    "wires": [
                        {
                            "id": "8c590d57.95c94",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "This subflow expects the following\nobject id located in msg.records.id\nobject type located in msg.records.doc_type\nfields to update locate in msg.inputs.body\nNote: msg.inputs.body should not include \"id\" or \"_id\"",
            "category": "",
            "name": "Record Update 2.2",
            "in": [
                {
                    "y": 220,
                    "x": 60,
                    "wires": [
                        {
                            "id": "90877aec.e498b8"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "68197f61.7975",
            "out": [
                {
                    "y": 220,
                    "x": 2340,
                    "wires": [
                        {
                            "id": "c5424b86.7d0048",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "Verifies the previous http call did not return a record\nIf record is found, returns an error\nGet a model of the record\nUpdate the model with inputs\nInsert the record in Cloudant\nlookup and return the inserted record\n\nuses:\nmsg.records.doc_type to determine which cloudant database to target\nmsg.records.models to setup a model to populate\nmsg.inputs.body to find the fields to populate the model with\n",
            "category": "",
            "name": "Record New 2.2",
            "in": [
                {
                    "y": 220,
                    "x": 40,
                    "wires": [
                        {
                            "id": "aa7ba18f.b2222"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "e0cd8199.1ad77",
            "out": [
                {
                    "y": 180,
                    "x": 2760,
                    "wires": [
                        {
                            "id": "f5e9fd9a.06e74",
                            "port": 0
                        },
                        {
                            "id": "a610ab5b.d8e668",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "Create a msg.records.<model name> for each element in msg.records.models array.\nWarning:\nSome models require sub models.\n\"help_tickets\" model requires \"geo_location\", \"cell_data\", \"cell_tower_info\"\nmsg.records.models array order must be ordered to create sub models first.",
            "category": "",
            "name": "Record Model 2.1",
            "in": [
                {
                    "y": 120,
                    "x": 40,
                    "wires": [
                        {
                            "id": "4b326353.484a3c"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "df6d98dd.00d378",
            "out": [
                {
                    "y": 80,
                    "x": 1320,
                    "wires": [
                        {
                            "id": "86fcedb.068ad1",
                            "port": 0
                        },
                        {
                            "id": "4b326353.484a3c",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "Format and returns the last error in the msg.errors array",
            "category": "",
            "name": "Return Error 2.1",
            "in": [
                {
                    "y": 160,
                    "x": 40,
                    "wires": [
                        {
                            "id": "66468412.9e2ccc"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "2638fa4d.cb43e6",
            "out": []
        },
        {
            "info": "Expects msg.kore.request to present\nmsg.kore.return_obj contains the field return by KORE (\"d\")\nIf data is return msg.kore.object is needed.",
            "name": "Kore Http 2.0",
            "in": [
                {
                    "y": 140,
                    "x": 60,
                    "wires": [
                        {
                            "id": "8f27b7b4.9190d8"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "da740a9b.08ed88",
            "out": [
                {
                    "y": 100,
                    "x": 920,
                    "wires": [
                        {
                            "id": "75722218.98ad1c",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "2.1 20190515 delete 4K flows and replaced token with IAM Management",
            "category": "",
            "name": "Object Storage 2.1",
            "in": [
                {
                    "y": 160,
                    "x": 40,
                    "wires": [
                        {
                            "id": "25f95225.2b743e"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "f4989ebd.9314",
            "out": [
                {
                    "y": 180,
                    "x": 1900,
                    "wires": [
                        {
                            "id": "43f0142a.79e35c",
                            "port": 1
                        }
                    ]
                }
            ]
        },
        {
            "info": "",
            "name": "IAM Token 2.0",
            "in": [
                {
                    "y": 100,
                    "x": 40,
                    "wires": [
                        {
                            "id": "f57d2f7d.1ee9c"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "a8815016.d1158",
            "out": [
                {
                    "y": 120,
                    "x": 860,
                    "wires": [
                        {
                            "id": "7270274.a1b58d8",
                            "port": 1
                        }
                    ]
                }
            ]
        },
        {
            "info": "msg.sms =\n{\n  \"send\": \"true\",\n  \"template_type\": \"default\",\n  \"fields\": {},\n  \"to\": [\"+1-555-123-4567\"]\n}\nTemplate options:\nremove msg.sms.template_type\nmsg.sms.template = <manual template utf-8 string>\n\nOverrides:\nmsg.sms.send === \"false\"\nor\nmsg.sms.send === \"true\"\nmsg.api.debug === \"true\"\nmsg.debug.sms.to = <override sms-number>\n\nTemplate fields out replaced:\n{{{field}}}",
            "category": "",
            "name": "SMS 2.2",
            "in": [
                {
                    "y": 120,
                    "x": 40,
                    "wires": [
                        {
                            "id": "9d11623.9608ba"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "4f94cf29.53815",
            "out": [
                {
                    "y": 100,
                    "x": 2100,
                    "wires": [
                        {
                            "id": "f9cb1c7.d26aee",
                            "port": 0
                        },
                        {
                            "id": "9d11623.9608ba",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "uses\nmsg.inputs.body.location\nand returns\nmsg.inputs.body.geo_location",
            "name": "Google Location 2.0",
            "in": [
                {
                    "y": 60,
                    "x": 40,
                    "wires": [
                        {
                            "id": "9531b8f5.005c08"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "d1af1cc8.e0fda",
            "out": [
                {
                    "y": 60,
                    "x": 1500,
                    "wires": [
                        {
                            "id": "9531b8f5.005c08",
                            "port": 0
                        },
                        {
                            "id": "e220d288.2368c",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "",
            "category": "",
            "name": "Support Users 2.1",
            "in": [
                {
                    "y": 120,
                    "x": 60,
                    "wires": [
                        {
                            "id": "ea8d6a75.315508"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "e08f785c.844a68",
            "out": [
                {
                    "y": 120,
                    "x": 1100,
                    "wires": [
                        {
                            "id": "ea8d6a75.315508",
                            "port": 0
                        },
                        {
                            "id": "7dbf778a.7d5328",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "",
            "category": "",
            "name": "Info & Stats 2.0",
            "in": [
                {
                    "y": 180,
                    "x": 80,
                    "wires": [
                        {
                            "id": "7296ac0b.83c144"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "b6210d1b.09e3a",
            "out": [
                {
                    "y": 180,
                    "x": 460,
                    "wires": [
                        {
                            "id": "6b661b5.70e66e4",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "Management of User PII stored in memory\n1. add user PII to cloudant user records\n2. sort cloudant records by PII fields\n3. Search user records by PII fields\n4. down filter cloudant user lists by PII fields\n\nmsg.userMgmt = {\n    \"method\": \"Add PII\" //add PII to json or array\n    \"object\": \"users\" //msg.users contains an array of users\n    \"fields\": [\"first_name\", \"last_name\"] //limit the fields to be added. All if property is missing\n}",
            "category": "",
            "name": "User Mgmt 2.0",
            "in": [
                {
                    "y": 140,
                    "x": 60,
                    "wires": [
                        {
                            "id": "f43d6fba.3663a"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "81f022a0.cad36",
            "out": [
                {
                    "y": 100,
                    "x": 1140,
                    "wires": [
                        {
                            "id": "f43d6fba.3663a",
                            "port": 0
                        },
                        {
                            "id": "e72b0ed8.94d46",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "Manages all IAM Tokens in the system.\nStored them in TOKENS global variable\ninputs:\nmsg.iam = {\n    \"type\": <type>\n}\nchecks if a valid token is available and return it\nchecks the expiration if present and refresh it if necessary\nuses the appropriate VCAP credentials to get the token\nreturns:\nmsg.iam[type] = <access_token>\nmsg[type].token = \"<token_type> <access_token>\"\nSupported type: cos, cloudant, keyprotect",
            "category": "",
            "name": "IAM Mgmt 2.0",
            "in": [
                {
                    "y": 180,
                    "x": 40,
                    "wires": [
                        {
                            "id": "be86d379.943a6"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "ab306e30.d0cc3",
            "out": [
                {
                    "y": 160,
                    "x": 1720,
                    "wires": [
                        {
                            "id": "be86d379.943a6",
                            "port": 0
                        },
                        {
                            "id": "5440f228.63411c",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "",
            "category": "",
            "name": "AppID New Device",
            "in": [
                {
                    "y": 120,
                    "x": 20,
                    "wires": [
                        {
                            "id": "19ed28b8.769907"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "3cbceae5.45c156",
            "out": [
                {
                    "y": 80,
                    "x": 1480,
                    "wires": [
                        {
                            "id": "da807d9a.f69fc",
                            "port": 0
                        },
                        {
                            "id": "19ed28b8.769907",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "",
            "category": "",
            "name": "AppID Update Device",
            "in": [
                {
                    "y": 260,
                    "x": 20,
                    "wires": [
                        {
                            "id": "bb709a71.dcf858"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "11fa1bee.eb6984",
            "out": [
                {
                    "y": 200,
                    "x": 2000,
                    "wires": [
                        {
                            "id": "34dc469d.d26f8a",
                            "port": 0
                        },
                        {
                            "id": "bb709a71.dcf858",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "",
            "category": "",
            "name": "AppID Lists",
            "in": [
                {
                    "y": 180,
                    "x": 40,
                    "wires": [
                        {
                            "id": "609f1982.3171a8"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "16e7afc8.9866e",
            "out": [
                {
                    "y": 180,
                    "x": 1960,
                    "wires": [
                        {
                            "id": "8aa34922.d66d78",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "",
            "category": "",
            "name": "DashDB Http",
            "in": [
                {
                    "y": 100,
                    "x": 60,
                    "wires": [
                        {
                            "id": "b19df8b3.0b1828"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "2a17b7c7.4eaf08",
            "out": [
                {
                    "y": 100,
                    "x": 1440,
                    "wires": [
                        {
                            "id": "b19df8b3.0b1828",
                            "port": 0
                        },
                        {
                            "id": "3ccc46f8.57cdfa",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "",
            "category": "",
            "name": "DashDB SQL",
            "in": [
                {
                    "y": 120,
                    "x": 40,
                    "wires": [
                        {
                            "id": "8c5f15d.8f4dce8"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "5b840ccd.bdbfc4",
            "out": [
                {
                    "y": 100,
                    "x": 1940,
                    "wires": [
                        {
                            "id": "b3baa402.ee4498",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "",
            "category": "",
            "name": "Sim Http 1.1",
            "in": [
                {
                    "y": 160,
                    "x": 60,
                    "wires": [
                        {
                            "id": "5425652f.98238c"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "80a169dd.f18e78",
            "out": [
                {
                    "y": 140,
                    "x": 2580,
                    "wires": [
                        {
                            "id": "b8d8f269.e59ea",
                            "port": 0
                        },
                        {
                            "id": "5425652f.98238c",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "",
            "category": "",
            "name": "Decryption",
            "in": [
                {
                    "y": 80,
                    "x": 40,
                    "wires": [
                        {
                            "id": "e1900411.9c5ae8"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "f7b5cbff.598508",
            "out": [
                {
                    "y": 80,
                    "x": 1240,
                    "wires": [
                        {
                            "id": "ca46ff2a.7ec5e",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "",
            "category": "",
            "name": "AppID New User",
            "in": [
                {
                    "y": 120,
                    "x": 40,
                    "wires": [
                        {
                            "id": "3953d8fd.d97d18"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "12505187.8b5d0e",
            "out": [
                {
                    "y": 100,
                    "x": 1480,
                    "wires": [
                        {
                            "id": "79db8e2c.ed8df",
                            "port": 0
                        },
                        {
                            "id": "3953d8fd.d97d18",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "",
            "category": "",
            "name": "Webbing Http 2.0",
            "in": [
                {
                    "y": 140,
                    "x": 40,
                    "wires": [
                        {
                            "id": "d5efcd6a.a13f8"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "98ce8d35.4c824",
            "out": [
                {
                    "y": 80,
                    "x": 1820,
                    "wires": [
                        {
                            "id": "634242b2.d749bc",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "",
            "category": "",
            "name": "Encryption",
            "in": [
                {
                    "y": 160,
                    "x": 40,
                    "wires": [
                        {
                            "id": "ac2f644e.9dd8f8"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "86df012b.3eb7e",
            "out": [
                {
                    "y": 160,
                    "x": 780,
                    "wires": [
                        {
                            "id": "64c933b6.4c341c",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "",
            "category": "",
            "name": "AppID Update User",
            "in": [
                {
                    "y": 180,
                    "x": 40,
                    "wires": [
                        {
                            "id": "95eb6b24.16f7f8"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "67ed0408.e2437c",
            "out": [
                {
                    "y": 120,
                    "x": 2020,
                    "wires": [
                        {
                            "id": "95eb6b24.16f7f8",
                            "port": 0
                        },
                        {
                            "id": "45b1df63.9e79a",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "info": "",
            "category": "",
            "name": "AppID Delete User",
            "in": [
                {
                    "y": 140,
                    "x": 40,
                    "wires": [
                        {
                            "id": "f6e12cb0.b33c6"
                        }
                    ]
                }
            ],
            "type": "subflow",
            "id": "9791a478.8db8f8",
            "out": [
                {
                    "y": 80,
                    "x": 2000,
                    "wires": [
                        {
                            "id": "f6e12cb0.b33c6",
                            "port": 0
                        },
                        {
                            "id": "6a38926f.37894c",
                            "port": 0
                        }
                    ]
                }
            ]
        },
        {
            "wires": [
                [
                    "bab60eaa.3a63e"
                ]
            ],
            "name": "",
            "x": 80,
            "y": 40,
            "scope": null,
            "z": "61ffb71b.d286f",
            "type": "catch",
            "id": "62fcc92b.e876a8"
        },
        {
            "wires": [],
            "name": "To Error Handling",
            "links": [
                "f0d6de8d.dda6",
                "bd0472cc.d443f"
            ],
            "inputLabels": [
                "Error Handling"
            ],
            "y": 40,
            "x": 185,
            "z": "61ffb71b.d286f",
            "type": "link out",
            "id": "bab60eaa.3a63e"
        },
        {
            "wires": [
                [
                    "fa18c32.a739e4"
                ]
            ],
            "name": "",
            "x": 80,
            "y": 40,
            "scope": null,
            "z": "1dff07f1.603c08",
            "type": "catch",
            "id": "c2b4c605.70dce"
        },
        {
            "wires": [],
            "name": "To Error Handling",
            "links": [
                "f0d6de8d.dda6",
                "bd0472cc.d443f"
            ],
            "inputLabels": [
                "Error Handling"
            ],
            "y": 40,
            "x": 175,
            "z": "1dff07f1.603c08",
            "type": "link out",
            "id": "fa18c32.a739e4"
        },
        {
            "wires": [
                [
                    "359d6f1.81ae79"
                ]
            ],
            "name": "",
            "url": "/users/user/:userID",
            "upload": false,
            "id": "c9deb5be.0cafc",
            "swaggerDoc": "",
            "y": 380,
            "x": 130,
            "z": "1dff07f1.603c08",
            "type": "http in",
            "method": "delete"
        },
        {
            "info": "Set user to inactive if they exist and are set to \nactive. Also sets any links to inactive and deletes\nfiles.",
            "wires": [],
            "name": "[CN] User Delete",
            "y": 340,
            "x": 100,
            "z": "1dff07f1.603c08",
            "type": "comment",
            "id": "b46523.d68f1ae"
        },
        {
            "wires": [
                [
                    "543f09e7.6d93a8"
                ]
            ],
            "name": "",
            "url": "/pairing/pair/device_to_user",
            "upload": false,
            "id": "686439bb.f798e",
            "swaggerDoc": "",
            "y": 240,
            "x": 150,
            "z": "c012d9b9.f1e028",
            "type": "http in",
            "method": "post"
        },
        {
            "info": "API paths:\n1. Missing Inputs\n2. Fake user_id\n3. Fake email\n4. Fake device_id\n5. New link record\n6. Existing inactive link record\n7. Existing active link record",
            "wires": [],
            "name": "[CN] [DEVICES] Device User Pair",
            "y": 120,
            "x": 150,
            "z": "c012d9b9.f1e028",
            "type": "comment",
            "id": "1d94d6c2.d965c9"
        },
        {
            "wires": [
                [
                    "e56e273b.ffa378"
                ]
            ],
            "name": "",
            "url": "/pairing/unpair/:method/id/:id_one/id/:id_two",
            "upload": false,
            "id": "48f76f93.99f7c8",
            "swaggerDoc": "",
            "y": 440,
            "x": 200,
            "z": "c012d9b9.f1e028",
            "type": "http in",
            "method": "put"
        },
        {
            "wires": [
                [
                    "9e2d292d.0788d8"
                ]
            ],
            "name": "",
            "url": "/files/file/:file_id/download",
            "upload": false,
            "id": "5232b9f.24173c8",
            "swaggerDoc": "",
            "y": 560,
            "x": 140,
            "z": "fc9978cc.27301",
            "type": "http in",
            "method": "get"
        },
        {
            "info": "This returns the file itself",
            "wires": [],
            "name": "[DEVICES] Settings File Download",
            "y": 520,
            "x": 160,
            "z": "fc9978cc.27301",
            "type": "comment",
            "id": "30452576.97619a"
        },
        {
            "wires": [
                [
                    "393e4eee.cc57e2"
                ]
            ],
            "name": "",
            "url": "/files/file/:file_id",
            "upload": false,
            "id": "b1cd7fa0.aa0ff8",
            "swaggerDoc": "",
            "y": 400,
            "x": 110,
            "z": "fc9978cc.27301",
            "type": "http in",
            "method": "get"
        },
        {
            "info": "This returns the cloudant document information",
            "wires": [],
            "name": "[CN] [DEVICES] Settings File Info",
            "y": 360,
            "x": 150,
            "z": "fc9978cc.27301",
            "type": "comment",
            "id": "f567ea3b.2b037"
        },
        {
            "wires": [
                [
                    "d108f000.97357"
                ]
            ],
            "name": "",
            "url": "/files/file/:file_id",
            "upload": true,
            "id": "adeb9398.3a078",
            "swaggerDoc": "",
            "y": 480,
            "x": 120,
            "z": "fc9978cc.27301",
            "type": "http in",
            "method": "delete"
        },
        {
            "info": "",
            "wires": [],
            "name": "[DEVICES] Settings File Delete",
            "y": 440,
            "x": 150,
            "z": "fc9978cc.27301",
            "type": "comment",
            "id": "1ffabe3a.c52db2"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] [ERPLX] KORE Activate To State",
            "y": 120,
            "x": 170,
            "z": "c1ec6ee7.981a18",
            "type": "comment",
            "id": "a49f9abe.f1875"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] KORE Custom Info Update",
            "y": 480,
            "x": 150,
            "z": "c1ec6ee7.981a18",
            "type": "comment",
            "id": "9ae4b1ea.9c4f58"
        },
        {
            "wires": [
                [
                    "3a34f75f.ce0b98"
                ]
            ],
            "name": "",
            "x": 80,
            "y": 40,
            "scope": null,
            "z": "c1ec6ee7.981a18",
            "type": "catch",
            "id": "d7bf8863.3055a"
        },
        {
            "wires": [],
            "name": "To Error Handling",
            "links": [
                "f0d6de8d.dda6",
                "bd0472cc.d443f"
            ],
            "inputLabels": [
                "Error Handling"
            ],
            "y": 40,
            "x": 175,
            "z": "c1ec6ee7.981a18",
            "type": "link out",
            "id": "3a34f75f.ce0b98"
        },
        {
            "wires": [
                [
                    "cbb433fa.24b308"
                ]
            ],
            "name": "",
            "x": 80,
            "y": 40,
            "scope": null,
            "z": "c012d9b9.f1e028",
            "type": "catch",
            "id": "93bc6524.bfd398"
        },
        {
            "wires": [],
            "name": "To Error Handling",
            "links": [
                "f0d6de8d.dda6",
                "bd0472cc.d443f"
            ],
            "inputLabels": [
                "Error Handling"
            ],
            "y": 40,
            "x": 235,
            "z": "c012d9b9.f1e028",
            "type": "link out",
            "id": "cbb433fa.24b308"
        },
        {
            "wires": [
                [
                    "f9f59051.f09818"
                ]
            ],
            "name": "",
            "x": 80,
            "y": 40,
            "scope": null,
            "z": "fc9978cc.27301",
            "type": "catch",
            "id": "c4f6496d.97fa98"
        },
        {
            "wires": [],
            "name": "To Error Handling",
            "links": [
                "f0d6de8d.dda6",
                "bd0472cc.d443f"
            ],
            "inputLabels": [
                "Error Handling"
            ],
            "y": 40,
            "x": 175,
            "z": "fc9978cc.27301",
            "type": "link out",
            "id": "f9f59051.f09818"
        },
        {
            "wires": [
                [
                    "5aadbd7c.0eeec4"
                ]
            ],
            "name": "",
            "x": 80,
            "y": 40,
            "scope": null,
            "z": "c13a158d.882c9",
            "type": "catch",
            "id": "7def1326.713414"
        },
        {
            "wires": [],
            "name": "To Error Handling",
            "links": [
                "f0d6de8d.dda6",
                "bd0472cc.d443f"
            ],
            "inputLabels": [
                "Error Handling"
            ],
            "y": 40,
            "x": 175,
            "z": "c13a158d.882c9",
            "type": "link out",
            "id": "5aadbd7c.0eeec4"
        },
        {
            "info": "API paths:\n1. Missing Inputs\n2. Active Link record not found\n7. Active Link record found",
            "wires": [],
            "name": "[CN] [DEVICES] Device User Unpair",
            "y": 320,
            "x": 160,
            "z": "c012d9b9.f1e028",
            "type": "comment",
            "id": "f34cbf73.3358a"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] KORE Deactivate",
            "y": 660,
            "x": 120,
            "z": "c1ec6ee7.981a18",
            "type": "comment",
            "id": "df76e264.5c7708"
        },
        {
            "wires": [
                [
                    "c393c069.a7c09"
                ]
            ],
            "name": "",
            "url": "/devices/device/KORE/deactivate",
            "upload": false,
            "id": "f7f360f6.6436e8",
            "swaggerDoc": "",
            "y": 700,
            "x": 170,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] [ERPLX] KORE Reactivate",
            "y": 300,
            "x": 150,
            "z": "c1ec6ee7.981a18",
            "type": "comment",
            "id": "cbf65815.edb"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] KORE Plan Code Update",
            "y": 1140,
            "x": 140,
            "z": "c1ec6ee7.981a18",
            "type": "comment",
            "id": "6873271a.841af8"
        },
        {
            "info": "",
            "wires": [],
            "name": "[DEVICES] Settings File New",
            "y": 100,
            "x": 140,
            "z": "fc9978cc.27301",
            "type": "comment",
            "id": "cd9aa429.1a8688"
        },
        {
            "info": "Check if user exists, if not send email with one time link to create user",
            "wires": [],
            "name": "[CN] User New Surgeon",
            "y": 980,
            "x": 120,
            "z": "1dff07f1.603c08",
            "type": "comment",
            "id": "c9bc65a6.e50db8"
        },
        {
            "wires": [
                [
                    "6dab3b10.8c28a4"
                ]
            ],
            "name": "",
            "url": "/users/surgeon",
            "upload": false,
            "id": "1fc3deba.47e321",
            "swaggerDoc": "",
            "y": 1020,
            "x": 120,
            "z": "1dff07f1.603c08",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "701a5d1a.ff39a4"
                ]
            ],
            "name": "",
            "url": "users/verify/:key",
            "upload": false,
            "id": "dec06ec.6860e9",
            "swaggerDoc": "",
            "y": 140,
            "x": 120,
            "z": "1dff07f1.603c08",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [],
            "name": "",
            "headers": {},
            "y": 120,
            "x": 1870,
            "z": "1dff07f1.603c08",
            "type": "http response",
            "id": "929715a4.55ebc8",
            "statusCode": ""
        },
        {
            "info": "",
            "wires": [],
            "name": "[EULA] Surgeon Verify",
            "y": 101,
            "x": 120,
            "z": "1dff07f1.603c08",
            "type": "comment",
            "id": "6b388ca.b247f74"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"Returns\": msg});\n}\nvar warn = {};\nif(!msg.api.hasOwnProperty(\"name\")) {\n    msg.api.name = \"API Results\";    \n}\nvar apic = \"\";\nif (msg.api.hasOwnProperty(\"apic\")) {\n    apic = \" - [\" + msg.api.apic.catalog + \"][\" + msg.api.apic.version + \"]\";\n}\nif(msg.api.hasOwnProperty(\"example\")) {\n    warn[msg.api.name + \" - \" + msg.api.example + apic] = { \"Returns\": msg.payload, \"msg\": msg };\n}\nelse {\n   warn[msg.api.name + apic] = msg.payload; \n}\nnode.warn(warn);",
            "y": 140,
            "x": 1230,
            "z": "bc6ff87.05a2908",
            "type": "function",
            "id": "d85da47d.445228"
        },
        {
            "wires": [
                [
                    "23b78bed.56ef34"
                ]
            ],
            "name": "Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "return msg;",
            "y": 160,
            "x": 190,
            "z": "f83a5f50.ef8e",
            "type": "function",
            "id": "1addfec1.69f9f1"
        },
        {
            "wires": [
                [
                    "44061979.9f3078"
                ]
            ],
            "name": "Cleanup",
            "outputs": 1,
            "noerr": 0,
            "func": "return msg;",
            "y": 160,
            "x": 800,
            "z": "f83a5f50.ef8e",
            "type": "function",
            "id": "30b52c07.dc8dd4"
        },
        {
            "wires": [
                [
                    "2db3ffe8.069ff"
                ]
            ],
            "name": "Filter To Cloudant",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"filters\") && msg.filters.hasOwnProperty(\"options\")){\n    if(msg.hasOwnProperty(\"cloudant\")) {\n        //format filters for cloudant filtering\n        var andFilters = [];\n        if(msg.filters.hasOwnProperty(\"values\")) {\n            Object.keys(msg.filters.values).forEach(function(propertyName){\n                var andObject = {};\n                andObject[propertyName] = msg.filters.values[propertyName];\n                andFilters.push(andObject);\n            });\n        }\n        if(msg.filters.hasOwnProperty(\"arrays\")) {\n            Object.keys(msg.filters.arrays).forEach(function(propertyName){\n                var inArray = {};\n                inArray[propertyName] = {};\n                inArray[propertyName].$in = msg.filters.arrays[propertyName];\n                andFilters.push(inArray);\n            });\n        }\n        if(msg.filters.hasOwnProperty(\"dates\")) {\n        Object.keys(msg.filters.dates).forEach(function(rangePropertyName){\n                var dateObject = {};\n                var dateValue = parseInt(msg.filters.dates[rangePropertyName]);\n                var propertyName = rangePropertyName.substring(0,rangePropertyName.indexOf(\"_range\",0));\n                if(rangePropertyName.includes(\"_range_begin\")){\n                     dateObject[propertyName] = { \"$gt\": dateValue};\n                }\n                else{\n                    dateObject[propertyName] = { \"$lt\": dateValue};\n                }\n                andFilters.push(dateObject);\n            });\n        }\n        if(msg.filters.hasOwnProperty(\"partial\")) {\n        Object.keys(msg.filters.partial).forEach(function(partialPropertyName){\n                var partialObject = {};\n                var partialValue = msg.filters.partial[partialPropertyName];\n                var propertyName = partialPropertyName.substring(0,partialPropertyName.indexOf(\"_partial\",0));\n                partialObject[propertyName] = {\"$regex\": \"(?i)^\" + partialValue};\n                andFilters.push(partialObject);\n            });\n        }\n        if(msg.filters.hasOwnProperty(\"like\")) {\n        Object.keys(msg.filters.like).forEach(function(likePropertyName){\n                var likeObject = {};\n                var likeValue = msg.filters.like[likePropertyName];\n                var propertyName = likePropertyName.substring(0,likePropertyName.indexOf(\"_like\",0));\n                likeObject[propertyName] = {\"$regex\": likeValue};\n                andFilters.push(likeObject);\n            });\n        }\n        /*\n        if(andFilters.length >1) {\n            msg.cloudant.selector = {\"$and\": andFilters};\n        }\n        else {\n            msg.cloudant.selector = andFilters[0];\n        }*/\n        msg.cloudant.selector = {\"$and\": andFilters};\n    }\n}\nif(msg.hasOwnProperty(\"records\") && msg.records.hasOwnProperty(\"fields\")){\n    msg.cloudant.fields = msg.records.fields;\n}\nif(msg.hasOwnProperty(\"records\") && msg.records.hasOwnProperty(\"sort\")){\n    msg.cloudant.sort = msg.records.sort; //array of { \"<propertyName>:<value Type>\": \"asc\"/\"desc\" }\n}\nreturn msg;",
            "y": 160,
            "x": 350,
            "z": "f83a5f50.ef8e",
            "type": "function",
            "id": "23b78bed.56ef34"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"Cloudant Setup\": msg});\n}",
            "y": 120,
            "x": 990,
            "z": "f83a5f50.ef8e",
            "type": "function",
            "id": "44061979.9f3078"
        },
        {
            "wires": [
                [
                    "30b52c07.dc8dd4"
                ]
            ],
            "name": "Pagination to Cloudant",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.cloudant.hasOwnProperty(\"pagination\") && msg.cloudant.pagination) {\n    if(msg.req.query.hasOwnProperty(\"limit\") || msg.req.query.hasOwnProperty(\"offset\")){\n        if(msg.req.query.hasOwnProperty(\"limit\")) {\n            msg.cloudant.limit = parseInt(msg.req.query.limit);\n        }\n        if(msg.req.query.hasOwnProperty(\"offset\")) {\n            msg.cloudant.skip = parseInt(msg.req.query.offset);\n        }\n        //msg.records.returns.push(\"bookmark\"); //Not Needed\n        msg.cloudant.bookmark_save = true;\n    }\n    else {\n        msg.cloudant.bookmark_save = false;\n    }\n}\nelse {\n    msg.cloudant.bookmark_save = false;\n}\nreturn msg;",
            "y": 160,
            "x": 580,
            "z": "f83a5f50.ef8e",
            "type": "function",
            "id": "2db3ffe8.069ff"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"Inputs\": msg});\n}",
            "y": 60,
            "x": 1990,
            "z": "71afa3f9.81defc",
            "type": "function",
            "id": "b0a3f154.45812"
        },
        {
            "wires": [
                [
                    "c2650b08.281dc8"
                ],
                [
                    "6e62136f.a8385c"
                ]
            ],
            "name": "Check Inputs",
            "outputs": 2,
            "noerr": 0,
            "func": "var errors = [];\nif(msg.hasOwnProperty(\"inputs\")) {\n    if(msg.inputs.hasOwnProperty(\"required\") && Array.isArray(msg.inputs.required))\n    {\n        msg.inputs.required.forEach(function(field)\n        {\n            if(!msg.inputs.body.hasOwnProperty(field))\n            {\n                errors.push(field);\n            }\n        });\n         if(errors.length !== 0)\n        {\n            msg.error_fields = errors;\n            return [ null, msg ];\n        }\n    }\n    if(msg.inputs.hasOwnProperty(\"allowed\") && Array.isArray(msg.inputs.allowed))\n    {\n        if(msg.inputs.hasOwnProperty(\"required\")) {msg.inputs.allowed = msg.inputs.required.concat(msg.inputs.allowed)} //All required fields are allowed\n        Object.keys(msg.inputs.body).forEach(function(field)\n        {\n            if(msg.inputs.allowed.indexOf(field)<0)\n            {\n                delete msg.inputs.body[field]; //remove illegal fields do not error\n                //errors.push(field);\n            }\n        });\n    /* Add if return error for not allowed fields\n         if(errors.length === 0)\n        {\n            return [ msg, null ];\n        }\n        else\n        {\n            msg.headers = {\"Content-type\" : \"application/json\"};\n            msg.statusCode = 400;\n            msg.payload = {\"illegal_body_fields\":[errors]};\n            return [ null, msg ];\n        }\n    */\n    }\n}\n/*if(msg.inputs.body.hasOwnProperty(\"mobile_phone\")){\n    var phone_regex = new RegExp(global.get(\"REGEXP\").mobile_phone,\"g\");\n    if(typeof msg.inputs.body.mobile_phone !== 'string' || (!phone_regex.test(msg.inputs.body.mobile_phone)))\n    {\n        if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\n            msg.errors.push({\n                \"code\": 412,\n                \"message\": \"The Mobile Phone (\" + msg.inputs.body.mobile_phone + \") is not in the correct format.\"\n            });\n        return [  null, msg ];\n    }\n}\nif(msg.inputs.body.hasOwnProperty(\"voice_phone\")){\n    var phone_regex = new RegExp(global.get(\"REGEXP\").voice_phone,\"g\");\n    if(typeof msg.inputs.body.voice_phone !== 'string' || (!phone_regex.test(msg.inputs.body.voice_phone)))\n    {\n        if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\n            msg.errors.push({\n                \"code\": 412,\n                \"message\": \"The Voice Phone (\" + msg.inputs.body.voice_phone + \") is not in the correct format.\"\n            });\n        return [  null, msg ];\n    }\n}*/\nif(msg.inputs.body.hasOwnProperty(\"password\")){\n    var password_regex = new RegExp(global.get(\"REGEXP\").password,\"g\");\n    if(typeof msg.inputs.body.password !== 'string' || (!password_regex.test(msg.inputs.body.password)))\n    {\n        if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\n            msg.errors.push({\n                \"code\": 412,\n                \"message\": \"The password doesn't meet the strength requirements.\"\n            });\n        return [  null, msg ];\n    }\n}\nif(msg.inputs.body.hasOwnProperty(\"system_sn\")){\n    var system_sn_regex = new RegExp(global.get(\"REGEXP\").system_sn,\"g\");\n    msg.inputs.body.system_sn = msg.inputs.body.system_sn.toUpperCase();\n    if(typeof msg.inputs.body.system_sn !== 'string' || (!system_sn_regex.test(msg.inputs.body.system_sn)))\n    {\n        if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\n            msg.errors.push({\n                \"code\": 412,\n                \"message\": \"System SN (\" + msg.inputs.body.system_sn + \") not in proper format.\"\n            });\n        return [  null, msg ];\n    }\n}\nif(msg.inputs.body.hasOwnProperty(\"email\")){\n    var re = new RegExp(global.get(\"REGEXP\").email);\n    if(typeof msg.inputs.body.email !== 'string' || (!re.test(msg.inputs.body.email)))\n    {\n        if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\n            msg.errors.push({\n                \"code\": 412,\n                \"message\": \"Email (\" + msg.inputs.body.email + \") not in proper format.\"\n            });\n        return [  null, msg ];\n    }\n    msg.inputs.body.email = msg.inputs.body.email.toLowerCase();\n    if(msg.inputs.body.uid && msg.inputs.body.uid.length>0)\n    {   \n        msg.inputs.body.uid = safeToString(msg.inputs.body.uid);\n    }\n}\n\nreturn [ msg, null ];\n\n//Used to convert something to a string\nfunction safeToString(x) {\n  switch (typeof x) {\n    case 'object':\n      return 'object';\n    case 'function':\n      return 'function';\n    default:\n      return x + '';\n  }\n}",
            "y": 120,
            "x": 370,
            "z": "71afa3f9.81defc",
            "type": "function",
            "id": "a6e5ec6a.96ded"
        },
        {
            "wires": [
                [
                    "a6e5ec6a.96ded"
                ]
            ],
            "name": "Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.inputs.body = Object.assign({},msg.payload);\nif(msg.inputs.body.hasOwnProperty(\"filter_options\") && msg.hasOwnProperty(\"filters\")) { msg.filters.options = Object.assign({},msg.inputs.body.filter_options)}\nmsg.payload = {};\nreturn msg;",
            "y": 120,
            "x": 190,
            "z": "71afa3f9.81defc",
            "type": "function",
            "id": "9366b740.5b24c8"
        },
        {
            "wires": [
                [
                    "b0a3f154.45812"
                ]
            ],
            "name": "Cleanup",
            "outputs": 1,
            "noerr": 0,
            "func": "return msg;",
            "y": 120,
            "x": 1620,
            "z": "71afa3f9.81defc",
            "type": "function",
            "id": "1cce4f59.4185d1"
        },
        {
            "wires": [
                [
                    "9120565a.7298f8"
                ],
                [
                    "6814fe1c.ec122"
                ]
            ],
            "name": "Check Filters",
            "outputs": 2,
            "noerr": 0,
            "func": "var errors = [];\nif(msg.hasOwnProperty(\"filters\")) {\n    if(msg.filters.hasOwnProperty(\"required\")  && msg.filters.hasOwnProperty(\"options\") && Array.isArray(msg.filters.required))\n    {\n        msg.filters.required.forEach(function(field)\n        {\n            if(!msg.filters.options.hasOwnProperty(field))\n            {\n                errors.push(field);\n            }\n        });\n        if(errors.length !== 0)\n        {\n            msg.error_fields = errors;\n            return [ null, msg ];\n        }\n    }\n    if(msg.filters.hasOwnProperty(\"allowed\") && msg.filters.hasOwnProperty(\"options\") && Array.isArray(msg.filters.allowed))\n    {\n        if(msg.filters.hasOwnProperty(\"required\")) {msg.filters.allowed = msg.filters.required.concat(msg.filters.allowed)} //All required fields are allowed\n        Object.keys(msg.filters.options).forEach(function(field)\n        {\n            if(msg.filters.allowed.indexOf(field)<0)\n            {\n                delete msg.filters.options[field]; //remove illegal filter option do not error\n                //node.warn({\"CHK Inputs\": \"Remove Filter\", \"Filter Field\": field});\n                //errors.push(field);\n            }\n        });\n    /* Add if return error for not allowed fields\n         if(errors.length === 0)\n        {\n            return [ msg, null ];\n        }\n        else\n        {\n            msg.headers = {\"Content-type\" : \"application/json\"};\n            msg.statusCode = 400;\n            msg.payload = {\"illegal_filter_options\":[errors]};\n            return [ null, msg ];\n        }\n    */\n    }\n}\nreturn [ msg, null ];",
            "y": 120,
            "x": 550,
            "z": "71afa3f9.81defc",
            "type": "function",
            "id": "c2650b08.281dc8"
        },
        {
            "wires": [
                [
                    "8bc261aa.d6ad2"
                ]
            ],
            "name": "Process Filters",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"filters\") && msg.filters.hasOwnProperty(\"params\")){\n    if(!msg.filters.hasOwnProperty(\"options\")){\n        msg.filters.options = {}\n    }\n    Object.keys(msg.filters.params).forEach(function(paramKey)\n    {\n        msg.filters.options[paramKey] = msg.filters.params[paramKey];\n    });\n}\nif(msg.hasOwnProperty(\"filters\") && msg.filters.hasOwnProperty(\"options\")){\n    //remove empty filters\n    Object.keys(msg.filters.options).forEach(function(propertyName){\n    \tvar propertyValue = msg.filters.options[propertyName];\n    \t//check if empty string\n    \tif(propertyValue === \"\" || (propertyValue.length === 0)) {\n    \t\tdelete msg.filters.options[propertyName];\n    \t}\n    });\n    var filterList = Object.assign({},msg.filters.options);\n    msg.filters.values = {}; //will contain single filters\n    msg.filters.dates = {}; //will contain date filters\n    msg.filters.arrays = {}; //will contain array filters\n    msg.filters.partial = {}; //will contain partial filters\n    msg.filters.like = {}; //will contain like filters\n    //move array and time filters to thier lists\n    Object.keys(filterList).forEach(function(propertyName){\n    \tvar propertyValue = filterList[propertyName];\n    \t//relocate if array and not empty to arrayFilter\n    \tif(Array.isArray(propertyValue)){\n    \t\tif(propertyValue.length > 0){\n    \t\t\tmsg.filters.arrays[propertyName] = propertyValue;\n    \t\t}\n    \t\tdelete filterList[propertyName];\n    \t}\n    \t//relocate time filters to timeFilter\n    \tif(propertyName.includes(\"_range_begin\") || propertyName.includes(\"_range_end\")) {\n    \t\tmsg.filters.dates[propertyName] = propertyValue;\n    \t\tdelete filterList[propertyName];\n    \t}\n    \t//relocated partial search\n    \tif(propertyName.includes(\"_like\")) {\n    \t\tmsg.filters.like[propertyName] = propertyValue;\n    \t\tdelete filterList[propertyName];\n    \t}\n    \tmsg.filters.values = filterList;\n    });\n}\nreturn msg;",
            "y": 120,
            "x": 740,
            "z": "71afa3f9.81defc",
            "type": "function",
            "id": "9120565a.7298f8"
        },
        {
            "wires": [],
            "name": "Return",
            "headers": {},
            "y": 200,
            "x": 1450,
            "z": "bc6ff87.05a2908",
            "type": "http response",
            "id": "51fa0754.778cc8",
            "statusCode": ""
        },
        {
            "wires": [
                [
                    "51fa0754.778cc8"
                ]
            ],
            "name": "IF Http Res Exist",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"res\")) {return msg}",
            "y": 200,
            "x": 1270,
            "z": "bc6ff87.05a2908",
            "type": "function",
            "id": "53775c5.a4da7a4"
        },
        {
            "wires": [
                [
                    "951b9520.93d548"
                ]
            ],
            "name": "",
            "y": 140,
            "x": 470,
            "z": "1dff07f1.603c08",
            "type": "subflow:3962857e.44abba",
            "id": "701a5d1a.ff39a4"
        },
        {
            "wires": [
                [
                    "99270dcc.02d"
                ]
            ],
            "name": "",
            "y": 1020,
            "x": 470,
            "z": "1dff07f1.603c08",
            "type": "subflow:3962857e.44abba",
            "id": "1e2c5f61.780851"
        },
        {
            "wires": [
                [
                    "99ed5a41.876fc8"
                ]
            ],
            "name": "",
            "y": 380,
            "x": 470,
            "z": "1dff07f1.603c08",
            "type": "subflow:3962857e.44abba",
            "id": "359d6f1.81ae79"
        },
        {
            "wires": [
                [
                    "995dac1d.9d569"
                ]
            ],
            "name": "",
            "y": 160,
            "x": 410,
            "z": "c012d9b9.f1e028",
            "type": "subflow:3962857e.44abba",
            "id": "543f09e7.6d93a8"
        },
        {
            "wires": [
                [
                    "11388bff.03f9d4"
                ]
            ],
            "name": "",
            "y": 140,
            "x": 430,
            "z": "fc9978cc.27301",
            "type": "subflow:3962857e.44abba",
            "id": "7b3d1734.bde8f8"
        },
        {
            "wires": [
                [
                    "61f7839a.67e86c"
                ]
            ],
            "name": "",
            "y": 400,
            "x": 430,
            "z": "fc9978cc.27301",
            "type": "subflow:3962857e.44abba",
            "id": "393e4eee.cc57e2"
        },
        {
            "wires": [
                [
                    "c7e9071b.9ddcc8"
                ]
            ],
            "name": "",
            "y": 560,
            "x": 430,
            "z": "fc9978cc.27301",
            "type": "subflow:3962857e.44abba",
            "id": "9e2d292d.0788d8"
        },
        {
            "wires": [
                [
                    "422dc920.572258"
                ]
            ],
            "name": "",
            "y": 480,
            "x": 430,
            "z": "fc9978cc.27301",
            "type": "subflow:3962857e.44abba",
            "id": "d108f000.97357"
        },
        {
            "wires": [
                [
                    "dbc254a8.7a13b8"
                ]
            ],
            "name": "",
            "x": 80,
            "y": 40,
            "scope": null,
            "z": "a17d8665.50cb88",
            "type": "catch",
            "id": "5925f00f.811ee"
        },
        {
            "wires": [],
            "name": "To Error Handling",
            "links": [
                "f0d6de8d.dda6",
                "bd0472cc.d443f"
            ],
            "inputLabels": [
                "Error Handling"
            ],
            "y": 40,
            "x": 175,
            "z": "a17d8665.50cb88",
            "type": "link out",
            "id": "dbc254a8.7a13b8"
        },
        {
            "checkall": "true",
            "z": "5dbd57cc.fc9bb8",
            "name": "template_type",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "welcome"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "thankyou"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "acceptance"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "help_ticket"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "rem_conn"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "config_file"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "device_birth"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "device_change"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 9,
            "wires": [
                [
                    "593bdd0b.fbdf34"
                ],
                [
                    "8212c433.518408"
                ],
                [
                    "e315f683.67cbd8"
                ],
                [
                    "37d7d60f.cf7bba"
                ],
                [
                    "5ccb4407.36faec"
                ],
                [
                    "25c6e7df.230978"
                ],
                [
                    "521ce329.1a21dc"
                ],
                [
                    "11c00066.cca8b"
                ],
                [
                    "bf320d02.d8846"
                ]
            ],
            "propertyType": "msg",
            "y": 300,
            "x": 500,
            "property": "email.template_type",
            "type": "switch",
            "id": "65919f4d.91575"
        },
        {
            "wires": [
                [
                    "96c73689.41cd78"
                ]
            ],
            "name": "Template Processing",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.email.template && msg.email.fields) {\n    Object.keys(msg.email.fields).forEach(function(field) {\n        var tag = \"{{{\" + field + \"}}}\";\n        msg.email.template = msg.email.template.replace(RegExp(tag, 'g'), msg.email.fields[field])\n    });\n}\nmsg.payload = msg.email.template;\nif(msg.email.topic) {msg.topic = msg.email.topic}\nif(msg.email.to) {\n    if (Array.isArray(msg.email.to)) {\n        msg.to = msg.email.to.join(\" , \");\n    } else {\n        msg.to = msg.email.to;\n    }\n}\nif(msg.email.cc) {\n        if (Array.isArray(msg.email.cc)) {\n        msg.cc = msg.email.cc.join(\" , \");\n    } else {\n        msg.cc = msg.email.cc;\n    }\n}\nif(msg.email.bcc) {\n    if (Array.isArray(msg.email.bcc)) {\n        msg.bcc = msg.email.bcc.join(\" , \");\n    } else {\n        msg.bcc = msg.email.bcc;\n    }\n}\nif(msg.email.files && msg.email.files.length > 0) {\n    // file attachements\n    var file = msg.email.files[0];\n    msg.filename = file.originalname;\n    msg.payload = file.buffer;\n}\nreturn msg;",
            "y": 120,
            "x": 1880,
            "z": "5dbd57cc.fc9bb8",
            "type": "function",
            "id": "bd2fe652.82c918"
        },
        {
            "wires": [
                [
                    "891726ae.68c7b8",
                    "6cc5e7f5.857148"
                ]
            ],
            "name": "Debug Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "var SPACE = global.get(\"SPACE\");\nif ([\"Development\", \"US Test\"].indexOf(SPACE) >= 0) {\n   msg.topic = \"[\" + SPACE + \"] \" + msg.topic;\n}\nif(msg.api.hasOwnProperty(\"debug\") && (msg.api.debug === true || msg.api.debug.override)) {\n    if(msg.hasOwnProperty(\"debug\") && msg.debug.hasOwnProperty(\"email\")){\n        if(msg.debug.email.hasOwnProperty(\"to\")){ msg.to = msg.debug.email.to; }\n        if(msg.debug.email.hasOwnProperty(\"send\") && (msg.debug.email.send === false)){\n            node.warn({\"Email Not Sent to\": msg.to});\n            delete msg.to;\n        } else {\n            node.warn({\"Email Sent to\": msg.to});\n        }\n    }\n}\nreturn msg;",
            "y": 120,
            "x": 2090,
            "z": "5dbd57cc.fc9bb8",
            "type": "function",
            "id": "96c73689.41cd78"
        },
        {
            "wires": [],
            "secure": false,
            "dname": "Elite.IoT@bausch.com",
            "server": "smtp.office365.com",
            "id": "b5f8e84c.b5b468",
            "y": 120,
            "x": 2500,
            "z": "5dbd57cc.fc9bb8",
            "type": "e-mail",
            "port": "587",
            "name": ""
        },
        {
            "y": 280,
            "property": "",
            "from": "",
            "name": "Welcome",
            "rules": [
                {
                    "p": "email.template_file",
                    "tot": "str",
                    "t": "set",
                    "pt": "msg",
                    "to": "B+L_Eyetelligence_EULA_v1.html"
                },
                {
                    "p": "email.topic",
                    "tot": "str",
                    "t": "set",
                    "pt": "msg",
                    "to": "EULA Agreement"
                }
            ],
            "reg": false,
            "to": "",
            "wires": [
                [
                    "1b3ef7f5.121ef8"
                ]
            ],
            "action": "",
            "x": 740,
            "z": "5dbd57cc.fc9bb8",
            "type": "change",
            "id": "593bdd0b.fbdf34"
        },
        {
            "y": 320,
            "property": "",
            "from": "",
            "name": "Thank You",
            "rules": [
                {
                    "p": "email.template_file",
                    "tot": "str",
                    "t": "set",
                    "pt": "msg",
                    "to": "B+L_Eyetelligence_ThankYou_v1.html"
                },
                {
                    "p": "email.topic",
                    "tot": "str",
                    "t": "set",
                    "pt": "msg",
                    "to": "EULA Agreement Confirmation"
                }
            ],
            "reg": false,
            "to": "",
            "wires": [
                [
                    "2988c5c0.8b57aa"
                ]
            ],
            "action": "",
            "x": 750,
            "z": "5dbd57cc.fc9bb8",
            "type": "change",
            "id": "8212c433.518408"
        },
        {
            "y": 360,
            "property": "",
            "from": "",
            "name": "Acceptance",
            "rules": [
                {
                    "p": "email.template_file",
                    "tot": "str",
                    "t": "set",
                    "pt": "msg",
                    "to": "B+L_Eyetelligence_Acceptance_v1.html"
                }
            ],
            "reg": false,
            "to": "",
            "wires": [
                [
                    "5a100d21.bc08b4"
                ]
            ],
            "action": "",
            "x": 750,
            "z": "5dbd57cc.fc9bb8",
            "type": "change",
            "id": "e315f683.67cbd8"
        },
        {
            "info": "msg.email = {\n    \"template_type\": \"welcome\", //switch value\n    \"topic\": \"Welcome\", //subject of the email\n    \"to\": \"dick.tracy@bausch.com\", /list of destination separated by ','\n    \"fields\": { //JSON that is the template is tagged with {{{field name}}}\n        \"surgeon_first_name\": \"Dick\",\n        \"surgeon_last_name\": \"Tracy\",\n        \"sales_first_name\": \"Roberto\",\n        \"sales_last_name\": \"Lanzara\"\n    }\n};",
            "wires": [],
            "name": "Setup Example",
            "y": 420,
            "x": 120,
            "z": "5dbd57cc.fc9bb8",
            "type": "comment",
            "id": "22e14e88.081322"
        },
        {
            "wires": [
                [
                    "2988c5c0.8b57aa"
                ]
            ],
            "name": "EULA Link",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.email.fields.eula_link = msg.apic.url + \"/users/verify/\" + msg.email.key\nreturn msg;",
            "y": 280,
            "x": 1030,
            "z": "5dbd57cc.fc9bb8",
            "type": "function",
            "id": "1b3ef7f5.121ef8"
        },
        {
            "wires": [
                [
                    "929715a4.55ebc8"
                ]
            ],
            "name": "",
            "y": 120,
            "x": 1740,
            "z": "1dff07f1.603c08",
            "type": "subflow:5dbd57cc.fc9bb8",
            "id": "4bbb7397.cd5c4c"
        },
        {
            "wires": [
                [
                    "4bbb7397.cd5c4c"
                ]
            ],
            "name": "Thank You Email",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.email = {\n    \"template_type\": \"thankyou\",\n    \"to\": msg.inputs.body.email,\n    \"fields\": {},\n    \"return\": true\n};\nreturn msg;",
            "y": 120,
            "x": 1570,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "b7ac4c51.d02d7"
        },
        {
            "wires": [
                []
            ],
            "name": "",
            "y": 80,
            "x": 2100,
            "z": "1dff07f1.603c08",
            "type": "subflow:5dbd57cc.fc9bb8",
            "id": "70bac3a1.fdbdec"
        },
        {
            "wires": [
                [
                    "70bac3a1.fdbdec"
                ]
            ],
            "name": "Acceptance Email",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.email = {\n    \"template_type\": \"acceptance\",\n    \"to\": msg.inputs.body.email,\n    \"fields\": {\n        \"surgeon_first_name\": msg.inputs.body.first_name,\n        \"surgeon_last_name\": msg.inputs.body.last_name,\n        \"sales_first_name\": msg.sales_user[0].first_name,\n        \"sales_last_name\": msg.sales_user[0].last_name\n    }\n};\nreturn msg;",
            "y": 80,
            "x": 1930,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "160fa73c.a2f439"
        },
        {
            "wires": [
                [
                    "2988c5c0.8b57aa"
                ]
            ],
            "name": "Acceptance Topic",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.email.topic = \"Confirmation of user creation for Dr. \" + msg.email.fields.surgeon_first_name + \" \" + msg.email.fields.surgeon_last_name\nreturn msg;",
            "y": 360,
            "x": 1030,
            "z": "5dbd57cc.fc9bb8",
            "type": "function",
            "id": "5a100d21.bc08b4"
        },
        {
            "wires": [
                [
                    "aca5a392.3f18f",
                    "81dc9242.80e54"
                ]
            ],
            "name": "Headers",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"req\") && msg.req.hasOwnProperty(\"headers\")) {\n    if (msg.req.headers.hasOwnProperty(\"api_info\")) {\n        msg.api.info = (msg.req.headers.api_info === \"true\");\n    } else {\n        msg.api.info = false;\n    }\n    if (msg.req.headers.hasOwnProperty(\"api_debug\")) {\n        msg.api.debug = (msg.req.headers.api_debug === \"true\");\n    } else {\n        msg.api.debug = false;\n    }\n    if (msg.req.headers.hasOwnProperty(\"api_stats\")) {\n        msg.api.stats = (msg.req.headers.api_stats === \"true\");\n    } else {\n        msg.api.stats = false;\n    }\n    if (msg.req.headers.hasOwnProperty(\"debug\")) {\n        msg.debug = JSON.parse(msg.req.headers.debug)\n    }\n    if (msg.req.headers.hasOwnProperty(\"apic\")) {\n        msg.api.apic = JSON.parse(msg.req.headers.apic)\n    }\n    if (msg.req.headers.hasOwnProperty(\"api_encrypt\")) {\n        msg.api.override_encrypt = (msg.req.headers.api_encrypt === \"true\")\n    }\n}\n// override info flag here for vx environment\n//if (global.get(\"VCAP\").app.application_name.substr(-1) === \"x\"){ msg.api.info = true; }\nreturn msg;",
            "y": 80,
            "x": 1040,
            "z": "3962857e.44abba",
            "type": "function",
            "id": "c4a24f6a.37c1b"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"Clean Records\": msg});\n}",
            "y": 100,
            "x": 950,
            "z": "313bd1d3.01c06e",
            "type": "function",
            "id": "b1a1c80a.2529c8"
        },
        {
            "wires": [
                [
                    "51211fa9.904fe"
                ]
            ],
            "name": "Records Delete Fields",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.records.hasOwnProperty(\"return_deletes\") && msg.records.hasOwnProperty(\"returns\")){\n    var obj_list = msg.records.returns.filter(function(object) {\n       return [\"info\",\"stats\",\"message\"].indexOf(object) < 0; \n    });\n    obj_list.forEach(function(object){\n        if (msg.hasOwnProperty(object) && msg.records.return_deletes.hasOwnProperty(object)) {\n            msg[object].forEach(function(record) {\n                msg.records.return_deletes[object].forEach(function(propertyName){\n                    if(record.hasOwnProperty(propertyName)){\n                        delete record[propertyName];\n                    }\n                });\n            });\n        }\n    });\n    return msg;\n}\nif(msg.records.hasOwnProperty(\"object\") && msg.records.hasOwnProperty(\"delete\")){\n    msg[msg.records.object].forEach(function(record) {\n        msg.records.delete.forEach(function(propertyName){\n            if(record.hasOwnProperty(propertyName)){\n                delete record[propertyName];\n            }\n        });\n    });\n}\nelse {\n    msg.payload.forEach(function(record) {\n        msg.records.delete.forEach(function(propertyName){\n            if(record.hasOwnProperty(propertyName)){\n                delete record[propertyName];\n            }\n        });\n    });\n}\nreturn msg;\n",
            "y": 180,
            "x": 500,
            "z": "313bd1d3.01c06e",
            "type": "function",
            "id": "e5007f19.1a783"
        },
        {
            "wires": [
                [],
                [
                    "e5007f19.1a783"
                ]
            ],
            "name": "Clean Record Setup",
            "outputs": 2,
            "outputLabels": [
                "skip",
                "execute"
            ],
            "noerr": 0,
            "func": "if(!msg.records.hasOwnProperty(\"object\")){\n        if(!msg.cloudant.hasOwnProperty(\"object\")) {\n            msg.records.object = \"payload\";\n        }\n        else {\n            msg.records.object = msg.cloudant.object;\n        }\n}\nif (msg.hasOwnProperty(msg.records.object)) {\n    return [null,msg];\n} else {\n    return [msg,null];\n}\n    ",
            "y": 160,
            "x": 260,
            "z": "313bd1d3.01c06e",
            "type": "function",
            "id": "f9ef366a.b61188"
        },
        {
            "wires": [
                [
                    "b1a1c80a.2529c8"
                ]
            ],
            "name": "Clean Record Cleanup",
            "outputs": 1,
            "noerr": 0,
            "func": "return msg;",
            "y": 180,
            "x": 740,
            "z": "313bd1d3.01c06e",
            "type": "function",
            "id": "51211fa9.904fe"
        },
        {
            "wires": [
                [
                    "19b980a0.a9002f"
                ]
            ],
            "name": "Get Test Data",
            "outputs": 1,
            "noerr": 0,
            "func": "msg = msg.payload\nmsg.url = global.get(\"VCAP_CLOUDANT\").credentials.url + \"/test_data/_find\";\nmsg.method = \"POST\";\nmsg.payload = {\n    \"selector\": {\n        \"api_name\": msg.api_name,\n        \"test_name\": msg.test_name\n    }\n}\nreturn msg;",
            "y": 40,
            "x": 180,
            "z": "42e57474.0f0cac",
            "type": "function",
            "id": "34cfd7dc.07ad48"
        },
        {
            "tls": "",
            "wires": [
                [
                    "8c590d57.95c94"
                ]
            ],
            "name": "Get Test Data",
            "url": "",
            "ret": "obj",
            "id": "19b980a0.a9002f",
            "y": 40,
            "x": 380,
            "z": "42e57474.0f0cac",
            "type": "http request",
            "method": "use"
        },
        {
            "wires": [
                []
            ],
            "name": "Inject Data in Payload",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.payload.hasOwnProperty(\"docs\") && msg.payload.docs.length > 0 && msg.hasOwnProperty(\"object\")) {\n    msg = {\n        \"payload\": msg.payload.docs[0][msg.object]\n    }\n    return msg;\n} else {\n    node.warn({\"Cloudant Test Data 2.0\": \"Test Data NOT found\"})\n}",
            "y": 40,
            "x": 620,
            "z": "42e57474.0f0cac",
            "type": "function",
            "id": "8c590d57.95c94"
        },
        {
            "y": 400,
            "property": "",
            "from": "",
            "name": "Help Ticket",
            "rules": [
                {
                    "p": "email.template_file",
                    "tot": "str",
                    "t": "set",
                    "pt": "msg",
                    "to": "B+L_Eyetelligence_Help_Ticket_00.html"
                }
            ],
            "reg": false,
            "to": "",
            "wires": [
                [
                    "2988c5c0.8b57aa"
                ]
            ],
            "action": "",
            "x": 750,
            "z": "5dbd57cc.fc9bb8",
            "type": "change",
            "id": "37d7d60f.cf7bba"
        },
        {
            "wires": [
                [
                    "17232310.01f24d"
                ],
                [
                    "6296d1ff.4ba9"
                ]
            ],
            "name": "Record Found",
            "outputs": 2,
            "noerr": 0,
            "func": "if([\"help_ticket\", \"dapp_user\"].includes(msg.cloudant.doc_type)) { //help_ticket and dapp_user do not have doc_type\n    if(msg.hasOwnProperty(msg.records.object) && msg[msg.records.object].length === 1 && msg[msg.records.object][0]._id === msg.records.id) {\n        msg.records.rev = msg[msg.records.object][0]._rev;\n        return [ msg, null ];\n    } else {\n        return [ null, msg ];\n    }\n} else {\n    if(msg.hasOwnProperty(msg.records.object) && msg[msg.records.object].length === 1 && msg[msg.records.object][0].doc_type === msg.records.doc_type && msg[msg.records.object][0]._id === msg.records.id) {\n        msg.records.rev = msg[msg.records.object][0]._rev;\n        return [ msg, null ];\n    } else {\n        return [ null, msg ];\n    } \n}",
            "y": 220,
            "x": 620,
            "z": "68197f61.7975",
            "type": "function",
            "id": "5f138d96.afa2e4"
        },
        {
            "wires": [
                [
                    "68e3cec6.a0ed2",
                    "1357e27e.bc178e"
                ]
            ],
            "name": "Record Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Record with id: \" + msg.records.id + \" was not found\"\n})\nreturn msg;",
            "y": 300,
            "x": 830,
            "z": "68197f61.7975",
            "type": "function",
            "id": "6296d1ff.4ba9"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"Update Record\": msg});\n}",
            "y": 160,
            "x": 2370,
            "z": "68197f61.7975",
            "type": "function",
            "id": "1357e27e.bc178e"
        },
        {
            "wires": [
                [
                    "7294442a.03530c"
                ],
                [
                    "f5704060.0564c"
                ],
                [
                    "3bb8e474.ba6abc"
                ]
            ],
            "name": "Update Record Values",
            "outputs": 3,
            "outputLabels": [
                "appid update",
                "cloudant only",
                "appid new"
            ],
            "noerr": 0,
            "func": "var record = msg[msg.records.object][0];\nvar update_appid = false;\nvar new_appid = false;\nvar appid_fields = [\"last_name\", \"first_name\", \"email\", \"password\", \"mobile_phone\", \"voice_phone\", \"role\"]; //\"sub_roles\"\nvar appid_objects = [\"device\",\"user\"];\nif (record.hasOwnProperty(\"doc_type\") && appid_objects.indexOf(record.doc_type) >= 0){\n    update_appid = true;\n    if(!msg.appid) { msg.appid = {} }\n    if(record.idp_id) {\n        msg.appid.id = record.idp_id;\n    } else {\n        var appid = global.get(\"APPID\")\n        var record_idx = appid[record.doc_type + \"s\"].c_ids.indexOf(record._id);\n        if(record_idx >= 0){\n            msg.appid.id = appid[record.doc_type + \"s\"].idp_ids[record_idx];\n            msg.inputs.body.idp_id = msg.appid.id;\n        } else {\n            //return an error\n            node.warn(\"WARNING: Record is not in APP ID\");\n            new_appid = true;\n        }\n    }\n    if(msg.records.password){msg.inputs.body.password = msg.records.password}\n    msg.appid.updates = {};\n}\nObject.keys(msg.inputs.body).forEach(function(field){\n    if(field === \"ticket_notes\" && record.hasOwnProperty(field)) {\n        record[field] = record[field] + \"\\n\" + msg.inputs.body[field];\n    } else if(field === \"responder_id\" && record.hasOwnProperty(field)) {\n        record[field].push(msg.inputs.body[field]);\n    } else {\n        if (update_appid && appid_fields.indexOf(field) >=0) {\n            msg.appid.updates[field] = msg.inputs.body[field];\n            record[field] = msg.inputs.body[field]; // update all in cloudant for now\n        } else {\n            record[field] = msg.inputs.body[field];\n        }\n    }\n    if(field === \"_id\" || field === \"c_id\") {msg.appid.updates.c_id = msg.inputs.body[field];}\n});\nif(msg.records.object === \"help_ticket\") {\n    var field_list = [\"contact_name\", \"contact_number\", \"surgeon_settings_name\"];\n    var cryptojs = global.get('cryptojs');\n    var key = global.get('CRYPTO_KEYS').cloudant.payload;\n    field_list.forEach(function(field){\n        var efield = \"e_\" + field;\n        if(record[field]) {\n            if(record[field] !== \"\") {\n                record[efield] = cryptojs.AES.encrypt(JSON.stringify(record[field]),key).toString();\n            } else {\n                record[efield] = \"\";\n            }\n            delete record[field];\n        }\n    })\n}\nmsg[msg.records.object][0] = record;\nif (update_appid && Object.keys(msg.appid.updates).length > 0) {\n    if(new_appid){\n        msg.records[msg.records.object] = record;\n        return [null,null,msg];\n    } else {\n        return [msg,null,null];\n    }\n} else {\n    return [null,msg,null];\n}",
            "y": 200,
            "x": 840,
            "z": "68197f61.7975",
            "type": "function",
            "id": "17232310.01f24d"
        },
        {
            "wires": [
                [
                    "c5424b86.7d0048"
                ]
            ],
            "name": "Setup Record Reload",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.cloudant.return_obj = \"\";\nif (msg.hasOwnProperty(msg.records.object)) { delete msg[msg.records.object] }\nreturn msg;",
            "y": 220,
            "x": 1920,
            "z": "68197f61.7975",
            "type": "function",
            "id": "51cdf21e.e0a42c"
        },
        {
            "tls": "",
            "wires": [
                [
                    "51cdf21e.e0a42c"
                ]
            ],
            "name": "PUT Request",
            "url": "",
            "ret": "obj",
            "id": "9fa0d4af.a95a58",
            "y": 220,
            "x": 1700,
            "z": "68197f61.7975",
            "type": "http request",
            "method": "PUT"
        },
        {
            "wires": [
                [
                    "9fa0d4af.a95a58"
                ]
            ],
            "name": "Setup Cloudant Insert",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.url = msg.cloudant.url;\nmsg.headers = msg.cloudant.headers;\nmsg.payload = msg[msg.records.object][0];\nif(!msg.payload.idp_id || msg.payload.idp_id === \"\") {\n    msg.payload.idp_id = msg.records.idp_id;\n    node.warn({\"New Surgeon Add idp_id\":msg});\n}\nreturn msg;",
            "y": 200,
            "x": 1480,
            "z": "68197f61.7975",
            "type": "function",
            "id": "f5704060.0564c"
        },
        {
            "wires": [
                [
                    "4e06e02a.6185e"
                ],
                [
                    "a610ab5b.d8e668"
                ]
            ],
            "name": "Record Not Found",
            "outputs": 2,
            "noerr": 0,
            "func": "var return_object = msg.records.object;\nif(msg.cloudant.hasOwnProperty(\"object\")){ return_object = msg.cloudant.object }\nif(msg.hasOwnProperty(return_object) && msg[return_object].length > 0 && msg[return_object][0].hasOwnProperty(\"_id\") ){\n    if ( msg.records.doc_type === \"dapp_user\" ) {\n        return [ null, msg ];\n    } else {\n        if ( msg[return_object][0].doc_type === msg.records.doc_type) {\n            return [ null, msg ];\n        } else {\n            return [ msg, null ];\n        }\n    }\n} else {\n    return [ msg, null ];\n}\n",
            "y": 220,
            "x": 610,
            "z": "e0cd8199.1ad77",
            "type": "function",
            "id": "fb687ee1.7f9ad"
        },
        {
            "wires": [
                [
                    "e11bfea5.e8f09"
                ],
                [
                    "bf795f.ef8d86a"
                ]
            ],
            "name": "Record Already Exist",
            "outputs": 2,
            "outputLabels": [
                "Exist Override",
                "Exist Error"
            ],
            "noerr": 0,
            "func": "if (!msg.records.hasOwnProperty(\"error_on_exist\") || msg.records.error_on_exist === true) {\n    var error_id = msg.records.id;\n    var error_obj = \"id\";\n    if(msg.records.hasOwnProperty(\"email\")) {\n        error_id = msg.records.email;\n        error_obj = \"email\";\n    }\n    if(msg.records.hasOwnProperty(\"log_id\")) {\n        error_id = msg.records.log_id;\n        error_obj = \"log_id\";\n    }\n    var error_return_object = msg.records.object;\n    if (msg.cloudant.hasOwnProperty(\"object\")) { error_return_object = msg.cloudant.object }\n    if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\n    msg.errors.push({\n        \"code\": 400,\n        \"message\": \"The \" + msg.records.object + \" with \" + error_obj + \": \" + error_id + \" already exists.\",\n        \"returns\": [error_return_object]\n    })\n    delete msg[error_return_object][0].doc_type;\n    return [null,msg];\n} else {\n    msg.records.found = true;\n    return [msg,null];\n}",
            "y": 260,
            "x": 840,
            "z": "e0cd8199.1ad77",
            "type": "function",
            "id": "a610ab5b.d8e668"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"New Record\": msg});\n}",
            "y": 120,
            "x": 2790,
            "z": "e0cd8199.1ad77",
            "type": "function",
            "id": "e11bfea5.e8f09"
        },
        {
            "wires": [
                [
                    "f10e4ede.450cb"
                ],
                [
                    "7f36f4fa.4c3d1c"
                ]
            ],
            "name": "Update Record Values",
            "outputs": 2,
            "outputLabels": [
                "standard",
                "skip (user surgeon)"
            ],
            "noerr": 0,
            "func": "if ( msg.hasOwnProperty(\"inputs\") && msg.inputs.hasOwnProperty(\"body\")) {\n    Object.keys(msg.inputs.body).forEach(function(field){\n        msg.records[msg.records.object][field] = msg.inputs.body[field]\n    });\n}\nif(msg.records.object === \"user\" && (msg.records.user.password === \"\" || msg.records.user.email === \"\")) {\n    node.warn({\"User New: Skip Surgeon Create\": msg});\n    return [null,msg];\n}\nif(msg.records.object === \"device\") {\n    msg.records[msg.records.object]._id = msg.records.id\n}\nif(msg.records.object === \"dapp_user\") {\n    msg.records[msg.records.object]._id = msg.records.id;\n    msg.records[msg.records.object].filters.data_user_id = msg.records.id;\n}\nif(msg.records.object === \"help_ticket\") {\n    var field_list = [\"contact_name\", \"contact_number\", \"surgeon_settings_name\"];\n    var cryptojs = global.get('cryptojs');\n    var key = global.get('CRYPTO_KEYS').cloudant.payload;\n    field_list.forEach(function(field){\n        var efield = \"e_\" + field;\n        if(msg.records[msg.records.object][field]) {\n            if(msg.records[msg.records.object][field] !== \"\") {\n                msg.records[msg.records.object][efield] = cryptojs.AES.encrypt(JSON.stringify(msg.records[msg.records.object][field]),key).toString();\n            } else {\n                msg.records[msg.records.object][efield] = \"\";\n            }\n            delete msg.records[msg.records.object][field];\n        }\n    })\n}\nreturn [msg,null];",
            "y": 180,
            "x": 1040,
            "z": "e0cd8199.1ad77",
            "type": "function",
            "id": "73b7ca8a.39dd04"
        },
        {
            "wires": [
                [
                    "f5e9fd9a.06e74"
                ],
                [
                    "b84c1252.a892c"
                ]
            ],
            "name": "Setup Record Reload",
            "outputs": 2,
            "noerr": 0,
            "func": "if(msg.payload.hasOwnProperty(\"ok\") && msg.payload.ok && msg.payload.hasOwnProperty(\"id\")) { \n    msg.records.id = msg.payload.id;\n    msg.records[msg.records.object]._id = msg.payload.id;\n    if(msg.hasOwnProperty(\"records\") && msg.records.hasOwnProperty(\"id\")){\n        msg.cloudant.method = \"GET\";\n        msg.cloudant.return_obj = \"\";\n        msg.cloudant.request = \"/\" +  msg.cloudant.db_table + \"/\" + msg.records.id;\n    }\n    return [msg,null];\n} else {\n    return [null,msg]\n}",
            "y": 180,
            "x": 2320,
            "z": "e0cd8199.1ad77",
            "type": "function",
            "id": "20975717.82edb8"
        },
        {
            "tls": "",
            "wires": [
                [
                    "20975717.82edb8"
                ]
            ],
            "name": "POST Request",
            "url": "",
            "ret": "obj",
            "id": "1d679b99.e2ad74",
            "y": 180,
            "x": 2100,
            "z": "e0cd8199.1ad77",
            "type": "http request",
            "method": "POST"
        },
        {
            "wires": [
                [
                    "1d679b99.e2ad74"
                ]
            ],
            "name": "Setup Cloudant Insert",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.cloudant.hasOwnProperty(\"server\")) {\n    var cloudant = global.get(\"VCAP_CLOUDANT\");\n    msg.cloudant.server = \"https://\" + cloudant.credentials.host;\n    msg.cloudant.headers = {\n        \"Authorization\": \"Basic \" + Buffer.from(cloudant.credentials.username + ':' + cloudant.credentials.password).toString('base64')\n    }\n}\nmsg.url = msg.cloudant.server + \"/\" + msg.cloudant.db_table;\nmsg.headers = msg.cloudant.headers;\nmsg.cloudant.body = msg.records[msg.records.object]\nmsg.payload = msg.cloudant.body;\ndelete msg.cloudant.method;\nreturn msg;",
            "y": 180,
            "x": 1880,
            "z": "e0cd8199.1ad77",
            "type": "function",
            "id": "7f36f4fa.4c3d1c"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.debug) {\n    node.warn({\"Record Models\": msg});\n}",
            "y": 40,
            "x": 1350,
            "z": "df6d98dd.00d378",
            "type": "function",
            "id": "495056ad.f6a658"
        },
        {
            "wires": [
                [
                    "86fcedb.068ad1"
                ]
            ],
            "name": "user",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.records.user = {\n  \"doc_type\": \"user\",\n  \"status\": \"active\",\n  \"role\": \"\",\n  \"sub_roles\": [], \n  \"password\": \"\",\n  \"uid\": \"\",\n  \"first_name\": \"\",\n  \"last_name\": \"\",\n  \"mobile_phone\": \"\",\n  \"email\": \"\",\n  \"gets_change_email\": false,\n  \"bart_sart\": \"\",\n  \"business_unit\": \"\",\n  \"sales_area\": \"\",\n  \"sales_region\": \"\",\n  \"sales_territory\": \"\",\n  \"service_area\": \"\",\n  \"service_region\": \"\",\n  \"service_territory\": \"\",\n  \"created_by\": \"\", \n  \"eula_create_date\": 0,\n  \"eula_accept_status\": \"\",\n  \"eula_accept_date\": 0,\n  \"remote_access_allowed\": false,\n  \"idp_id\": \"\"\n}\nreturn msg;",
            "y": 180,
            "x": 670,
            "z": "df6d98dd.00d378",
            "type": "function",
            "id": "f41eb87f.3fe8e8"
        },
        {
            "checkall": "true",
            "z": "df6d98dd.00d378",
            "name": "doc_type",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "user"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "device"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "cell_data"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "geo_location"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "cell_tower_info"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "help_ticket"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "edhr"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "machine_life"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "settings_file"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "machine_link"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "provider_link"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "case"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "dapp_user"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 14,
            "wires": [
                [
                    "f41eb87f.3fe8e8"
                ],
                [
                    "e65b1849.fa8ef8"
                ],
                [
                    "b50566a4.bafa58"
                ],
                [
                    "f6c4cc23.e611d"
                ],
                [
                    "b80809e7.3a0438"
                ],
                [
                    "1181b084.21530f"
                ],
                [
                    "b7a43a54.bed748"
                ],
                [
                    "64c927c5.1f5948"
                ],
                [
                    "60e8682c.16a928"
                ],
                [
                    "36a87de1.f725d2"
                ],
                [
                    "d75b2252.f82da"
                ],
                [
                    "e237bae3.862198"
                ],
                [
                    "3be3718a.91923e"
                ],
                [
                    "320704c9.c219fc"
                ]
            ],
            "propertyType": "msg",
            "y": 220,
            "x": 440,
            "property": "records.model_type",
            "type": "switch",
            "id": "3d594598.444a5a"
        },
        {
            "wires": [
                [
                    "4b326353.484a3c"
                ]
            ],
            "name": "ForEach_Model",
            "links": [
                "b3d679ba.4c1868"
            ],
            "y": 160,
            "x": 95,
            "z": "df6d98dd.00d378",
            "type": "link in",
            "id": "13f08a81.b16255"
        },
        {
            "wires": [],
            "name": "ForEach_Model",
            "links": [
                "13f08a81.b16255"
            ],
            "y": 140,
            "x": 1275,
            "z": "df6d98dd.00d378",
            "type": "link out",
            "id": "b3d679ba.4c1868"
        },
        {
            "wires": [
                [
                    "495056ad.f6a658"
                ],
                [
                    "3d594598.444a5a"
                ]
            ],
            "name": "For Each Model",
            "outputs": 2,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"records\") && msg.records.hasOwnProperty(\"models\") && Array.isArray(msg.records.models) && msg.records.models.length > 0){\n    msg.records.model_type = msg.records.models.pop();\n    return [null, msg];\n}\nelse {\n    // ignore models\n    return [msg, null];\n}\n\n",
            "y": 120,
            "x": 220,
            "z": "df6d98dd.00d378",
            "type": "function",
            "id": "4b326353.484a3c"
        },
        {
            "wires": [
                [
                    "495056ad.f6a658"
                ],
                [
                    "b3d679ba.4c1868"
                ]
            ],
            "name": "Combine for Each",
            "outputs": 2,
            "noerr": 0,
            "func": "if(msg.records.models.length >= 1){\n    return [null, msg];\n}\nelse {\n    delete msg.records.model_type;\n    return [msg, null];\n}",
            "y": 120,
            "x": 1070,
            "z": "df6d98dd.00d378",
            "type": "function",
            "id": "86fcedb.068ad1"
        },
        {
            "wires": [
                [
                    "86fcedb.068ad1"
                ]
            ],
            "name": "device",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.records.device = {\n  \"_id\": \"\",\n  \"doc_type\": \"device\",\n  \"status\": \"active\",\n  \"system_type\": \"\",\n  \"business_unit\": \"\",\n  \"sales_area\": \"\",\n  \"sales_region\": \"\",\n  \"sales_territory\": \"\",\n  \"service_area\": \"\",\n  \"service_region\": \"\",\n  \"service_territory\": \"\",\n  \"customer_id\": \"\",\n  \"facility_id\": \"\",\n  \"facility_name\": \"\",\n  \"facility_address\": \"\",\n  \"sales_status\": \"\",\n  \"status_date\": 0,\n  \"get_me_help_allowed\": false,\n  \"placed_by\": \"\",\n  \"birth_date\": Date.now(),\n  \"edhr_birth_record_id\": \"\",\n  \"idp_id\": \"\",\n  \"password\": \"\",\n  \"email\": \"\"\n}\nreturn msg;",
            "y": 220,
            "x": 670,
            "z": "df6d98dd.00d378",
            "type": "function",
            "id": "e65b1849.fa8ef8"
        },
        {
            "wires": [
                [
                    "86fcedb.068ad1"
                ]
            ],
            "name": "Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "node.warn({\"Model\": \"Not Found\",  \"doc_type\": msg.records.doc_type});\nreturn msg;",
            "y": 700,
            "x": 690,
            "z": "df6d98dd.00d378",
            "type": "function",
            "id": "320704c9.c219fc"
        },
        {
            "wires": [
                [
                    "86fcedb.068ad1"
                ]
            ],
            "name": "help_ticket",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.records.help_ticket = {\n    \"system_sn\": \"\",\n    \"system_type\": \"\",\n    \"doctor_id\": \"\",\n    \"cell_tower_info\": {},\n    \"geo_location\": {},\n    \"address\": \"\",\n    \"start_time\": Date.now(),\n    \"close_time\": 0,\n    \"ticket_status\": \"New\",\n    \"reason\": \"\",\n    \"contact_name\": \"\",\n    \"contact_number\": \"\",\n    \"machine_state\": {},\n    \"assigned_id\": [],\n    \"responder_id\": [],\n    \"ticket_notes\": \"\",\n    \"surgeon_settings_file_id\": \"\",\n    \"surgeon_settings_name\": \"\",\n    \"device_ip\": \"\"\n}\nreturn msg;",
            "y": 380,
            "x": 690,
            "z": "df6d98dd.00d378",
            "type": "function",
            "id": "1181b084.21530f"
        },
        {
            "wires": [
                [
                    "86fcedb.068ad1"
                ]
            ],
            "name": "cell_data",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.records.cell_data = {\n    \"carrier\" : \"\",\n    \"considerIP\" : false,\n    \"cellTowers\" : [\n        {\n            \"cellId\": 0,\n            \"locationAreaCode\": 0,\n            \"mobileCountryCode\": 0,\n            \"mobileNetworkCode\": 0\n        }\n    ]\n}\nreturn msg;",
            "y": 260,
            "x": 680,
            "z": "df6d98dd.00d378",
            "type": "function",
            "id": "b50566a4.bafa58"
        },
        {
            "wires": [
                [
                    "86fcedb.068ad1"
                ]
            ],
            "name": "edhr",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.records.edhr = {\n  \"doc_type\": \"edhr\",\n  \"status\": \"active\",\n  \"system_sn\": \"\",\n  \"system_type\": \"\",\n  \"timestamp\": Date.now(),\n  \"geo_location\": {},\n  \"modlist\": [],\n  \"software_options\": []\n}\nreturn msg;",
            "y": 420,
            "x": 670,
            "z": "df6d98dd.00d378",
            "type": "function",
            "id": "b7a43a54.bed748"
        },
        {
            "wires": [
                [
                    "86fcedb.068ad1"
                ]
            ],
            "name": "geo_location",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.records.geo_location = {\n    \"location\": {\n        \"lat\": 0,\n        \"lng\": 0\n    },\n    \"accuracy\": 0\n}\nreturn msg;",
            "y": 300,
            "x": 690,
            "z": "df6d98dd.00d378",
            "type": "function",
            "id": "f6c4cc23.e611d"
        },
        {
            "wires": [
                [
                    "86fcedb.068ad1"
                ]
            ],
            "name": "machine_life",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.records.machine_life = {\n    \"doc_type\": \"machine_life\",\n    \"status\": \"active\",\n    \"system_sn\": \"\",\n    \"power_on_time_stamp\": 0,\n    \"prev_power_off_time_stamp\": 0, \n    \"function_accumulator\": []\n}\nreturn msg;",
            "y": 460,
            "x": 690,
            "z": "df6d98dd.00d378",
            "type": "function",
            "id": "64c927c5.1f5948"
        },
        {
            "wires": [
                [
                    "86fcedb.068ad1"
                ]
            ],
            "name": "cell_tower_info",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.records.cell_tower_info = {\n    \"Carrier\":\"\",\n    \"CellID\":0,\n    \"LAC\":0,\n    \"MCC\":0,\n    \"MNC\":0\n}\nreturn msg;",
            "y": 340,
            "x": 700,
            "z": "df6d98dd.00d378",
            "type": "function",
            "id": "b80809e7.3a0438"
        },
        {
            "wires": [
                [
                    "73b7ca8a.39dd04"
                ]
            ],
            "name": "",
            "y": 180,
            "x": 830,
            "z": "e0cd8199.1ad77",
            "type": "subflow:df6d98dd.00d378",
            "id": "4e06e02a.6185e"
        },
        {
            "wires": [
                [
                    "1357e27e.bc178e",
                    "5ded422f.342e1c"
                ]
            ],
            "name": "",
            "y": 220,
            "x": 2150,
            "z": "68197f61.7975",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "c5424b86.7d0048"
        },
        {
            "wires": [
                [
                    "e11bfea5.e8f09",
                    "582c62cd.3bc4ac"
                ]
            ],
            "name": "",
            "y": 160,
            "x": 2550,
            "z": "e0cd8199.1ad77",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "f5e9fd9a.06e74"
        },
        {
            "wires": [
                [
                    "fb687ee1.7f9ad"
                ]
            ],
            "name": "",
            "y": 220,
            "x": 390,
            "z": "e0cd8199.1ad77",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "c8f1b2d5.de0b7"
        },
        {
            "wires": [
                [
                    "5f138d96.afa2e4"
                ]
            ],
            "name": "",
            "y": 220,
            "x": 430,
            "z": "68197f61.7975",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "a009dac3.412498"
        },
        {
            "wires": [
                [
                    "a009dac3.412498"
                ],
                [
                    "fe7d02fa.eeed3"
                ]
            ],
            "name": "Find Record",
            "outputs": 2,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"cloudant\")) {msg.cloudant = {}}\nif(!msg.cloudant.hasOwnProperty(\"id\") && msg.records.hasOwnProperty(\"id\") ) {msg.cloudant.id = msg.records.id}\nif(!msg.cloudant.hasOwnProperty(\"doc_type\") && msg.records.hasOwnProperty(\"doc_type\") ) {msg.cloudant.doc_type = msg.records.doc_type}\nif (msg.hasOwnProperty(msg.cloudant.object)) { delete msg[msg.cloudant.object] }\nif(msg.cloudant.hasOwnProperty(\"id\")){\n    msg.cloudant.db_table = \"stellaris_documents\";\n    msg.cloudant.object=\"doc_type\";\n    msg.cloudant.method = \"GET\";\n    msg.cloudant.return_obj = \"\";\n    if(msg.cloudant.hasOwnProperty(\"doc_type\") && msg.cloudant.doc_type === \"help_ticket\") {\n        msg.cloudant.db_table = \"help_tickets\";\n        msg.cloudant.object = \"help_ticket\";\n    }\n    if(msg.cloudant.hasOwnProperty(\"doc_type\") && (msg.cloudant.doc_type === \"machine_life\" || msg.cloudant.doc_type === \"case\" || msg.cloudant.doc_type === \"edhr\")) {\n        msg.cloudant.db_table = \"stellaris_logs\";\n    }\n    if(msg.cloudant.hasOwnProperty(\"doc_type\") && msg.cloudant.doc_type === \"dapp_user\") { \n        msg.cloudant.db_table = \"dataapp_documents\";\n        msg.cloudant.object = \"dapp_user\";\n    }\n    msg.cloudant.request = \"/\" + msg.cloudant.db_table + \"/\" + msg.cloudant.id;\n    return [msg, null]\n} else {\n    return [null, msg]\n}\n",
            "y": 220,
            "x": 210,
            "z": "68197f61.7975",
            "type": "function",
            "id": "90877aec.e498b8"
        },
        {
            "wires": [
                [
                    "4e06e02a.6185e"
                ],
                [
                    "c8f1b2d5.de0b7"
                ],
                [
                    "bc93e10d.9f064"
                ]
            ],
            "name": "Find Record",
            "outputs": 3,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"records\") && msg.records.hasOwnProperty(\"id\") && msg.records.id !== \"\"){\n    msg.cloudant = {\n        \"method\": \"GET\",\n        \"return_obj\": \"\",\n        \"db_table\": \"stellaris_documents\"\n    };\n    if(msg.records.hasOwnProperty(\"doc_type\") && msg.records.doc_type === \"help_ticket\") {  msg.cloudant.db_table = \"help_tickets\" }\n    if(msg.records.hasOwnProperty(\"doc_type\") && (msg.records.doc_type === \"machine_life\" || msg.records.doc_type === \"case\" || msg.records.doc_type === \"edhr\")) {  msg.cloudant.db_table = \"stellaris_logs\" }\n    if(msg.records.hasOwnProperty(\"doc_type\") && msg.records.doc_type === \"dapp_user\") { \n        msg.cloudant.db_table = \"dataapp_documents\";\n        msg.cloudant.object = \"dapp_user\";\n    }\n    msg.cloudant.request = \"/\" +  msg.cloudant.db_table + \"/\" + msg.records.id;\n    if (msg.hasOwnProperty(\"inputs\") && msg.inputs.hasOwnProperty(\"body\")) {\n        if(msg.inputs.body.hasOwnProperty(\"id\")) { delete msg.inputs.body.id }\n        if(msg.inputs.body.hasOwnProperty(\"_id\")) { delete msg.inputs.body._id }\n    }\n    return [null,msg,null]\n} else if(msg.hasOwnProperty(\"records\") && msg.records.hasOwnProperty(\"doc_type\") && msg.records.doc_type === \"user\" && msg.records.hasOwnProperty(\"email\")){\n    msg.cloudant = {\n        \"db_table\": \"stellaris_documents\",\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"user\",\n        \"selector\": {\n            \"doc_type\": \"user\",\n            \"email\": msg.records.email,\n            \"status\": \"active\"\n        },\n        \"fields\": [\"_id\", \"doc_type\", \"email\"]\n    }\n    return [null,msg,null]\n} else if(msg.hasOwnProperty(\"records\") && msg.records.hasOwnProperty(\"doc_type\") && msg.records.doc_type === \"case\" && msg.records.hasOwnProperty(\"log_id\")){\n    msg.cloudant = {\n        \"db_table\": \"stellaris_logs\",\n        \"request\": \"/stellaris_logs/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"case\",\n        \"selector\": {\n            \"doc_type\": \"case\",\n            \"log_id\": msg.records.log_id\n        },\n        \"fields\": [\"_id\", \"doc_type\", \"log_id\"]\n    }\n    return [null,msg,null]\n} else if(msg.hasOwnProperty(\"records\") && msg.records.hasOwnProperty(\"doc_type\") &&(msg.records.doc_type === \"machine_life\" || msg.records.doc_type === \"edhr\") && !msg.records.hasOwnProperty(\"id\")){\n    msg.cloudant = {\n        \"db_table\": \"stellaris_logs\",\n        \"object\": msg.records.doc_type\n    }\n    return [msg,null,null]\n} else if(msg.hasOwnProperty(\"records\") && msg.records.hasOwnProperty(\"doc_type\") && msg.records.doc_type === \"help_ticket\" && !msg.records.hasOwnProperty(\"id\")){\n    msg.cloudant = {\n        \"db_table\": \"help_tickets\",\n        \"object\": msg.records.doc_type\n    }\n    return [msg,null,null]\n} else if(msg.hasOwnProperty(\"records\") && msg.records.hasOwnProperty(\"doc_type\") && msg.records.doc_type === \"settings_file\" && !msg.records.hasOwnProperty(\"id\")){\n    msg.cloudant = {\n        \"db_table\": \"stellaris_documents\",\n        \"object\": msg.records.doc_type\n    }\n    return [msg,null,null]\n} else if(msg.hasOwnProperty(\"records\") && msg.records.hasOwnProperty(\"doc_type\") && msg.records.doc_type === \"machine_link\"){\n    msg.cloudant = {\n        \"db_table\": \"stellaris_documents\",\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"machine_link\",\n        \"selector\": {\n            \"doc_type\": \"machine_link\",\n            \"user\": msg.inputs.user_id,\n            \"device\": msg.inputs.device_id\n        },\n        \"fields\": [\"_id\", \"doc_type\", \"device\", \"user\"]\n    }\n    return [msg,null,null]\n} else if(msg.hasOwnProperty(\"records\") && msg.records.hasOwnProperty(\"doc_type\") && msg.records.doc_type === \"provider_link\"){\n    msg.cloudant = {\n        \"db_table\": \"stellaris_documents\",\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"provider_link\",\n        \"selector\": {\n            \"doc_type\": \"provider_link\",\n            \"provider_id\": msg.inputs.provider_id,\n            \"consumer_id\": msg.inputs.consumer_id\n        },\n        \"fields\": [\"_id\", \"doc_type\", \"provider_id\", \"consumer_id\"]\n    }\n    return [msg,null,null]\n} else {\n    return [null,null, msg]\n}\n\n    ",
            "y": 220,
            "x": 170,
            "z": "e0cd8199.1ad77",
            "type": "function",
            "id": "aa7ba18f.b2222"
        },
        {
            "wires": [
                [
                    "bf795f.ef8d86a"
                ]
            ],
            "name": "doc_type not supported",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"The provided doc_type: \" + msg.records.doc_type + \" is not supported by the New Record subflow\"\n})\nreturn msg;",
            "y": 300,
            "x": 850,
            "z": "e0cd8199.1ad77",
            "type": "function",
            "id": "bc93e10d.9f064"
        },
        {
            "wires": [
                [
                    "1357e27e.bc178e",
                    "68e3cec6.a0ed2"
                ]
            ],
            "name": "Invalid id Provided",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Provided ID is not valid\"\n})\nreturn msg;",
            "y": 340,
            "x": 830,
            "z": "68197f61.7975",
            "type": "function",
            "id": "fe7d02fa.eeed3"
        },
        {
            "wires": [
                [
                    "9340a5fc.f0d5d8"
                ]
            ],
            "name": "Compile Error",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.payload = {};\nmsg.api.end_time = Date.now();\nif (msg.api.hasOwnProperty(\"statistics\")) {msg.api.statistics.time_ms = msg.api.end_time - msg.api.start_time}\nif(msg.hasOwnProperty(\"errors\") && msg.errors.length > 0) {\n    var first_error = msg.errors[0];\n    msg.headers = {\"Content-type\" : \"application/json\"};\n    if(typeof first_error.message === \"string\") { msg.payload = { \"error\": first_error.message } } else { msg.payload = { \"error\": first_error.message } }\n    msg.statusCode = first_error.code;\n    if(first_error.hasOwnProperty(\"returns\") && first_error.returns.length > 0) {\n        first_error.returns.forEach(function(object){\n            if(msg.hasOwnProperty(object)){\n                if(msg.hasOwnProperty(\"records\") && msg.records.hasOwnProperty(\"format\") && msg.records.format === \"JSON\") {\n                    msg.payload[object] = msg[object][0];\n                }\n                else {\n                    msg.payload[object] = msg[object];\n                }\n            }\n            else{\n                node.warn({\"Returns\": \"Error\", \"Expected object not found in msg: \": object})\n            }\n        });\n    }\n} else {\n    msg.statusCode = 400;\n    msg.payload = { \"error\": \"Unhandled Error was triggered\" }\n}\nreturn msg;",
            "y": 160,
            "x": 200,
            "z": "2638fa4d.cb43e6",
            "type": "function",
            "id": "66468412.9e2ccc"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"Return Error\": msg});\n}\nif(!msg.api.hasOwnProperty(\"name\")) {\n    msg.api.name = \"API Results\";    \n}\nvar api_name = \"[ERROR] - Returns\";\nvar apic = \"\";\nif (msg.api.hasOwnProperty(\"apic\")) {\n    apic = \" - [\" + msg.api.apic.catalog + \"][\" + msg.api.apic.version + \"]\";\n}\nif(msg.api.hasOwnProperty(\"example\")) {\n    api_name = \"[ERROR] - \" + msg.api.name + \" - \" + msg.api.example + apic;\n}\nelse {\n   api_name = \"[ERROR] - \" + msg.api.name + apic; \n}\nvar warn = {}\nwarn[api_name] = msg.payload;\nwarn.msg = msg;\nnode.warn(warn);",
            "y": 120,
            "x": 790,
            "z": "2638fa4d.cb43e6",
            "type": "function",
            "id": "fae978dd.b05238"
        },
        {
            "wires": [],
            "name": "Error",
            "headers": {},
            "y": 160,
            "x": 990,
            "z": "2638fa4d.cb43e6",
            "type": "http response",
            "id": "56b6ae51.32017",
            "statusCode": ""
        },
        {
            "wires": [
                [
                    "56b6ae51.32017"
                ]
            ],
            "name": "IF Http Res Exist",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"res\")) {return msg}\nelse { node.warn({ \"Return Error\": msg}) }",
            "y": 160,
            "x": 830,
            "z": "2638fa4d.cb43e6",
            "type": "function",
            "id": "4394da9d.caf384"
        },
        {
            "wires": [],
            "name": "",
            "y": 340,
            "x": 1080,
            "z": "68197f61.7975",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "68e3cec6.a0ed2"
        },
        {
            "wires": [],
            "name": "",
            "y": 300,
            "x": 2820,
            "z": "e0cd8199.1ad77",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "bf795f.ef8d86a"
        },
        {
            "wires": [],
            "name": "",
            "y": 160,
            "x": 2020,
            "z": "71afa3f9.81defc",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "44304eec.b88b6"
        },
        {
            "wires": [
                [
                    "44304eec.b88b6"
                ]
            ],
            "name": "Missing Required Body Fields",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 412,\n    \"message\": \"Missing required body fields.\",\n    \"returns\": [\"error_fields\"]\n});\nmsg.records.format = \"array\";\nreturn msg;",
            "y": 320,
            "x": 1690,
            "z": "71afa3f9.81defc",
            "type": "function",
            "id": "6e62136f.a8385c"
        },
        {
            "wires": [
                [
                    "44304eec.b88b6"
                ]
            ],
            "name": "Missing Required filter_options Fields",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 412,\n    \"message\": \"Missing required filter_options fields.\",\n    \"returns\": [\"error_fields\"]\n});\nmsg.records.format = \"array\";\nreturn msg;",
            "y": 280,
            "x": 1710,
            "z": "71afa3f9.81defc",
            "type": "function",
            "id": "6814fe1c.ec122"
        },
        {
            "wires": [
                [
                    "bf795f.ef8d86a"
                ]
            ],
            "name": "Insert Failed",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"The \" + msg.records.object + \" insertion failed.\"\n})\nreturn msg;",
            "y": 240,
            "x": 2530,
            "z": "e0cd8199.1ad77",
            "type": "function",
            "id": "b84c1252.a892c"
        },
        {
            "wires": [],
            "name": "",
            "y": 180,
            "x": 980,
            "z": "da740a9b.08ed88",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "7c53d266.ff837c"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"Kore Http\": msg});\n}",
            "y": 60,
            "x": 950,
            "z": "da740a9b.08ed88",
            "type": "function",
            "id": "d9a454ac.e85b08"
        },
        {
            "wires": [
                [
                    "d712f801.098658"
                ]
            ],
            "name": "KORE URL",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"kore\") && !msg.kore.hasOwnProperty(\"server\")){\n    var kore = global.get(\"VCAP_KORE\");\n    msg.kore.server = kore.credentials.url\n    msg.headers = {\n        \"content-type\": \"application/json\",\n        \"Authorization\": kore.credentials.type + \" \" + kore.credentials.apikey\n    };\n}\nmsg.url = msg.kore.server + \"/json/\" + msg.kore.request\nmsg.payload = msg.kore.body\nreturn msg;",
            "y": 140,
            "x": 210,
            "z": "da740a9b.08ed88",
            "type": "function",
            "id": "8f27b7b4.9190d8"
        },
        {
            "tls": "",
            "wires": [
                [
                    "75722218.98ad1c"
                ]
            ],
            "name": "KORE http",
            "url": "",
            "ret": "obj",
            "id": "d712f801.098658",
            "y": 140,
            "x": 390,
            "z": "da740a9b.08ed88",
            "type": "http request",
            "method": "POST"
        },
        {
            "wires": [
                [
                    "d9a454ac.e85b08"
                ],
                [
                    "ecc66f3a.fe958"
                ]
            ],
            "name": "KORE Returns",
            "outputs": 2,
            "outputLabels": [
                "Data",
                "Error"
            ],
            "noerr": 0,
            "func": "delete msg.statusCode;\ndelete msg.url;\ndelete msg.responseUrl;\ndelete msg.headers;\ndelete msg.responseCookies;\nif (msg.kore.return_obj === \"items\" && msg.payload.hasOwnProperty(\"d\")) { msg.payload = msg.payload.d }\nif (msg.payload.hasOwnProperty(msg.kore.return_obj))\n{\n    msg[msg.kore.object] = [];\n    if(Array.isArray(msg.payload[msg.kore.return_obj])) {\n        msg[msg.kore.object] = msg.payload[msg.kore.return_obj];\n    } else {\n        msg[msg.kore.object][0] = msg.payload[msg.kore.return_obj];\n    }\n    msg.payload = {};\n    return [msg, null];\n}\nif (msg.payload.hasOwnProperty(\"errorCode\")) {\n    msg.kore.error = {\n        \"code\": msg.payload.errorCode,\n        \"description\": msg.payload.errorMessage,\n        \"source\": \"kore\"\n    }\n    msg.payload = {};\n    return [null,msg];\n}\nif (typeof msg.payload === \"number\") {\n    msg.kore.return_code = msg.payload;\n    msg.payload = {};\n    if(msg.kore.return_code === 0) {\n        return [msg, null];\n    } else {\n        return [null,msg];\n    }\n}\n\n",
            "y": 140,
            "x": 580,
            "z": "da740a9b.08ed88",
            "type": "function",
            "id": "75722218.98ad1c"
        },
        {
            "wires": [
                [
                    "7c53d266.ff837c"
                ]
            ],
            "name": "KORE Error",
            "outputs": 1,
            "noerr": 0,
            "func": "/*if(msg.kore.hasOwnProperty(\"return_code\")) {\n    if(msg.kore.return_code === 1) { msg.kore.error_message = \"Access Denied\" }\n    else if(msg.kore.return_code === 2) { msg.kore.error_message = \"Invalid Action\" }\n    else if(msg.kore.return_code === 3) { msg.kore.error_message = \"Invalid Device Number\" }\n    else { msg.kore.error_message = \"Unknown KORE return code.\"}\n}*/\nif(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": msg.kore.error\n})\nreturn msg;",
            "y": 180,
            "x": 790,
            "z": "da740a9b.08ed88",
            "type": "function",
            "id": "ecc66f3a.fe958"
        },
        {
            "wires": [
                [
                    "d7ddbf7b.cd38f"
                ]
            ],
            "name": "",
            "y": 1860,
            "x": 590,
            "z": "61ffb71b.d286f",
            "type": "subflow:3962857e.44abba",
            "id": "e6a4d1f.c44fb3"
        },
        {
            "wires": [
                [
                    "11e5486f.2c6b08"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID/users/role/:role",
            "upload": false,
            "id": "da8f01e9.05b3e",
            "swaggerDoc": "",
            "y": 1860,
            "x": 190,
            "z": "61ffb71b.d286f",
            "type": "http in",
            "method": "get"
        },
        {
            "info": "Similar to Get Device Users but filters to only \ninclude specified role\n",
            "wires": [],
            "name": "[CN] [DEVICES] Device Users by Role",
            "y": 1820,
            "x": 170,
            "z": "61ffb71b.d286f",
            "type": "comment",
            "id": "2b53bbc7.445774"
        },
        {
            "wires": [
                [
                    "6600b63.2b7c748"
                ]
            ],
            "name": "Devices by Region",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Devices by Region\"\n    });\nmsg.records = {\n    \"doc_type\": \"device\",\n    \"format\": \"array\",\n    \"object\": \"devices\",\n    \"fields\": [\"_id\", \"system_type\", \"business_unit\", \"sales_area\", \"sales_region\", \"sales_territory\", \"service_area\", \"service_region\", \"service_territory\", \"customer_id\", \"facility_id\", \"facility_name\", \"facility_address\", \"sales_status\", \"status_date\", \"get_me_help_allowed\", \"placed_by\", \"birth_date\"],\n    \"sort\": [{\"_id:string\": \"asc\"}],\n    \"returns\": [\"devices\"]\n};\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": [\"filter_options\"]};\nmsg.filters = {\n    \"required\": [],\n    \"allowed\": [\"facility_name\", \"system_type\", \"get_me_help_allowed\", \"sales_status\", \"status_date_range_begin\", \"status_date_range_end\", \"birth_date_range_begin\", \"birth_date_range_end\"]};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"bookmark_type\": \"payload\",\n    \"pagination\": true,\n    \"bookmark_use\": false\n}\nmsg.filters.params = {\n    \"doc_type\": msg.records.doc_type,\n    \"status\": \"active\"\n}\nif(msg.req.params.bart_sart === \"bart\"){\n        var area = \"sales_area\";\n        var region = \"sales_region\";\n        var territory = \"sales_territory\";\n}\nelse {\n        var area = \"service_area\";\n        var region = \"service_region\";\n        var territory = \"service_territory\";\n}\nif(msg.req.params.business_unit.trim() != \"ALL\"){\n    msg.filters.params.business_unit =  msg.req.params.business_unit\n\tif(msg.req.params.area.trim() != \"ALL\"){\n\t    msg.filters.params[area] = msg.req.params.area;\n\t    if(msg.req.params.region.trim() != \"ALL\"){\n\t        msg.filters.params[region] = msg.req.params.region;\n\t        if(msg.req.params.territory.trim() != \"ALL\"){\n\t            msg.filters.params[territory] = msg.req.params.territory;\n\t        }\n\t    }\n\t}\n}\nreturn msg;",
            "y": 2120,
            "x": 910,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "c800309c.a7b85"
        },
        {
            "wires": [
                [
                    "82ea1731.21f0a8"
                ]
            ],
            "name": "",
            "y": 2120,
            "x": 1080,
            "z": "61ffb71b.d286f",
            "type": "subflow:71afa3f9.81defc",
            "id": "6600b63.2b7c748"
        },
        {
            "wires": [
                [
                    "c800309c.a7b85"
                ]
            ],
            "name": "",
            "y": 2120,
            "x": 710,
            "z": "61ffb71b.d286f",
            "type": "subflow:3962857e.44abba",
            "id": "9e9a8543.2136d8"
        },
        {
            "wires": [
                [
                    "be38e306.9877d"
                ]
            ],
            "name": "",
            "y": 2120,
            "x": 1250,
            "z": "61ffb71b.d286f",
            "type": "subflow:f83a5f50.ef8e",
            "id": "82ea1731.21f0a8"
        },
        {
            "wires": [
                [
                    "9e9a8543.2136d8"
                ]
            ],
            "name": "",
            "url": "/devices/device_query/region/:bart_sart/:business_unit/:area/:region/:territory",
            "upload": false,
            "id": "b28eea96.003b78",
            "swaggerDoc": "",
            "y": 2120,
            "x": 310,
            "z": "61ffb71b.d286f",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "afcb683f.2783b8"
                ]
            ],
            "name": "",
            "y": 2120,
            "x": 1450,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "be38e306.9877d"
        },
        {
            "wires": [],
            "name": "",
            "y": 2120,
            "x": 1630,
            "z": "61ffb71b.d286f",
            "type": "subflow:bc6ff87.05a2908",
            "id": "afcb683f.2783b8"
        },
        {
            "info": "Pending\n-IBM Internal Testing/Validation\n-B&L Testing",
            "wires": [],
            "name": "[CN] Devices by Region",
            "y": 2080,
            "x": 120,
            "z": "61ffb71b.d286f",
            "type": "comment",
            "id": "925bdbb8.f64418"
        },
        {
            "wires": [
                [
                    "653b6772.a90c08"
                ]
            ],
            "name": "Device Query Cases",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Device Query Cases\"\n    });\nmsg.records = {\n    //\"delete\": [\"_rev\", \"doc_type\"],\n    \"doc_type\": \"case\", //\"user\", \"device\", \"settings_file\", ...\n    \"format\": \"array\", //\"JSON\", \"Complex JSON\"\n    \"object\": \"cases\",\n    \"returns\": [\"cases_count\",\"cases\"],\n    \"fields\": [ \"_id\",\n                \"log_id\",\n                \"system_sn\",\n                \"system_type\",\n                \"location\",\n                \"geo_location\",\n                \"address\",\n                \"user_id\",\n                \"settings_file_name\",\n                \"start_time\",\n                \"stop_time\"\n               ],\n    \"sort\": [{\"stop_time:number\": \"desc\"}]\n};\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": [\"filter_options\", \"return_users\"]\n};\nmsg.filters = {\n    \"allowed\": [\"stop_time_range_begin\" , \"stop_time_range_end\" , \"user_id\"],\n    \"required\": []\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_logs/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"bookmark_type\": \"payload\", //\"payload\", \"parameter\"\n    \"pagination\": true\n};\nmsg.filters.params = {\n    \"system_sn\": msg.req.params.deviceID,\n    \"doc_type\": \"case\"\n};\nif(msg.req.body.hasOwnProperty(\"return_users\") && msg.req.body.return_users === true) {\n    msg.records.returns.push(\"users\");\n}\nreturn msg;",
            "y": 1100,
            "x": 740,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "6b9cb50d.ed09ec"
        },
        {
            "wires": [
                [
                    "6b9cb50d.ed09ec"
                ]
            ],
            "name": "",
            "y": 1100,
            "x": 530,
            "z": "61ffb71b.d286f",
            "type": "subflow:3962857e.44abba",
            "id": "adeec21.295e54"
        },
        {
            "wires": [
                [
                    "1185d464.9784cc"
                ]
            ],
            "name": "",
            "y": 1100,
            "x": 920,
            "z": "61ffb71b.d286f",
            "type": "subflow:71afa3f9.81defc",
            "id": "653b6772.a90c08"
        },
        {
            "wires": [
                [
                    "adeec21.295e54"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID/logs/cases_query",
            "upload": false,
            "id": "83a1dd9a.28cb6",
            "swaggerDoc": "",
            "y": 1100,
            "x": 200,
            "z": "61ffb71b.d286f",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "9bee9e05.bdbc5"
                ]
            ],
            "name": "",
            "y": 1100,
            "x": 1090,
            "z": "61ffb71b.d286f",
            "type": "subflow:f83a5f50.ef8e",
            "id": "1185d464.9784cc"
        },
        {
            "wires": [
                [
                    "2f460015.d3ce5"
                ]
            ],
            "name": "",
            "y": 1100,
            "x": 1290,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "9bee9e05.bdbc5"
        },
        {
            "wires": [
                [
                    "dfb8c8a7.7fd8c8"
                ]
            ],
            "name": "Case Count",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.cloudant.pagination = false;\nmsg.cloudant.fields = [\"user_id\"];\nmsg.cloudant.object = \"user_ids\";\ndelete msg.cloudant.sort;\ndelete msg.cloudant.limit;\ndelete msg.cloudant.skip;\nreturn msg;",
            "y": 1100,
            "x": 1470,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "2f460015.d3ce5"
        },
        {
            "wires": [
                [
                    "20d29d22.c2b2f2"
                ]
            ],
            "name": "",
            "y": 1100,
            "x": 1650,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "dfb8c8a7.7fd8c8"
        },
        {
            "wires": [
                [
                    "213570ca.bd8e4"
                ],
                [
                    "479f4979.b437c8"
                ]
            ],
            "name": "Distinct user_id List",
            "outputs": 2,
            "noerr": 0,
            "func": "msg.cases_count = msg.user_ids.length;\nif(msg.hasOwnProperty(\"cases\") && msg.cases.length > 0){\n    var unique_user_ids = [];\n    if(msg.hasOwnProperty(\"user_ids\") && msg.user_ids.length > 0) {\n        msg.user_ids = msg.user_ids.map(a => a.user_id);\n            msg.user_ids.forEach(function(id){\n                if(unique_user_ids.indexOf(id) < 0 && (id !== null) && (id !== \"\")){\n                    unique_user_ids.push(id);\n                }\n        });\n        if(unique_user_ids.length > 0){\n            msg.cloudant.request = \"/stellaris_documents/_find\";\n            msg.cloudant.method = \"POST\";\n            msg.cloudant.selector = { \"_id\":  { \"$in\": unique_user_ids  }};\n            msg.cloudant.fields = [\"_id\", \"first_name\", \"last_name\"];\n            msg.cloudant.sort= [];\n            msg.cloudant.object = \"users\";\n            msg.cloudant.pagination = false;\n            msg.cloudant.bookmark_use = false;\n            msg.cloudant.bookmark_save = false;\n            return [msg, null];\n        }\n    }\n}\nmsg.users = [];\nmsg.api.path = 2;\nreturn [null, msg];",
            "y": 1100,
            "x": 1850,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "20d29d22.c2b2f2"
        },
        {
            "wires": [
                [
                    "479f4979.b437c8"
                ]
            ],
            "name": "",
            "y": 1060,
            "x": 2050,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "213570ca.bd8e4"
        },
        {
            "wires": [
                [
                    "e84aa179.d71ac"
                ]
            ],
            "name": "Add User Name",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"cases\") && msg.cases.length > 0){\n    msg.user_ids = msg.users.map(a => a._id);\n    msg.cases.forEach(function(record){\n        var user_index = msg.user_ids.indexOf(record.user_id);\n        var first_name = \"\";\n        var last_name = \"\";\n        if(user_index >= 0){\n            first_name = msg.users[user_index].first_name;\n            last_name = msg.users[user_index].last_name;\n        }\n        record.first_name = first_name;\n        record.last_name = last_name;\n    });\n}\nreturn msg;",
            "y": 1100,
            "x": 2240,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "479f4979.b437c8"
        },
        {
            "wires": [],
            "name": "",
            "y": 1100,
            "x": 2410,
            "z": "61ffb71b.d286f",
            "type": "subflow:bc6ff87.05a2908",
            "id": "e84aa179.d71ac"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] Device Query Cases",
            "y": 1060,
            "x": 130,
            "z": "61ffb71b.d286f",
            "type": "comment",
            "id": "d4cff42e.203498"
        },
        {
            "wires": [
                [
                    "cd21da35.fcb318"
                ]
            ],
            "name": "Device Info",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Device Info\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"password\", \"doc_type\", \"status\"],\n    \"object\": \"device\",\n    \"format\": \"JSON\",\n    \"returns\": [\"device\", \"edhr\"]\n};\nmsg.inputs = {\n    \"device_id\": msg.req.params.deviceID\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/\" + msg.inputs.device_id,\n    \"method\": \"GET\",\n    \"return_obj\": \"\"\n};\nreturn msg;",
            "y": 380,
            "x": 710,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "fc4d821a.6eaef"
        },
        {
            "wires": [
                [
                    "fc4d821a.6eaef"
                ]
            ],
            "name": "",
            "y": 380,
            "x": 530,
            "z": "61ffb71b.d286f",
            "type": "subflow:3962857e.44abba",
            "id": "f0870c4b.e5e78"
        },
        {
            "wires": [
                [
                    "d2d90a8b.f2aa78"
                ]
            ],
            "name": "",
            "y": 380,
            "x": 890,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "cd21da35.fcb318"
        },
        {
            "wires": [
                [
                    "f0870c4b.e5e78"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID",
            "upload": false,
            "id": "abdb4835.b62b48",
            "swaggerDoc": "",
            "y": 380,
            "x": 140,
            "z": "61ffb71b.d286f",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "27ce8ddc.b00b62"
                ]
            ],
            "name": "",
            "y": 360,
            "x": 1630,
            "z": "61ffb71b.d286f",
            "type": "subflow:313bd1d3.01c06e",
            "id": "d94cab78.361dd8"
        },
        {
            "wires": [
                [
                    "d62553c7.c1f2d"
                ],
                [
                    "462cf092.5a01d"
                ]
            ],
            "name": "EDHR Info",
            "outputs": 2,
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"device\") || !msg.device[0].hasOwnProperty(\"_id\")) {\n    return [null,msg];\n}\nmsg.cloudant = {\n    \"request\": \"/stellaris_logs/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"edhr\",\n    \"selector\": {\n        \"$and\": [{\"system_sn\": msg.inputs.device_id},\n                 {\"doc_type\": \"edhr\"}]\n    },\n    \"fields\": [\"_id\", \"system_sn\", \"system_type\", \"timestamp\", \"geo_location\", \"modlist\", \"software_options\"],\n    \"sort\": [{\"timestamp:number\": \"desc\"}],\n    \"limit\": 1\n};\nreturn [msg,null];",
            "y": 380,
            "x": 1070,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "d2d90a8b.f2aa78"
        },
        {
            "wires": [
                [
                    "e82e23f3.b5e2e"
                ]
            ],
            "name": "",
            "y": 360,
            "x": 1250,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "d62553c7.c1f2d"
        },
        {
            "wires": [
                [
                    "d94cab78.361dd8"
                ]
            ],
            "name": "Empty EDHR",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"edhr\") && Array.isArray(msg.edhr) && msg.edhr.length === 0) {\n    msg.edhr[0] = {}\n}\nreturn msg;",
            "y": 360,
            "x": 1440,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "e82e23f3.b5e2e"
        },
        {
            "wires": [],
            "name": "",
            "y": 360,
            "x": 1810,
            "z": "61ffb71b.d286f",
            "type": "subflow:bc6ff87.05a2908",
            "id": "27ce8ddc.b00b62"
        },
        {
            "info": "Checks for device in cloudant and\nreturns data without some cloudant/logic fields.",
            "wires": [],
            "name": "[CN] Device Info",
            "y": 340,
            "x": 100,
            "z": "61ffb71b.d286f",
            "type": "comment",
            "id": "19674e75.dc5bc2"
        },
        {
            "wires": [
                [
                    "22a26830.d90308"
                ]
            ],
            "name": "Device Maintenance Files",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Device Maintenance Files\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\",\"doc_type\", \"status\"],\n    \"format\": \"array\",\n    \"object\": \"settings_files\",\n    \"returns\": [\"settings_files\"]\n};\nmsg.inputs = {\n    \"device_id\": msg.req.params.deviceID\n};\nmsg.filters = {};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"doc_types\",\n    \"selector\": {\n        \"$or\": [\n            {\"$and\": [{\"doc_type\": \"machine_link\"},{\"status\": \"active\"},{\"device\": msg.inputs.device_id}]},\n            {\"$and\": [{\"doc_type\": \"device\"},{\"status\": \"active\"},{\"_id\": msg.inputs.device_id}]}\n            ]\n    }\n};\nreturn msg;",
            "y": 700,
            "x": 750,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "1e7df28d.5f119d"
        },
        {
            "wires": [
                [
                    "1e7df28d.5f119d"
                ]
            ],
            "name": "",
            "y": 700,
            "x": 530,
            "z": "61ffb71b.d286f",
            "type": "subflow:3962857e.44abba",
            "id": "3e3e2224.0c5eae"
        },
        {
            "wires": [
                [
                    "4bdf6281.10ab5c"
                ]
            ],
            "name": "",
            "y": 700,
            "x": 970,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "22a26830.d90308"
        },
        {
            "wires": [
                [
                    "fb6ec3dc.c771f"
                ],
                [
                    "fc11ab63.470a38"
                ],
                [
                    "60a33077.686ee"
                ]
            ],
            "name": "Unique Surgeon Users",
            "outputs": 3,
            "outputLabels": [
                "",
                "",
                "no device"
            ],
            "noerr": 0,
            "func": "msg.unique_user_ids = []\nif (msg.hasOwnProperty(\"devices\") && msg.devices.length >0 && msg.devices[0]._id === msg.inputs.device_id) {\n    if(msg.hasOwnProperty(\"machine_links\") && msg.machine_links.length > 0) {\n        var user_ids = msg.machine_links.map(a => a.user);\n        user_ids.forEach(function(id){\n            if(msg.unique_user_ids.indexOf(id) < 0 && (id !== null) && (id !== \"\")){\n                msg.unique_user_ids.push(id);\n            }\n        })\n        msg.cloudant = {\n            \"request\": \"/stellaris_documents/_find\",\n            \"method\": \"POST\",\n            \"return_obj\": \"docs\",\n            \"object\": \"users\",\n            \"fields\": [\"_id\",\"role\"],\n            \"selector\": {\n                \"doc_type\": \"user\",\n                \"status\": \"active\",\n                \"role\": \"Surgeon\",\n                \"_id\": {\"$in\": msg.unique_user_ids}\n            }\n        };\n        return [msg, null,null];\n    } else {\n        msg.settings_files = [];\n        msg.api.path = 2;\n        return [null, msg,null];\n    }\n}\nreturn [null,null,msg]",
            "y": 700,
            "x": 1180,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "4bdf6281.10ab5c"
        },
        {
            "wires": [
                [
                    "b691428f.d32be"
                ]
            ],
            "name": "",
            "y": 680,
            "x": 1390,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "fb6ec3dc.c771f"
        },
        {
            "wires": [],
            "name": "",
            "y": 700,
            "x": 2090,
            "z": "61ffb71b.d286f",
            "type": "subflow:bc6ff87.05a2908",
            "id": "fc11ab63.470a38"
        },
        {
            "wires": [
                [
                    "8c4d8834.9f3658"
                ],
                [
                    "fc11ab63.470a38"
                ]
            ],
            "name": "Settings_files by Device and Surgeon",
            "outputs": 2,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"users\") && msg.users.length > 0){\n    var user_ids = msg.users.map(a => a._id);\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"settings_files\",\n        \"fields\": [\"_id\",\"updating_timestamp\",\"file_name\",\"updating_system\",\"user_id\",\"objectDB_id\",\"file_id\"],\n        \"selector\": {\n            \"doc_type\": \"settings_file\",\n            \"status\": \"active\",\n            \"user_id\": {\"$in\": user_ids}\n        }\n    };\n    if(msg.req.query.hasOwnProperty(\"limit\")){msg.cloudant.limit = parseInt(msg.req.query.limit)}\n    if(msg.req.query.hasOwnProperty(\"offset\")){msg.cloudant.skip = parseInt(msg.req.query.offset)}\n    return [msg, null];\n} else {\n    msg.settings_files = [];\n    msg.api.path = 3;\n    return [null, msg];\n}",
            "y": 680,
            "x": 1650,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "b691428f.d32be"
        },
        {
            "wires": [
                [
                    "fc11ab63.470a38"
                ]
            ],
            "name": "",
            "y": 660,
            "x": 1910,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "8c4d8834.9f3658"
        },
        {
            "info": "This returns settings files in cloudant for users \nassigned to the device.",
            "wires": [],
            "name": "[DEVICES] Device Maintenance",
            "y": 660,
            "x": 150,
            "z": "61ffb71b.d286f",
            "type": "comment",
            "id": "1dc30273.a8f99e"
        },
        {
            "wires": [
                [
                    "420bf8e3.2388a8"
                ]
            ],
            "name": "",
            "y": 2300,
            "x": 530,
            "z": "61ffb71b.d286f",
            "type": "subflow:3962857e.44abba",
            "id": "4ef9d2fa.90724c"
        },
        {
            "wires": [
                [
                    "4ef9d2fa.90724c"
                ]
            ],
            "name": "",
            "url": "/devices/device/partial_deviceID/:partial_deviceID",
            "upload": false,
            "id": "51206c7c.5ce264",
            "swaggerDoc": "",
            "y": 2300,
            "x": 220,
            "z": "61ffb71b.d286f",
            "type": "http in",
            "method": "get"
        },
        {
            "info": "Returns Devices by device id matching partial input",
            "wires": [],
            "name": "[CN] Devices Partial ID",
            "y": 2260,
            "x": 120,
            "z": "61ffb71b.d286f",
            "type": "comment",
            "id": "a4df82c5.79e99"
        },
        {
            "wires": [
                [
                    "7c4b1e7a.ee495"
                ]
            ],
            "name": "",
            "y": 2300,
            "x": 930,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "3552abc6.5a3964"
        },
        {
            "wires": [
                [
                    "3552abc6.5a3964"
                ]
            ],
            "name": "Devices Partial ID",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Devices Partial ID\"\n    });\nmsg.records = {\n    \"doc_type\": \"device\",\n    \"format\": \"array\",\n    \"object\": \"devices\",\n    \"returns\": [\"devices\"]\n};\nmsg.inputs = {};\nmsg.filters = {\n    \"options\": {}\n};\nmsg.filters.values = {\n    \"doc_type\": \"device\",\n    \"status\": \"active\"\n}\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"selector\": {\n        \"$and\": [{\"doc_type\": \"device\"},\n                 {\"status\": \"active\"},\n                 {\"_id\": { \"$regex\": msg.req.params.partial_deviceID }}]\n    },\n    \"fields\": [\"_id\", \"system_type\", \"business_unit\", \"sales_area\", \"sales_region\", \"sales_territory\", \"service_area\", \"service_region\", \"service_territory\", \"customer_id\", \"facility_id\", \"facility_name\", \"facility_address\", \"sales_status\", \"status_date\", \"get_me_help_allowed\", \"placed_by\", \"birth_date\"],\n    \"sort\": [{\"_id:string\": \"asc\"}]\n}\nif(msg.req.query.hasOwnProperty(\"limit\")) { msg.cloudant.limit = parseInt(msg.req.query.limit); }\nif(msg.req.query.hasOwnProperty(\"offset\")) { msg.cloudant.skip = parseInt(msg.req.query.offset); }\nreturn msg;",
            "y": 2300,
            "x": 730,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "420bf8e3.2388a8"
        },
        {
            "wires": [],
            "name": "",
            "y": 2300,
            "x": 1110,
            "z": "61ffb71b.d286f",
            "type": "subflow:bc6ff87.05a2908",
            "id": "7c4b1e7a.ee495"
        },
        {
            "wires": [
                [
                    "4e0b9f9c.f23d6"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID/logs/machine_life",
            "upload": false,
            "id": "98bb2284.b6a32",
            "swaggerDoc": "",
            "y": 560,
            "x": 200,
            "z": "61ffb71b.d286f",
            "type": "http in",
            "method": "get"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] Device Machine Lifes",
            "y": 520,
            "x": 130,
            "z": "61ffb71b.d286f",
            "type": "comment",
            "id": "3697cff4.990eb"
        },
        {
            "wires": [
                [
                    "c31a1810.6ae3a8"
                ]
            ],
            "name": "",
            "y": 560,
            "x": 530,
            "z": "61ffb71b.d286f",
            "type": "subflow:3962857e.44abba",
            "id": "4e0b9f9c.f23d6"
        },
        {
            "wires": [
                [
                    "12834e2e.2fa082"
                ]
            ],
            "name": "Device Machine Lifes",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Device Machine Lifes\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"status\"],\n    \"doc_type\": \"machine_life\",\n    \"format\": \"array\",\n    \"object\": \"machine_lifes\",\n    \"returns\": [\"machine_lifes\"],\n};\nmsg.inputs = {};\nmsg.filters = {};\nmsg.cloudant = {\n    \"request\": \"/stellaris_logs/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"bookmark_type\": \"payload\", //\"payload\", \"parameter\"\n    \"pagination\": true,\n    \"bookmark_use\": false,\n    \"selector\": {\n        \"doc_type\": \"machine_life\",\n        \"system_sn\": msg.req.params.deviceID\n    },\n    \"fields\": [\n        \"_id\",\n        \"status\",\n        \"system_sn\",\n        \"function_accumulator\",\n        \"power_on_time_stamp\",\n        \"prev_power_off_time_stamp\"\n           ],\n    \"sort\": [{\"power_on_time_stamp:number\": \"desc\"}]\n};\nreturn msg;",
            "y": 560,
            "x": 740,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "c31a1810.6ae3a8"
        },
        {
            "wires": [
                [
                    "2858c3cb.b105ec"
                ]
            ],
            "name": "",
            "y": 560,
            "x": 1150,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "44caf25f.165efc"
        },
        {
            "wires": [],
            "name": "",
            "y": 560,
            "x": 1330,
            "z": "61ffb71b.d286f",
            "type": "subflow:bc6ff87.05a2908",
            "id": "2858c3cb.b105ec"
        },
        {
            "wires": [
                [
                    "44caf25f.165efc"
                ]
            ],
            "name": "",
            "y": 560,
            "x": 950,
            "z": "61ffb71b.d286f",
            "type": "subflow:f83a5f50.ef8e",
            "id": "12834e2e.2fa082"
        },
        {
            "wires": [
                [
                    "d97a87aa.231238"
                ]
            ],
            "name": "",
            "y": 1580,
            "x": 530,
            "z": "61ffb71b.d286f",
            "type": "subflow:3962857e.44abba",
            "id": "ba21b781.afb958"
        },
        {
            "wires": [
                [
                    "ba21b781.afb958"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID",
            "upload": false,
            "id": "dcd9142f.ab1568",
            "swaggerDoc": "",
            "y": 1580,
            "x": 140,
            "z": "61ffb71b.d286f",
            "type": "http in",
            "method": "put"
        },
        {
            "info": "Checks for device and then updates. Any fields \nother than cloudant/logic ones can be updated",
            "wires": [],
            "name": "[CN] Device Update",
            "y": 1540,
            "x": 110,
            "z": "61ffb71b.d286f",
            "type": "comment",
            "id": "9170e4a0.0fac88"
        },
        {
            "wires": [
                [
                    "fb807dbd.cbdb2"
                ]
            ],
            "name": "Device Update",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Device Update\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\",\"status\",\"password\"],\n    \"doc_type\": \"device\",\n    \"object\": \"device\",\n    \"format\": \"JSON\",\n    \"returns\": [\"device\"],\n    \"id\": msg.req.params.deviceID\n};\nmsg.inputs = {\n    \"allowed\": [\"status\", \"system_type\", \"business_unit\", \"sales_area\", \"sales_region\", \"sales_territory\", \"service_area\", \"service_region\", \"service_territory\", \"customer_id\", \"facility_id\", \"facility_name\", \"facility_address\", \"sales_status\", \"status_date\", \"get_me_help_allowed\", \"placed_by\", \"birth_date\"],\n    \"required\": [],\n    \"device_id\": msg.req.params.deviceID\n};\nreturn msg;",
            "y": 1580,
            "x": 720,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "d97a87aa.231238"
        },
        {
            "wires": [
                [
                    "5386afd6.ac515"
                ]
            ],
            "name": "",
            "y": 1580,
            "x": 1250,
            "z": "61ffb71b.d286f",
            "type": "subflow:313bd1d3.01c06e",
            "id": "927fc68d.425388"
        },
        {
            "wires": [
                [
                    "ff1da99d.8919b8"
                ]
            ],
            "name": "",
            "y": 1580,
            "x": 880,
            "z": "61ffb71b.d286f",
            "type": "subflow:71afa3f9.81defc",
            "id": "fb807dbd.cbdb2"
        },
        {
            "wires": [],
            "name": "",
            "y": 1580,
            "x": 1430,
            "z": "61ffb71b.d286f",
            "type": "subflow:bc6ff87.05a2908",
            "id": "5386afd6.ac515"
        },
        {
            "wires": [
                [
                    "28717099.edb24"
                ]
            ],
            "name": "",
            "y": 880,
            "x": 270,
            "z": "61ffb71b.d286f",
            "type": "subflow:3962857e.44abba",
            "id": "43985337.bfdbfc"
        },
        {
            "wires": [
                [
                    "43985337.bfdbfc"
                ]
            ],
            "name": "",
            "url": "/devices",
            "upload": false,
            "id": "b3443c46.9f8e1",
            "swaggerDoc": "",
            "y": 880,
            "x": 90,
            "z": "61ffb71b.d286f",
            "type": "http in",
            "method": "post"
        },
        {
            "info": "This flow checks if body has id and system_type\nincluded before continuing.\nThen it checks if the ID exists in Cloudant.\nIf it doesn't than we create a new document and \ncreates it in IoTP.\n",
            "wires": [],
            "name": "[CN] [ERPLX] Device New",
            "y": 840,
            "x": 130,
            "z": "61ffb71b.d286f",
            "type": "comment",
            "id": "a78d7f54.4aa83"
        },
        {
            "wires": [
                [
                    "6f85db50.5efd64"
                ]
            ],
            "name": "Device New",
            "outputs": 1,
            "noerr": 0,
            "func": "var genPwd = global.get(\"genpwd\");\nmsg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Device New\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"status\"],\n    \"doc_type\": \"device\", //\"user\", \"device\", \"settings_file\", ...\n    \"object\": \"device\",\n    \"format\": \"JSON\",\n    \"models\": [\"device\"],\n    \"returns\": [\"device\"],\n    \"return_code\": 201,\n    \"password\": genPwd.generate(global.get(\"PWD_GEN\"))\n};\nmsg.inputs = {\n    \"allowed\": [\"status\", \"business_unit\", \"sales_area\", \"sales_region\", \"sales_territory\", \"service_area\", \"service_region\", \"service_territory\", \"customer_id\", \"facility_id\", \"facility_name\", \"facility_address\", \"sales_status\", \"status_date\", \"get_me_help_allowed\", \"placed_by\", \"birth_date\"],\n    \"required\": [\"id\", \"system_type\"]\n};\nif(msg.payload.hasOwnProperty(\"id\")) {\n    msg.records.id = msg.payload.id;\n    msg.inputs.device_id = msg.payload.id;\n}\nreturn msg;",
            "y": 880,
            "x": 590,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "74272503.f6446c"
        },
        {
            "wires": [
                [
                    "865e8269.a0baa"
                ]
            ],
            "name": "",
            "y": 880,
            "x": 900,
            "z": "61ffb71b.d286f",
            "type": "subflow:71afa3f9.81defc",
            "id": "4e07670a.ba2538"
        },
        {
            "wires": [
                [
                    "fb3cad03.2c30a"
                ]
            ],
            "name": "",
            "y": 880,
            "x": 1060,
            "z": "61ffb71b.d286f",
            "type": "subflow:e0cd8199.1ad77",
            "id": "865e8269.a0baa"
        },
        {
            "wires": [
                [
                    "927fc68d.425388"
                ]
            ],
            "name": "",
            "y": 1580,
            "x": 1050,
            "z": "61ffb71b.d286f",
            "type": "subflow:68197f61.7975",
            "id": "ff1da99d.8919b8"
        },
        {
            "wires": [
                [
                    "880a03ea.a0a8d"
                ]
            ],
            "name": "",
            "y": 880,
            "x": 1250,
            "z": "61ffb71b.d286f",
            "type": "subflow:313bd1d3.01c06e",
            "id": "fb3cad03.2c30a"
        },
        {
            "wires": [
                [
                    "2b9f4642.62eada"
                ]
            ],
            "name": "",
            "y": 280,
            "x": 530,
            "z": "61ffb71b.d286f",
            "type": "subflow:3962857e.44abba",
            "id": "ec1fc6ba.b78038"
        },
        {
            "wires": [
                [
                    "ec1fc6ba.b78038"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID/help",
            "upload": false,
            "id": "cc93554d.279138",
            "swaggerDoc": "",
            "y": 280,
            "x": 160,
            "z": "61ffb71b.d286f",
            "type": "http in",
            "method": "get"
        },
        {
            "info": "Similar to get Device Data but only returns help \nflag",
            "wires": [],
            "name": "[DEVICE] Device Help Allowed",
            "y": 240,
            "x": 150,
            "z": "61ffb71b.d286f",
            "type": "comment",
            "id": "b33b1b34.1707d8"
        },
        {
            "wires": [
                [
                    "3968ed8d.c17272"
                ]
            ],
            "name": "Device Help Allowed",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Device Help Allowed\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"status\", \"system_type\", \"business_unit\", \"sales_area\", \"sales_region\", \"sales_territory\", \"service_area\", \"service_region\", \"service_territory\", \"facility_name\", \"facility_address\", \"sales_status\", \"status_date\", \"customer_id\", \"facility_id\", \"placed_by\", \"birth_date\",\"edhr_birth_record_id\"],\n    \"doc_type\": \"device\",\n    \"object\": \"device\",\n    \"format\": \"JSON\",\n    \"returns\": [\"device\"],\n    \"id\": msg.req.params.deviceID\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/\" + msg.req.params.deviceID,\n    \"method\": \"GET\",\n    \"return_obj\": \"\"\n};\nreturn msg;",
            "y": 280,
            "x": 740,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "2b9f4642.62eada"
        },
        {
            "wires": [
                [
                    "6300f0e4.c7701"
                ]
            ],
            "name": "",
            "y": 280,
            "x": 950,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "3968ed8d.c17272"
        },
        {
            "info": "This returns an array of documents of users \npaired to a device",
            "wires": [],
            "name": "[CN] Device Users",
            "y": 1720,
            "x": 110,
            "z": "61ffb71b.d286f",
            "type": "comment",
            "id": "1360a50b.80cecb"
        },
        {
            "wires": [
                [
                    "4f9e1739.3ceb98"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID/users",
            "upload": false,
            "id": "d40f7c31.814cb",
            "swaggerDoc": "",
            "y": 1760,
            "x": 160,
            "z": "61ffb71b.d286f",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "2657e692.db45da"
                ]
            ],
            "name": "",
            "y": 1760,
            "x": 530,
            "z": "61ffb71b.d286f",
            "type": "subflow:3962857e.44abba",
            "id": "d8827839.727638"
        },
        {
            "wires": [
                [
                    "9b7473f5.0e646"
                ]
            ],
            "name": "",
            "y": 1760,
            "x": 890,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "46328c96.587d34"
        },
        {
            "wires": [
                [
                    "80e18637.e25728"
                ]
            ],
            "name": "",
            "y": 1740,
            "x": 1270,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "e710b701.e50df8"
        },
        {
            "wires": [],
            "name": "",
            "y": 1760,
            "x": 1650,
            "z": "61ffb71b.d286f",
            "type": "subflow:bc6ff87.05a2908",
            "id": "29eb87f5.122698"
        },
        {
            "wires": [
                [
                    "46328c96.587d34"
                ]
            ],
            "name": "Device Users",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Device Users\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\",\"status\",\"password\"],\n    \"doc_type\": \"users\",\n    \"format\": \"array\",\n    \"object\": \"users\",\n    \"returns\": [\"users\"]\n};\nmsg.inputs = {\n    \"device_id\": msg.req.params.deviceID\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"doc_types\",\n    \"selector\": {\n        \"$or\": [{\"$and\": [{\"doc_type\": \"device\"},{\"status\": \"active\"},{\"_id\": msg.inputs.device_id}]},\n                {\"$and\": [{\"doc_type\": \"machine_link\"},{\"status\": \"active\"},{\"device\": msg.inputs.device_id}]}]\n    }\n};\nreturn msg;",
            "y": 1760,
            "x": 710,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "2657e692.db45da"
        },
        {
            "wires": [
                [
                    "e710b701.e50df8"
                ],
                [
                    "29eb87f5.122698"
                ],
                [
                    "d66b9503.38cc28"
                ]
            ],
            "name": "Paired User Ids",
            "outputs": 3,
            "outputLabels": [
                "yes paired",
                "no paired",
                "no device"
            ],
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"devices\") || msg.devices.length === 0) {\n    return [null,null,msg];\n}\nif (msg.hasOwnProperty(\"machine_links\") && msg.machine_links.length > 0) {\n    msg.paired_user_ids = msg.machine_links.map(a => a.user);\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"selector\": {\n            \"$and\": [{\"doc_type\": \"user\"},{\"status\": \"active\"},{\"_id\":  { \"$in\": msg.paired_user_ids }}]\n        },\n        \"sort\": [{ \"last_name:string\": \"asc\"}],\n        \"object\": \"users\"\n    };\n    if(msg.req.query.hasOwnProperty(\"limit\") || msg.req.query.hasOwnProperty(\"offset\")){\n        if(msg.req.query.hasOwnProperty(\"limit\")){msg.cloudant.limit = parseInt(msg.req.query.limit)}\n        if(msg.req.query.hasOwnProperty(\"offset\")){msg.cloudant.skip = parseInt(msg.req.query.offset)}\n    }\n    return [msg,null,null];\n}\nmsg.users = [];\nmsg.api.path = 2;\nreturn [null,msg,null];",
            "y": 1760,
            "x": 1080,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "9b7473f5.0e646"
        },
        {
            "wires": [
                [
                    "4fca716f.e6562"
                ]
            ],
            "name": "add clientId & authToken",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.device[0].mqtt_clientId = msg.device[0]._id;\nmsg.device[0].mqtt_authToken = msg.records.password;\nreturn msg;",
            "y": 880,
            "x": 1470,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "880a03ea.a0a8d"
        },
        {
            "wires": [],
            "name": "",
            "y": 880,
            "x": 1670,
            "z": "61ffb71b.d286f",
            "type": "subflow:bc6ff87.05a2908",
            "id": "4fca716f.e6562"
        },
        {
            "wires": [
                [
                    "3d70ed41.3ef232"
                ]
            ],
            "name": "Device EDHRs",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Device EDHRs\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"password\", \"doc_type\", \"status\"],\n    \"doc_type\": \"edhr\",\n    \"format\": \"array\",\n    \"object\": \"edhrs\",\n    \"fields\": [\"_id\", \"system_sn\", \"system_type\", \"timestamp\", \"geo_location\", \"modlist\", \"software_options\"],\n    \"sort\": [{\"timestamp:number\": \"desc\"}],\n    \"returns\": [\"edhrs\"]\n};\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": []\n};\nmsg.filters = {\n    \"allowed\": [],\n    \"required\": []\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_logs/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"bookmark_type\": \"payload\",\n    \"pagination\": true\n};\nmsg.filters.params = {\n    \"system_sn\": msg.req.params.deviceID,\n    \"doc_type\": \"edhr\"\n};\nreturn msg;",
            "y": 140,
            "x": 720,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "cdb0e8ba.fab598"
        },
        {
            "wires": [
                [
                    "cdb0e8ba.fab598"
                ]
            ],
            "name": "",
            "y": 140,
            "x": 530,
            "z": "61ffb71b.d286f",
            "type": "subflow:3962857e.44abba",
            "id": "ad824aa7.b8df68"
        },
        {
            "wires": [
                [
                    "da446430.465b28"
                ]
            ],
            "name": "",
            "y": 140,
            "x": 880,
            "z": "61ffb71b.d286f",
            "type": "subflow:71afa3f9.81defc",
            "id": "3d70ed41.3ef232"
        },
        {
            "wires": [
                [
                    "ad824aa7.b8df68"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID/logs/edhr",
            "upload": false,
            "id": "d076e27b.08b44",
            "swaggerDoc": "",
            "y": 140,
            "x": 170,
            "z": "61ffb71b.d286f",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "9d25c8f6.8767b8"
                ]
            ],
            "name": "",
            "y": 140,
            "x": 1050,
            "z": "61ffb71b.d286f",
            "type": "subflow:f83a5f50.ef8e",
            "id": "da446430.465b28"
        },
        {
            "wires": [
                [
                    "362a67a3.030188"
                ]
            ],
            "name": "",
            "y": 140,
            "x": 1250,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "9d25c8f6.8767b8"
        },
        {
            "wires": [],
            "name": "",
            "y": 140,
            "x": 1430,
            "z": "61ffb71b.d286f",
            "type": "subflow:bc6ff87.05a2908",
            "id": "362a67a3.030188"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] Device EDHR",
            "y": 100,
            "x": 110,
            "z": "61ffb71b.d286f",
            "type": "comment",
            "id": "fbc3af0.876ce5"
        },
        {
            "wires": [
                [
                    "973d8b53.713388"
                ]
            ],
            "name": "",
            "y": 280,
            "x": 1150,
            "z": "61ffb71b.d286f",
            "type": "subflow:313bd1d3.01c06e",
            "id": "6300f0e4.c7701"
        },
        {
            "wires": [],
            "name": "",
            "y": 280,
            "x": 1330,
            "z": "61ffb71b.d286f",
            "type": "subflow:bc6ff87.05a2908",
            "id": "973d8b53.713388"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] [ERPLX] KORE Status",
            "y": 820,
            "x": 140,
            "z": "c1ec6ee7.981a18",
            "type": "comment",
            "id": "cc806b8d.710d78"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] KORE Plan Codes",
            "y": 1000,
            "x": 120,
            "z": "c1ec6ee7.981a18",
            "type": "comment",
            "id": "20d575d6.1807ca"
        },
        {
            "wires": [
                [
                    "b5c4a534.d50fa8"
                ]
            ],
            "name": "",
            "url": "/devices/device/KORE/plan_codes",
            "upload": false,
            "id": "a5c84bb.37d00b8",
            "swaggerDoc": "",
            "y": 1040,
            "x": 180,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"Object Storage\": msg});\n}",
            "y": 140,
            "x": 1930,
            "z": "f4989ebd.9314",
            "type": "function",
            "id": "b7ab7769.c2efb8"
        },
        {
            "wires": [
                [
                    "b1b0bc4a.da5dd"
                ]
            ],
            "name": "Object Storage Message",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": msg.cos.message\n})\nreturn msg",
            "y": 60,
            "x": 1690,
            "z": "f4989ebd.9314",
            "type": "function",
            "id": "9c968e0d.e9e5e"
        },
        {
            "wires": [],
            "name": "",
            "y": 80,
            "x": 1960,
            "z": "f4989ebd.9314",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "b1b0bc4a.da5dd"
        },
        {
            "wires": [
                [
                    "b1b0bc4a.da5dd"
                ]
            ],
            "name": "Object Storage Error",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": msg.statusCode,\n    \"message\": msg.payload.Error.Message[0],\n    \"returns\": [ \"cos_error\" ]\n})\nmsg.cos_error = {\n    \"Code\": msg.payload.Error.Code[0],\n    \"Message\": msg.payload.Error.Message[0],\n    \"Resource\": msg.payload.Error.Resource[0],\n    \"RequestId\": msg.payload.Error.RequestId[0],\n    \"httpStatusCode\": msg.payload.Error.httpStatusCode[0]\n}\nnode.warn({\"COS Error\": msg.payload});\nreturn msg;",
            "y": 100,
            "x": 1700,
            "z": "f4989ebd.9314",
            "type": "function",
            "id": "f269bccf.265eb"
        },
        {
            "wires": [
                [
                    "9c968e0d.e9e5e"
                ],
                [
                    "e8efde41.fb3c3"
                ]
            ],
            "name": "Check Inputs",
            "outputs": 2,
            "outputLabels": [
                "error",
                "ok"
            ],
            "noerr": 0,
            "func": "if (!msg.cos.hasOwnProperty(\"container\") && !msg.cos.hasOwnProperty(\"filename\")) {\n    msg.cos.message = \"Object Storage with missing inputs (container, filename).\";\n    return [msg,null,null];\n} \nif (!msg.cos.hasOwnProperty(\"method\")) {\n    msg.cos.message = \"Object Storage called with missing method (GET, PUT, DELETE).\";\n    return [msg,null,null];\n}\nif (msg.cos.method === \"PUT\" && !msg.cos.hasOwnProperty(\"file\")) {\n    msg.cos.message = \"Object Storage PUT request with missing file.\";\n    return [msg,null,null];\n}\nvar COS = global.get(\"VCAP_COS\");\nif (!msg.cos.hasOwnProperty(\"server\")) { msg.cos.server = COS.url }\nif (!msg.cos.hasOwnProperty(\"id\")) { msg.cos.id = COS.credentials.resource_instance_id }\nif (!msg.cos.hasOwnProperty(\"base_path\") && COS.base_path !== \"\") { msg.cos.base_path = COS.base_path }\nif (msg.cos.hasOwnProperty(\"base_path\")) {\n    msg.cos.url = msg.cos.server + \"/\" + msg.cos.base_path + \".\" + msg.cos.container + \"/\" + msg.cos.filename;\n} else {\n    msg.cos.url = msg.cos.server + \"/\" + msg.cos.container + \"/\" + msg.cos.filename;\n}\nif(!msg.iam) { msg.iam = {}; }\nmsg.iam.type = \"cos\";\nreturn [null,msg,null];",
            "y": 160,
            "x": 250,
            "z": "f4989ebd.9314",
            "type": "function",
            "id": "25f95225.2b743e"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"IAM Token\": msg});\n}",
            "y": 80,
            "x": 890,
            "z": "a8815016.d1158",
            "type": "function",
            "id": "9f08a84b.dfa518"
        },
        {
            "wires": [
                [
                    "c626119d.cdecf"
                ],
                [
                    "a6247270.c8aee"
                ]
            ],
            "name": "IAM Inputs",
            "outputs": 2,
            "outputLabels": [
                "error",
                "ok"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"iam\") && msg.iam.hasOwnProperty(\"apikey\")){\n    msg.iam.url = \"https://iam.bluemix.net/oidc/token\";\n    msg.iam.body = \"grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=\" + msg.iam.apikey + \"&response_type=cloud_iam\"\n    msg.iam.headers = {\n        \"accept\": \"application/json\",\n        \"content-type\": \"application/x-www-form-urlencoded\"\n    };\n} else {\n    return [msg,null]\n}\nmsg.url = msg.iam.url;\n//msg.url = \"https://iam.bluemix.net/oidc/token\";\nmsg.headers = msg.iam.headers;\nmsg.payload = msg.iam.body;\n//msg.payload = \"grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=WPplASjWGKPKJeF-HCcVDk-OfgQ1wcT059f6I57zXI7X&response_type=cloud_iam\"\nreturn [null,msg]",
            "y": 100,
            "x": 190,
            "z": "a8815016.d1158",
            "type": "function",
            "id": "f57d2f7d.1ee9c"
        },
        {
            "tls": "",
            "wires": [
                [
                    "7270274.a1b58d8"
                ]
            ],
            "name": "POST",
            "url": "",
            "ret": "obj",
            "id": "a6247270.c8aee",
            "y": 120,
            "x": 350,
            "z": "a8815016.d1158",
            "type": "http request",
            "method": "POST"
        },
        {
            "wires": [
                [
                    "447a939f.1a92fc"
                ],
                [
                    "9f08a84b.dfa518"
                ]
            ],
            "name": "Auth Token",
            "outputs": 2,
            "outputLabels": [
                "error",
                "ok"
            ],
            "noerr": 0,
            "func": "if (msg.statusCode === 200) {\n    msg.iam.auth = Object.assign(msg.payload, msg.iam.auth)\n    if (msg.iam.hasOwnProperty(\"add_obj\") && msg.hasOwnProperty(msg.iam.add_obj)) { msg[msg.iam.add_obj].auth = msg.iam.auth }\n    msg.payload = {};\n    delete msg.headers;\n    delete msg.url;\n    delete msg.statusCode;\n    delete msg.reponseUrl;\n    delete msg.responseCookies;\n    return [null,msg];\n} else {\n    return [msg,null]\n}",
            "y": 120,
            "x": 510,
            "z": "a8815016.d1158",
            "type": "function",
            "id": "7270274.a1b58d8"
        },
        {
            "wires": [
                [
                    "97678e95.32f21"
                ]
            ],
            "name": "IAM Inputs Error",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"IAM subflow missing inputs\"\n})",
            "y": 20,
            "x": 720,
            "z": "a8815016.d1158",
            "type": "function",
            "id": "c626119d.cdecf"
        },
        {
            "wires": [],
            "name": "",
            "y": 40,
            "x": 920,
            "z": "a8815016.d1158",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "97678e95.32f21"
        },
        {
            "wires": [
                [
                    "97678e95.32f21"
                ]
            ],
            "name": "IAM Auth Error",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": msg.statusCode,\n    \"message\": msg.payload\n})",
            "y": 60,
            "x": 720,
            "z": "a8815016.d1158",
            "type": "function",
            "id": "447a939f.1a92fc"
        },
        {
            "wires": [
                [
                    "d11807d.309b6f8"
                ]
            ],
            "name": "COS Http Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "if (!msg.cos.headers) { msg.cos.headers = {}; }\nmsg.cos.headers.Authorization = msg.cos.authorization;\nmsg.method = msg.cos.method\nmsg.url = msg.cos.url\nmsg.headers = msg.cos.headers\nif (msg.cos.method === \"PUT\") {\n    msg.payload = msg.cos.file.buffer;\n    msg[\"content-type\"] = msg.cos.file.mimetype;\n} else {\n    msg.payload = {};\n}\nreturn msg;",
            "y": 180,
            "x": 740,
            "z": "f4989ebd.9314",
            "type": "function",
            "id": "dcfa8b29.377188"
        },
        {
            "wires": [
                [
                    "d118bfe4.87601"
                ],
                [
                    "b7ab7769.c2efb8"
                ]
            ],
            "name": "COS Http Return",
            "outputs": 2,
            "outputLabels": [
                "error",
                "ok"
            ],
            "noerr": 0,
            "func": "delete msg.headers;\ndelete msg.url;\ndelete msg.responseUrl;\nif (msg.method === \"GET\") {\n    if (msg.statusCode === 200) {\n        if (msg.cos.hasOwnProperty(\"object\")) {\n            msg[msg.cos.object] = msg.payload;\n        } else {\n            msg.cos.return = msg.payload;\n        }\n        msg.payload = {};\n        delete msg.method;\n        delete msg.statusCode;\n        return [null,msg];\n    }\n}\nif (msg.method === \"PUT\") {\n    if (msg.statusCode === 200) {\n        if (msg.cos.hasOwnProperty(\"object\")) { msg[msg.cos.object] = \"File \" + msg.cos.filename + \" was successfully added\" }\n        delete msg.method;\n        delete msg.statusCode;\n        return [null,msg];\n    }\n}\nif (msg.method === \"DELETE\") {\n    if (msg.statusCode === 204) {\n        if (msg.cos.hasOwnProperty(\"object\")) {msg[msg.cos.object] = \"File \" + msg.cos.filename + \" was successfully deleted\" }\n        delete msg.method;\n        delete msg.statusCode;\n        return [null,msg];\n    }\n}\ndelete msg.method;\nmsg.payload = msg.payload.toString(\"utf-8\");\nreturn [msg,null]",
            "y": 180,
            "x": 1090,
            "z": "f4989ebd.9314",
            "type": "function",
            "id": "43f0142a.79e35c"
        },
        {
            "z": "f4989ebd.9314",
            "attr": "",
            "chr": "",
            "wires": [
                [
                    "f269bccf.265eb"
                ]
            ],
            "y": 100,
            "x": 1490,
            "property": "payload",
            "type": "xml",
            "id": "d118bfe4.87601",
            "name": "COS Error"
        },
        {
            "wires": [
                [
                    "3c1c7788.cd9538"
                ]
            ],
            "name": "Settings File Info",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Settings File Info\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"status\"],\n    \"doc_type\": \"settings_file\",\n    \"object\": \"settings_file\",\n    \"format\": \"JSON\",\n    \"returns\": [\"settings_file\"]\n};\nmsg.inputs = {\n    \"file_id\": msg.req.params.file_id\n};\nmsg.filters = {};\nmsg.filters.params = {};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"settings_file\",\n    \"selector\": {\n        \"file_id\": msg.inputs.file_id,\n        \"doc_type\": \"settings_file\",\n        \"status\": \"active\"\n    },\n    \"sort\": [{\"updating_timestamp:number\": \"asc\"}]\n};\nreturn msg;",
            "y": 400,
            "x": 630,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "61f7839a.67e86c"
        },
        {
            "wires": [
                [
                    "3c9946e9.11561a"
                ]
            ],
            "name": "",
            "y": 400,
            "x": 830,
            "z": "fc9978cc.27301",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "3c1c7788.cd9538"
        },
        {
            "wires": [],
            "name": "",
            "y": 380,
            "x": 1350,
            "z": "fc9978cc.27301",
            "type": "subflow:bc6ff87.05a2908",
            "id": "28e890af.5d066"
        },
        {
            "wires": [
                [
                    "83d350cf.1e6e"
                ],
                [
                    "36c0c3d1.557abc"
                ]
            ],
            "name": "File Exist",
            "outputs": 2,
            "outputLabels": [
                "yes",
                "no"
            ],
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"settings_file\") || msg.settings_file.length === 0 || msg.settings_file[0].doc_type !== \"settings_file\") {\n    return [null,msg]\n}\nreturn [msg,null];",
            "y": 400,
            "x": 1000,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "3c9946e9.11561a"
        },
        {
            "wires": [],
            "name": "",
            "y": 420,
            "x": 1340,
            "z": "fc9978cc.27301",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "d6ed1de9.c2986"
        },
        {
            "wires": [
                [
                    "d6ed1de9.c2986"
                ]
            ],
            "name": "File Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Active File \" + msg.inputs.file_id + \" doesn't exist\",\n})\nreturn msg;",
            "y": 420,
            "x": 1160,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "36c0c3d1.557abc"
        },
        {
            "wires": [
                [
                    "3cb8037b.a2fd9c"
                ]
            ],
            "name": "Settings File Download",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Settings File Download\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"status\"],\n    \"doc_type\": \"settings_file\",\n    \"format\": \"JSON\",\n    \"returns\": [\"file\"]\n};\nmsg.inputs = {\n    \"file_id\": msg.req.params.file_id\n};\nmsg.filters = {};\nmsg.filters.params = {};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"settings_file\",\n    \"selector\": {\n        \"file_id\": msg.inputs.file_id,\n        \"doc_type\": \"settings_file\",\n        \"status\": \"active\"\n    },\n    \"sort\": [{\"updating_timestamp:number\": \"asc\"}]\n};\nreturn msg;",
            "y": 560,
            "x": 640,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "c7e9071b.9ddcc8"
        },
        {
            "wires": [
                [
                    "be057315.791e7"
                ]
            ],
            "name": "",
            "y": 560,
            "x": 850,
            "z": "fc9978cc.27301",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "3cb8037b.a2fd9c"
        },
        {
            "wires": [
                [
                    "10841c1e.c6fe34"
                ],
                [
                    "8af95a39.cc1db8"
                ]
            ],
            "name": "File Exist",
            "outputs": 2,
            "outputLabels": [
                "yes",
                "no"
            ],
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"settings_file\") || msg.settings_file.length === 0 || msg.settings_file[0].doc_type !== \"settings_file\" || msg.settings_file[0].objectDB_id === \"\") {\n    return [null,msg]\n}\nmsg.cos = {\n    \"method\": \"GET\",\n    \"object\": \"file\",\n    \"filename\": msg.settings_file[0].objectDB_id,\n    \"container\": \"stellaris-settings\"\n}\nreturn [msg,null];",
            "y": 560,
            "x": 1020,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "be057315.791e7"
        },
        {
            "wires": [],
            "name": "",
            "y": 580,
            "x": 1360,
            "z": "fc9978cc.27301",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "ab36f240.b3a58"
        },
        {
            "wires": [
                [
                    "ab36f240.b3a58"
                ]
            ],
            "name": "File Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Active File \" + msg.inputs.file_id + \" doesn't exist\",\n})\nreturn msg;",
            "y": 580,
            "x": 1180,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "8af95a39.cc1db8"
        },
        {
            "wires": [
                [
                    "737c91e3.9dee4"
                ]
            ],
            "name": "",
            "y": 540,
            "x": 1190,
            "z": "fc9978cc.27301",
            "type": "subflow:f4989ebd.9314",
            "id": "10841c1e.c6fe34"
        },
        {
            "wires": [],
            "name": "",
            "y": 540,
            "x": 1770,
            "z": "fc9978cc.27301",
            "type": "subflow:bc6ff87.05a2908",
            "id": "ccd38f05.bc594"
        },
        {
            "wires": [
                [
                    "c101df63.e161e"
                ]
            ],
            "name": "Attachment Header",
            "outputs": 1,
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"headers\")) { msg.headers = {} }\nmsg.headers[\"content-disposition\"] = \"attachment; filename=\" + msg.settings_file[0].file_name;\nreturn msg;",
            "y": 540,
            "x": 1390,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "737c91e3.9dee4"
        },
        {
            "wires": [
                [
                    "a667240c.3a1778"
                ]
            ],
            "name": "Settings File Delete",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Settings File Delete\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"status\"],\n    \"doc_type\": \"settings_file\",\n    \"object\": \"settings_file\",\n    \"format\": \"JSON\",\n    \"returns\": [\"message\", \"settings_file\"]\n};\nmsg.inputs = {\n    \"file_id\": msg.req.params.file_id\n};\nmsg.message = \"File_id: \" + msg.inputs.file_id + \" Successfully deleted.\";\nmsg.filters = {};\nmsg.filters.params = {};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"settings_file\",\n    \"selector\": {\n        \"file_id\": msg.inputs.file_id,\n        \"doc_type\": \"settings_file\",\n        \"status\": \"active\"\n    },\n    \"sort\": [{\"updating_timestamp:number\": \"asc\"}]\n};\nreturn msg;",
            "y": 480,
            "x": 630,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "422dc920.572258"
        },
        {
            "wires": [
                [
                    "6d612f56.2d4d4"
                ]
            ],
            "name": "",
            "y": 480,
            "x": 830,
            "z": "fc9978cc.27301",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "a667240c.3a1778"
        },
        {
            "wires": [
                [
                    "179c7b87.b6c5e4"
                ],
                [
                    "9706f9f0.7e6418"
                ]
            ],
            "name": "File Exist",
            "outputs": 2,
            "outputLabels": [
                "yes",
                "no"
            ],
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"settings_file\") || msg.settings_file.length === 0 || msg.settings_file[0].doc_type !== \"settings_file\") {\n    return [null,msg]\n}\nmsg.records.id = msg.settings_file[0]._id;\nmsg.inputs.body = {\"status\": \"inactive\"};\nreturn [msg,null];",
            "y": 480,
            "x": 1000,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "6d612f56.2d4d4"
        },
        {
            "wires": [],
            "name": "",
            "y": 500,
            "x": 1340,
            "z": "fc9978cc.27301",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "376d1ca.b84ece4"
        },
        {
            "wires": [
                [
                    "376d1ca.b84ece4"
                ]
            ],
            "name": "File Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Active File \" + msg.inputs.file_id + \" doesn't exist\",\n})\nreturn msg;",
            "y": 500,
            "x": 1160,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "9706f9f0.7e6418"
        },
        {
            "wires": [],
            "name": "",
            "y": 460,
            "x": 1550,
            "z": "fc9978cc.27301",
            "type": "subflow:bc6ff87.05a2908",
            "id": "3cb69122.9642de"
        },
        {
            "wires": [
                [
                    "8474bcea.06e8e"
                ]
            ],
            "name": "",
            "y": 460,
            "x": 1170,
            "z": "fc9978cc.27301",
            "type": "subflow:68197f61.7975",
            "id": "179c7b87.b6c5e4"
        },
        {
            "wires": [
                [
                    "86fcedb.068ad1"
                ]
            ],
            "name": "settings_file",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.records.settings_file = {\n    \"doc_type\": \"settings_file\",\n    \"status\": \"active\",\n    \"file_id\": \"\",\n    \"updating_system\": \"\", \n    \"file_name\": \"\",\n    \"user_id\": \"\",\n    \"updating_timestamp\": 0,\n    \"objectDB_id\": \"\"\n}\nreturn msg;",
            "y": 500,
            "x": 690,
            "z": "df6d98dd.00d378",
            "type": "function",
            "id": "60e8682c.16a928"
        },
        {
            "wires": [
                [
                    "2dbaa227.50f91e"
                ]
            ],
            "name": "Settings File New",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Settings File New\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"status\"],\n    \"doc_type\": \"settings_file\",\n    \"object\": \"settings_file\",\n    \"format\": \"JSON\",\n    \"returns\": [\"message\",\"settings_file\"],\n    \"models\": [\"settings_file\"]\n};\nmsg.inputs = {\n    \"file_id\": msg.req.params.file_id,\n    \"objectDB_id\": msg.req.params.file_id + \"_\" + msg.payload.updating_timestamp,\n    \"required\": [\"file_name\", \"updating_system\", \"updating_timestamp\", \"user_id\"],\n    \"allowed\": [],\n    \"attach_num\": 1\n};\nmsg.cos = {\n    \"method\": \"PUT\",\n    \"container\": \"stellaris-settings\",\n    \"filename\": msg.inputs.objectDB_id,\n    \"object\": \"message\"\n}\nif (msg.req.hasOwnProperty(\"files\")) {\n    msg.cos.file = msg.req.files[0]\n} else if (msg.req.body.hasOwnProperty(\"file\")) {\n    var cryptojs = global.get('cryptojs');\n    msg.cos.file_string = cryptojs.enc.Utf8.stringify(cryptojs.enc.Base64.parse(msg.req.body.file));\n    msg.cos.file = {\n        \"buffer\": Buffer.from(msg.cos.file_string, 'utf8'),\n        \"mimetype\": \"text/plain\"\n    }\n    delete msg.payload.file;\n}\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"settings_file\",\n    \"selector\": {\n        \"file_id\": msg.inputs.file_id,\n        \"doc_type\": \"settings_file\",\n        \"status\": \"active\"\n    },\n    \"sort\": [{\"updating_timestamp:number\": \"asc\"}]\n};\nreturn msg;",
            "y": 140,
            "x": 630,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "11388bff.03f9d4"
        },
        {
            "wires": [
                [
                    "9fee4799.288e88"
                ]
            ],
            "name": "",
            "y": 140,
            "x": 960,
            "z": "fc9978cc.27301",
            "type": "subflow:71afa3f9.81defc",
            "id": "c6fde4a7.09f7c8"
        },
        {
            "wires": [
                [
                    "1cce4f59.4185d1"
                ],
                [
                    "fb30b5a0.4a80e8"
                ]
            ],
            "name": "Check Attachments",
            "outputs": 2,
            "noerr": 0,
            "func": "var errors = [];\nif(msg.hasOwnProperty(\"inputs\") && msg.inputs.hasOwnProperty(\"attach_num\") && msg.inputs.attach_num > 0) {\n    // Check if there is an attachment or a file field in the body\n    if (msg.req.headers.hasOwnProperty(\"content-type\") && msg.req.headers[\"content-type\"].includes(\"multipart/form-data\")) {\n        if (msg.req.hasOwnProperty(\"files\") && msg.req.files.length === msg.inputs.attach_num) { return [msg,null] } else { return [null,msg] }\n    } else if (msg.req.headers.hasOwnProperty(\"content-type\") && msg.req.headers[\"content-type\"].includes(\"application/json\")) {\n        if ((msg.req.hasOwnProperty(\"body\") && msg.req.body.hasOwnProperty(\"file\") && msg.req.body.file !== \"\") || (msg.cos && msg.cos.file && msg.cos.file.buffer && msg.cos.file.buffer.length > 0)) { return [msg,null] } else { return [null,msg] }\n    } else {\n        return [null,msg]\n    }\n}\nreturn [msg,null]",
            "y": 120,
            "x": 1430,
            "z": "71afa3f9.81defc",
            "type": "function",
            "id": "acdaf127.7ffc5"
        },
        {
            "wires": [
                [
                    "44304eec.b88b6"
                ]
            ],
            "name": "Missing Required Attachment",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 412,\n    \"message\": \"Missing required file attachment.\"\n});\nreturn msg;",
            "y": 160,
            "x": 1680,
            "z": "71afa3f9.81defc",
            "type": "function",
            "id": "fb30b5a0.4a80e8"
        },
        {
            "wires": [
                [
                    "2e212846.440a88"
                ]
            ],
            "name": "",
            "y": 80,
            "x": 2380,
            "z": "fc9978cc.27301",
            "type": "subflow:e0cd8199.1ad77",
            "id": "102b38b7.d949c7"
        },
        {
            "wires": [
                [
                    "102b38b7.d949c7"
                ]
            ],
            "name": "",
            "y": 80,
            "x": 2190,
            "z": "fc9978cc.27301",
            "type": "subflow:f4989ebd.9314",
            "id": "4d8f7ca9.bd4c54"
        },
        {
            "wires": [
                [
                    "873725d1.a72bf8"
                ]
            ],
            "name": "",
            "y": 80,
            "x": 2570,
            "z": "fc9978cc.27301",
            "type": "subflow:313bd1d3.01c06e",
            "id": "2e212846.440a88"
        },
        {
            "wires": [],
            "name": "",
            "y": 80,
            "x": 2750,
            "z": "fc9978cc.27301",
            "type": "subflow:bc6ff87.05a2908",
            "id": "873725d1.a72bf8"
        },
        {
            "wires": [
                [
                    "8dce59a6.9f9ee8"
                ]
            ],
            "name": "",
            "y": 140,
            "x": 1130,
            "z": "fc9978cc.27301",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "9fee4799.288e88"
        },
        {
            "wires": [
                [
                    "a1432bf7.1f2948"
                ],
                [
                    "15a3f33e.b9c3ad"
                ]
            ],
            "name": "File Exist",
            "outputs": 2,
            "outputLabels": [
                "no",
                "yes"
            ],
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"settings_file\") || msg.settings_file.length === 0 || msg.settings_file[0].doc_type !== \"settings_file\") {\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"user\",\n        \"selector\": {\n            \"_id\": msg.inputs.body.user_id,\n            \"doc_type\": \"user\",\n            \"status\": \"active\"\n        }\n    };\n    return [msg,null];\n}\nreturn [null,msg];",
            "y": 140,
            "x": 1300,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "8dce59a6.9f9ee8"
        },
        {
            "wires": [
                [
                    "fcc9a595.312b78"
                ]
            ],
            "name": "",
            "url": "/files/file/settings/update/:file_id",
            "upload": true,
            "id": "87528dda.92cfb",
            "swaggerDoc": "",
            "y": 320,
            "x": 170,
            "z": "fc9978cc.27301",
            "type": "http in",
            "method": "post"
        },
        {
            "info": "",
            "wires": [],
            "name": "[DEVICES] Settings File Update",
            "y": 280,
            "x": 150,
            "z": "fc9978cc.27301",
            "type": "comment",
            "id": "f9e75698.eeee38"
        },
        {
            "wires": [
                [
                    "2bf2afcb.87bdf"
                ]
            ],
            "name": "",
            "y": 320,
            "x": 430,
            "z": "fc9978cc.27301",
            "type": "subflow:3962857e.44abba",
            "id": "fcc9a595.312b78"
        },
        {
            "wires": [],
            "name": "",
            "y": 160,
            "x": 2380,
            "z": "fc9978cc.27301",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "a061b3d1.5281a"
        },
        {
            "wires": [
                [
                    "57d0e6f5.67b918"
                ]
            ],
            "name": "File Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Active File \" + msg.inputs.file_id + \" already exists\",\n})\nreturn msg;",
            "y": 160,
            "x": 1450,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "15a3f33e.b9c3ad"
        },
        {
            "wires": [
                [
                    "c458e074.fbee"
                ]
            ],
            "name": "",
            "y": 120,
            "x": 1470,
            "z": "fc9978cc.27301",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "a1432bf7.1f2948"
        },
        {
            "wires": [
                [
                    "5c27e9aa.3e1648"
                ],
                [
                    "2ba1b03b.10276"
                ]
            ],
            "name": "User Exist",
            "outputs": 2,
            "outputLabels": [
                "yes",
                "no"
            ],
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"user\") || msg.user.length === 0 || msg.user[0].doc_type !== \"user\") {\n    return [null,msg]\n}\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"filename_list\",\n    \"selector\": {\n        \"user_id\": msg.inputs.body.user_id,\n        \"doc_type\": \"settings_file\",\n        \"status\": \"active\",\n        \"file_name\": msg.inputs.body.file_name\n    }\n};\nreturn [msg,null];",
            "y": 120,
            "x": 1640,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "c458e074.fbee"
        },
        {
            "wires": [
                [
                    "4d8f7ca9.bd4c54"
                ],
                [
                    "93187c7c.ddda1"
                ]
            ],
            "name": "File_name Exist",
            "outputs": 2,
            "outputLabels": [
                "no",
                "yes"
            ],
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"filename_list\") || msg.filename_list.length === 0 || msg.filename_list[0].doc_type !== \"settings_file\") {\n    msg.inputs.body.file_id = msg.inputs.file_id;\n    msg.inputs.body.objectDB_id = msg.inputs.objectDB_id;\n    return [msg,null]\n}\nreturn [null,msg];",
            "y": 100,
            "x": 2000,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "e71429fc.aebf28"
        },
        {
            "wires": [
                [
                    "e71429fc.aebf28"
                ]
            ],
            "name": "",
            "y": 100,
            "x": 1810,
            "z": "fc9978cc.27301",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "5c27e9aa.3e1648"
        },
        {
            "wires": [
                [
                    "a061b3d1.5281a"
                ]
            ],
            "name": "User Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"User with id \" + msg.inputs.body.user_id + \" was not found.\",\n})\nreturn msg;",
            "y": 140,
            "x": 1800,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "2ba1b03b.10276"
        },
        {
            "wires": [
                [
                    "a061b3d1.5281a"
                ]
            ],
            "name": "File_name Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"File_name \" + msg.inputs.body.file_name + \" already exists for this user with id \" + msg.inputs.body.user_id + \".\",\n})\nreturn msg;",
            "y": 120,
            "x": 2190,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "93187c7c.ddda1"
        },
        {
            "wires": [
                [
                    "4d823372.5cde6c"
                ]
            ],
            "name": "Settings File Update",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Settings File Update\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"status\"],\n    \"doc_type\": \"settings_file\",\n    \"object\": \"settings_file\",\n    \"format\": \"JSON\",\n    \"returns\": [\"message\",\"settings_file\"],\n    \"models\": [\"settings_file\"]\n};\nmsg.inputs = {\n    \"file_id\": msg.req.params.file_id,\n    \"objectDB_id\": msg.req.params.file_id + \"_\" + msg.payload.updating_timestamp,\n    \"required\": [\"file_name\", \"updating_system\", \"updating_timestamp\"], //user_id is not allowed. Can't be changed\n    \"allowed\": [],\n    \"attach_num\": 1\n};\nmsg.message = \"File_id: \" + msg.inputs.file_id + \" has been successfully updated.\";\nmsg.cos = {\n    \"method\": \"PUT\",\n    \"container\": \"stellaris-settings\",\n    \"filename\": msg.inputs.objectDB_id\n}\nif (msg.req.hasOwnProperty(\"files\")) {\n    msg.cos.file = msg.req.files[0]\n} else if (msg.req.body.hasOwnProperty(\"file\")) {\n    var cryptojs = global.get('cryptojs');\n    msg.cos.file = cryptojs.enc.Utf8.stringify(cryptojs.enc.Base64.parse(msg.req.body.file));\n    delete msg.payload.file;\n}\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"settings_file\",\n    \"selector\": {\n        \"file_id\": msg.inputs.file_id,\n        \"doc_type\": \"settings_file\",\n        \"status\": \"active\"\n    },\n    \"sort\": [{\"updating_timestamp:number\": \"asc\"}]\n};\nreturn msg;",
            "y": 320,
            "x": 640,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "2bf2afcb.87bdf"
        },
        {
            "wires": [
                [
                    "b8c198d3.924768"
                ]
            ],
            "name": "",
            "y": 320,
            "x": 980,
            "z": "fc9978cc.27301",
            "type": "subflow:71afa3f9.81defc",
            "id": "8df95eb8.f7ae3"
        },
        {
            "wires": [
                [
                    "adaaa8f8.136fd8"
                ]
            ],
            "name": "",
            "y": 320,
            "x": 1150,
            "z": "fc9978cc.27301",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "b8c198d3.924768"
        },
        {
            "wires": [
                [
                    "c1f5d569.f103a8"
                ],
                [
                    "820cb737.c3d288"
                ]
            ],
            "name": "File Exist",
            "outputs": 2,
            "outputLabels": [
                "yes",
                "no"
            ],
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"settings_file\") || msg.settings_file.length === 0 || msg.settings_file[0].doc_type !== \"settings_file\") {\n    return [null,msg]\n}\nreturn [msg,null];",
            "y": 320,
            "x": 1320,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "adaaa8f8.136fd8"
        },
        {
            "wires": [],
            "name": "",
            "y": 320,
            "x": 2240,
            "z": "fc9978cc.27301",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "74596a0f.233c14"
        },
        {
            "wires": [
                [
                    "74596a0f.233c14"
                ]
            ],
            "name": "File Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Active File \" + msg.inputs.file_id + \" doesn't exist\",\n})\nreturn msg;",
            "y": 340,
            "x": 1480,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "820cb737.c3d288"
        },
        {
            "wires": [
                [
                    "2a8e726d.2d300e"
                ]
            ],
            "name": "",
            "y": 260,
            "x": 2450,
            "z": "fc9978cc.27301",
            "type": "subflow:313bd1d3.01c06e",
            "id": "c1bfea7b.7d61a8"
        },
        {
            "wires": [],
            "name": "",
            "y": 260,
            "x": 2630,
            "z": "fc9978cc.27301",
            "type": "subflow:bc6ff87.05a2908",
            "id": "2a8e726d.2d300e"
        },
        {
            "wires": [
                []
            ],
            "name": "",
            "y": 220,
            "x": 2610,
            "z": "fc9978cc.27301",
            "type": "subflow:68197f61.7975",
            "id": "25739575.0f457a"
        },
        {
            "wires": [
                [
                    "ec6e1945.8e0a38"
                ]
            ],
            "name": "",
            "y": 260,
            "x": 2070,
            "z": "fc9978cc.27301",
            "type": "subflow:f4989ebd.9314",
            "id": "89dcb35f.a0052"
        },
        {
            "wires": [
                [
                    "c1bfea7b.7d61a8",
                    "db5a3b27.f7e7e8"
                ]
            ],
            "name": "",
            "y": 260,
            "x": 2260,
            "z": "fc9978cc.27301",
            "type": "subflow:e0cd8199.1ad77",
            "id": "ec6e1945.8e0a38"
        },
        {
            "wires": [
                [
                    "25739575.0f457a"
                ]
            ],
            "name": "Set Inactive",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.records.id = msg.records.old_file_id;\nmsg.inputs.body = {\"status\": \"inactive\"}\ndelete msg.settings_file;\nreturn msg;",
            "y": 220,
            "x": 2430,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "db5a3b27.f7e7e8"
        },
        {
            "wires": [
                [
                    "1a72069e.a97329"
                ]
            ],
            "name": "",
            "y": 280,
            "x": 1670,
            "z": "fc9978cc.27301",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "77e10d4a.554344"
        },
        {
            "wires": [
                [
                    "89dcb35f.a0052"
                ],
                [
                    "d8ede6c6.8d9298"
                ]
            ],
            "name": "File_name Exist",
            "outputs": 2,
            "outputLabels": [
                "no",
                "yes"
            ],
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"filename_list\") || msg.filename_list.length === 0 || msg.filename_list[0].doc_type !== \"settings_file\") {\n    return [msg,null]\n}\nreturn [null,msg];",
            "y": 280,
            "x": 1860,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "1a72069e.a97329"
        },
        {
            "wires": [
                [
                    "74596a0f.233c14"
                ]
            ],
            "name": "File_name Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"File_name \" + msg.inputs.body.file_name + \" already exists for this user wth id \" + msg.inputs.body.user_id + \".\",\n})\nreturn msg;",
            "y": 300,
            "x": 2050,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "d8ede6c6.8d9298"
        },
        {
            "wires": [
                [
                    "77e10d4a.554344"
                ],
                [
                    "b67d4e6.df716b"
                ]
            ],
            "name": "User Match",
            "outputs": 2,
            "outputLabels": [
                "yes",
                "no"
            ],
            "noerr": 0,
            "func": "msg.inputs.file_user = msg.inputs.body.file_name.split('_').pop();\nif (msg.settings_file[0].user_id !== msg.inputs.file_user) {\n    return [null,msg]\n}\nmsg.inputs.body.user_id = msg.settings_file[0].user_id;\nmsg.inputs.body.file_id = msg.settings_file[0].file_id;\nmsg.inputs.body.objectDB_id = msg.inputs.objectDB_id;\nmsg.records.old_file_id = msg.settings_file[0]._id;\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"filename_list\",\n    \"selector\": {\n        \"user_id\": msg.inputs.body.user_id ,\n        \"doc_type\": \"settings_file\",\n        \"status\": \"active\",\n        \"file_name\": msg.inputs.body.file_name,\n        \"_id\": {\"$ne\": msg.records.old_file_id}\n    }\n};\nreturn [msg,null];",
            "y": 300,
            "x": 1470,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "c1f5d569.f103a8"
        },
        {
            "wires": [
                [
                    "74596a0f.233c14"
                ]
            ],
            "name": "User Do Not Match",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"User id \" + msg.settings_file[0].user_id + \" does not match the record or the file_name \" + msg.inputs.body.file_name + \".\",\n})\nreturn msg;",
            "y": 320,
            "x": 1670,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "b67d4e6.df716b"
        },
        {
            "wires": [
                [
                    "6f3005b7.1b698c"
                ]
            ],
            "name": "",
            "url": "/devices/device/KORE/activate_to_state",
            "upload": false,
            "id": "c437bfe6.4eb7b",
            "swaggerDoc": "",
            "y": 160,
            "x": 190,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "cc6048c0.ed4cf8"
                ]
            ],
            "name": "",
            "url": "/devices/device/KORE/reactivate",
            "upload": false,
            "id": "f64cf819.f54698",
            "swaggerDoc": "",
            "y": 340,
            "x": 170,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "ad4d16d7.a27ac8"
                ]
            ],
            "name": "",
            "url": "/devices/device/KORE/modify_device_custom_info",
            "upload": false,
            "id": "62d9b8dd.115968",
            "swaggerDoc": "",
            "y": 520,
            "x": 230,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "dc53ae32.cc78b"
                ]
            ],
            "name": "",
            "url": "/devices/device/KORE/device_status",
            "upload": false,
            "id": "71d39268.77f7ec",
            "swaggerDoc": "",
            "y": 860,
            "x": 180,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "3ff0e8c.7279e18"
                ]
            ],
            "name": "",
            "url": "/devices/device/KORE/modify_plan_codes",
            "upload": false,
            "id": "a0735513.b59128",
            "swaggerDoc": "",
            "y": 1180,
            "x": 200,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "dbee4981.7c9998"
                ]
            ],
            "name": "",
            "url": "/pairing/unpair/device_user",
            "upload": false,
            "id": "39b570e5.7807d",
            "swaggerDoc": "",
            "y": 360,
            "x": 150,
            "z": "c012d9b9.f1e028",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "d88d0d95.c768a"
                ]
            ],
            "name": "",
            "y": 360,
            "x": 410,
            "z": "c012d9b9.f1e028",
            "type": "subflow:3962857e.44abba",
            "id": "dbee4981.7c9998"
        },
        {
            "wires": [
                [
                    "7188c7c5.f89e28"
                ]
            ],
            "name": "Unpair Device and User",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Unpair Device and User\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"status\"],\n    \"doc_type\": \"machine_link\",\n    \"object\": \"machine_link\",\n    \"format\": \"JSON\",\n    \"returns\": [\"machine_link\"],\n};\nmsg.inputs = {\n    \"required\": [\"device_id\", \"user_id\"],\n    \"device_id\": msg.payload.device_id,\n    \"user_id\": msg.payload.user_id\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"machine_link\",\n    \"selector\": {\n        \"doc_type\": \"machine_link\",\n        \"device\": msg.inputs.device_id,\n        \"user\": msg.inputs.user_id\n    }\n};\nreturn msg;",
            "y": 360,
            "x": 630,
            "z": "c012d9b9.f1e028",
            "type": "function",
            "id": "d88d0d95.c768a"
        },
        {
            "wires": [
                [
                    "2dda1550.4ac74a"
                ]
            ],
            "name": "",
            "y": 360,
            "x": 980,
            "z": "c012d9b9.f1e028",
            "type": "subflow:71afa3f9.81defc",
            "id": "fca2ce1e.60d5c"
        },
        {
            "wires": [
                [
                    "4a567afe.2bfee4"
                ]
            ],
            "name": "",
            "y": 360,
            "x": 1150,
            "z": "c012d9b9.f1e028",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "2dda1550.4ac74a"
        },
        {
            "wires": [
                [
                    "4755c42e.196ccc"
                ],
                [
                    "b4dbd532.031d08"
                ],
                [
                    "8e78e591.f1a9e8"
                ]
            ],
            "name": "Link Exists",
            "outputs": 3,
            "outputLabels": [
                "yes",
                "no",
                ""
            ],
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"machine_link\") || msg.machine_link.length === 0){\n    return [null,msg,null]\n}\nif(msg.hasOwnProperty(\"machine_link\") && msg.machine_link[0].status === \"inactive\"){\n    return [null,null,msg]\n}\nmsg.inputs.machine_link = msg.machine_link[0]._id;\nmsg.records.id = msg.machine_link[0]._id;\ndelete msg.machine_link;\nmsg.inputs.body = { \"status\": \"inactive\" };\nreturn [msg,null,null];",
            "y": 360,
            "x": 1330,
            "z": "c012d9b9.f1e028",
            "type": "function",
            "id": "4a567afe.2bfee4"
        },
        {
            "wires": [
                [
                    "29b16398.3bde7c"
                ]
            ],
            "name": "Link Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Active Link between Device: \" + msg.inputs.device_id + \" and User: \" + msg.inputs.user_id + \" was not found.\",\n})\nreturn msg;",
            "y": 380,
            "x": 1500,
            "z": "c012d9b9.f1e028",
            "type": "function",
            "id": "b4dbd532.031d08"
        },
        {
            "wires": [],
            "name": "",
            "y": 380,
            "x": 1900,
            "z": "c012d9b9.f1e028",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "bcabe882.080058"
        },
        {
            "wires": [
                [
                    "4d87f9a0.988378"
                ]
            ],
            "name": "",
            "y": 340,
            "x": 1770,
            "z": "c012d9b9.f1e028",
            "type": "subflow:313bd1d3.01c06e",
            "id": "1e092205.03841e"
        },
        {
            "wires": [],
            "name": "",
            "y": 340,
            "x": 1950,
            "z": "c012d9b9.f1e028",
            "type": "subflow:bc6ff87.05a2908",
            "id": "4d87f9a0.988378"
        },
        {
            "wires": [
                [
                    "a83e2e96.a3ec7"
                ]
            ],
            "name": "Pair Device and User",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Pair Device and User\",\n        \"paths\": 3\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\",\"status\"],\n    \"doc_type\": \"machine_link\",\n    \"object\": \"machine_link\",\n    \"format\": \"JSON\",\n    \"returns\": [\"machine_link\"],\n    \"models\": [\"machine_link\"]\n};\nmsg.inputs = {\n    \"required\": [\"device_id\"],\n    \"device_id\": msg.payload.device_id\n};\nif (msg.payload.hasOwnProperty(\"email\")) {\n    msg.inputs.required.push(\"email\");\n    msg.inputs.email = msg.payload.email.toLowerCase();\n    var user_filter = {\"email\": msg.inputs.email};\n} else {\n    msg.inputs.required.push(\"user_id\");\n    msg.inputs.user_id = msg.payload.user_id;\n    var user_filter = {\"_id\": msg.inputs.user_id};\n}\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"doc_type\",\n    \"selector\": {\n        \"$or\": [ { \"$and\": [ {\"doc_type\": \"user\"},{\"status\": \"active\"},user_filter ] },\n                 { \"$and\": [ {\"doc_type\": \"device\"},{\"status\": \"active\"},{\"_id\": msg.inputs.device_id} ] }\n               ]\n    }\n}\nreturn msg;",
            "y": 160,
            "x": 760,
            "z": "c012d9b9.f1e028",
            "type": "function",
            "id": "571417f.b82ade8"
        },
        {
            "wires": [
                [
                    "d8af0157.14296"
                ]
            ],
            "name": "",
            "y": 160,
            "x": 1100,
            "z": "c012d9b9.f1e028",
            "type": "subflow:71afa3f9.81defc",
            "id": "2d2eb37c.8ee20c"
        },
        {
            "wires": [
                [
                    "3edae6c0.5d3eda"
                ]
            ],
            "name": "",
            "y": 160,
            "x": 1270,
            "z": "c012d9b9.f1e028",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "d8af0157.14296"
        },
        {
            "wires": [
                [
                    "263ba63e.c9fe1a"
                ],
                [
                    "c8aa9dc8.12735"
                ],
                [
                    "706fb4bb.6b0c0c"
                ]
            ],
            "name": "Link Exists",
            "outputs": 3,
            "outputLabels": [
                "no",
                "yes active",
                "yes inactive"
            ],
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"machine_link\") || msg.machine_link.length === 0){\n    msg.inputs.body = {\n        \"device\": msg.inputs.device_id,\n        \"user\": msg.inputs.user_id\n    }\n    msg.records.id = \"\";\n    return [msg,null,null];\n}\nif (msg.machine_link[0].status === \"inactive\") {\n    msg.inputs.machine_link = msg.machine_link[0]._id;\n    msg.records.id = msg.machine_link[0]._id;\n    delete msg.machine_link;\n    msg.inputs.body = { \"status\": \"active\" }\n    node.warn({\"Update Link\": msg})\n    msg.api.path = 3\n    return [null,null,msg];\n} else {\n    msg.api.path = 2\n    return [null,msg,null];\n}",
            "y": 120,
            "x": 1870,
            "z": "c012d9b9.f1e028",
            "type": "function",
            "id": "1ab3d2d9.dd1e8d"
        },
        {
            "wires": [],
            "name": "",
            "y": 180,
            "x": 1880,
            "z": "c012d9b9.f1e028",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "e9fa2dce.721d5"
        },
        {
            "wires": [
                [
                    "e32b93e.7aadc7"
                ]
            ],
            "name": "",
            "y": 120,
            "x": 2270,
            "z": "c012d9b9.f1e028",
            "type": "subflow:313bd1d3.01c06e",
            "id": "c8aa9dc8.12735"
        },
        {
            "wires": [],
            "name": "",
            "y": 120,
            "x": 2470,
            "z": "c012d9b9.f1e028",
            "type": "subflow:bc6ff87.05a2908",
            "id": "e32b93e.7aadc7"
        },
        {
            "wires": [
                [
                    "1e092205.03841e"
                ]
            ],
            "name": "",
            "y": 340,
            "x": 1510,
            "z": "c012d9b9.f1e028",
            "type": "subflow:68197f61.7975",
            "id": "4755c42e.196ccc"
        },
        {
            "wires": [
                [
                    "c8aa9dc8.12735"
                ]
            ],
            "name": "",
            "y": 100,
            "x": 2040,
            "z": "c012d9b9.f1e028",
            "type": "subflow:e0cd8199.1ad77",
            "id": "263ba63e.c9fe1a"
        },
        {
            "wires": [
                [
                    "86fcedb.068ad1"
                ]
            ],
            "name": "machine_link",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.records.machine_link = {\n    \"doc_type\": \"machine_link\",\n    \"status\": \"active\",\n    \"device\": \"\",\n    \"user\": \"\"\n}\nreturn msg;",
            "y": 540,
            "x": 690,
            "z": "df6d98dd.00d378",
            "type": "function",
            "id": "36a87de1.f725d2"
        },
        {
            "wires": [
                [
                    "e9fa2dce.721d5"
                ]
            ],
            "name": "User Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"User: \" + (msg.inputs.user_id || msg.inputs.email) + \" was not found.\",\n})\nreturn msg;",
            "y": 200,
            "x": 1680,
            "z": "c012d9b9.f1e028",
            "type": "function",
            "id": "27042ffd.d801"
        },
        {
            "wires": [
                [
                    "e9fa2dce.721d5"
                ]
            ],
            "name": "Device Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Device: \" + msg.inputs.device_id + \" was not found.\",\n})\nreturn msg;",
            "y": 160,
            "x": 1690,
            "z": "c012d9b9.f1e028",
            "type": "function",
            "id": "b552f73a.ccac78"
        },
        {
            "wires": [
                [
                    "1ab3d2d9.dd1e8d"
                ]
            ],
            "name": "",
            "y": 120,
            "x": 1690,
            "z": "c012d9b9.f1e028",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "841cff74.703b5"
        },
        {
            "wires": [
                [
                    "c8aa9dc8.12735"
                ]
            ],
            "name": "",
            "y": 140,
            "x": 2050,
            "z": "c012d9b9.f1e028",
            "type": "subflow:68197f61.7975",
            "id": "706fb4bb.6b0c0c"
        },
        {
            "wires": [
                [
                    "dbee4981.7c9998"
                ]
            ],
            "name": "v1 Inputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.req.params.id_one && msg.req.params.id_two)\n{\n    if (msg.req.params.method == \"device_to_user\")\n    {\n        msg.payload = {\n            \"device_id\": msg.req.params.id_one,\n            \"user_id\": msg.req.params.id_two\n        }\n    }\n    else if (msg.req.params.method == \"user_to_device\")\n    {\n        msg.payload = {\n            \"device_id\": msg.req.params.id_two,\n            \"user_id\": msg.req.params.id_one\n        }\n    }\n}\nmsg.v1 = true;\nreturn msg;",
            "y": 440,
            "x": 460,
            "z": "c012d9b9.f1e028",
            "type": "function",
            "id": "e56e273b.ffa378"
        },
        {
            "wires": [
                [
                    "5fd442b1.24a51c"
                ]
            ],
            "name": "",
            "y": 440,
            "x": 410,
            "z": "57a5a054.9dfd3",
            "type": "subflow:3962857e.44abba",
            "id": "c4369d37.22b4c"
        },
        {
            "wires": [
                [
                    "114a461b.bf575a"
                ]
            ],
            "name": "",
            "url": "/system/info",
            "upload": false,
            "id": "c96ffa76.06f018",
            "swaggerDoc": "",
            "y": 440,
            "x": 100,
            "z": "57a5a054.9dfd3",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "bdf6a6b3.6e3418"
                ]
            ],
            "name": "System Info",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"System Info\"\n    });\nmsg.records = {\n    \"format\": \"JSON\",\n    \"returns\": [\"info\",\"nodered\", \"variables\", \"CF\", \"npm\", \"VCAP_APPLICATION\", \"VCAP_SERVICES\", \"other\"]\n};\nvar ENV = context.global.process.env;\nvar key_list = [];\nObject.keys(ENV).forEach(function(key) {\n    key_list.push([key, ENV[key]])\n});\nkey_list.sort();\nmsg.npm = [{\n    \"config\": {},\n    \"package\": {\n        \"dependencies\": {}\n    }\n}];\nmsg.CF = [{\n    \"INSTANCE\": {}\n}];\nvar env_var = [\"API_Connect_url\", \"Birth_Email_Distribution\", \"Google_Geocoding_url\", \"Google_Geolocate_url\", \"IOT_Devices_Authorization\", \"IOT_Devices_Path\", \"KORE_url\", \"NODE_RED_FLOW_NAME\", \"NODE_RED_PASSWORD\", \"NODE_RED_STORAGE_NAME\", \"NODE_RED_USERNAME\"];\nmsg.variables = [{}];\nlet list = Object.assign([], key_list);\nlist.forEach(function(key_value) {\n    if (key_value[0].startsWith(\"npm_\")) {\n        key = key_value[0].replace(/^npm_/, '');\n        if (key_value[0].startsWith(\"npm_config_\")) {\n            key = key_value[0].replace(/^npm_config_/, '');\n            msg.npm[0].config[key] = key_value[1];\n        } else\n        if (key_value[0].startsWith(\"npm_package_\")) {\n            key = key_value[0].replace(/^npm_package_/, '');\n            if (key_value[0].startsWith(\"npm_package_dependencies_\")) {\n                key = key_value[0].replace(/^npm_package_dependencies_/, '');\n                msg.npm[0].package.dependencies[key] = key_value[1];\n            } else {\n                msg.npm[0].package[key] = key_value[1];\n            }\n        } else {\n            msg.npm[0][key] = key_value[1];\n        }\n        key_list.splice(key_list.indexOf(key_value),1);\n    } else\n    if (key_value[0].startsWith(\"CF_\")) {\n        key = key_value[0].replace(/^CF_/, '');\n        if (key_value[0].startsWith(\"CF_INSTANCE_\")) {\n            key = key_value[0].replace(/^CF_INSTANCE_/, '');\n            msg.CF[0].INSTANCE[key] = key_value[1];\n        } else {\n            msg.CF[0][key] = key_value[1];\n        }\n        key_list.splice(key_list.indexOf(key_value),1);\n    } else\n    if (key_value[0].startsWith(\"VCAP_SERVICES\")) {\n        msg.VCAP_SERVICES = [JSON.parse(ENV.VCAP_SERVICES)];\n        key_list.splice(key_list.indexOf(key_value),1);\n    } else\n    if (key_value[0].startsWith(\"VCAP_APPLICATION\")) {\n        msg.VCAP_APPLICATION = [JSON.parse(ENV.VCAP_APPLICATION)];\n        key_list.splice(key_list.indexOf(key_value),1);\n    }else\n    if (env_var.indexOf(key_value[0]) >= 0) {\n        msg.variables[0][key_value[0]] = key_value[1];\n        key_list.splice(key_list.indexOf(key_value),1);\n    }\n})\nvar sorted_ENV = {};\nkey_list.forEach(function(key_value) {\n    sorted_ENV[key_value[0]] = key_value[1];\n})\nmsg.other = [sorted_ENV];\nmsg.nodered = [{\n    \"cloudant_query_limit\": global.get(\"cloudant_query_limit\"),\n    \"FLOW_FILE\": global.get(\"FLOW_FILE\")\n}]\nnode.warn({\"sys-info\": msg})\nreturn msg;",
            "y": 440,
            "x": 590,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "5fd442b1.24a51c"
        },
        {
            "wires": [],
            "name": "",
            "y": 440,
            "x": 750,
            "z": "57a5a054.9dfd3",
            "type": "subflow:bc6ff87.05a2908",
            "id": "bdf6a6b3.6e3418"
        },
        {
            "info": "",
            "wires": [],
            "name": "[SYSTEM] System Info",
            "y": 400,
            "x": 120,
            "z": "57a5a054.9dfd3",
            "type": "comment",
            "id": "c04b5a3a.0360c8"
        },
        {
            "wires": [
                [
                    "7fb9763a.bffa58"
                ]
            ],
            "name": "Set VCAP",
            "outputs": 1,
            "noerr": 0,
            "func": "//*****API version\n    global.set(\"API_VERSION\", \"10.1\");\n\nglobal.set(\"cloudant_query_limit\",5);\n//***** VCAP Start\n    var ENV = context.global.process.env;\n    var VCAP_APP = JSON.parse(ENV.VCAP_APPLICATION); //legacy\n    var VCAP = JSON.parse(ENV.VCAP_SERVICES); //legacy\n    global.set(\"VCAP_APP\", VCAP_APP); //legacy\n    global.set(\"VCAP_SERVICES\", VCAP); //legacy\n    var env_vcap = {\n        \"app\": JSON.parse(ENV.VCAP_APPLICATION),\n        \"services\": JSON.parse(ENV.VCAP_SERVICES)\n    };\n    global.set(\"SPACE\", env_vcap.app.space_name);\n    global.set(\"VCAP\", env_vcap);\n    var system = {\n        \"name\": VCAP_APP.application_name,\n        \"instance\": VCAP_APP.instance_index,\n        \"instance_id\": VCAP_APP.instance_id,\n        \"version\": VCAP_APP.application_version,\n        \"space\": VCAP_APP.space_name\n    }\n    global.set(\"SYSTEM\", system);\n//***** VCAP End\n\n\n//***** user-provided Start\nif(VCAP[\"user-provided\"]) { \n    var sms = {};\n    var email = {};\n    VCAP[\"user-provided\"].forEach(function(service){\n        if(service.name.includes(\"SMS\")) {\n            if(service.name.includes(\"ATT\")){\n                sms.att = {\n                    \"name\": service.name,\n                    \"credentials\": service.credentials,\n                    \"subAction\": \"20\",\n                    \"language\": 1,\n                    \"loop\": 2,\n                    \"voice\": 1\n                };\n                global.set(\"VCAP_SMS\", sms);\n            }\n            if(service.name.includes(\"Twilio\")){\n                sms.twilio = {\n                    \"name\": service.name,\n                    \"credentials\": service.credentials\n                };\n                global.set(\"VCAP_SMS\", sms);\n            }\n        }\n        if(service.name.includes(\"Email\")){\n            email.office365 = {\n                \"name\": service.name,\n                \"credentials\": service.credentials\n            };\n            global.set(\"VCAP_EMAIL\", email);\n        }\n        if(service.name.includes(\"KORE\")){\n            var kore = {\n                \"name\": service.name,\n                //\"iccid_prefix\": \"89014\",\n                \"credentials\": service.credentials\n            };\n            global.set(\"VCAP_KORE\", kore);\n        }\n        if(service.name.includes(\"Webbing\")){\n            var webbing = {\n                \"name\": service.name,\n                //\"iccid_prefix\": \"89462\",\n                \"credentials\": service.credentials\n            };\n            global.set(\"VCAP_WEBBING\", webbing);\n        }\n        if(service.name.includes(\"Config\")){\n            var config = {\n                \"name\": service.name,\n                \"credentials\": service.credentials\n            };\n            global.set(\"VCAP_CONFIG\", config);\n        }\n        if(service.name.includes(\"KeyProtect\")){\n            var keyprotect = {\n                \"name\": service.name,\n                \"credentials\": service.credentials\n            };\n            global.set(\"VCAP_KEYPROTECT\", keyprotect);\n        }\n        if(service.name.includes(\"Google\")){\n            var google = {\n                \"name\": service.name,\n                \"credentials\": service.credentials\n            };\n            global.set(\"VCAP_GOOGLE\", google);\n        }\n        if(service.name.includes(\"Auth\")){\n            var auth = {\n                \"name\": service.name,\n                \"credentials\": service.credentials,\n                \"auth_key\": Buffer.from(service.credentials.username + ':' + service.credentials.password).toString('base64')\n            };\n            global.set(\"VCAP_AUTH\", auth);\n        }\n        if(service.name.includes(\"DashDB\")){\n            var dashdb = {\n                \"name\": service.name,\n                \"credentials\": service.credentials\n            };\n            global.set(\"VCAP_DASHDB\", dashdb);\n        }\n        if(service.name.includes(\"APP ID\")){\n            var appid = {\n                \"name\": service.name,\n                \"label\": \"AppID\",\n                \"credentials\": service.credentials\n            };\n            global.set(\"VCAP_APPID\", appid);\n        }\n    });\n} else { node.warn(\"NO User Provided Service Available\") }\n//***** user-provided End\n//***** COS Start\nif(VCAP[\"cloud-object-storage\"]) { \n    var COS =  VCAP[\"cloud-object-storage\"][0];\n    var CONFIG = global.get(\"VCAP_CONFIG\");\n    if (context.global.process.env.hasOwnProperty(\"COS_BASE_PATH\")) {\n        COS.base_path = context.global.process.env[\"COS_BASE_PATH\"]; // find it in the global variable first\n    } else if(CONFIG && CONFIG.hasOwnProperty(\"COS_BASE_PATH\")) {\n        COS.base_path = CONFIG.COS_BASE_PATH; // find it in the linked config service second\n    } else {\n        if (COS.name.includes(\"Dev\")) { COS.base_path = \"bl.us.dev\" }\n        if (COS.name.includes(\"Test\")) { COS.base_path = \"bl.us.test\" }\n        if (COS.name.includes(\"Prod\")) { COS.base_path = \"bl.us.prod\" }\n    }\n    global.set(\"VCAP_COS\", COS);\n} else { node.warn(\"COS Service NOT Available\") }\n//***** COS END\n//***** Cloudant Start\nif(VCAP[\"cloudantNoSQLDB\"]) {\n    var CLOUDANT = VCAP[\"cloudantNoSQLDB\"][0];\n    global.set(\"VCAP_CLOUDANT\", CLOUDANT);\n} else { node.warn(\"CLOUDANT Service NOT Available\") }\n//***** Cloudant End\n//***** APP ID Start\nif(VCAP[\"AppID\"]) {\n    var APPID = VCAP[\"AppID\"][0];\n    global.set(\"VCAP_APPID\", APPID);\n} else { node.warn(\"APPID Service NOT Available\") }\n//***** APP ID End\n//***** DashDB Start\nif(VCAP[\"dashDB\"]) {\n    var DASHDB = VCAP[\"dashDB\"][0];\n    global.set(\"VCAP_DASHDB\", DASHDB);\n} else { node.warn(\"DASHDB Service NOT Available\") }\n//***** DashDB End\n//***** PWD Generator Start\n    var PWD_GEN = {\n        length: 18,\n        numbers: true,\n        symbols: true,\n        uppercase: true,\n        exclude: \"_,;:/'`<>{}[]~|?\\\"\",\n        strict: true\n    };\n    global.set(\"PWD_GEN\", PWD_GEN);\n//***** PWD Generator End\n//***** REGEXP Start\n    var regexp = {\n        \"mobile_phone\": \"^[2-9]\\d{2}-\\\\d{3}-\\\\d{4}$|^[+][1-99]-[2-9]\\\\d{2}-\\\\d{3}-\\\\d{4}$|^[1-99]-[2-9]\\\\d{2}-\\\\d{3}-\\\\d{4}$|^[2-9]\\\\d{9}$\",\n        \"email\": \"\\\\S+@\\\\S+\\\\.\\\\S+\",\n        \"password\": \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[.]).{8,20}$\", //\"password\": \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[#$.^+=!*()@%&]).{8,20}$\",\n        \"system_sn\": \"[A-Z][A-Z][A-Z][0-9][0-9][0-9][0-9][0-9]\",\n    };\n    /*var regex = {\n        \"mobile_phone\": \"/^[2-9]\\d{2}-\\d{3}-\\d{4}$|^[+][1-99]-[2-9]\\d{2}-\\d{3}-\\d{4}$|^[1-99]-[2-9]\\d{2}-\\d{3}-\\d{4}$|^[2-9]\\d{9}$/g\",\n        \"email\": \"/\\S+@\\S+\\.\\S+/\",\n        \"password\": \"/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$.^+=!*()@%&]).{8,20}$/g\",\n        \"system_sn\": \"/[A-Z][A-Z][A-Z][0-9][0-9][0-9][0-9][0-9]/g\",\n    };*/\n    global.set(\"REGEXP\", regexp);\n//***** REGEX End\nreturn msg;",
            "y": 100,
            "x": 260,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "490f80a5.a2d2b"
        },
        {
            "repeat": "",
            "y": 100,
            "name": "",
            "crontab": "",
            "id": "1bef120b.f5d41e",
            "topic": "",
            "payloadType": "str",
            "wires": [
                [
                    "490f80a5.a2d2b"
                ]
            ],
            "onceDelay": 0.1,
            "x": 100,
            "z": "57a5a054.9dfd3",
            "type": "inject",
            "payload": "Started!",
            "once": true
        },
        {
            "info": "",
            "wires": [],
            "name": "[SYSTEM] Version",
            "y": 480,
            "x": 110,
            "z": "57a5a054.9dfd3",
            "type": "comment",
            "id": "9f2e173d.84bf48"
        },
        {
            "wires": [
                [
                    "72dc701a.d7ecf"
                ]
            ],
            "name": "Set COS_URL",
            "outputs": 1,
            "noerr": 0,
            "func": "var COS = global.get(\"VCAP_COS\");\nvar CONFIG = global.get(\"VCAP_CONFIG\");\nCOS[\"service-endpoints\"] = msg.payload[\"service-endpoints\"];\nvar standard_paths = [\"bl.us.dev\", \"bl.us.test\", \"bl.us.prod\"];\nif (standard_paths.indexOf(COS.base_path) >= 0 ) {\n    COS.url =  \"https://\"+ COS[\"service-endpoints\"][\"cross-region\"][\"us\"][\"public\"][\"us-geo\"];\n} else { //Development custom base paths should be created in regional us-south only\n    COS.url = \"https://\"+ COS[\"service-endpoints\"][\"regional\"][\"us-south\"][\"public\"][\"us-south\"];\n}\nglobal.set(\"VCAP_COS\", COS);\nmsg.iam = { \"type\": \"cos\" }\nreturn msg;\n",
            "y": 100,
            "x": 1080,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "8a0d37e.69793c8"
        },
        {
            "wires": [
                [
                    "c01fdfa9.82752"
                ]
            ],
            "name": "",
            "url": "/version",
            "upload": false,
            "id": "520a449b.27e6dc",
            "swaggerDoc": "",
            "y": 520,
            "x": 90,
            "z": "57a5a054.9dfd3",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "ee85cac2.558588"
                ]
            ],
            "name": "Version",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Version\",\n        \"encrypt\": false\n    });\nmsg.records = {\n    \"format\": \"JSON\",\n    \"returns\": [\"space\",\"version\", \"nodered\", \"cloudapp\", \"connections\"]\n};\nvar vcap = global.get(\"VCAP\");\nvar ENV = context.global.process.env;\nmsg.space = [global.get(\"SPACE\")];\nmsg.version = [global.get(\"API_VERSION\")];\nmsg.nodered = [{\n    \"flow\": global.get(\"API_VERSION\"),\n    \"file\": global.get(\"FLOW_FILE\"),\n    \"engine\": ENV.npm_package_engines_node,\n    \"editor\": ENV.npm_package_dependencies_node_red\n}];\nmsg.cloudapp = [{\n    \"name\": vcap.app.application_name,\n    \"instance\": vcap.app.instance_index,\n    \"instance_id\": vcap.app.instance_id,\n    \"version\": vcap.app.application_version,\n    \"space\": vcap.app.space_name\n}];\nvar connections = { }\nvar connections_list = [\"config\",\"appid\",\"cloudant\",\"dashdb\",\"cos\",\"keyprotect\",\"kore\",\"webbing\",\"email\",\"sms\",\"google\"]\nconnections_list.forEach(function(con){\n    var service = global.get(\"VCAP_\" + con.toUpperCase());\n    if(service) { \n        if(con === \"email\") {\n            connections[con] = service.office365.name;\n        } else if(con === \"sms\") {\n            connections[con + \"_att\"] = service.att.name;\n            connections[con + \"_twilio\"] = service.twilio.name;\n        } else {\n            connections[con] = service.name;\n        }\n    }\n})\n/*if(global.get(\"VCAP_EMAIL\")) { connections.email = global.get(\"VCAP_EMAIL\").office365.name }\nif(global.get(\"VCAP_SMS\")) {\n    if(global.get(\"VCAP_SMS\").att) { connections.sms_att = global.get(\"VCAP_SMS\").att.name }\n    if(global.get(\"VCAP_SMS\").twilio) { connections.sms_twilio = global.get(\"VCAP_SMS\").twilio.name }\n}*/\nmsg.connections = [connections];\nif (msg.req.headers.hasOwnProperty(\"apic\")) {\n    var apicInfo = JSON.parse(msg.req.headers[\"apic\"]);\n    node.warn({\"APIc Info\": apicInfo});\n    msg.apic = [apicInfo];\n    msg.records.returns = [\"version\", \"apic\", \"nodered\", \"cloudapp\", \"connections\"];\n}\nreturn msg;",
            "y": 520,
            "x": 520,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "4f8e3057.22691"
        },
        {
            "wires": [],
            "name": "",
            "y": 520,
            "x": 670,
            "z": "57a5a054.9dfd3",
            "type": "subflow:bc6ff87.05a2908",
            "id": "ee85cac2.558588"
        },
        {
            "wires": [
                [
                    "4f8e3057.22691"
                ]
            ],
            "name": "",
            "y": 520,
            "x": 350,
            "z": "57a5a054.9dfd3",
            "type": "subflow:3962857e.44abba",
            "id": "c01fdfa9.82752"
        },
        {
            "wires": [
                [
                    "543f09e7.6d93a8"
                ]
            ],
            "name": "",
            "url": "/pairing/pair/device_user",
            "upload": false,
            "id": "6748df65.acb22",
            "swaggerDoc": "",
            "y": 160,
            "x": 150,
            "z": "c012d9b9.f1e028",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "841cff74.703b5"
                ],
                [
                    "b552f73a.ccac78"
                ],
                [
                    "27042ffd.d801"
                ]
            ],
            "name": "User & Device Exists",
            "outputs": 3,
            "outputLabels": [
                "yes",
                "no device",
                "no user"
            ],
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"user\") || msg.user.length === 0 || msg.user[0].doc_type !== \"user\"){\n    return [null,null,msg]\n}\nmsg.inputs.user_id = msg.user[0]._id\nif(!msg.hasOwnProperty(\"device\") || msg.device.length === 0 || msg.device[0].doc_type !== \"device\"){\n    return [null,msg,null]\n}\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"machine_link\",\n    \"selector\": {\n        \"doc_type\": \"machine_link\",\n        \"device\": msg.inputs.device_id,\n        \"user\": msg.inputs.user_id\n    }\n};\nreturn [msg,null,null];",
            "y": 160,
            "x": 1480,
            "z": "c012d9b9.f1e028",
            "type": "function",
            "id": "3edae6c0.5d3eda"
        },
        {
            "tls": "",
            "wires": [
                [
                    "8a0d37e.69793c8"
                ]
            ],
            "name": "COS Endpoint",
            "url": "",
            "ret": "obj",
            "id": "648a0f22.9fbd6",
            "y": 100,
            "x": 890,
            "z": "57a5a054.9dfd3",
            "type": "http request",
            "method": "GET"
        },
        {
            "wires": [
                [
                    "13885be8.270ac4"
                ]
            ],
            "name": "SMS Debug",
            "outputs": 1,
            "noerr": 0,
            "func": "node.warn({\"Sms\": msg});\nif(msg.api.hasOwnProperty(\"debug\") && (msg.api.debug === true || msg.api.debug.override)) {\n    if(msg.hasOwnProperty(\"debug\") && msg.debug.hasOwnProperty(\"sms\")){\n        if(msg.debug.sms.hasOwnProperty(\"to\")){\n            if (Array.isArray(msg.debug.sms.to)) {\n                msg.sms_list = msg.debug.sms.to;\n            } else {\n                msg.sms_list = [msg.debug.sms.to];\n            }\n        }\n        if(msg.debug.sms.hasOwnProperty(\"to_voice\")){\n            if (Array.isArray(msg.debug.sms.to_voice)) {\n                msg.sms_voice_list = msg.debug.sms.to_voice;\n            } else {\n                msg.sms_voice_list = [msg.debug.sms.to_voice];\n            }\n        }\n        if(msg.debug.sms.hasOwnProperty(\"send\") && (msg.debug.sms.send === false)){\n            node.warn({\"Sms Not Sent to\": msg.sms_list});\n            delete msg.sms_list;\n            node.warn({\"Sms Voice Not Sent to\": msg.sms_voice_list});\n            delete msg.sms_voice_list;\n        }\n    }\n}\nreturn msg;\n",
            "y": 180,
            "x": 1950,
            "z": "4f94cf29.53815",
            "type": "function",
            "id": "f9cb1c7.d26aee"
        },
        {
            "wires": [
                [
                    "41619fef.427f2"
                ],
                [
                    "120eb9f2.662d36"
                ]
            ],
            "name": "Twilio Process SMS List",
            "outputs": 2,
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"sms_list\")  && msg.sms_list.length > 0) {\n    msg.topic = msg.sms_list.pop();\n    if (msg.sms_list.length === 0) \n    {\n        return [msg, null];\n    }\n    return [msg, msg];\n}\n\n\n",
            "y": 200,
            "x": 2430,
            "z": "4f94cf29.53815",
            "type": "function",
            "id": "410a31fd.1f91e"
        },
        {
            "wires": [],
            "name": "sms loop in",
            "links": [
                "39badb90.713a24"
            ],
            "y": 240,
            "x": 2595,
            "z": "4f94cf29.53815",
            "type": "link out",
            "id": "120eb9f2.662d36"
        },
        {
            "wires": [
                [
                    "410a31fd.1f91e"
                ]
            ],
            "name": "sms loop out",
            "links": [
                "120eb9f2.662d36"
            ],
            "y": 240,
            "x": 2275,
            "z": "4f94cf29.53815",
            "type": "link in",
            "id": "39badb90.713a24"
        },
        {
            "wires": [
                [
                    "f9cb1c7.d26aee"
                ]
            ],
            "name": "SMS Template Processing",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.sms.message = msg.sms.template;\nif(msg.sms.hasOwnProperty(\"fields\")) {\n    Object.keys(msg.sms.fields).forEach(function(field) {\n        var tag = \"{{{\" + field + \"}}}\";\n        msg.sms.message = msg.sms.message.replace(RegExp(tag, 'g'), msg.sms.fields[field])\n    });\n}\nvar SPACE = global.get(\"SPACE\");\nif ([\"Development\", \"US Test\"].indexOf(SPACE) >= 0) {\nmsg.sms.message = \"[\" + SPACE + \"] \" + msg.sms.message;\n}\nif(msg.sms.hasOwnProperty(\"to\")) {\n    if (Array.isArray(msg.sms.to)) {\n        msg.sms_list = cleanPhoneNumbers(msg.sms.to);\n    } else {\n        msg.sms_list = cleanPhoneNumbers(msg.sms.to.splice(\",\"));\n    }\n}\nif(msg.sms.hasOwnProperty(\"to_voice\")) {\n    if (Array.isArray(msg.sms.to_voice)) {\n        msg.sms_voice_list = cleanPhoneNumbers(msg.sms.to_voice);\n    } else {\n        msg.sms_voice_list = cleanPhoneNumbers(msg.sms.to_voice.splice(\",\"));\n    }\n}\nreturn msg;\n\nfunction cleanPhoneNumbers(list) {\n    var clean_list = [];\n    list.forEach(function(phone){\n        if(phone == null) {\n            //delete entry\n        } else if (phone.length <= 9 || phone === \"\" || phone === \"\\s+\" || phone === \"null\") {\n            //delete entry\n        } else {\n            clean_list.push(phone)\n        }\n    });\n    return clean_list;\n}",
            "y": 180,
            "x": 1720,
            "z": "4f94cf29.53815",
            "type": "function",
            "id": "812ba212.bb63c"
        },
        {
            "wires": [
                [
                    "68fd1464.02b56c"
                ]
            ],
            "name": "SMS Object Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.cos = {\n    \"method\": \"GET\",\n    \"filename\": msg.sms.template_file,\n    \"container\": \"sms-templates\"\n};\nreturn msg;",
            "y": 240,
            "x": 1070,
            "z": "4f94cf29.53815",
            "type": "function",
            "id": "4eba1c75.b38284"
        },
        {
            "checkall": "true",
            "z": "4f94cf29.53815",
            "name": "template_type",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "help_ticket"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "20c6f0d6.45b89"
                ],
                [
                    "4802e9c2.173bf8"
                ]
            ],
            "propertyType": "msg",
            "y": 260,
            "x": 660,
            "property": "sms.template_type",
            "type": "switch",
            "id": "57cdc08a.c8efa"
        },
        {
            "y": 240,
            "property": "",
            "from": "",
            "name": "Help Ticket",
            "rules": [
                {
                    "p": "sms.template_file",
                    "tot": "str",
                    "t": "set",
                    "pt": "msg",
                    "to": "B+L_Eyetelligence_Help_Ticket_00.txt"
                }
            ],
            "reg": false,
            "to": "",
            "wires": [
                [
                    "4eba1c75.b38284"
                ]
            ],
            "action": "",
            "x": 870,
            "z": "4f94cf29.53815",
            "type": "change",
            "id": "20c6f0d6.45b89"
        },
        {
            "wires": [
                [
                    "812ba212.bb63c"
                ],
                [
                    "57cdc08a.c8efa"
                ]
            ],
            "name": "SMS Check Template",
            "outputs": 2,
            "outputLabels": [
                "no template",
                "yes template"
            ],
            "noerr": 0,
            "func": "\nif (msg.sms.hasOwnProperty(\"template_type\")) {\n    return [null,msg];\n}\nreturn [msg,null];",
            "y": 180,
            "x": 420,
            "z": "4f94cf29.53815",
            "type": "function",
            "id": "f00b78cb.ad3a28"
        },
        {
            "wires": [
                [
                    "1762d850.0daed8"
                ]
            ],
            "name": "",
            "y": 240,
            "x": 1270,
            "z": "4f94cf29.53815",
            "type": "subflow:f4989ebd.9314",
            "id": "68fd1464.02b56c"
        },
        {
            "wires": [
                []
            ],
            "name": "Template Not Supported",
            "outputs": 1,
            "noerr": 0,
            "func": "node.warn({\"Sms Error:\" : \"SMS template type: \" + msg.sms.template_type + \" is not supported.\"})\n",
            "y": 320,
            "x": 1090,
            "z": "4f94cf29.53815",
            "type": "function",
            "id": "4802e9c2.173bf8"
        },
        {
            "wires": [
                []
            ],
            "name": "Template Not Supported",
            "outputs": 1,
            "noerr": 0,
            "func": "node.warn({\"Email Error:\" : \"Email template type: \" + msg.email.template_type + \" is not supported.\"})",
            "y": 600,
            "x": 790,
            "z": "5dbd57cc.fc9bb8",
            "type": "function",
            "id": "bf320d02.d8846"
        },
        {
            "wires": [
                [],
                [
                    "f00b78cb.ad3a28"
                ]
            ],
            "name": "SMS Setup",
            "outputs": 2,
            "outputLabels": [
                "no sms",
                "yes sms"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"sms\") && (msg.sms.hasOwnProperty(\"to\") || msg.sms.hasOwnProperty(\"to_voice\"))) {\n    if ( (Array.isArray(msg.sms.to) && msg.sms.to.length === 0) || msg.sms.to === \"\" ) {\n        return [msg,null];\n    }\n    delete msg.res;\n    delete msg.req;\n    return [null,msg];\n}\nreturn [msg,null]",
            "y": 120,
            "x": 210,
            "z": "4f94cf29.53815",
            "type": "function",
            "id": "9d11623.9608ba"
        },
        {
            "wires": [
                [
                    "bd2fe652.82c918"
                ],
                [
                    "65919f4d.91575"
                ]
            ],
            "name": "Check Template",
            "outputs": 2,
            "outputLabels": [
                "no template",
                "yes template"
            ],
            "noerr": 0,
            "func": "if (msg.email.hasOwnProperty(\"template_type\")) {\n    if (!msg.email.hasOwnProperty(\"fields\")) {msg.email.fields = {}}\n    msg.email.fields.apic_server = msg.apic.url;\n    msg.email.fields.email_from = \"no-reply.IoTServices@Bausch.com\";\n    return [null,msg];\n}\nreturn [msg,null];",
            "y": 140,
            "x": 320,
            "z": "5dbd57cc.fc9bb8",
            "type": "function",
            "id": "9f406a53.f97dc8"
        },
        {
            "wires": [
                [],
                [
                    "9f406a53.f97dc8"
                ]
            ],
            "name": "Setup",
            "outputs": 2,
            "outputLabels": [
                "no email",
                "yes email"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"email\") && msg.email.hasOwnProperty(\"to\") && ( (Array.isArray(msg.email.to) && msg.email.to.length > 0) ||  msg.email.to !== \"\") ) {\n    if ( (Array.isArray(msg.email.to) && msg.email.to.length === 0) || msg.email.to === \"\") {\n             return [msg,null];\n    }\n    msg.apic = {\n        \"url\": global.get(\"EULA_CATALOG\")\n    }\n    if(!msg.email.return) {\n        delete msg.res;\n        delete msg.req;\n    }\n    return [null,msg];\n}\nreturn [msg,null]",
            "y": 100,
            "x": 150,
            "z": "5dbd57cc.fc9bb8",
            "type": "function",
            "id": "bb960040.7d816"
        },
        {
            "wires": [
                [
                    "f637ef7b.74e6a"
                ]
            ],
            "name": "Object Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.cos = {\n    \"method\": \"GET\",\n    \"filename\": msg.email.template_file,\n    \"container\": \"email-templates\"\n};\nreturn msg;",
            "y": 280,
            "x": 1250,
            "z": "5dbd57cc.fc9bb8",
            "type": "function",
            "id": "2988c5c0.8b57aa"
        },
        {
            "wires": [
                [
                    "8041ed2a.a021d"
                ]
            ],
            "name": "",
            "y": 280,
            "x": 1450,
            "z": "5dbd57cc.fc9bb8",
            "type": "subflow:f4989ebd.9314",
            "id": "f637ef7b.74e6a"
        },
        {
            "wires": [
                [
                    "bd2fe652.82c918"
                ]
            ],
            "name": "Object Return",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.email.template = msg.cos.return.toString(\"utf-8\")\nreturn msg;",
            "y": 280,
            "x": 1660,
            "z": "5dbd57cc.fc9bb8",
            "type": "function",
            "id": "8041ed2a.a021d"
        },
        {
            "wires": [
                [
                    "812ba212.bb63c"
                ]
            ],
            "name": "SMS Object Return",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.sms.template = msg.cos.return.toString(\"utf-8\")\nreturn msg;",
            "y": 240,
            "x": 1470,
            "z": "4f94cf29.53815",
            "type": "function",
            "id": "1762d850.0daed8"
        },
        {
            "wires": [
                [
                    "2f410b84.ebfd44"
                ]
            ],
            "name": "",
            "y": 140,
            "x": 350,
            "z": "a17d8665.50cb88",
            "type": "subflow:3962857e.44abba",
            "id": "47b93e95.3ec1e"
        },
        {
            "wires": [
                [
                    "b634508d.20d92"
                ]
            ],
            "name": "Ticket Update",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Ticket Update\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\"],\n    \"doc_type\": \"help_ticket\",\n    \"object\": \"help_ticket\",\n    \"format\": \"JSON\",\n    \"returns\": [\"help_ticket\"],\n    \"id\": msg.req.params.ticketID\n};\nmsg.inputs = {\n    \"allowed\": [\"close_time\",\"ticket_status\",\"reason\",\"responder_id\",\"ticket_notes\"],\n    \"required\": [],\n    \"values\": {\n        \"reason\": [\"Setup\", \"Order Packs\", \"Another Issue\", \"Technical Support\"]\n    },\n    \"ticket_id\": msg.req.params.ticketID\n};\nmsg.cloudant = {\n    \"request\": \"/help_tickets/\" + msg.records.id,\n    \"method\": \"get\",\n    \"return_obj\": \"\",\n    \"object\": \"help_ticket\"\n};\nreturn msg;",
            "y": 140,
            "x": 540,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "2f410b84.ebfd44"
        },
        {
            "wires": [
                [
                    "47b93e95.3ec1e"
                ]
            ],
            "name": "",
            "url": "/tickets/ticket/:ticketID",
            "upload": false,
            "id": "302565b1.05779a",
            "swaggerDoc": "",
            "y": 140,
            "x": 130,
            "z": "a17d8665.50cb88",
            "type": "http in",
            "method": "put"
        },
        {
            "wires": [
                [
                    "8cbc90e.74d727"
                ]
            ],
            "name": "",
            "y": 140,
            "x": 700,
            "z": "a17d8665.50cb88",
            "type": "subflow:71afa3f9.81defc",
            "id": "b634508d.20d92"
        },
        {
            "wires": [
                [
                    "3f45bfe3.b37e2"
                ],
                [
                    "52481ef9.55d1e"
                ],
                [
                    "9066da0d.905eb8"
                ]
            ],
            "name": "Check Reassigned or Reason",
            "outputs": 3,
            "outputLabels": [
                "Update",
                "Update & Email",
                "no body"
            ],
            "noerr": 0,
            "func": "if(Object.keys(msg.inputs.body).length > 0) {\n    if((msg.inputs.body.ticket_status && msg.inputs.body.ticket_status === \"Reassigned\") || (msg.inputs.body.reason)) {\n        return [null,msg,null]\n    } else {\n        return [msg,null,null]\n    }\n} else {\n    return [null,null,msg]\n}",
            "y": 140,
            "x": 910,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "8cbc90e.74d727"
        },
        {
            "wires": [
                [
                    "185cef8a.e6049",
                    "17cfc529.01751b"
                ]
            ],
            "name": "",
            "y": 80,
            "x": 2830,
            "z": "a17d8665.50cb88",
            "type": "subflow:68197f61.7975",
            "id": "3f45bfe3.b37e2"
        },
        {
            "wires": [
                [
                    "ada1b83a.b05318"
                ]
            ],
            "name": "",
            "y": 60,
            "x": 3030,
            "z": "a17d8665.50cb88",
            "type": "subflow:313bd1d3.01c06e",
            "id": "185cef8a.e6049"
        },
        {
            "wires": [
                [
                    "a04840d5.e19e6",
                    "97de7ab6.1754f8"
                ]
            ],
            "name": "EMAIL & SMS",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"support_users\") && msg.support_users.length > 0){\n    msg.email = {\n        \"to\": msg.support_users.map(a => a.email),\n        \"operation\": \"updated\"\n    };\n    msg.sms = {\n        \"to\": msg.support_users.map(a => a.mobile_phone),\n        \"to_voice\": msg.support_users.map(a => a.voice_phone),\n        \"operation\": \"updated\"\n    }\n} else {\n    //do nothing\n    msg.email = {};\n    msg.sms = {};\n}\nreturn msg;",
            "y": 100,
            "x": 3020,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "17cfc529.01751b"
        },
        {
            "wires": [
                [
                    "3f45bfe3.b37e2"
                ]
            ],
            "name": "Add Support Person",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"support_users\") && msg.support_users.length > 0){\n    msg.inputs.body.assigned_id = msg.support_users.map(a => a._id);\n} else {\n    msg.inputs.body.assigned_id = [];\n}\nmsg.cloudant.object = \"help_ticket\";\nreturn msg;  ",
            "y": 120,
            "x": 2600,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "907e0f31.64e57"
        },
        {
            "wires": [
                [
                    "4477f43e.4e0d5c"
                ]
            ],
            "name": "",
            "y": 140,
            "x": 1150,
            "z": "a17d8665.50cb88",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "52481ef9.55d1e"
        },
        {
            "wires": [],
            "name": "",
            "y": 60,
            "x": 3210,
            "z": "a17d8665.50cb88",
            "type": "subflow:bc6ff87.05a2908",
            "id": "ada1b83a.b05318"
        },
        {
            "wires": [
                [
                    "6b45b347.5123fc"
                ]
            ],
            "name": "Email Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "var ticket = msg.help_ticket[0];\nmsg.email.template_type = \"help_ticket\";\nvar mod_string = \"n/a\";\nvar settings_string = \"n/a\";\nvar machine_errors = \"n/a\";\nvar posterior = [\"BL15455\", \"BL15335\"] // Stellaris PC Laser System - 7.5K, 5.0K\nvar combined = [\"BL14455\", \"BL14335\"] // Stellaris PC Combined System - 7.5K, 5.0K\nvar anterior = [\"BL11145\", \"BL11115\", \"BL11125\"] // Anterior System - HFM, VFM, AFM\nif (ticket.hasOwnProperty(\"machine_state\"))  {\n    var edhr = ticket.machine_state;\n    if (edhr.hasOwnProperty(\"modlist\")) {\n        var full_modlist = {\n            \"uic_info\" : \"UIC\",\n            \"remote_info\" : \"Remote\",\n            \"anterior_info\" : \"Anterior\",\n            \"ivpole_info\" : \"IVPole\",\n            \"footcan_info\" : \"FCIB\",\n            \"footrx_info\" : \"FC Receiver\",\n            \"footctrl_info\" : \"Foot Control\",\n            \"foottx_info\" : \"FC Transmitter\",\n            \"power_info\" : \"Power Supply\",\n            \"fluidics_info\" : \"Fluidics\",\n            \"compressor_info\" : \"Compressor\",\n            \"posterior_info\" : \"Illumination\",\n            \"glm_info\" : \"Laser\",\n            \"lamp1_info\" : \"Lamp 1\",\n            \"lamp2_info\" : \"Lamp 2\",\n            \"mmc_info\" : \"MMC\",\n            \"gateway_info\" : \"Gateway\",\n            \"sim1_iccid\" : \"SIM 1\",\n            \"sim2_iccid\" : \"SIM 2\"\n        };\n        var system_modlist = full_modlist;\n        if (posterior.indexOf(ticket.system_type.substring(0,7)) >= 0) {\n            delete system_modlist.mmc_info;\n            delete system_modlist.sim2_iccid;\n        }\n        if (combined.indexOf(ticket.system_type.substring(0,7)) >= 0) {\n            delete system_modlist.mmc_info;\n            delete system_modlist.sim2_iccid;\n            delete system_modlist.laser;\n        }\n        if (anterior.indexOf(ticket.system_type.substring(0,7)) >= 0) {\n            delete system_modlist.mmc_info;\n            delete system_modlist.sim2_iccid;\n            delete system_modlist.laser;\n            delete system_modlist.footcan_info;\n            delete system_modlist.lamp1_info;\n            delete system_modlist.lamp2_info;\n        }\n        // Non E models that do not have gateway enabled in software should not have it\n        if (ticket.system_type.length === 7 && edhr.software_options && edhr.software_options.gateway_enabled && edhr.software_options.gateway_enabled === \"disabled\") {\n            delete system_modlist.gateway_info\n            delete system_modlist.sim1_iccid;\n        }\n        var mod_list = [];\n        var name_list = [];\n        for(var propertyName in edhr.modlist) {\n            var module_text = \"\";\n            if (system_modlist.hasOwnProperty(propertyName) || edhr.modlist[propertyName].present === \"PRESENT\") {\n                module_text =  system_modlist[propertyName]; // add module Name\n                if (edhr.modlist[propertyName].present === \"PRESENT\") {\n                    module_text += \", \" + edhr.modlist[propertyName].SN; // add SN\n                } else {\n                    module_text += \", \" + edhr.modlist[propertyName].present; // add MISSING\n                }\n            }\n            // Add SW and HW if it has a name and a SW version\n            if (edhr.modlist[propertyName].present === \"PRESENT\"  && edhr.modlist[propertyName].SW_version !== \"\") {\n                module_text += \", SW v\" + edhr.modlist[propertyName].SW_version + \", HW v\" + edhr.modlist[propertyName].HW_version; // add SW, HW\n            }\n            if (module_text !== \"\" ) {\n                mod_list.push(module_text);\n                name_list.push(propertyName);\n            } // print if not empty\n        }\n        if (mod_list.length > 0) { // Sort and Join if array not empty\n            var order_list = new Array(mod_list.length);\n            var idx = 0;\n            for(var propertyName in full_modlist) {\n                var i = name_list.indexOf(propertyName);\n                if (i >= 0) {\n                    order_list[idx] = mod_list[i];\n                    ++idx;\n                }\n            }\n            mod_string = order_list.join(\"\\n<br />\\n\")\n        } \n    }\n    if (edhr.hasOwnProperty(\"software_options\")) {\n        // Software Option Names\n        var software_list = {\n            \"vitesse_enabled\" : \"Vitesse\",\n            \"gateway_enabled\" : \"Gateway\"\n        };\n        var settings_string = \"\";\n        for(var propertyName in edhr.software_options) {\n            settings_string += software_list[propertyName] + \": \" + edhr.software_options[propertyName] + \"\\n<br />\\n\";\n        }\n    }\n    if (edhr.hasOwnProperty(\"errors\")) {\n        var machine_errors = JSON.stringify(edhr.errors)\n    }\n}\nmsg.email.topic = \"[\" + ticket.ticket_status + \"] Get Me Help Ticket \" + ticket._id;\nmsg.email.fields = {\n    \"operation\": msg.email.operation,\n    \"ticket_id\": ticket._id,\n    \"system_type\": ticket.system_type,\n    \"device_id\": ticket.system_sn,\n    \"reason\": ticket.reason,\n    \"start_time\": Date(ticket.start_time),\n    \"user_id\": ticket.doctor_id,\n    \"contact_name\": ticket.contact_name,\n    \"contact_number\": ticket.contact_number,\n    \"address\": ticket.address,\n    \"system_config\": mod_string,\n    \"software_options\": settings_string,\n    \"machine_errors\": machine_errors\n};\nreturn msg;",
            "y": 220,
            "x": 3270,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "a04840d5.e19e6"
        },
        {
            "wires": [
                [
                    "2a4e720f.02b92e"
                ]
            ],
            "name": "SMS Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "var ticket = msg.help_ticket[0];\nmsg.sms.template_type = \"help_ticket\";\nmsg.sms.fields = {\n    \"ticket_status\": ticket.ticket_status,\n    \"system_type\": ticket.system_type,\n    \"device_id\": ticket.system_sn,\n    \"reason\": ticket.reason,\n    \"start_time\": Date(ticket.start_time),\n    \"contact_name\": ticket.contact_name,\n    \"contact_number\": ticket.contact_number\n};\nreturn msg;",
            "y": 260,
            "x": 3270,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "97de7ab6.1754f8"
        },
        {
            "wires": [
                [
                    "a85bbe21.fe3d"
                ],
                [
                    "269a407b.075bd"
                ]
            ],
            "name": "Get Linked Users",
            "outputs": 2,
            "outputLabels": [
                "Update",
                ""
            ],
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"help_ticket\") && msg.help_ticket.length === 1 && (msg.help_ticket[0]._id === msg.inputs.ticket_id)){\n    if(msg.inputs.body.reason) {\n        msg.inputs.reason = msg.inputs.body.reason;\n    } else {\n        msg.inputs.reason = msg.help_ticket[0].reason;\n    }\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"bookmark_type\": \"payload\", //\"payload\", \"parameter\"\n        \"pagination\": false,\n        \"bookmark_use\": false,\n        \"object\": \"linked_user_ids\",\n        \"fields\": [\"user\"],\n        \"selector\": {\n            \"$and\": [\n                {\"doc_type\": \"machine_link\"},\n                {\"device\": msg.help_ticket[0].system_sn},\n                {\"status\": \"active\"}\n            ]\n        }\n    };\n    return [msg,null]\n} else {\n    return [null,msg]\n}",
            "y": 140,
            "x": 1350,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "4477f43e.4e0d5c"
        },
        {
            "wires": [
                []
            ],
            "name": "",
            "y": 220,
            "x": 3420,
            "z": "a17d8665.50cb88",
            "type": "subflow:5dbd57cc.fc9bb8",
            "id": "6b45b347.5123fc"
        },
        {
            "wires": [
                []
            ],
            "name": "",
            "y": 260,
            "x": 3420,
            "z": "a17d8665.50cb88",
            "type": "subflow:4f94cf29.53815",
            "id": "2a4e720f.02b92e"
        },
        {
            "wires": [
                [
                    "fecc8b70.269468"
                ]
            ],
            "name": "",
            "y": 120,
            "x": 1550,
            "z": "a17d8665.50cb88",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "a85bbe21.fe3d"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] Ticket Update",
            "y": 100,
            "x": 110,
            "z": "a17d8665.50cb88",
            "type": "comment",
            "id": "5ee146b0.46bd38"
        },
        {
            "wires": [
                [
                    "51b4cb93.5d0b64"
                ]
            ],
            "name": "",
            "y": 260,
            "x": 350,
            "z": "a17d8665.50cb88",
            "type": "subflow:3962857e.44abba",
            "id": "c1185778.0c2658"
        },
        {
            "wires": [
                [
                    "4dedcca.23f8e34"
                ]
            ],
            "name": "Ticket Info",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Ticket Info\",\n        \"path\": 1,\n        \"paths\": 1\n    });\nmsg.records = {\n    \"delete\": [\"_rev\"],\n    \"object\": \"help_ticket\",\n    \"format\": \"JSON\",\n    \"returns\": [\"help_ticket\"]\n};\nmsg.inputs = {\n    \"ticket_id\": msg.req.params.ticketID\n};\nmsg.cloudant = {\n    \"request\": \"/help_tickets/\" + msg.req.params.ticketID,\n    \"method\": \"GET\",\n    \"return_obj\": \"\"\n};\nreturn msg;",
            "y": 260,
            "x": 530,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "51b4cb93.5d0b64"
        },
        {
            "wires": [
                [
                    "c1185778.0c2658"
                ]
            ],
            "name": "",
            "url": "/tickets/ticket/:ticketID",
            "upload": false,
            "id": "3fdfb34f.76ec9c",
            "swaggerDoc": "",
            "y": 260,
            "x": 130,
            "z": "a17d8665.50cb88",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "d1ddb3d3.52a3b"
                ]
            ],
            "name": "",
            "y": 260,
            "x": 710,
            "z": "a17d8665.50cb88",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "4dedcca.23f8e34"
        },
        {
            "wires": [
                [
                    "cbddc4f4.72a2d8"
                ]
            ],
            "name": "",
            "y": 260,
            "x": 1150,
            "z": "a17d8665.50cb88",
            "type": "subflow:313bd1d3.01c06e",
            "id": "4e652ad8.755814"
        },
        {
            "wires": [],
            "name": "",
            "y": 260,
            "x": 1330,
            "z": "a17d8665.50cb88",
            "type": "subflow:bc6ff87.05a2908",
            "id": "cbddc4f4.72a2d8"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] Ticket Info",
            "y": 220,
            "x": 100,
            "z": "a17d8665.50cb88",
            "type": "comment",
            "id": "45294fb2.28f79"
        },
        {
            "wires": [
                [
                    "9256137b.9961d"
                ]
            ],
            "name": "",
            "url": "/logs/case",
            "upload": false,
            "id": "6756de94.bd551",
            "swaggerDoc": "",
            "y": 120,
            "x": 100,
            "z": "c13a158d.882c9",
            "type": "http in",
            "method": "post"
        },
        {
            "info": "",
            "wires": [],
            "name": "[Devices] Log New Case",
            "y": 80,
            "x": 130,
            "z": "c13a158d.882c9",
            "type": "comment",
            "id": "c7a74f30.36065"
        },
        {
            "wires": [
                [
                    "936cde6b.71bbf"
                ]
            ],
            "name": "",
            "y": 120,
            "x": 370,
            "z": "c13a158d.882c9",
            "type": "subflow:3962857e.44abba",
            "id": "9256137b.9961d"
        },
        {
            "wires": [
                [
                    "dae23b4c.58a628"
                ]
            ],
            "name": "",
            "y": 120,
            "x": 1040,
            "z": "c13a158d.882c9",
            "type": "subflow:71afa3f9.81defc",
            "id": "9f83f910.a243f8"
        },
        {
            "wires": [
                [
                    "9f83f910.a243f8"
                ]
            ],
            "name": "Log New Case",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Log Case New\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"status\", \"case_log\"],\n    \"doc_type\": \"case\",\n    \"format\": \"JSON\",\n    \"object\": \"case\",\n    \"returns\": [\"case\"],\n    \"models\": [\"case\"],\n    \"return_code\": 201\n};\nmsg.inputs = {\n    \"required\": [\"log_id\",\"system_sn\",\"system_type\",\"location\", \"start_time\",\"stop_time\",\"settings_file_name\",\"case_log\"], \n    \"allowed\": [\"user_id\",\"settings_file_id\"]\n};\nif (msg.payload.hasOwnProperty(\"log_id\")) { msg.records.log_id = msg.payload.log_id }\nreturn msg;",
            "y": 120,
            "x": 880,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "d81d6328.63bd8"
        },
        {
            "wires": [
                [
                    "4772a05f.910e2"
                ]
            ],
            "name": "",
            "url": "/logs/edhr",
            "upload": false,
            "id": "14cd7b3d.923455",
            "swaggerDoc": "",
            "y": 460,
            "x": 100,
            "z": "c13a158d.882c9",
            "type": "http in",
            "method": "post"
        },
        {
            "info": "",
            "wires": [],
            "name": "[Devices] Log New EDHR",
            "y": 420,
            "x": 130,
            "z": "c13a158d.882c9",
            "type": "comment",
            "id": "2d9e9457.e6c2bc"
        },
        {
            "wires": [
                [
                    "b4af5a85.dd66b8"
                ]
            ],
            "name": "",
            "y": 460,
            "x": 350,
            "z": "c13a158d.882c9",
            "type": "subflow:3962857e.44abba",
            "id": "4772a05f.910e2"
        },
        {
            "wires": [
                [
                    "d3d9378b.b98a28"
                ]
            ],
            "name": "",
            "y": 460,
            "x": 1040,
            "z": "c13a158d.882c9",
            "type": "subflow:71afa3f9.81defc",
            "id": "4e5cfcf7.b5d204"
        },
        {
            "wires": [
                [
                    "4e5cfcf7.b5d204"
                ]
            ],
            "name": "Log EDHR New",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Log New EDHR\",\n        \"path\": 1,\n        \"paths\": 3\n    });\nmsg.records = {\n    //\"delete\": [\"_rev\", \"doc_type\", \"status\", \"modlist\", \"software_options\", \"geo_location\"],\n    \"return_deletes\": {\n        \"edhr\": [\"_rev\", \"doc_type\"],\n        \"sims\": [\"__type\", \"requestStatus\", \"MSISDNOrMDN\", \"currentDataPlan\", \"currentSMSPlan\", \"futureDataPlan\", \"futureSMSPlan\", \"dailyDataThreshold\", \"dailySMSThreshold\", \"monthlyDataThreshold\", \"monthlySMSThreshold\", \"customField4\", \"customField5\", \"customField6\", \"lstHistoryOverLastYear\", \"lstFeatures\", \"staticIP\", \"voiceDispatchNumber\", \"mostRecentLocateId\", \"previousLocateId\", \"mostRecentLocateDate\", \"mostRecentLatitude\", \"mostRecentLongitude\", \"mostRecentAddress\", \"previousLocateDate\", \"previousLatitude\", \"previousLongitude\", \"previousAddress\", \"lstExtFeatures\"]\n    },\n    \"doc_type\": \"edhr\",\n    \"format\": \"JSON\",\n    \"object\": \"edhr\",\n    \"returns\": [\"edhr\",\"sims\"],\n    \"return_formats\": {\n        \"edhr\":\"JSON\",\n        \"sims\":\"array\"\n    },\n    \"models\": [\"edhr\"],\n    \"return_code\": 201\n};\nmsg.inputs = {\n    \"required\": [\"system_sn\", \"system_type\", \"modlist\", \"software_options\", \"timestamp\"], \n    \"allowed\": [\"location\", \"birth\", \"field_birth\"],\n    \"types\": {\n        \"timestamp\": \"number\"\n    }\n};\nif (msg.payload.hasOwnProperty(\"system_sn\")) {\n    msg.inputs.device_id = msg.payload.system_sn;\n} else {\n    msg.inputs.device_id = \"\";\n}\nif (msg.payload.birth) {\n    msg.inputs.birth = (msg.payload.birth === true); //to make copy\n    delete msg.payload.birth;\n} else {\n    msg.inputs.birth = false;\n}\nif (msg.payload.field_birth) {\n    msg.inputs.field_birth = (msg.payload.field_birth === true); //to make copy\n    delete msg.payload.field_birth;\n} else {\n    msg.inputs.field_birth = false;\n}\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/\" + msg.inputs.device_id,\n    \"method\": \"GET\",\n    \"object\": \"device\",\n    \"return_obj\": \"\"\n};\nreturn msg;",
            "y": 460,
            "x": 860,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "6e753d70.f649c4"
        },
        {
            "wires": [
                [
                    "59c9084e.ee4738"
                ]
            ],
            "name": "",
            "url": "/logs/machine_life",
            "upload": false,
            "id": "4eaa6578.efef4c",
            "swaggerDoc": "",
            "y": 780,
            "x": 120,
            "z": "c13a158d.882c9",
            "type": "http in",
            "method": "post"
        },
        {
            "info": "",
            "wires": [],
            "name": "[Devices] Log New Machine Life",
            "y": 740,
            "x": 150,
            "z": "c13a158d.882c9",
            "type": "comment",
            "id": "c84001c3.0e72e"
        },
        {
            "wires": [
                [
                    "6af691a.8709e7"
                ]
            ],
            "name": "",
            "y": 780,
            "x": 350,
            "z": "c13a158d.882c9",
            "type": "subflow:3962857e.44abba",
            "id": "59c9084e.ee4738"
        },
        {
            "wires": [
                [
                    "bccb7190.ed50a"
                ]
            ],
            "name": "",
            "y": 780,
            "x": 1220,
            "z": "c13a158d.882c9",
            "type": "subflow:71afa3f9.81defc",
            "id": "7970b698.d57dc8"
        },
        {
            "wires": [
                [
                    "4aca654c.0f624c"
                ]
            ],
            "name": "Log Machine Life New",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Log New Machine Life\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"status\", \"function_accumulator\"],\n    \"doc_type\": \"machine_life\",\n    \"format\": \"JSON\",\n    \"object\": \"machine_life\",\n    \"returns\": [\"machine_life\"],\n    \"models\": [\"machine_life\"],\n    \"return_code\": 201\n};\nmsg.inputs = {\n    \"required\": [\"system_sn\", \"function_accumulator\", \"power_on_time_stamp\", \"prev_power_off_time_stamp\"], \n    \"allowed\": []\n};\nreturn msg;",
            "y": 780,
            "x": 880,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "df25c52.2380638"
        },
        {
            "wires": [
                [
                    "557964cc.4ccf3c"
                ]
            ],
            "name": "",
            "y": 120,
            "x": 1820,
            "z": "c13a158d.882c9",
            "type": "subflow:e0cd8199.1ad77",
            "id": "7f117f38.e5dae"
        },
        {
            "wires": [
                [
                    "86fcedb.068ad1"
                ]
            ],
            "name": "case",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.records.case = {\n    \"doc_type\": \"case\",\n    \"status\": \"active\",\n    \"log_id\": \"\",\n    \"system_sn\": \"\",\n    \"system_type\": \"\",\n    \"location\": \"\",\n    \"geo_location\": \"\",\n    \"address\": \"\",\n    \"user_id\": \"\",\n    \"settings_file_id\": \"\",\n    \"settings_file_name\": \"\",\n    \"start_time\": 0,\n    \"stop_time\": 0,\n    \"case_log\": \"\"\n}\nreturn msg;",
            "y": 620,
            "x": 670,
            "z": "df6d98dd.00d378",
            "type": "function",
            "id": "e237bae3.862198"
        },
        {
            "wires": [],
            "name": "",
            "y": 120,
            "x": 2190,
            "z": "c13a158d.882c9",
            "type": "subflow:bc6ff87.05a2908",
            "id": "9ed26faa.17224"
        },
        {
            "wires": [
                [
                    "9ed26faa.17224"
                ]
            ],
            "name": "",
            "y": 120,
            "x": 2010,
            "z": "c13a158d.882c9",
            "type": "subflow:313bd1d3.01c06e",
            "id": "557964cc.4ccf3c"
        },
        {
            "tls": "",
            "wires": [
                [
                    "67a9b438.23fefc"
                ]
            ],
            "name": "Coordinates by Cell Info",
            "url": "",
            "ret": "obj",
            "id": "47d467e8.16f018",
            "y": 100,
            "x": 430,
            "z": "d1af1cc8.e0fda",
            "type": "http request",
            "method": "POST"
        },
        {
            "wires": [
                [
                    "3bd74387.03639c"
                ],
                [
                    "47d467e8.16f018"
                ]
            ],
            "name": "Check Location",
            "outputs": 2,
            "outputLabels": [
                "no loc",
                "yes loc"
            ],
            "noerr": 0,
            "func": "if(!msg.inputs.body.hasOwnProperty(\"location\") && !msg.inputs.body.hasOwnProperty(\"cell_tower_info\")) {\n    //node.warn({\"Google Loc Test\": !msg.inputs.body.hasOwnProperty(\"location\") && !msg.inputs.body.hasOwnProperty(\"cell_tower_info\")})\n    return [msg,null]\n}\nif (msg.inputs.body.hasOwnProperty(\"location\")) {\n    var carrier = msg.inputs.body.location.carrier;\n    var cellTowers = [{\n        \"cellId\": msg.inputs.body.location.cellId,\n        \"locationAreaCode\": msg.inputs.body.location.locationAreaCode,\n        \"mobileCountryCode\": msg.inputs.body.location.mobileCountryCode,\n        \"mobileNetworkCode\": msg.inputs.body.location.mobileNetworkCode\n    }];\n}\nif (msg.inputs.body.hasOwnProperty(\"cell_tower_info\")) {\n    var carrier = msg.inputs.body.cell_tower_info.Carrier;\n    var cellTowers = [{\n        \"cellId\": msg.inputs.body.cell_tower_info.CellID,\n        \"locationAreaCode\": msg.inputs.body.cell_tower_info.LAC,\n        \"mobileCountryCode\": msg.inputs.body.cell_tower_info.MCC,\n        \"mobileNetworkCode\": msg.inputs.body.cell_tower_info.MNC\n    }];\n}\nnode.warn({\"Google Loc Test\": cellTowers})\nif (cellTowers.cellId === 0) {\n    return [msg,null]\n}\nmsg.url = global.get(\"VCAP_GOOGLE\").credentials[\"Google_Geolocate_url\"] + \"?key=\" + global.get(\"VCAP_GOOGLE\").credentials.key;\nmsg.payload = {\n    \"carrier\" : carrier,\n    \"considerIP\" : false,\n    \"cellTowers\" : cellTowers\n};\nreturn [null,msg];  \n",
            "y": 60,
            "x": 200,
            "z": "d1af1cc8.e0fda",
            "type": "function",
            "id": "9531b8f5.005c08"
        },
        {
            "wires": [
                [
                    "e220d288.2368c"
                ],
                [
                    "837f04ae.861f28"
                ]
            ],
            "name": "Extract Lat & Lng",
            "outputs": 2,
            "outputLabels": [
                "no geo",
                "yes geo"
            ],
            "noerr": 0,
            "func": "if (msg.payload.hasOwnProperty(\"location\") && msg.payload.location.hasOwnProperty(\"lat\") && msg.payload.location.hasOwnProperty(\"lng\"))\n{\n    msg.inputs.body.geo_location = [ msg.payload.location.lng, msg.payload.location.lat ];\n    msg.url = global.get(\"VCAP_GOOGLE\").credentials[\"Google_Geocoding_url\"] + \"?key=\" + global.get(\"VCAP_GOOGLE\").credentials.key + \"&latlng=\" + msg.payload.location.lat + \",\" + msg.payload.location.lng;\n    return [null,msg];\n}\nelse\n{\n    return [msg,null];\n}",
            "y": 100,
            "x": 670,
            "z": "d1af1cc8.e0fda",
            "type": "function",
            "id": "67a9b438.23fefc"
        },
        {
            "tls": "",
            "wires": [
                [
                    "1140d829.f33a88"
                ]
            ],
            "name": "Coordinates by Lat & Lng",
            "url": "",
            "ret": "obj",
            "id": "837f04ae.861f28",
            "y": 140,
            "x": 910,
            "z": "d1af1cc8.e0fda",
            "type": "http request",
            "method": "POST"
        },
        {
            "wires": [
                [
                    "e220d288.2368c"
                ]
            ],
            "name": "Extract Address",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.payload.hasOwnProperty(\"results\"))\n{\n    msg.inputs.body.address = msg.payload.results[0].formatted_address\n}\nreturn msg;",
            "y": 140,
            "x": 1140,
            "z": "d1af1cc8.e0fda",
            "type": "function",
            "id": "1140d829.f33a88"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.debug) {\n    node.warn({\"Google Location\": msg});\n}",
            "y": 20,
            "x": 1530,
            "z": "d1af1cc8.e0fda",
            "type": "function",
            "id": "3bd74387.03639c"
        },
        {
            "wires": [
                [
                    "9904e65e.ae5fc8"
                ]
            ],
            "name": "",
            "y": 120,
            "x": 1220,
            "z": "c13a158d.882c9",
            "type": "subflow:d1af1cc8.e0fda",
            "id": "dae23b4c.58a628"
        },
        {
            "wires": [
                [
                    "3bd74387.03639c"
                ]
            ],
            "name": "clean up",
            "outputs": 1,
            "noerr": 0,
            "func": "delete msg.topic;\ndelete msg.url;\ndelete msg.responseUrl;\ndelete msg.statusCode;\ndelete msg.method;\ndelete msg.headers;\nreturn msg;",
            "y": 100,
            "x": 1340,
            "z": "d1af1cc8.e0fda",
            "type": "function",
            "id": "e220d288.2368c"
        },
        {
            "wires": [
                [
                    "7f117f38.e5dae"
                ],
                [
                    "4047cc95.c465f4"
                ]
            ],
            "name": "Check Zip",
            "outputs": 2,
            "outputLabels": [
                "no zip",
                "yes zip"
            ],
            "noerr": 0,
            "func": "if( Array.isArray(msg.inputs.body.case_log)) {\n    msg.payload = msg.inputs.body.case_log;\n    return [null, msg];\n}\nif(!msg.inputs.body.case_log.includes(\"\\r\\n\") && msg.inputs.body.case_log.includes(\"\\n\")) {\n    msg.inputs.body.case_log = msg.inputs.body.case_log.replace(new RegExp(\"\\n\",\"g\"), \"\\r\\n\")\n}\nreturn [msg, null]\n",
            "y": 120,
            "x": 1420,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "9904e65e.ae5fc8"
        },
        {
            "wires": [
                [
                    "1709ce1d.cc3342"
                ]
            ],
            "name": "gzip",
            "y": 160,
            "x": 1550,
            "z": "c13a158d.882c9",
            "type": "gzip",
            "id": "4047cc95.c465f4"
        },
        {
            "wires": [
                [
                    "7f117f38.e5dae"
                ]
            ],
            "name": "Unzip",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.inputs.body.case_log = msg.payload;\nreturn msg;",
            "y": 160,
            "x": 1670,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "1709ce1d.cc3342"
        },
        {
            "z": "c13a158d.882c9",
            "name": "json Parser",
            "y": 160,
            "wires": [
                [
                    "d81d6328.63bd8"
                ]
            ],
            "pretty": false,
            "action": "",
            "x": 710,
            "property": "payload",
            "type": "json",
            "id": "16e08fbd.a31d5"
        },
        {
            "wires": [
                [
                    "d81d6328.63bd8"
                ],
                [
                    "16e08fbd.a31d5"
                ]
            ],
            "name": "Check String",
            "outputs": 2,
            "outputLabels": [
                "no str",
                "yes str"
            ],
            "noerr": 0,
            "func": "if (typeof msg.payload === \"string\") { return [null, msg] }\nreturn [msg, null]; \n",
            "y": 120,
            "x": 550,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "936cde6b.71bbf"
        },
        {
            "z": "c13a158d.882c9",
            "name": "json Parser",
            "y": 500,
            "wires": [
                [
                    "6e753d70.f649c4"
                ]
            ],
            "pretty": false,
            "action": "",
            "x": 690,
            "property": "payload",
            "type": "json",
            "id": "16e45ddb.eb4f52"
        },
        {
            "wires": [
                [
                    "6e753d70.f649c4"
                ],
                [
                    "16e45ddb.eb4f52"
                ]
            ],
            "name": "Check String",
            "outputs": 2,
            "outputLabels": [
                "no str",
                "yes str"
            ],
            "noerr": 0,
            "func": "if (typeof msg.payload === \"string\") { return [null, msg] }\nreturn [msg, null]; \n",
            "y": 460,
            "x": 530,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "b4af5a85.dd66b8"
        },
        {
            "z": "c13a158d.882c9",
            "name": "json Parser",
            "y": 820,
            "wires": [
                [
                    "df25c52.2380638"
                ]
            ],
            "pretty": false,
            "action": "",
            "x": 690,
            "property": "payload",
            "type": "json",
            "id": "34fde09c.48d09"
        },
        {
            "wires": [
                [
                    "df25c52.2380638"
                ],
                [
                    "34fde09c.48d09"
                ]
            ],
            "name": "Check String",
            "outputs": 2,
            "outputLabels": [
                "no str",
                "yes str"
            ],
            "noerr": 0,
            "func": "if (typeof msg.payload === \"string\") { return [null, msg] }\nreturn [msg, null]; \n",
            "y": 780,
            "x": 530,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "6af691a.8709e7"
        },
        {
            "wires": [
                [
                    "3db4fea3.8c93c2"
                ]
            ],
            "name": "",
            "y": 780,
            "x": 1380,
            "z": "c13a158d.882c9",
            "type": "subflow:e0cd8199.1ad77",
            "id": "bccb7190.ed50a"
        },
        {
            "wires": [],
            "name": "",
            "y": 780,
            "x": 1750,
            "z": "c13a158d.882c9",
            "type": "subflow:bc6ff87.05a2908",
            "id": "b1728cc7.2155a"
        },
        {
            "wires": [
                [
                    "b1728cc7.2155a"
                ]
            ],
            "name": "",
            "y": 780,
            "x": 1570,
            "z": "c13a158d.882c9",
            "type": "subflow:313bd1d3.01c06e",
            "id": "3db4fea3.8c93c2"
        },
        {
            "wires": [
                [
                    "c66fda46.2bbc38"
                ]
            ],
            "name": "",
            "y": 460,
            "x": 1220,
            "z": "c13a158d.882c9",
            "type": "subflow:d1af1cc8.e0fda",
            "id": "d3d9378b.b98a28"
        },
        {
            "wires": [
                [
                    "1de150bb.6b7c4f"
                ],
                [
                    "6e7bfc80.952a44"
                ]
            ],
            "name": "Device Found",
            "outputs": 2,
            "outputLabels": [
                "yes",
                "no"
            ],
            "noerr": 0,
            "func": "delete msg.inputs.body.birth;\nif (msg.inputs.body.hasOwnProperty(\"location\")) { delete msg.inputs.body.location }\nif (!msg.hasOwnProperty(\"device\") || msg.device.length === 0 || msg.device[0].doc_type !== \"device\") {\n    return [null,msg]\n}\nreturn [msg,null];",
            "y": 460,
            "x": 1620,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "ff55fb19.447ac8"
        },
        {
            "wires": [
                [
                    "b832460e.4625b8"
                ]
            ],
            "name": "Device Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Device with serial number: \" + msg.inputs.device_id + \" was not found.\",\n})\nreturn msg;",
            "y": 500,
            "x": 1810,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "6e7bfc80.952a44"
        },
        {
            "wires": [],
            "name": "",
            "y": 500,
            "x": 2960,
            "z": "c13a158d.882c9",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "b832460e.4625b8"
        },
        {
            "wires": [
                [
                    "ff55fb19.447ac8"
                ]
            ],
            "name": "",
            "y": 460,
            "x": 1430,
            "z": "c13a158d.882c9",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "c66fda46.2bbc38"
        },
        {
            "wires": [
                [
                    "31ae35e1.daf33a",
                    "ed6f43d3.45a1c"
                ],
                [
                    "2c2f61c1.5814be",
                    "45b0ab31.18db54"
                ]
            ],
            "name": "Birth EDHR",
            "outputs": 2,
            "outputLabels": [
                "yes birth",
                "no birth"
            ],
            "noerr": 0,
            "func": "if (msg.inputs.birth) {\n    return [msg,null]\n} else {\n    msg.cloudant = {\n        \"request\": \"/stellaris_logs/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"last_edhr\",\n        \"selector\": {\n            \"doc_type\": \"edhr\",\n            \"system_sn\": msg.inputs.device_id,\n        },\n        \"sort\": [{\"timestamp:number\": \"desc\"}],\n        \"limit\": 2\n    };\n    msg.api.path = 2;\n    msg.records.returns.splice(msg.records.returns.indexOf(\"sims\"), 1)\n    return [null,msg]\n}",
            "y": 420,
            "x": 1970,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "76ea0f8f.2a839"
        },
        {
            "wires": [
                [
                    "76ea0f8f.2a839"
                ]
            ],
            "name": "",
            "y": 420,
            "x": 1800,
            "z": "c13a158d.882c9",
            "type": "subflow:e0cd8199.1ad77",
            "id": "1de150bb.6b7c4f"
        },
        {
            "wires": [
                [
                    "face4fb3.a4bda"
                ],
                [
                    "834ab15d.2f968"
                ]
            ],
            "name": "EDHR Changes",
            "outputs": 2,
            "outputLabels": [
                "yes last_edhr",
                "no last_edhr"
            ],
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"last_edhr\") || msg.last_edhr.length < 2) {\n    //no EDHR with no birth flag send error\n    return [null,msg];\n}\nmsg.last_edhr.splice(0,1); //remove the latest one of 2 retrieved\nvar new_modlist = msg.edhr[0].modlist;\nvar modlist = msg.last_edhr[0].modlist;\nvar new_software_options = msg.edhr[0].software_options;\nvar software_options = msg.last_edhr[0].software_options;\n// Do not trigger a change email on these items changing\nvar no_trigger_modlist =\n{\n    \"footrx_info\" : \"FC Receiver\",\n    \"footctrl_info\" : \"Foot Control\",\n    \"foottx_info\" : \"FC Transmitter\",\n    \"mmc_info\" : \"MMC\"\n}\n//compare\nvar mod_compare = objectsAreEqual(new_modlist, modlist);\nvar software_options_compare = objectsAreEqual(new_software_options, software_options);\nif(mod_compare[0] !== true)\n{\n    mod_compare[0] = true;\n    var diff = {};\n    for (var prop in mod_compare[1])\n    {\n        if (!no_trigger_modlist.hasOwnProperty(prop))\n        {\n            diff[prop] = mod_compare[1][prop];\n            mod_compare[0] = false;\n        }\n    }\n    if (mod_compare[0] !== false)\n    {\n        mod_compare[1] = diff;\n    }\n}\nif(!mod_compare[0] || !software_options_compare[0]) {\n    //change exists log edhr and send edhr change email\n    msg.diffs = {\n        \"module_diff\" : mod_compare[1],\n        \"software_diff\" : software_options_compare[1]\n    };\n    var propertyList = [\"service_area\",\"service_region\",\"service_territory\", \"sales_area\", \"sales_region\", \"sales_territory\"];\n    var filter = {};\n    var device = msg.device[0];\n    Object.keys(device).forEach(function(propertyName){\n        if(propertyList.indexOf(propertyName)>=0){\n            if(device[propertyName] === \"\"){\n                filter[propertyName] = \"ALL\"\n            }\n            else {\n                filter[propertyName] = {\"$or\": [device[propertyName], \"ALL\"]}\n            }\n        }\n    });\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"bookmark_type\": \"payload\", //\"payload\", \"parameter\"\n        \"fields\": [\"email\"],\n        \"object\": \"email_users\",\n        \"selector\": {\n    \t\t\"$and\": [\n    \t\t\t{\"doc_type\": \"user\"},\n    \t\t\t{\"status\": \"active\"},\n    \t\t\t{\"gets_change_email\": true},\n    \t\t\t{\"business_unit\": {\"$or\": [device.business_unit, \"ALL\"]}},\n        \t\t{ \"$or\": [\n        \t\t\t{\"$and\": [\n        \t\t\t\t{\"bart_sart\": \"sart\"},\n        \t\t\t\t{\"service_area\": filter.service_area},\n        \t\t\t\t{\"service_region\": filter.service_region},\n        \t\t\t\t{\"service_territory\": filter.service_territory}\n        \t\t\t\t]},\n        \t\t\t{\"$and\": [\n        \t\t\t\t{\"bart_sart\": \"bart\"},\n        \t\t\t\t{\"sales_area\": filter.sales_area},\n        \t\t\t\t{\"sales_region\": filter.sales_region},\n        \t\t\t\t{\"sales_territory\": filter.sales_territory}\n        \t\t\t\t]}\n        \t\t\t]}\n        \t\t]\n    \t}\n    }\n    return [msg,null];\n} else {\n    //no change log edhr do nothing\n}\n\n//function used to compare objects\nfunction objectsAreEqual(a, b) {\n  var diff = {};\n  var equal = true;\n  for (var prop in a) {\n    if (a.hasOwnProperty(prop)) {\n      if (b.hasOwnProperty(prop)) {\n        if (typeof a[prop] === 'object') {\n          if (!propertiesAreEqual(a[prop], b[prop])) {\n            diff[prop] = b[prop];\n            equal = false;\n          }\n        } else {\n          if (a[prop] !== b[prop]) {\n            diff[prop] = b[prop];\n            equal = false;\n          }\n        }\n      } else {\n      \tdiff[prop] = \"Item Missing\";\n        equal = false;\n      }\n    }\n  }\n  for (var propb in b) {\n    if (!a.hasOwnProperty(propb)) {\n      \tdiff[propb] = b[propb];\n        equal = false;\n      }\n    }\n  return [equal, diff];\n}\n\n//function used to compare properties (which may be objects or properties themselves)\nfunction propertiesAreEqual(a, b) {\n  var equal = true;\n  for (var prop in a) {\n    if (a.hasOwnProperty(prop)) {\n      if (b.hasOwnProperty(prop)) {\n        if (typeof a[prop] === 'object') {\n          if (!propertiesAreEqual(a[prop], b[prop])) {\n            equal = false;\n          }\n        } else {\n          if (a[prop] !== b[prop]) {\n            equal = false;\n          }\n        }\n      } else {\n        equal = false;\n      }\n    }\n  }\n  for (var propb in b) {\n    if (!a.hasOwnProperty(propb)) {\n       equal = false; \n    }\n  }\n  return equal;\n}",
            "y": 460,
            "x": 2560,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "fea2f747.faca78"
        },
        {
            "wires": [],
            "name": "",
            "y": 280,
            "x": 4070,
            "z": "c13a158d.882c9",
            "type": "subflow:bc6ff87.05a2908",
            "id": "9a2b83eb.4bddf"
        },
        {
            "wires": [
                [
                    "294a1eec.7dd4a2"
                ]
            ],
            "name": "Update Device",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.inputs.edhr_body = Object.assign({}, msg.inputs.body);\nmsg.inputs.body =  msg.device[0];\nmsg.inputs.body.edhr_birth_record_id = msg.edhr[0]._id;\nmsg.records.object = \"device\";\nmsg.records.doc_type = \"device\";\nmsg.records.id =  msg.device[0]._id;\ndelete msg.cloudant.object;\ndelete msg.cloudant.doc_type;\ndelete msg.device;\n\nreturn msg;",
            "y": 280,
            "x": 2000,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "ed6f43d3.45a1c"
        },
        {
            "wires": [
                [
                    "fcbe3ce0.afe1e"
                ]
            ],
            "name": "",
            "y": 280,
            "x": 2190,
            "z": "c13a158d.882c9",
            "type": "subflow:68197f61.7975",
            "id": "294a1eec.7dd4a2"
        },
        {
            "wires": [
                [
                    "547b5bc9.3f8334"
                ]
            ],
            "name": "SIM Loop in",
            "links": [
                "df0facf9.de32f"
            ],
            "y": 200,
            "x": 2415,
            "z": "c13a158d.882c9",
            "type": "link in",
            "id": "e6bae4eb.61e7f8"
        },
        {
            "wires": [],
            "name": "SIM Loop out",
            "links": [
                "e6bae4eb.61e7f8"
            ],
            "y": 180,
            "x": 3455,
            "z": "c13a158d.882c9",
            "type": "link out",
            "id": "df0facf9.de32f"
        },
        {
            "wires": [
                [
                    "a7846b6a.8031c8"
                ]
            ],
            "name": "Birth Email",
            "outputs": 1,
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"email\")) { msg.email = {} }\nvar edhr = msg.edhr[0];\nvar device = msg.device[0];\nvar mod_string = \"\";\n\n// Software Option Names\nvar software_list =\n{\n    \"vitesse_enabled\" : \"Vitesse\",\n    \"gateway_enabled\" : \"Gateway\",\n};\n\n// All possible modules\nvar full_modlist =\n{\n    \"uic_info\" : \"UIC\",\n    \"remote_info\" : \"Remote\",\n    \"anterior_info\" : \"Anterior\",\n    \"ivpole_info\" : \"IVPole\",\n    \"footcan_info\" : \"FCIB\",\n    \"footrx_info\" : \"FC Receiver\",\n    \"footctrl_info\" : \"Foot Control\",\n    \"foottx_info\" : \"FC Transmitter\",\n    \"power_info\" : \"Power Supply\",\n    \"fluidics_info\" : \"Fluidics\",\n    \"compressor_info\" : \"Compressor\",\n    \"posterior_info\" : \"Illumination\",\n    \"glm_info\" : \"Laser\",\n    \"lamp1_info\" : \"Lamp 1\",\n    \"lamp2_info\" : \"Lamp 2\",\n    \"mmc_info\" : \"MMC\",\n    \"gateway_info\" : \"Gateway\",\n    \"sim1_iccid\" : \"SIM 1\",\n    \"sim2_iccid\" : \"SIM 2\"\n};\n\n// Stellaris PC Laser System - 7.5K\nvar BL15455 =\n{\n    \"uic_info\" : \"UIC\",\n    \"remote_info\" : \"Remote\",\n    \"anterior_info\" : \"Anterior\",\n    \"ivpole_info\" : \"IVPole\",\n    \"footcan_info\" : \"FCIB\",\n    \"footrx_info\" : \"FC Receiver\",\n    \"footctrl_info\" : \"Foot Control\",\n    \"foottx_info\" : \"FC Transmitter\",\n    \"power_info\" : \"Power Supply\",\n    \"fluidics_info\" : \"Fluidics\",\n    \"compressor_info\" : \"Compressor\",\n    \"posterior_info\" : \"Illumination\",\n    \"glm_info\" : \"Laser\",\n    \"lamp1_info\" : \"Lamp 1\",\n    \"lamp2_info\" : \"Lamp 2\",\n    \"gateway_info\" : \"Gateway\",\n    \"sim1_iccid\" : \"SIM 1\"\n};\n\n// Stellaris PC Laser System - 5.0K\nvar BL15335 = BL15455;\n\n// Stellaris PC Combined System - 7.5K\nvar BL14455 =\n{\n    \"uic_info\" : \"UIC\",\n    \"remote_info\" : \"Remote\",\n    \"anterior_info\" : \"Anterior\",\n    \"ivpole_info\" : \"IVPole\",\n    \"footcan_info\" : \"FCIB\",\n    \"footrx_info\" : \"FC Receiver\",\n    \"footctrl_info\" : \"Foot Control\",\n    \"foottx_info\" : \"FC Transmitter\",\n    \"power_info\" : \"Power Supply\",\n    \"fluidics_info\" : \"Fluidics\",\n    \"compressor_info\" : \"Compressor\",\n    \"posterior_info\" : \"Illumination\",\n    \"lamp1_info\" : \"Lamp 1\",\n    \"lamp2_info\" : \"Lamp 2\",\n    \"gateway_info\" : \"Gateway\",\n    \"sim1_iccid\" : \"SIM 1\"\n};\n\n// Stellaris PC Combined System - 5.0K\nvar BL14335 = BL14455;\n\n// Anterior System - HFM\nvar BL11145 =\n{\n    \"uic_info\" : \"UIC\",\n    \"remote_info\" : \"Remote\",\n    \"anterior_info\" : \"Anterior\",\n    \"ivpole_info\" : \"IVPole\",\n    \"footrx_info\" : \"FC Receiver\",\n    \"footctrl_info\" : \"Foot Control\",\n    \"foottx_info\" : \"FC Transmitter\",\n    \"foot_ctrl_info\" : \"Foot Control\",\n    \"power_info\" : \"Power Supply\",\n    \"fluidics_info\" : \"Fluidics\",\n    \"compressor_info\" : \"Compressor\",\n    \"gateway_info\" : \"Gateway\",\n    \"sim1_iccid\" : \"SIM 1\"\n};\n\n// Anterior System - VFM\nvar BL11115 = BL11145;\n    \n// Anterior System - AFM\nvar BL11125 = BL11145;\n\nvar system_modlist;\nif (msg.device.system_type == \"BL15455\")\n    system_modlist = BL15455;\nelse if (msg.device.system_type == \"BL15335\")\n    system_modlist = BL15335;\nelse if (msg.device.system_type == \"BL14455\")\n    system_modlist = BL14455;\nelse if (msg.device.system_type == \"BL14335\")\n    system_modlist = BL14335;\nelse if (msg.device.system_type == \"BL11145\")\n    system_modlist = BL11145;\nelse if (msg.device.system_type == \"BL11115\")\n    system_modlist = BL11115;\nelse if (msg.device.system_type == \"BL11125\")\n    system_modlist = BL11125;\nelse\n    system_modlist = BL15455;\n\nif (edhr.software_options.gateway_enabled == \"disabled\")\n{\n    delete system_modlist.gateway_info;\n    delete system_modlist.sim1_iccid;\n}\n\nfor(var propertyName in edhr.modlist) \n{\n    var itemPrinted = false;\n    if (system_modlist.hasOwnProperty(propertyName))\n    {\n        mod_string += \n            full_modlist[propertyName] +\n            \", \" + edhr.modlist[propertyName].SN;\n        if (edhr.modlist[propertyName].present != \"PRESENT\")\n        {\n            mod_string += \", \" + edhr.modlist[propertyName].present;\n        }\n        itemPrinted = true;\n    }\n\t// Unexpected and present\n    else if (full_modlist.hasOwnProperty(propertyName) &&\n\t\t\t edhr.modlist[propertyName].present == \"PRESENT\")\n    {\n        mod_string += \n            full_modlist[propertyName] +\n            \", \" + edhr.modlist[propertyName].SN;\n        itemPrinted = true;\n    }\n\t// SW & HW\n    //expected or present with SW/HW\n    if ((system_modlist.hasOwnProperty(propertyName) || \n         edhr.modlist[propertyName].present == \"PRESENT\") &&\n        edhr.modlist[propertyName].SW_version !== \"\")\n    {\n        mod_string +=\n            \", SW v\" + edhr.modlist[propertyName].SW_version +\n            \", HW v\" + edhr.modlist[propertyName].HW_version;\n        itemPrinted = true;\n    }\n    //expected or present without SW/HW\n    else if (system_modlist.hasOwnProperty(propertyName) || \n             edhr.modlist[propertyName].present == \"PRESENT\")\n    {\n        // end the string\n        // nothing to add here\n        itemPrinted = true;\n    }\n    //expected but missing\n    else if (system_modlist.hasOwnProperty(propertyName) &&\n              edhr.modlist[propertyName].present !== \"PRESENT\")\n    {\n        mod_string += \", \" + edhr.modlist[propertyName].present;\n        itemPrinted = true;\n    }\n    // end the line\n    if (itemPrinted === true)\n    {\n        mod_string += \"\\n<br />\\n\";\n    }\n}\n\nvar settings_string = \"\";\n\nfor(var propertyName in edhr.software_options) \n{\n    settings_string += \n        software_list[propertyName] + \n        \": \" + edhr.software_options[propertyName] + \n        \"\\n<br />\\n\";\n}\n\nmsg.email.topic = \"Machine Birth Certificate for \" + device._id;\nmsg.email.to = global.get(\"BIRTH_EMAIL_DISTRIBUTION\");\nmsg.email.template_type = \"device_birth\";\nmsg.email.fields = {\n    \"system_type\": device.system_type,\n    \"system_sn\": device._id,\n    \"system_birth_date\":  new Date(edhr.timestamp),\n    \"system_config\": mod_string,\n    \"software_options\": settings_string,\n};\nreturn msg;",
            "y": 400,
            "x": 2930,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "31ae35e1.daf33a"
        },
        {
            "wires": [
                []
            ],
            "name": "",
            "y": 400,
            "x": 3100,
            "z": "c13a158d.882c9",
            "type": "subflow:5dbd57cc.fc9bb8",
            "id": "a7846b6a.8031c8"
        },
        {
            "wires": [
                [
                    "a7846b6a.8031c8"
                ]
            ],
            "name": "Change Email",
            "outputs": 1,
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"email\")) { msg.email = {} }\nvar edhr = msg.edhr[0];\nvar device = msg.device[0];\nmsg.email.to = msg.email_users.map(a => a.email);\n\n//set up email\nvar mod_string = \"\";\nvar mod_changes_string = \"\";\nvar mod_changed = false;\nvar mult_mod_changed = false;\n\n// Software Option Names\nvar software_list =\n{\n    \"vitesse_enabled\" : \"Vitesse\",\n    \"gateway_enabled\" : \"Gateway\",\n};\n\n// All possible modules\nvar full_modlist =\n{\n    \"uic_info\" : \"UIC\",\n    \"remote_info\" : \"Remote\",\n    \"anterior_info\" : \"Anterior\",\n    \"ivpole_info\" : \"IVPole\",\n    \"footcan_info\" : \"FCIB\",\n    \"footrx_info\" : \"FC Receiver\",\n    \"footctrl_info\" : \"Foot Control\",\n    \"foottx_info\" : \"FC Transmitter\",\n    \"power_info\" : \"Power Supply\",\n    \"fluidics_info\" : \"Fluidics\",\n    \"compressor_info\" : \"Compressor\",\n    \"posterior_info\" : \"Illumination\",\n    \"glm_info\" : \"Laser\",\n    \"lamp1_info\" : \"Lamp 1\",\n    \"lamp2_info\" : \"Lamp 2\",\n    \"mmc_info\" : \"MMC\",\n    \"gateway_info\" : \"Gateway\",\n    \"sim1_iccid\" : \"SIM 1\",\n    \"sim2_iccid\" : \"SIM 2\"\n};\n\n// Stellaris PC Laser System - 7.5K\nvar BL15455 =\n{\n    \"uic_info\" : \"UIC\",\n    \"remote_info\" : \"Remote\",\n    \"anterior_info\" : \"Anterior\",\n    \"ivpole_info\" : \"IVPole\",\n    \"footcan_info\" : \"FCIB\",\n    \"footrx_info\" : \"FC Receiver\",\n    \"footctrl_info\" : \"Foot Control\",\n    \"foottx_info\" : \"FC Transmitter\",\n    \"power_info\" : \"Power Supply\",\n    \"fluidics_info\" : \"Fluidics\",\n    \"compressor_info\" : \"Compressor\",\n    \"posterior_info\" : \"Illumination\",\n    \"glm_info\" : \"Laser\",\n    \"lamp1_info\" : \"Lamp 1\",\n    \"lamp2_info\" : \"Lamp 2\",\n    \"gateway_info\" : \"Gateway\",\n    \"sim1_iccid\" : \"SIM 1\"\n};\n\n// Stellaris PC Laser System - 5.0K\nvar BL15335 = BL15455;\n\n// Stellaris PC Combined System - 7.5K\nvar BL14455 =\n{\n    \"uic_info\" : \"UIC\",\n    \"remote_info\" : \"Remote\",\n    \"anterior_info\" : \"Anterior\",\n    \"ivpole_info\" : \"IVPole\",\n    \"footcan_info\" : \"FCIB\",\n    \"footrx_info\" : \"FC Receiver\",\n    \"footctrl_info\" : \"Foot Control\",\n    \"foottx_info\" : \"FC Transmitter\",\n    \"power_info\" : \"Power Supply\",\n    \"fluidics_info\" : \"Fluidics\",\n    \"compressor_info\" : \"Compressor\",\n    \"posterior_info\" : \"Illumination\",\n    \"lamp1_info\" : \"Lamp 1\",\n    \"lamp2_info\" : \"Lamp 2\",\n    \"gateway_info\" : \"Gateway\",\n    \"sim1_iccid\" : \"SIM 1\"\n};\n\n// Stellaris PC Combined System - 5.0K\nvar BL14335 = BL14455;\n\n// Anterior System - HFM\nvar BL11145 =\n{\n    \"uic_info\" : \"UIC\",\n    \"remote_info\" : \"Remote\",\n    \"anterior_info\" : \"Anterior\",\n    \"ivpole_info\" : \"IVPole\",\n    \"footcan_info\" : \"FCIB\",\n    \"footrx_info\" : \"FC Receiver\",\n    \"footctrl_info\" : \"Foot Control\",\n    \"foottx_info\" : \"FC Transmitter\",\n    \"power_info\" : \"Power Supply\",\n    \"fluidics_info\" : \"Fluidics\",\n    \"compressor_info\" : \"Compressor\",\n    \"gateway_info\" : \"Gateway\",\n    \"sim1_iccid\" : \"SIM 1\"\n};\n\n// Anterior System - VFM\nvar BL11115 = BL11145;\n    \n// Anterior System - AFM\nvar BL11125 = BL11145;\n\nvar system_modlist;\nif (device.system_type == \"BL15455\")\n    system_modlist = BL15455;\nelse if (device.system_type == \"BL15335\")\n    system_modlist = BL15335;\nelse if (device.system_type == \"BL14455\")\n    system_modlist = BL14455;\nelse if (device.system_type == \"BL14335\")\n    system_modlist = BL14335;\nelse if (device.system_type == \"BL11145\")\n    system_modlist = BL11145;\nelse if (device.system_type == \"BL11115\")\n    system_modlist = BL11115;\nelse if (device.system_type == \"BL11125\")\n    system_modlist = BL11125;\nelse\n    system_modlist = BL15455;\n\nif (edhr.software_options.gateway_enabled == \"disabled\")\n{\n    delete system_modlist.gateway_info;\n    delete system_modlist.sim1_iccid;\n}\n\nfor(var propertyName in system_modlist) \n{\n    if (system_modlist.hasOwnProperty(propertyName))\n    {\n        if (edhr.modlist.hasOwnProperty(propertyName))\n        {\n            mod_string += \n                full_modlist[propertyName];\n            //expected and present\n            if (edhr.modlist[propertyName].present == \"PRESENT\")\n            {\n                mod_string += \", \" + edhr.modlist[propertyName].SN;\n            }\n            //expected but missing\n            else\n            {\n                mod_string += \", \" + edhr.modlist[propertyName].present;\n            }\n        }\n        //expected but missing\n        else\n        {\n            mod_string += full_modlist[propertyName] + \", MISSING\";\n        }\n    }\n\t// Unexpected and present\n    else if (full_modlist.hasOwnProperty(propertyName) &&\n             edhr.modlist.hasOwnProperty(propertyName) &&\n             edhr.modlist[propertyName].present == \"PRESENT\")\n    {\n        mod_string += \n            full_modlist[propertyName] +\n            \", \" + edhr.modlist[propertyName].SN;\n    }\n\t// SW & HW\n    //expected or present with SW/HW\n    if (edhr.modlist.hasOwnProperty(propertyName) &&\n        (system_modlist.hasOwnProperty(propertyName) || \n         edhr.modlist[propertyName].present == \"PRESENT\") &&\n        edhr.modlist[propertyName].SW_version !== \"\")\n    {\n        mod_string +=\n            \", SW v\" + edhr.modlist[propertyName].SW_version +\n            \", HW v\" + edhr.modlist[propertyName].HW_version;\n    }\n    //expected or present without SW/HW\n    else if (edhr.modlist.hasOwnProperty(propertyName) &&\n             (system_modlist.hasOwnProperty(propertyName) || \n              edhr.modlist[propertyName].present == \"PRESENT\"))\n    {\n        // end the string\n        // nothing to add here\n    }\n    // end the line\n    mod_string += \"\\n<br />\\n\"; \n}\nfor(var propertyName in msg.diffs.module_diff) \n{\n\tif (full_modlist.hasOwnProperty(propertyName))\n\t{\n\t\tmod_changes_string += full_modlist[propertyName];\n\t}\n\telse\n\t{\n\t\tmod_changes_string += propertyName;\n\t}\n\tmod_changes_string += \":\\n<br />\\n\" + \"From: \";\n    if (typeof msg.diffs.module_diff[propertyName] === 'object')\n    {\n\t\tif (msg.diffs.module_diff[propertyName].present == \"PRESENT\")\n\t\t{\n\t\t    mod_changes_string +=\n                msg.diffs.module_diff[propertyName].SN;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmod_changes_string += msg.diffs.module_diff[propertyName].present;\n\t\t}\n\t\t// Present with SW/HW\n\t\tif ((msg.diffs.module_diff[propertyName].present == \"PRESENT\") &&\n\t\t\tmsg.diffs.module_diff[propertyName].SW_version !== \"\")\n\t\t{\n\t\t\tmod_changes_string +=\n\t\t\t\t\", SW v\" + msg.diffs.module_diff[propertyName].SW_version +\n\t\t\t\t\", HW v\" + msg.diffs.module_diff[propertyName].HW_version;\n\t\t}\n\t\t// Present without SW/HW\n\t\telse if (msg.diffs.module_diff[propertyName].present == \"PRESENT\")\n\t\t{\n\t\t\t// end the string\n\t\t\t// nothing to add here\n\t\t}\n\t\t// Missing\n\t\telse if (msg.diffs.module_diff[propertyName].present !== \"PRESENT\")\n\t\t{\n\t\t\tmod_string += \", \" + msg.diffs.module_diff[propertyName].present;\n\t\t}\n    }\n    else\n    {\n    \tmod_changes_string += msg.diffs.module_diff[propertyName];\n    }\n    if (edhr.modlist.hasOwnProperty(propertyName))\n    {\n        mod_changes_string += \"\\n<br />\\n\" + \"To:&emsp; \" +\n        edhr.modlist[propertyName].SN;\n\t\tif (edhr.modlist[propertyName].present != \"PRESENT\")\n\t\t{\n\t\t\tmod_changes_string += \", \" + edhr.modlist[propertyName].present;\n\t\t}\n\t\t// Present with SW/HW\n\t\tif ((edhr.modlist[propertyName].present == \"PRESENT\") &&\n\t\t\tedhr.modlist[propertyName].SW_version !== \"\")\n\t\t{\n\t\t\tmod_changes_string +=\n\t\t\t\t\", SW v\" + edhr.modlist[propertyName].SW_version +\n\t\t\t\t\", HW v\" + edhr.modlist[propertyName].HW_version;\n\t\t}\n\t\t// Present without SW/HW\n\t\telse if (edhr.modlist[propertyName].present == \"PRESENT\")\n\t\t{\n\t\t\t// end the string\n\t\t\t// nothing to add here\n\t\t}\n\t\t// Missing\n\t\telse if (edhr.modlist[propertyName].present !== \"PRESENT\")\n\t\t{\n\t\t\tmod_string += \", \" + edhr.modlist[propertyName].present;\n\t\t}\n    }\n    else\n    {\n        mod_changes_string += \"\\n<br />\\n\" + \"To:&emsp; Item Missing\";\n    }\n    mod_changes_string += \"\\n<br />\\n\";\n    if (mod_changed === true) mult_mod_changed = true;\n    else mod_changed = true;\n}\nvar mod_changed_text = \"\";\nif (mod_changed)\n{\n    mod_changed_text += \"The following module\";\n    if (mult_mod_changed) mod_changed_text += \"s\";\n    mod_changed_text += \" changed:\" +\n    \"\\n<br />\\n\" +\n    mod_changes_string +\n    \"\\n<br />\\n\";\n}\n\nvar settings_string = \"\";\nvar settings_changes_string = \"\";\nvar settings_changed = false;\nvar mult_settings_changed = false;\n\nfor(var propertyName in edhr.software_options) \n{\n    settings_string += \n        software_list[propertyName] + \n        \": \" + edhr.software_options[propertyName] + \n        \"\\n<br />\\n\";\n}\n\nfor(var propertyName in msg.diffs.software_diff) \n{\n    settings_changes_string += software_list[propertyName] + \": From \" +\n        msg.diffs.software_diff[propertyName];\n    if (edhr.software_options.hasOwnProperty(propertyName))\n    {\n        settings_changes_string += \" to \" +\n        edhr.software_options[propertyName];\n    }\n    settings_changes_string += \"\\n<br />\\n\";\n    if (settings_changed === true) mult_settings_changed = true;\n    else settings_changed = true;\n}\nvar settings_changed_text = \"\";\nif (settings_changed)\n{\n    settings_changed_text += \"The following setting\";\n    if (mult_settings_changed) settings_changed_text += \"s\";\n    settings_changed_text += \" changed:\" +\n    \"\\n<br />\\n\" +\n    settings_changes_string +\n    \"\\n<br />\\n\";\n}\nmsg.email.topic = \"Machine Change Certificate for \" + device._id;\nmsg.email.template_type = \"device_change\";\nmsg.email.fields = {\n    \"system_type\": device.system_type,\n    \"system_sn\": device._id,\n    \"update_time_stamp\":  new Date(edhr.timestamp),\n    \"mode_changes\": mod_changed_text,\n    \"settings_changes\": settings_changed_text,\n    \"system_config\": mod_string,\n    \"software_options\": settings_string,\n};\nreturn msg;",
            "y": 440,
            "x": 2940,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "d41b7ed3.80e1e"
        },
        {
            "wires": [
                [
                    "d41b7ed3.80e1e"
                ]
            ],
            "name": "",
            "y": 440,
            "x": 2750,
            "z": "c13a158d.882c9",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "face4fb3.a4bda"
        },
        {
            "wires": [
                [
                    "b832460e.4625b8"
                ]
            ],
            "name": "Last EDHR Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"There are no EDHR records for \" + msg.inputs.device_id + \". Please set birth flag if birthing.\",\n})\nreturn msg;",
            "y": 480,
            "x": 2760,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "834ab15d.2f968"
        },
        {
            "wires": [
                [
                    "fea2f747.faca78"
                ]
            ],
            "name": "",
            "y": 460,
            "x": 2370,
            "z": "c13a158d.882c9",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "2c2f61c1.5814be"
        },
        {
            "wires": [
                [
                    "281bd196.6135ce"
                ]
            ],
            "name": "",
            "y": 1000,
            "x": 430,
            "z": "c13a158d.882c9",
            "type": "subflow:3962857e.44abba",
            "id": "3b954974.1484e6"
        },
        {
            "wires": [
                [
                    "cb138a3b.4a5498"
                ]
            ],
            "name": "Log EDHR",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Log EDHR\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\"],\n    \"object\": \"edhr\",\n    \"format\": \"JSON\",\n    \"returns\": [\"edhr\"]\n};\nmsg.inputs = {};\nmsg.filters = {};\nmsg.cloudant = {\n    \"request\": \"/stellaris_logs/\" + msg.req.params.edhrID,\n    \"method\": \"GET\",\n    \"return_obj\": \"\"\n};\nreturn msg;",
            "y": 1000,
            "x": 610,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "281bd196.6135ce"
        },
        {
            "wires": [
                [
                    "3b954974.1484e6"
                ]
            ],
            "name": "",
            "url": "/logs/edhr/:edhrID",
            "upload": false,
            "id": "af176d8c.7bff5",
            "swaggerDoc": "",
            "y": 1000,
            "x": 120,
            "z": "c13a158d.882c9",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "9f6e0906.b01d68"
                ]
            ],
            "name": "",
            "y": 920,
            "x": 850,
            "z": "c13a158d.882c9",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "cb138a3b.4a5498"
        },
        {
            "wires": [
                [
                    "8be210b3.c39db"
                ],
                [
                    "44e94690.e0c348"
                ]
            ],
            "name": "Check Doc_Type & Found?",
            "outputs": 2,
            "outputLabels": [
                "found",
                "not found"
            ],
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(msg.records.object) && msg[msg.records.object][0].doc_type === msg.records.object ){\n    return [msg,null]\n    node.warn({\"Doc Type Match\": msg[msg.records.object][0].doc_type, msg});\n} else {\n    //error message\n    node.warn({\"Doc Type Does NOT Match\": msg[msg.records.object][0].doc_type, msg});\n    msg[msg.records.object] = [{}];\n    return [null,msg]\n}",
            "y": 920,
            "x": 1080,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "9f6e0906.b01d68"
        },
        {
            "wires": [
                [
                    "cb138a3b.4a5498"
                ]
            ],
            "name": "Log Machine Life",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Log Machine Life\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\"],\n    \"object\": \"machine_life\",\n    \"format\": \"JSON\",\n    \"returns\": [\"machine_life\"]\n};\nmsg.inputs = {};\nmsg.filters = {};\nmsg.cloudant = {\n    \"request\": \"/stellaris_logs/\" + msg.req.params.machine_lifeID,\n    \"method\": \"GET\",\n    \"return_obj\": \"\"\n};\nreturn msg;",
            "y": 920,
            "x": 630,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "728e2f44.71ddf"
        },
        {
            "wires": [
                [
                    "cb138a3b.4a5498"
                ]
            ],
            "name": "Log Case",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Log Case\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\"],\n    \"object\": \"case\",\n    \"format\": \"JSON\",\n    \"returns\": [\"case\"]\n};\nmsg.inputs = {};\nmsg.filters = {};\nmsg.cloudant = {\n    \"request\": \"/stellaris_logs/\" + msg.req.params.caseID,\n    \"method\": \"GET\",\n    \"return_obj\": \"\"\n};\nreturn msg;",
            "y": 1080,
            "x": 600,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "54d2c108.2f69"
        },
        {
            "wires": [
                [
                    "df945697.3a0d88"
                ]
            ],
            "name": "",
            "y": 900,
            "x": 1310,
            "z": "c13a158d.882c9",
            "type": "subflow:313bd1d3.01c06e",
            "id": "8be210b3.c39db"
        },
        {
            "wires": [
                [
                    "728e2f44.71ddf"
                ]
            ],
            "name": "",
            "y": 920,
            "x": 430,
            "z": "c13a158d.882c9",
            "type": "subflow:3962857e.44abba",
            "id": "26694e23.686142"
        },
        {
            "wires": [
                [
                    "54d2c108.2f69"
                ]
            ],
            "name": "",
            "y": 1080,
            "x": 430,
            "z": "c13a158d.882c9",
            "type": "subflow:3962857e.44abba",
            "id": "2cc8cae9.633576"
        },
        {
            "wires": [],
            "name": "",
            "y": 900,
            "x": 1490,
            "z": "c13a158d.882c9",
            "type": "subflow:bc6ff87.05a2908",
            "id": "df945697.3a0d88"
        },
        {
            "wires": [
                [
                    "26694e23.686142"
                ]
            ],
            "name": "",
            "url": "/logs/machine_life/:machine_lifeID",
            "upload": false,
            "id": "5f1f858.6f20d7c",
            "swaggerDoc": "",
            "y": 920,
            "x": 170,
            "z": "c13a158d.882c9",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "2cc8cae9.633576"
                ]
            ],
            "name": "",
            "url": "/logs/cases/:caseID",
            "upload": false,
            "id": "f73ba262.d5b9b",
            "swaggerDoc": "",
            "y": 1080,
            "x": 130,
            "z": "c13a158d.882c9",
            "type": "http in",
            "method": "get"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] Log EDHR",
            "y": 960,
            "x": 100,
            "z": "c13a158d.882c9",
            "type": "comment",
            "id": "cab40ca4.51738"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] Log Machine Life",
            "y": 880,
            "x": 120,
            "z": "c13a158d.882c9",
            "type": "comment",
            "id": "1fa7e252.0b1b6e"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] Log Case",
            "y": 1040,
            "x": 100,
            "z": "c13a158d.882c9",
            "type": "comment",
            "id": "e7bcaed2.c98ef"
        },
        {
            "wires": [
                [
                    "986af045.2f9b5"
                ]
            ],
            "name": "",
            "url": "/images/:filename",
            "upload": false,
            "id": "691abd3f.b624b4",
            "swaggerDoc": "",
            "y": 600,
            "x": 120,
            "z": "57a5a054.9dfd3",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "96b475e9.662688"
                ]
            ],
            "name": "Get Email Images",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = {\n        \"name\": \"Email Image\",\n        \"version\": 2.0\n    };\nmsg.cos = {\n    \"method\": \"GET\",\n    \"filename\": \"machin_img.jpg\",\n    \"container\": \"email-images\" }\nreturn msg;",
            "y": 640,
            "x": 350,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "bcbd04d6.dd9898"
        },
        {
            "wires": [],
            "name": "Return Image",
            "headers": {},
            "y": 600,
            "x": 1010,
            "z": "57a5a054.9dfd3",
            "type": "http response",
            "id": "ebfc8e3f.ff38c",
            "statusCode": ""
        },
        {
            "repeat": "",
            "y": 640,
            "name": "",
            "crontab": "",
            "id": "7ee37e0c.262d9",
            "topic": "",
            "payloadType": "date",
            "wires": [
                [
                    "bcbd04d6.dd9898"
                ]
            ],
            "onceDelay": "",
            "x": 160,
            "z": "57a5a054.9dfd3",
            "type": "inject",
            "payload": "",
            "once": false
        },
        {
            "info": "",
            "wires": [],
            "name": "[EMAILS] [EULA}  Email Image",
            "y": 560,
            "x": 140,
            "z": "57a5a054.9dfd3",
            "type": "comment",
            "id": "cad137ba.8d04e8"
        },
        {
            "wires": [
                [
                    "8c80fe37.7909a"
                ]
            ],
            "name": "Surgeon Verify",
            "outputs": 1,
            "noerr": 0,
            "func": "var genPwd = global.get(\"genpwd\");\nmsg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Surgeon Verify\"\n    });\nmsg.records = {\n    \"doc_type\": \"user\",\n    \"object\": \"user\",\n    \"password\": genPwd.generate(global.get(\"PWD_GEN\"))\n};\nmsg.inputs = {\n    \"key\": msg.req.params.key\n};\nreturn msg;",
            "y": 140,
            "x": 660,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "951b9520.93d548"
        },
        {
            "wires": [
                [
                    "da8afa3c.d70d28"
                ],
                [
                    "589ff27c.df7a9c"
                ]
            ],
            "name": "Check Key",
            "outputs": 2,
            "outputLabels": [
                "yes key",
                "no key"
            ],
            "noerr": 0,
            "func": "if(msg.inputs.hasOwnProperty(\"key\") && (typeof msg.inputs.key === \"string\") && msg.inputs.key !== \"\") {\n    msg.inputs.body = JSON.parse(Buffer.from(msg.inputs.key, 'base64').toString())\n    if (msg.inputs.body.hasOwnProperty(\"first_name\") && msg.inputs.body.hasOwnProperty(\"last_name\") && msg.inputs.body.hasOwnProperty(\"email\") && msg.inputs.body.hasOwnProperty(\"id\")) {\n        msg.records.id = msg.inputs.body.id;\n        delete msg.inputs.body.id;\n        msg.cloudant = {\n            \"request\": \"/stellaris_documents/\" + msg.records.id,\n            \"method\": \"GET\",\n            \"return_obj\": \"\"\n        };\n        return [msg,null];\n    }\n}\nif(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"The information in the request is invalid.\",\n})\nreturn [null,msg]\n\n//encode var key = Buffer.from(JSON.stringify(msg.inputs.body)).toString('base64')",
            "y": 140,
            "x": 830,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "8c80fe37.7909a"
        },
        {
            "wires": [
                [
                    "d88de838.8324c8"
                ]
            ],
            "name": "",
            "y": 120,
            "x": 1010,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "da8afa3c.d70d28"
        },
        {
            "wires": [
                [
                    "b7ac4c51.d02d7",
                    "46ac8988.510c48"
                ]
            ],
            "name": "",
            "y": 100,
            "x": 1370,
            "z": "1dff07f1.603c08",
            "type": "subflow:68197f61.7975",
            "id": "5d4be690.7e2678"
        },
        {
            "wires": [
                [
                    "160fa73c.a2f439"
                ]
            ],
            "name": "",
            "y": 80,
            "x": 1730,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "12ead310.043cdd"
        },
        {
            "wires": [
                [
                    "12ead310.043cdd"
                ]
            ],
            "name": "Sales User",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.cloudant.request = \"/stellaris_documents/\" + msg.user[0].created_by;\nmsg.cloudant.object = \"sales_user\";\nreturn msg;",
            "y": 80,
            "x": 1550,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "46ac8988.510c48"
        },
        {
            "wires": [
                [
                    "5d4be690.7e2678"
                ],
                [
                    "b7ac4c51.d02d7"
                ],
                [
                    "589ff27c.df7a9c"
                ]
            ],
            "name": "Check EULA",
            "outputs": 3,
            "outputLabels": [
                "no EULA",
                "yes EULA",
                "Error"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"user\") && msg.user.length > 0 && msg.user[0].doc_type === \"user\") {\n    var surgeon = msg.user[0];\n    if (surgeon.hasOwnProperty(\"eula_accept_status\")) {\n        if (surgeon.eula_accept_status === \"accepted\") {\n            //already accepted EULA confirmation no email\n            return [null,msg,null];\n        } else {\n            if (msg.payload.eula_create_date + 86400000 < Date.now()) {\n                // time expired error\n                if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\n                    msg.errors.push({\n                        \"code\": 400,\n                        \"message\": \"The request has expired.\",\n                    })\n                return [null,null,msg];\n            } else {\n                // accept EULA\n                msg.inputs.body.status = \"active\";\n                msg.inputs.body.eula_accept_status = \"accepted\";\n                msg.inputs.body.eula_accept_date = Date.now();\n                msg.inputs.body.role = \"Surgeon\";\n                return [msg,null,null]\n            }\n        }\n    }\n} else {\n    // user does not exist error\n    if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\n    msg.errors.push({\n        \"code\": 400,\n        \"message\": \"The request is for an invalid user.\",\n    })\n    return [null,null,msg];\n}\n\n",
            "y": 120,
            "x": 1190,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "d88de838.8324c8"
        },
        {
            "wires": [],
            "name": "",
            "y": 160,
            "x": 1360,
            "z": "1dff07f1.603c08",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "589ff27c.df7a9c"
        },
        {
            "wires": [
                [
                    "b5f8e84c.b5b468"
                ]
            ],
            "name": "Debug Send",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"to\")) {\n    return msg;\n}",
            "y": 120,
            "x": 2290,
            "z": "5dbd57cc.fc9bb8",
            "type": "function",
            "id": "891726ae.68c7b8"
        },
        {
            "wires": [
                [
                    "3966126d.1d1fce"
                ]
            ],
            "name": "",
            "y": 1020,
            "x": 840,
            "z": "1dff07f1.603c08",
            "type": "subflow:71afa3f9.81defc",
            "id": "7f3a67a2.38a2a8"
        },
        {
            "wires": [
                [
                    "7f3a67a2.38a2a8"
                ]
            ],
            "name": "User New Surgeon",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"User New Surgeon\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"status\", \"password\"],\n    \"doc_type\": \"user\",\n    \"object\": \"user\",\n    \"format\": \"JSON\",\n    \"models\": [\"user\"],\n    \"returns\": [\"message\",\"user\"],\n    \"error_on_found\": false,\n    \"first_name\": msg.payload.first_name,\n    \"last_name\": msg.payload.last_name,\n    \"created_by\": msg.payload.created_by,\n    \"return_code\": 201\n};\nmsg.message = \"A record for \" + msg.records.first_name + \" \" + msg.records.last_name + \" has been created.\"\nmsg.inputs = {\n    \"required\": [\"first_name\",\"last_name\",\"email\",\"created_by\"],\n    \"allowed\": []\n};\nif(msg.payload.hasOwnProperty(\"email\")) {\n    msg.records.email = msg.payload.email.toLowerCase();\n}\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/\" + msg.records.created_by,\n    \"method\": \"GET\",\n    \"return_obj\": \"\",\n    \"object\": \"creator\"\n};\nreturn msg;",
            "y": 1020,
            "x": 670,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "99270dcc.02d"
        },
        {
            "wires": [
                [
                    "d588fe08.7a40a"
                ]
            ],
            "name": "",
            "y": 1020,
            "x": 1380,
            "z": "1dff07f1.603c08",
            "type": "subflow:e0cd8199.1ad77",
            "id": "eaa135a5.e53a88"
        },
        {
            "wires": [
                [
                    "e1e78464.a4cfd8"
                ]
            ],
            "name": "",
            "y": 1020,
            "x": 1010,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "3966126d.1d1fce"
        },
        {
            "wires": [
                [
                    "eaa135a5.e53a88"
                ],
                [
                    "82265dc1.d9cbb"
                ]
            ],
            "name": "Check Creator",
            "outputs": 2,
            "outputLabels": [
                "yes creator",
                "no creator"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"creator\") && msg.creator.length > 0 && msg.creator[0].doc_type === \"user\") {\n    msg.inputs.body = {\n        \"gets_change_email\": false,\n        \"created_by\": msg.creator[0]._id,\n        \"eula_create_date\": Date.now(),\n        \"eula_accept_status\": \"not accepted\",\n        \"remote_access_allowed\": false\n    };\n    return [msg,null];\n} else {\n    return [null,msg];\n}",
            "y": 1020,
            "x": 1200,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "e1e78464.a4cfd8"
        },
        {
            "wires": [
                [
                    "342063b9.03e4fc"
                ]
            ],
            "name": "Creator Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"User with id: \" + msg.records.created_by + \" was not found.\",\n})\nreturn msg;",
            "y": 1060,
            "x": 1390,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "82265dc1.d9cbb"
        },
        {
            "wires": [],
            "name": "",
            "y": 1060,
            "x": 1580,
            "z": "1dff07f1.603c08",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "342063b9.03e4fc"
        },
        {
            "wires": [
                [
                    "32d59540.45c0fa"
                ]
            ],
            "name": "",
            "y": 1020,
            "x": 1720,
            "z": "1dff07f1.603c08",
            "type": "subflow:5dbd57cc.fc9bb8",
            "id": "be06b71e.e733a8"
        },
        {
            "wires": [
                [
                    "be06b71e.e733a8"
                ]
            ],
            "name": "Welcome Email",
            "outputs": 1,
            "noerr": 0,
            "func": "var user = msg.user[0];\nvar sales = msg.creator[0];\nvar key_body = {\n        \"first_name\": msg.records.first_name,\n        \"last_name\": msg.records.last_name,\n        \"email\": msg.records.email,\n        \"id\": user._id\n    };\nmsg.records.key = Buffer.from(JSON.stringify(key_body)).toString('base64');\nmsg.email = {\n    \"template_type\": \"welcome\",\n    \"to\": msg.records.email,\n    \"key\": msg.records.key,\n    \"fields\": {\n        \"surgeon_first_name\": msg.records.first_name,\n        \"surgeon_last_name\": msg.records.last_name,\n        \"sales_first_name\": sales.first_name,\n        \"sales_last_name\": sales.last_name\n    },\n    \"return\": true\n};\nreturn msg;",
            "y": 1020,
            "x": 1560,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "d588fe08.7a40a"
        },
        {
            "wires": [],
            "name": "",
            "y": 1020,
            "x": 2070,
            "z": "1dff07f1.603c08",
            "type": "subflow:bc6ff87.05a2908",
            "id": "d282c995.5aa328"
        },
        {
            "wires": [
                [
                    "d282c995.5aa328"
                ]
            ],
            "name": "",
            "y": 1020,
            "x": 1890,
            "z": "1dff07f1.603c08",
            "type": "subflow:313bd1d3.01c06e",
            "id": "32d59540.45c0fa"
        },
        {
            "wires": [
                [
                    "c541bab7.920618"
                ],
                [
                    "399b8cd0.d0e8f4"
                ]
            ],
            "name": "Check Input Values",
            "outputs": 2,
            "noerr": 0,
            "func": "var errors = [];\nif(msg.hasOwnProperty(\"inputs\") && msg.inputs.hasOwnProperty(\"body\") && msg.inputs.hasOwnProperty(\"values\")) { \n    Object.keys(msg.inputs.values).forEach(function(key) {\n        if (msg.inputs.body.hasOwnProperty(key)) {\n            if (Array.isArray(msg.inputs.body[key])) {\n                msg.inputs.body[key].forEach(function(value) {\n                     if(msg.inputs.values[key].indexOf(value) < 0) {\n                         var error_key = {};\n                         error_key[key] = value;\n                         errors.push(error_key);\n                    }\n                })\n            } else {\n                if(msg.inputs.values[key].indexOf(msg.inputs.body[key]) < 0) {\n                    var error_key = {};\n                    error_key[key] = msg.inputs.body[key];\n                    errors.push(error_key);\n                }\n            }\n        }\n    })\n}\nif (errors.length > 0) {\n    msg.error_keys = errors;\n    return [null,msg];\n} else {\n    return [msg,null];   \n}",
            "y": 120,
            "x": 950,
            "z": "71afa3f9.81defc",
            "type": "function",
            "id": "8bc261aa.d6ad2"
        },
        {
            "wires": [
                [
                    "44304eec.b88b6"
                ]
            ],
            "name": "Invalid Input Value",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 412,\n    \"message\": \"Invalid key values.\",\n    \"returns\": [\"error_keys\"]\n});\nmsg.records.format = \"array\";\nreturn msg;",
            "y": 240,
            "x": 1650,
            "z": "71afa3f9.81defc",
            "type": "function",
            "id": "399b8cd0.d0e8f4"
        },
        {
            "wires": [
                [],
                [
                    "6eed9503.cb2ebc"
                ]
            ],
            "name": "Check support_users",
            "outputs": 2,
            "outputLabels": [
                "ignore",
                "find admin"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"support_users\") && msg.support_users.length > 0) {\n    return [msg,null]\n}\nmsg.records.returns.push(\"warning\");\nmsg.warning = [\"No associated support person was found. Admin users have been contacted.\"]\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"support_users\",\n    \"selector\": {\n        \"$and\": [\n            {\"doc_type\": \"user\"},\n            {\"status\": \"active\"},\n            {\"sub_roles\": {\n                \"$or\": [{\"$elemMatch\": { \"$eq\": \"Admin\" }}]\n                }\n            }]\n    }\n};\nreturn [null,msg];",
            "y": 120,
            "x": 280,
            "z": "e08f785c.844a68",
            "type": "function",
            "id": "ea8d6a75.315508"
        },
        {
            "wires": [
                [
                    "7dbf778a.7d5328"
                ]
            ],
            "name": "",
            "y": 160,
            "x": 530,
            "z": "e08f785c.844a68",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "6eed9503.cb2ebc"
        },
        {
            "wires": [
                [
                    "1c822c95.90be83"
                ]
            ],
            "name": "Clean Up",
            "outputs": 1,
            "noerr": 0,
            "func": "\nreturn msg;",
            "y": 160,
            "x": 770,
            "z": "e08f785c.844a68",
            "type": "function",
            "id": "7dbf778a.7d5328"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"Support Users \": msg});\n}",
            "y": 80,
            "x": 1130,
            "z": "e08f785c.844a68",
            "type": "function",
            "id": "1c822c95.90be83"
        },
        {
            "wires": [
                [
                    "7d48b133.23bdb"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID/tickets_query",
            "upload": false,
            "id": "ee549912.b7f8f8",
            "swaggerDoc": "",
            "y": 1320,
            "x": 190,
            "z": "61ffb71b.d286f",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "3a3e94b2.488a4c"
                ]
            ],
            "name": "",
            "y": 1320,
            "x": 530,
            "z": "61ffb71b.d286f",
            "type": "subflow:3962857e.44abba",
            "id": "7d48b133.23bdb"
        },
        {
            "wires": [
                [
                    "1811562c.c85b9a"
                ]
            ],
            "name": "Device Query Tickets",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Device Query Tickets\"\n    });\nmsg.records = {\n    \"doc_type\": \"help_ticket\",\n    \"format\": \"array\",\n    \"object\": \"help_tickets\",\n    \"returns\": [\"help_tickets\"],\n    \"fields\": [ \"_id\",\n                \"system_sn\",\n                \"system_type\",\n                \"doctor_id\",\n                \"cell_tower_info\",\n                \"geo_location\",\n                \"start_time\",\n                \"close_time\",\n                \"ticket_status\",\n                \"reason\",\n                \"contact_name\",\n                \"contact_number\",\n                \"assigned_id\",\n                \"responder_id\",\n                \"surgeon_settings_file_id\",\n                \"surgeon_settings_name\",\n                \"device_ip\"\n               ],\n    \"sort\": [{\"start_time:number\": \"desc\"}]\n};\nif(msg.req.body.hasOwnProperty(\"return_assigned_users\") && msg.req.body.return_assigned_users === true) {\n    msg.records.returns.push(\"assigned_users\");\n}\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": [\"filter_options\", \"return_assigned_users\"]\n};\nmsg.filters = {\n    \"allowed\": [\"start_time_range_begin\" , \"start_time_range_end\" , \"assigned_id\" , \"ticket_status\" , \"reason\"],\n    \"required\": []\n};\nmsg.cloudant = {\n    \"request\": \"/help_tickets/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"bookmark_type\": \"payload\",\n    \"pagination\": true,\n    \"bookmark_use\": true\n};\nmsg.filters.params = {\n    \"system_sn\": msg.req.params.deviceID\n};\nreturn msg;",
            "y": 1320,
            "x": 740,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "3a3e94b2.488a4c"
        },
        {
            "wires": [
                [
                    "49417ace.763364"
                ]
            ],
            "name": "",
            "y": 1320,
            "x": 920,
            "z": "61ffb71b.d286f",
            "type": "subflow:71afa3f9.81defc",
            "id": "1811562c.c85b9a"
        },
        {
            "wires": [
                [
                    "9bc70e9b.67173"
                ]
            ],
            "name": "",
            "y": 1320,
            "x": 1090,
            "z": "61ffb71b.d286f",
            "type": "subflow:f83a5f50.ef8e",
            "id": "49417ace.763364"
        },
        {
            "wires": [
                [
                    "ff934ee3.307fd"
                ]
            ],
            "name": "",
            "y": 1320,
            "x": 1290,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "9bc70e9b.67173"
        },
        {
            "wires": [
                [
                    "41004440.3be51c"
                ],
                [
                    "c623d4fb.0a4738"
                ]
            ],
            "name": "assigned_users Query",
            "outputs": 2,
            "noerr": 0,
            "func": "//node.warn({\"assigned_id Query\": \"Find Unique\", \"unique_assigned_ids\": unique_assigned_ids});\nif(msg.help_tickets.length > 0 && msg.inputs.body.hasOwnProperty(\"return_assigned_users\") && msg.inputs.body.return_assigned_users === true){\n    msg.cloudant.request = \"/help_tickets/_find\";\n    msg.cloudant.method = \"POST\";\n    msg.cloudant.selector.$and.push({\"assigned_id\": { \"$ne\": [] }});\n    msg.cloudant.fields = [\"assigned_id\"];\n    if(msg.cloudant.hasOwnProperty(\"sort\")) {delete msg.cloudant.sort}\n    if(msg.cloudant.hasOwnProperty(\"limit\")) {delete msg.cloudant.limit}\n    if(msg.cloudant.hasOwnProperty(\"skip\")) {delete msg.cloudant.skip}\n    msg.cloudant.object = \"assigned_id\";\n    msg.cloudant.pagination = false;\n    msg.cloudant.bookmark_use = false;\n    msg.cloudant.bookmark_save = false;\n    return [msg, null];\n}\nmsg.assigned_users = [];\nmsg.api.path = 2;\nreturn [null, msg];",
            "y": 1320,
            "x": 1500,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "ff934ee3.307fd"
        },
        {
            "wires": [
                [
                    "fba912f6.de0bf"
                ]
            ],
            "name": "",
            "y": 1280,
            "x": 1710,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "41004440.3be51c"
        },
        {
            "wires": [],
            "name": "",
            "y": 1320,
            "x": 2250,
            "z": "61ffb71b.d286f",
            "type": "subflow:bc6ff87.05a2908",
            "id": "c623d4fb.0a4738"
        },
        {
            "wires": [
                [
                    "a872711c.5669e"
                ],
                [
                    "c623d4fb.0a4738"
                ]
            ],
            "name": "Distinct List",
            "outputs": 2,
            "noerr": 0,
            "func": "if(msg.help_tickets.length > 0 && msg.inputs.body.hasOwnProperty(\"return_assigned_users\") && msg.inputs.body.return_assigned_users === true){\n    var unique_assigned_ids = [];\n    if(msg.assigned_id.length > 0) {\n        msg.assigned_id.forEach(function(record) {\n            record.assigned_id.forEach(function(id){\n                if(unique_assigned_ids.indexOf(id) < 0){\n                    unique_assigned_ids.push(id);\n                }\n            });\n        });\n    }\n    msg.help_tickets.forEach(function(record){\n        if(record.hasOwnProperty(\"assigned_id\")){\n            record.assigned_id.forEach(function(id){\n                if(unique_assigned_ids.indexOf(id) < 0){\n                    unique_assigned_ids.push(id);\n                }\n            });\n        }\n    });\n    msg.assigned_id = unique_assigned_ids;\n    if(unique_assigned_ids.length > 0){\n        msg.cloudant.request = \"/stellaris_documents/_find\";\n        msg.cloudant.method = \"POST\";\n        msg.cloudant.selector = { \"_id\":  { \"$in\": msg.assigned_id  }};\n        msg.cloudant.fields = [\"_id\", \"first_name\", \"last_name\"];\n        msg.cloudant.sort= [{ \"last_name:string\": \"asc\"}];\n        msg.cloudant.object = \"assigned_users\";\n        msg.cloudant.pagination = false;\n        msg.cloudant.bookmark_use = false;\n        msg.cloudant.bookmark_save = false;\n        return [msg, null];\n    }\n    msg.assigned_users = [];\n}\nmsg.api.path = 3;\nreturn [null, msg];",
            "y": 1280,
            "x": 1890,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "fba912f6.de0bf"
        },
        {
            "wires": [
                [
                    "c623d4fb.0a4738"
                ]
            ],
            "name": "",
            "y": 1260,
            "x": 2070,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "a872711c.5669e"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] Device Query Tickets",
            "y": 1280,
            "x": 130,
            "z": "61ffb71b.d286f",
            "type": "comment",
            "id": "1984aca0.7e32c3"
        },
        {
            "wires": [
                [
                    "fa1ad66f.5664b8"
                ]
            ],
            "name": "User Delete",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"User Delete\",\n    });\nmsg.records = {\n    \"format\": \"array\",\n    \"returns\": [\"message\"]\n};\nmsg.inputs = {\n    \"user_id\": msg.req.params.userID\n};\nmsg.message = \"User with id: \" + msg.inputs.user_id + \" and all its files have been deleted.\"\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"doc_type\",\n    \"selector\": {\n        \"$or\": [{\"$and\": [{\"doc_type\": \"user\"},{\"status\": \"active\"},{\"_id\": msg.inputs.user_id}]},\n                {\"$and\": [{\"doc_type\": \"machine_link\"},{\"status\": \"active\"},{\"user\": msg.inputs.user_id}]},\n                {\"$and\": [{\"doc_type\": \"settings_file\"},{\"status\": \"active\"},{\"user_id\": msg.inputs.user_id}]}]\n    }\n};\nreturn msg;",
            "y": 380,
            "x": 650,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "99ed5a41.876fc8"
        },
        {
            "wires": [
                [
                    "8774750c.4a77d8"
                ]
            ],
            "name": "",
            "y": 380,
            "x": 830,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "fa1ad66f.5664b8"
        },
        {
            "info": "Flow for Get Me Help tickets:\n\nListens for any/all events of type GetMeHelp and processes accordingly:\n-TODO: Is there an API to open a ticket?\n-Question: Where does some of the data come from - is it all in our MQTT snapshot?\n-Insert resulting combination doc into cloudant\n-TODO: Email with details: to who?",
            "wires": [],
            "name": "[DEVICES] Device Get Me Help",
            "y": 360,
            "x": 150,
            "z": "a17d8665.50cb88",
            "type": "comment",
            "id": "c0d89227.6149b"
        },
        {
            "info": "Listens to all inputs of type InitRemoteConn\n-TODO: Format email response.\n-Do we even need anything else here?",
            "wires": [],
            "name": "[DEVICES] Device Init Rem Conn",
            "y": 580,
            "x": 150,
            "z": "a17d8665.50cb88",
            "type": "comment",
            "id": "8193ed92.7344b"
        },
        {
            "wires": [
                [
                    "2decf932.f86e36"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID/getMeHelp",
            "upload": false,
            "id": "26f9b12a.24edae",
            "swaggerDoc": "",
            "y": 400,
            "x": 180,
            "z": "a17d8665.50cb88",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "5283662a.eb1968"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID/initRemConn",
            "upload": false,
            "id": "c38cc044.96e36",
            "swaggerDoc": "",
            "y": 620,
            "x": 190,
            "z": "a17d8665.50cb88",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "7209a37.a818b5c"
                ]
            ],
            "name": "",
            "y": 400,
            "x": 450,
            "z": "a17d8665.50cb88",
            "type": "subflow:3962857e.44abba",
            "id": "2decf932.f86e36"
        },
        {
            "wires": [
                [
                    "5d03988e.7e7bc8"
                ]
            ],
            "name": "",
            "y": 620,
            "x": 470,
            "z": "a17d8665.50cb88",
            "type": "subflow:3962857e.44abba",
            "id": "5283662a.eb1968"
        },
        {
            "wires": [
                [
                    "3dddfca0.690f34"
                ]
            ],
            "name": "Device Init Rem Conn",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Device Init Rem Conn\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"status\"],\n    \"doc_type\": \"help_ticket\",\n    \"object\": \"help_ticket\",\n    \"format\": \"JSON\",\n    \"returns\": [\"message\",\"help_ticket\"],\n    \"models\": [\"help_ticket\"],\n    \"return_code\": 201\n};\nmsg.inputs = {\n    \"required\": [\"device_ip\"],\n    \"allowed\": [\"doctor_id\", \"cell_tower_info\", \"contact_number\", \"machine_state\"],\n    \"device_id\": msg.req.params.deviceID\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"doc_type\",\n    \"selector\": {\n        \"$or\": [{\"$and\": [{\"doc_type\": \"device\"},{\"status\": \"active\"},{\"_id\": msg.inputs.device_id}]},\n                {\"$and\": [{\"doc_type\": \"machine_link\"},{\"status\": \"active\"},{\"device\": msg.inputs.device_id}]}]\n    }\n};\nif (msg.req.body.hasOwnProperty(\"doctor_id\") && msg.req.body.doctor_id !== \"\") {\n    msg.cloudant.selector[\"$or\"].push({\"$and\": [{\"doc_type\": \"user\"},{\"status\": \"active\"},{\"_id\": msg.req.body.doctor_id}]})\n}\nreturn msg;",
            "y": 620,
            "x": 680,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "5d03988e.7e7bc8"
        },
        {
            "wires": [
                [
                    "b8846f2c.1175d"
                ]
            ],
            "name": "",
            "y": 620,
            "x": 860,
            "z": "a17d8665.50cb88",
            "type": "subflow:71afa3f9.81defc",
            "id": "3dddfca0.690f34"
        },
        {
            "wires": [
                [
                    "a4f8ed8.7cdac1"
                ]
            ],
            "name": "",
            "y": 620,
            "x": 1030,
            "z": "a17d8665.50cb88",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "b8846f2c.1175d"
        },
        {
            "wires": [
                [
                    "fc46be67.b4961"
                ],
                [
                    "98ea0bb4.0ebdf8"
                ]
            ],
            "name": "Device Found",
            "outputs": 2,
            "outputLabels": [
                "yes found",
                "no found"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"device\") && msg.device.length > 0 && msg.device[0].doc_type === \"device\") {\n    msg.inputs.body.system_sn = msg.inputs.device_id;\n    msg.inputs.body.system_type = msg.device[0].system_type;\n    msg.inputs.body.reason = \"RemConn\";\n    if (msg.hasOwnProperty(\"user\") && msg.user.length > 0) {\n        msg.inputs.body.contact_name = msg.user[0].first_name + \" \" + msg.user[0].last_name\n    }\n    if (msg.hasOwnProperty(\"machine_link\") && msg.machine_link.length > 0) {\n        var linked_user_ids = msg.machine_link.map(a => a.user);\n        msg.cloudant = {\n            \"request\": \"/stellaris_documents/_find\",\n            \"method\": \"POST\",\n            \"return_obj\": \"docs\",\n            \"object\": \"support_users\",\n            \"selector\": {\n                \"$and\": [\n                    {\"doc_type\": \"user\"},\n                    {\"status\": \"active\"},\n                    {\"_id\": {\"$in\": linked_user_ids}},\n                    //{\"role\": \"Service\"},\n                    {\"sub_roles\": {\n                        \"$or\": [{\"$elemMatch\": { \"$eq\": \"Applications\" }},\n                                {\"$elemMatch\": { \"$eq\": \"Field Sales\" }},\n                                {\"$elemMatch\": { \"$eq\": \"Technical Support\" }}]\n                        }\n                    }]\n            }\n        }\n    } else {\n        var linked_user_ids = [];\n        delete msg.cloudant;\n    }\n    return [msg,null];\n} else {\n    return [null,msg]\n}",
            "y": 620,
            "x": 1220,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "a4f8ed8.7cdac1"
        },
        {
            "wires": [
                [
                    "d8325fdb.9cb34"
                ]
            ],
            "name": "",
            "y": 620,
            "x": 1410,
            "z": "a17d8665.50cb88",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "fc46be67.b4961"
        },
        {
            "wires": [],
            "name": "",
            "y": 660,
            "x": 1600,
            "z": "a17d8665.50cb88",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "72e300f7.c5072"
        },
        {
            "wires": [
                [
                    "72e300f7.c5072"
                ]
            ],
            "name": "Device Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"The device record for \" + msg.inputs.device_id + \" was not found.\"\n});\nreturn msg;",
            "y": 660,
            "x": 1410,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "98ea0bb4.0ebdf8"
        },
        {
            "wires": [
                [
                    "7fe55e1f.27f52"
                ]
            ],
            "name": "",
            "y": 620,
            "x": 2240,
            "z": "a17d8665.50cb88",
            "type": "subflow:e0cd8199.1ad77",
            "id": "ce9a1759.9a9cc8"
        },
        {
            "wires": [
                []
            ],
            "name": "",
            "y": 580,
            "x": 2560,
            "z": "a17d8665.50cb88",
            "type": "subflow:5dbd57cc.fc9bb8",
            "id": "d6aa4528.4adaa8"
        },
        {
            "wires": [],
            "name": "",
            "y": 620,
            "x": 2770,
            "z": "a17d8665.50cb88",
            "type": "subflow:bc6ff87.05a2908",
            "id": "3d9b1954.c4a866"
        },
        {
            "wires": [
                [
                    "3d9b1954.c4a866"
                ]
            ],
            "name": "",
            "y": 620,
            "x": 2590,
            "z": "a17d8665.50cb88",
            "type": "subflow:313bd1d3.01c06e",
            "id": "e4a8dcfe.671d1"
        },
        {
            "wires": [
                [
                    "4bd68bac.e89c74"
                ]
            ],
            "name": "",
            "y": 620,
            "x": 1620,
            "z": "a17d8665.50cb88",
            "type": "subflow:d1af1cc8.e0fda",
            "id": "d8325fdb.9cb34"
        },
        {
            "wires": [
                [
                    "524c7d4e.14cb74"
                ]
            ],
            "name": "Device Get Me Help",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Device Get Me Help\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"status\"],\n    \"doc_type\": \"help_ticket\",\n    \"object\": \"help_ticket\",\n    \"format\": \"JSON\",\n    \"returns\": [\"message\",\"help_ticket\"],\n    \"models\": [\"help_ticket\"],\n    \"return_code\": 201\n};\nmsg.inputs = {\n    \"required\": [\"system_type\", \"cell_tower_info\", \"reason\", \"contact_name\", \"contact_number\", \"machine_state\"],\n    \"allowed\": [\"doctor_id\", \"surgeon_settings_file_id\", \"surgeon_settings_name\"],\n    \"values\": {\n        \"reason\": [\"Setup\", \"Order Packs\", \"Another Issue\", \"Technical Support\"]\n    },\n    \"device_id\": msg.req.params.deviceID,\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"doc_type\",\n    \"selector\": {\n        \"$or\": [{\"$and\": [{\"doc_type\": \"device\"},{\"status\": \"active\"},{\"_id\": msg.inputs.device_id}]},\n                {\"$and\": [{\"doc_type\": \"machine_link\"},{\"status\": \"active\"},{\"device\": msg.inputs.device_id}]}\n               ]\n    }\n};\nif (msg.req.body.hasOwnProperty(\"doctor_id\") && msg.req.body.doctor_id !== \"\") {\n    msg.inputs.user_id = msg.req.body.doctor_id;\n    msg.cloudant.selector[\"$or\"].push( {\"$and\": [{\"doc_type\": \"user\"},{\"status\": \"active\"},{\"_id\": msg.inputs.user_id}]})\n}\nreturn msg;",
            "y": 400,
            "x": 660,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "7209a37.a818b5c"
        },
        {
            "wires": [
                [
                    "c3e1544.2852da8"
                ]
            ],
            "name": "",
            "y": 400,
            "x": 840,
            "z": "a17d8665.50cb88",
            "type": "subflow:71afa3f9.81defc",
            "id": "524c7d4e.14cb74"
        },
        {
            "checkall": "true",
            "z": "a17d8665.50cb88",
            "name": "Reason",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "Setup"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "Technical Support"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "Another Issue"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 4,
            "wires": [
                [
                    "8af5db10.5366e8"
                ],
                [
                    "4c2e2a57.658fc4"
                ],
                [
                    "15c724d0.a828fb"
                ],
                [
                    "a528e2e.be8642"
                ]
            ],
            "propertyType": "msg",
            "y": 380,
            "x": 1340,
            "property": "inputs.body.reason",
            "type": "switch",
            "id": "c3b78aea.e6b008"
        },
        {
            "wires": [
                [
                    "c26da446.803ea8"
                ]
            ],
            "name": "",
            "y": 400,
            "x": 1010,
            "z": "a17d8665.50cb88",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "c3e1544.2852da8"
        },
        {
            "wires": [
                [
                    "9610dac3.83e198"
                ]
            ],
            "name": "",
            "y": 380,
            "x": 1810,
            "z": "a17d8665.50cb88",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "eba1bc79.4683c"
        },
        {
            "wires": [
                [
                    "c3b78aea.e6b008"
                ],
                [
                    "afee6342.5e629"
                ],
                [
                    "49c8012b.5bf5b"
                ]
            ],
            "name": "ID Found",
            "outputs": 3,
            "outputLabels": [
                "yes all",
                "no device",
                "no user"
            ],
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"device\") || msg.device.length === 0 || msg.device[0].doc_type !== \"device\") {\n    return [null,msg,null]\n}\nif (msg.inputs.hasOwnProperty(\"user_id\") && msg.inputs.user_id !== \"\") {\n    if(!msg.hasOwnProperty(\"user\") || msg.user.length === 0 || msg.user[0].doc_type !== \"user\") {\n        return [null,null,msg]\n    }\n}\nreturn [msg,null,null];",
            "y": 400,
            "x": 1180,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "c26da446.803ea8"
        },
        {
            "wires": [
                [
                    "6488c519.92f40c"
                ]
            ],
            "name": "Device Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"The device record for \" + msg.inputs.device_id + \" was not found.\"\n});\nreturn msg;",
            "y": 520,
            "x": 1370,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "afee6342.5e629"
        },
        {
            "wires": [],
            "name": "",
            "y": 540,
            "x": 1560,
            "z": "a17d8665.50cb88",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "6488c519.92f40c"
        },
        {
            "wires": [
                [
                    "6488c519.92f40c"
                ]
            ],
            "name": "User Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"The user record for \" + msg.inputs.user_id + \" was not found.\"\n});\nreturn msg;",
            "y": 560,
            "x": 1360,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "49c8012b.5bf5b"
        },
        {
            "wires": [
                [
                    "eba1bc79.4683c"
                ]
            ],
            "name": "Paired Technical Support",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"machine_link\") && msg.machine_link.length > 0) {\n    var linked_user_ids = msg.machine_link.map(a => a.user);\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"support_users\",\n        \"selector\": {\n            \"$and\": [\n                {\"doc_type\": \"user\"},\n                {\"status\": \"active\"},\n                {\"_id\": {\"$in\": linked_user_ids}},\n                {\"sub_roles\": {\n                    \"$or\": [{\"$elemMatch\": { \"$eq\": \"Technical Support\" }}]\n                    }\n                }]\n        }\n    };\n} else {\n    var linked_user_ids = [];\n    delete msg.cloudant;\n}\nreturn msg;",
            "y": 380,
            "x": 1550,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "4c2e2a57.658fc4"
        },
        {
            "wires": [
                [
                    "eba1bc79.4683c"
                ]
            ],
            "name": "Paired Application Field Sales",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"machine_link\") && msg.machine_link.length > 0) {\n    var linked_user_ids = msg.machine_link.map(a => a.user);\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"support_users\",\n        \"selector\": {\n            \"$and\": [\n                {\"doc_type\": \"user\"},\n                {\"status\": \"active\"},\n                {\"_id\": {\"$in\": linked_user_ids}},\n                {\"sub_roles\": {\n                    \"$or\": [{\"$elemMatch\": { \"$eq\": \"Applications\" }},\n                            {\"$elemMatch\": { \"$eq\": \"Field Sales\" }},\n                            {\"$elemMatch\": { \"$eq\": \"Sales Manager\" }}]\n                    }\n                }]\n        }\n    };\n} else {\n    var linked_user_ids = [];\n    delete msg.cloudant;\n}\nreturn msg;",
            "y": 340,
            "x": 1570,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "8af5db10.5366e8"
        },
        {
            "wires": [
                [
                    "eba1bc79.4683c"
                ]
            ],
            "name": "Paired Customer Service",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"machine_link\") && msg.machine_link.length > 0) {\n    var linked_user_ids = msg.machine_link.map(a => a.user);\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"support_users\",\n        \"selector\": {\n            \"$and\": [\n                {\"doc_type\": \"user\"},\n                {\"status\": \"active\"},\n                {\"_id\": {\"$in\": linked_user_ids}},\n                {\"sub_roles\": {\n                    \"$or\": [{\"$elemMatch\": { \"$eq\": \"Customer Service\" }}]\n                    }\n                }]\n        }\n    };\n} else {\n    var linked_user_ids = [];\n    delete msg.cloudant;\n}\nreturn msg;",
            "y": 460,
            "x": 1550,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "a528e2e.be8642"
        },
        {
            "wires": [
                [
                    "d6b9a65f.f06158"
                ]
            ],
            "name": "",
            "y": 380,
            "x": 2020,
            "z": "a17d8665.50cb88",
            "type": "subflow:d1af1cc8.e0fda",
            "id": "9610dac3.83e198"
        },
        {
            "wires": [
                [
                    "bf2baa36.afc668"
                ]
            ],
            "name": "Create Ticket",
            "outputs": 1,
            "noerr": 0,
            "func": "var support_user_ids = msg.support_users.map(a => a._id)\nmsg.inputs.body = Object.assign(msg.inputs.body, {\n    \"system_sn\": msg.device[0]._id,\n    \"system_type\": msg.device[0].system_type,\n    \"assigned_id\": support_user_ids,\n    \n})\nreturn msg;",
            "y": 380,
            "x": 2410,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "b734a9d1.b331c8"
        },
        {
            "wires": [
                [
                    "4988d27a.99200c",
                    "7a7665d2.fb81dc"
                ]
            ],
            "name": "",
            "y": 380,
            "x": 2580,
            "z": "a17d8665.50cb88",
            "type": "subflow:e0cd8199.1ad77",
            "id": "bf2baa36.afc668"
        },
        {
            "wires": [
                [
                    "7d0072df.c800bc"
                ]
            ],
            "name": "",
            "y": 380,
            "x": 2790,
            "z": "a17d8665.50cb88",
            "type": "subflow:313bd1d3.01c06e",
            "id": "4988d27a.99200c"
        },
        {
            "wires": [],
            "name": "",
            "y": 380,
            "x": 2970,
            "z": "a17d8665.50cb88",
            "type": "subflow:bc6ff87.05a2908",
            "id": "7d0072df.c800bc"
        },
        {
            "wires": [
                [
                    "b734a9d1.b331c8"
                ]
            ],
            "name": "",
            "y": 380,
            "x": 2230,
            "z": "a17d8665.50cb88",
            "type": "subflow:e08f785c.844a68",
            "id": "d6b9a65f.f06158"
        },
        {
            "wires": [
                [
                    "e3c619dc.89ed38"
                ]
            ],
            "name": "",
            "y": 620,
            "x": 1830,
            "z": "a17d8665.50cb88",
            "type": "subflow:e08f785c.844a68",
            "id": "4bd68bac.e89c74"
        },
        {
            "wires": [
                [
                    "725e686.462fd98"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID/expire_remconn",
            "upload": false,
            "id": "93554a1b.195518",
            "swaggerDoc": "",
            "y": 760,
            "x": 200,
            "z": "a17d8665.50cb88",
            "type": "http in",
            "method": "put"
        },
        {
            "wires": [
                [
                    "38a79a81.3d4e76"
                ]
            ],
            "name": "",
            "y": 760,
            "x": 490,
            "z": "a17d8665.50cb88",
            "type": "subflow:3962857e.44abba",
            "id": "725e686.462fd98"
        },
        {
            "wires": [
                [
                    "8377fb1e.c743c8"
                ]
            ],
            "name": "Device Expire RemConn",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Device Expire RemConn\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\"],\n    \"doc_type\": \"help_ticket\",\n    \"object\": \"help_ticket\",\n    \"format\": \"JSON\",\n    \"returns\": [\"help_ticket\"]\n};\nmsg.inputs = {\n    \"device_id\": msg.req.params.deviceID\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/\" + msg.inputs.device_id,\n    \"method\": \"GET\",\n    \"return_obj\": \"\",\n    \"object\": \"device\"\n};\nreturn msg;",
            "y": 760,
            "x": 710,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "38a79a81.3d4e76"
        },
        {
            "wires": [
                [
                    "4fc569de.d37ce8"
                ]
            ],
            "name": "",
            "y": 740,
            "x": 1310,
            "z": "a17d8665.50cb88",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "77a06453.a257fc"
        },
        {
            "wires": [
                [
                    "3e59d903.da99c6"
                ],
                [
                    "af5673d4.9e85b"
                ]
            ],
            "name": "Ticket Found?",
            "outputs": 2,
            "outputLabels": [
                "no",
                "yes"
            ],
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"ticket_list\") || msg.ticket_list.length === 0) {\n    if (!msg.hasOwnProperty(\"help_ticket\")) {msg.help_ticket = []}\n    return [msg,null];\n}\nvar ticket = msg.ticket_list.pop();\nvar time = Date.now();\nmsg.inputs.body = {\n    \"ticket_status\": \"Expired\",\n    \"close_time\": time,\n    \"ticket_notes\": new Date(time).toLocaleString() + \" - \" + msg.inputs.device_id + \" - Rebooted!   /  Remote session expired.\"\n};\nmsg.records.id = ticket._id;\ndelete msg.cloudant.id;\ndelete msg.cloudant.object;\nnode.warn({\"pop ticket\": msg});\nreturn [null,msg];",
            "y": 740,
            "x": 1560,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "4fc569de.d37ce8"
        },
        {
            "wires": [
                [
                    "5331778e.bd6318"
                ]
            ],
            "name": "",
            "y": 760,
            "x": 1750,
            "z": "a17d8665.50cb88",
            "type": "subflow:68197f61.7975",
            "id": "af5673d4.9e85b"
        },
        {
            "wires": [],
            "name": "",
            "y": 720,
            "x": 1930,
            "z": "a17d8665.50cb88",
            "type": "subflow:bc6ff87.05a2908",
            "id": "6f928faa.3a42e"
        },
        {
            "wires": [
                [
                    "6f928faa.3a42e"
                ]
            ],
            "name": "",
            "y": 720,
            "x": 1750,
            "z": "a17d8665.50cb88",
            "type": "subflow:313bd1d3.01c06e",
            "id": "3e59d903.da99c6"
        },
        {
            "info": "Checks for existing Remconn ticket. If exists ->\nchanges ticket status to expired and adds log to\nticket notes in following format:\nDate & Time / {deviceID} - Rebooted!   /  Remote session expired.",
            "wires": [],
            "name": "[DEVICES] Device Expire RemConn",
            "y": 720,
            "x": 160,
            "z": "a17d8665.50cb88",
            "type": "comment",
            "id": "7c41b3a3.c7f85c"
        },
        {
            "wires": [
                [
                    "b8f35b28.898e18"
                ],
                [
                    "11975d56.3e3ac3"
                ]
            ],
            "name": "Set Inactive",
            "outputs": 2,
            "outputLabels": [
                "yes user",
                "no user"
            ],
            "noerr": 0,
            "func": "function setInactive(item, index) {\n    item.status = \"inactive\";\n    return item;\n}\nif (!msg.hasOwnProperty(\"user\") || msg.user.length === 0) {\n    return [null,msg]\n}\nmsg.update_files = msg.user\nif (msg.hasOwnProperty(\"machine_link\") && msg.machine_link.length !== 0) { msg.update_files = msg.update_files.concat(msg.machine_link) }\nif (msg.hasOwnProperty(\"settings_file\") && msg.settings_file.length !== 0)  {msg.update_files = msg.update_files.concat(msg.settings_file) }\nmsg.update_files.map(setInactive);\nmsg.appid = {\n    \"id\": msg.user[0].idp_id\n}\nmsg.payload.docs = msg.update_files;\nmsg.url = global.get(\"VCAP_CLOUDANT\").credentials.url + \"/stellaris_documents/_bulk_docs\";\nnode.warn({\"Ready to Update\": msg})\nreturn [msg,null];",
            "y": 380,
            "x": 1010,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "8774750c.4a77d8"
        },
        {
            "wires": [],
            "name": "",
            "y": 380,
            "x": 1750,
            "z": "1dff07f1.603c08",
            "type": "subflow:bc6ff87.05a2908",
            "id": "d065780b.078158"
        },
        {
            "tls": "",
            "wires": [
                [
                    "2aab8d5a.6bcb62"
                ]
            ],
            "name": "Bulk Update",
            "url": "",
            "ret": "obj",
            "id": "b8f35b28.898e18",
            "y": 380,
            "x": 1170,
            "z": "1dff07f1.603c08",
            "type": "http request",
            "method": "POST"
        },
        {
            "wires": [
                [
                    "cd63132a.22867"
                ]
            ],
            "name": "Bulk Update Returns",
            "outputs": 1,
            "noerr": 0,
            "func": "if (Array.isArray(msg.payload)) {\n    msg.bulk_update = msg.payload;\n    msg.deleted_ids = msg.payload.map(a => a.id);\n}\ndelete msg.method;\ndelete msg.url;\ndelete msg.responseUrl;\ndelete msg.headers;\ndelete msg.statusCode;\nnode.warn({\"Bulk Returns\": msg})\nreturn msg;",
            "y": 380,
            "x": 1360,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "2aab8d5a.6bcb62"
        },
        {
            "wires": [],
            "name": "",
            "y": 420,
            "x": 1360,
            "z": "1dff07f1.603c08",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "6812e456.db8e8c"
        },
        {
            "wires": [
                [
                    "6812e456.db8e8c"
                ]
            ],
            "name": "User Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Active user with id: \" + msg.inputs.user_id + \" was not found.\",\n})\nreturn msg;",
            "y": 420,
            "x": 1180,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "11975d56.3e3ac3"
        },
        {
            "wires": [
                [
                    "1604ec79.d75484"
                ]
            ],
            "name": "",
            "y": 280,
            "x": 470,
            "z": "1dff07f1.603c08",
            "type": "subflow:3962857e.44abba",
            "id": "70a6c339.a33ffc"
        },
        {
            "wires": [
                [
                    "c365d482.561be8"
                ]
            ],
            "name": "",
            "url": "/users/authentication",
            "upload": false,
            "id": "9622f892.ea1278",
            "swaggerDoc": "",
            "y": 280,
            "x": 130,
            "z": "1dff07f1.603c08",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "2c1af94a.703936"
                ]
            ],
            "name": "Email Format and input",
            "outputs": 1,
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"email\")) { msg.email = {} }\nmsg.email.to = msg.support_users.map(a => a.email);\nmsg.email.topic = \"User \" + msg.users[0]._id + \" Max Login Attempts\";\nvar tab = '<span style=\"padding-left: 1.8em\"></span>';\nmsg.email.template = \"\" +\n\"Hello Bausch & Lomb Support,\" +\n\"\\n<br />\" +\n\"\\n<br />\" +\n\"\\n<br />\" +\n\"\\n<br />\" + tab + \"User \" +  msg.users[0].first_name + \" \" + msg.users[0].last_name + \" has attempted and failed multiple logins.\" +\n\"\\n<br />\" +\n\"\";\nreturn msg;",
            "y": 320,
            "x": 1990,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "3fd9a5b6.d740fa"
        },
        {
            "info": "Checks user ID and password on cloudant if user \nexists.",
            "wires": [],
            "name": "[v1] [DEVICES] User Authentication",
            "y": 237,
            "x": 162,
            "z": "1dff07f1.603c08",
            "type": "comment",
            "id": "7c4b3bfe.930c74"
        },
        {
            "wires": [
                [
                    "36bdfd54.ed5562"
                ]
            ],
            "name": "User Authentication",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(\n    {\n        \"name\": \"User Authentication\",\n    }, msg.api);\nmsg.records = {\n    \"delete\": [\"_rev\", \"password\", \"doc_type\", \"status\"],\n    \"doc_type\": \"user\",\n    \"returns\": [\"message\"]\n};\nmsg.inputs = {\n    \"required\": [\"password\"],\n    \"allowed\": [\"user_id\", \"email\"]\n};\nif (msg.payload.hasOwnProperty(\"user_id\")) {\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/\" + msg.payload.user_id,\n        \"method\": \"GET\",\n        \"return_obj\": \"\",\n        \"object\": \"users\"\n    }\n} else\nif (msg.payload.hasOwnProperty(\"email\")) {\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"users\",\n        \"selector\": {\n            \"$and\": [{\"email\": msg.payload.email},\n                     {\"status\": \"active\"}]\n        }\n    }\n} else {\n    msg.inputs.required.push(\"user_id\")\n}\nreturn msg;",
            "y": 280,
            "x": 810,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "a2a10c47.415ea"
        },
        {
            "wires": [
                [
                    "a8991dec.34ea7"
                ]
            ],
            "name": "",
            "y": 280,
            "x": 980,
            "z": "1dff07f1.603c08",
            "type": "subflow:71afa3f9.81defc",
            "id": "36bdfd54.ed5562"
        },
        {
            "wires": [
                [
                    "2492a8e2.b23e68"
                ]
            ],
            "name": "",
            "y": 280,
            "x": 1150,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "a8991dec.34ea7"
        },
        {
            "wires": [
                [
                    "a7ad127f.b8415"
                ],
                [
                    "4c90ea09.bc5ac4"
                ]
            ],
            "name": "Check for valid user",
            "outputs": "2",
            "outputLabels": [
                "Authenticated",
                "Failed"
            ],
            "noerr": 0,
            "func": "\nif (msg.hasOwnProperty(\"users\") && msg.users.length === 1 ) {\n    var user = msg.users[0];\n    if (user.doc_type === 'user' && user.status === 'active' && user.hasOwnProperty(\"password\") && user.hasOwnProperty(\"email\") && user.password === msg.inputs.body.password) {\n        return [msg, null]\n    }\n}\nreturn [null, msg];",
            "y": 280,
            "x": 1360,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "2492a8e2.b23e68"
        },
        {
            "wires": [],
            "name": "",
            "y": 240,
            "x": 1790,
            "z": "1dff07f1.603c08",
            "type": "subflow:bc6ff87.05a2908",
            "id": "142a3246.60a09e"
        },
        {
            "wires": [],
            "name": "",
            "y": 280,
            "x": 1900,
            "z": "1dff07f1.603c08",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "625542f7.b8bb1c"
        },
        {
            "wires": [
                [
                    "490b4ef.93ca3b"
                ],
                [
                    "b7561f41.e2926"
                ]
            ],
            "name": "Athentication Failed",
            "outputs": 2,
            "outputLabels": [
                "Error",
                "Email Admin"
            ],
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nvar error = {\n    \"code\": 400,\n    \"message\": \"Authentication failed.\"\n}\nif (msg.hasOwnProperty(\"users\") && msg.users.length > 1) {\n    error.message = \"More than one user with the same email \" + msg.inputs.body.email + \" was found.\"\n    msg.errors.push(error);\n    return [msg, null];\n} else\nif (!msg.users || msg.users.length === 0 || !msg.users[0].doc_type) {\n    if (msg.inputs.body.hasOwnProperty(\"email\")) {\n        error.message = \"User with email: \" + msg.inputs.body.email + \" was not found.\"    \n    } else {\n        error.message = \"User with ID: \" +  msg.inputs.body.user_id + \" was not found.\"    \n    }\n    msg.errors.push(error);\n    return [msg, null];\n}\n// Authentication Failed\nmsg.errors.push(error);\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"support_users\",\n    \"selector\": {\n        \"doc_type\": \"user\",\n        \"status\": \"active\",\n        \"$or\": [{\"sub_roles\": {\"$elemMatch\": {\"$eq\": \"Admin\"}}}]\n    },\n    \"fields\": [\"email\"],\n\t\"sort\": [{ \"email:string\": \"asc\"}]\n}\nif (msg.users[0].hasOwnProperty(\"created_by\") && msg.users[0].created_by !== \"\"){\n    msg.cloudant.selector[\"$or\"].push({\"_id\": msg.users[0].created_by})\n}\nvar attempts = global.get(\"user_authentications\");\nif (typeof attempts !== \"undefined\" && Array.isArray(attempts)) {\n    var index = -1;\n    var attempt_found = attempts.some(function(attempt,i) {\n        if(msg.users[0]._id === attempt.id)\n        {\n            attempt.tries++;\n            attempt.timestamp = Date.now();\n            global.set(\"user_authentications\", attempts);\n            index = i;\n            return true;\n        }\n    });\n    if (attempt_found && attempts[index].tries >= 5) {\n        node.warn({\"User Auth Attempts\":attempts})\n        return [msg, msg]; //send emails too\n    } else \n    if (!attempt_found) {\n        attempts.push({\"id\": msg.users[0]._id, \"tries\": 1, \"timestamp\": Date.now()});\n        global.set(\"user_authentications\", attempts);\n    }\n    node.warn({\"User Auth Attempts\":attempts})\n}\nreturn [msg, null];",
            "y": 300,
            "x": 1570,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "4c90ea09.bc5ac4"
        },
        {
            "wires": [
                [
                    "142a3246.60a09e"
                ]
            ],
            "name": "Authentication Success",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.message = \"Authentication success.\";\nreturn msg;",
            "y": 240,
            "x": 1590,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "a7ad127f.b8415"
        },
        {
            "wires": [
                [
                    "3fd9a5b6.d740fa"
                ]
            ],
            "name": "",
            "y": 320,
            "x": 1770,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "b7561f41.e2926"
        },
        {
            "wires": [
                [
                    "adc8c6e2.750618"
                ]
            ],
            "name": "User Query Cases",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"User Query Cases\"\n    });\nmsg.records = {\n    \"doc_type\": \"case\",\n    \"format\": \"array\",\n    \"object\": \"cases\",\n    \"returns\": [\"cases\"],\n    \"fields\": [ \"_id\",\n                \"log_id\",\n                \"system_sn\",\n                \"system_type\",\n                \"location\",\n                \"geo_location\",\n                \"address\",\n                \"user_id\",\n                \"settings_file_name\",\n                \"start_time\",\n                \"stop_time\"\n               ],\n    \"sort\": [{\"stop_time:number\": \"desc\"}]\n};\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": [\"filter_options\"]\n};\nmsg.filters = {\n    \"allowed\": [\"stop_time_range_begin\" , \"stop_time_range_end\" , \"system_sn\"],\n    \"required\": []\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_logs/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"bookmark_type\": \"payload\",\n    \"pagination\": true\n};\nmsg.filters.params = {\n    \"user_id\": msg.req.params.userID\n};\nreturn msg;",
            "y": 1160,
            "x": 670,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "55edbef.09e114"
        },
        {
            "wires": [
                [
                    "55edbef.09e114"
                ]
            ],
            "name": "",
            "y": 1160,
            "x": 470,
            "z": "1dff07f1.603c08",
            "type": "subflow:3962857e.44abba",
            "id": "467070d9.a759d"
        },
        {
            "wires": [
                [
                    "17fd34ff.c30cdb"
                ]
            ],
            "name": "",
            "y": 1160,
            "x": 840,
            "z": "1dff07f1.603c08",
            "type": "subflow:71afa3f9.81defc",
            "id": "adc8c6e2.750618"
        },
        {
            "wires": [
                [
                    "467070d9.a759d"
                ]
            ],
            "name": "",
            "url": "/users/user/:userID/logs/cases_query",
            "upload": false,
            "id": "5400805.2f99d8",
            "swaggerDoc": "",
            "y": 1160,
            "x": 180,
            "z": "1dff07f1.603c08",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "39b6e31e.6bea3c"
                ]
            ],
            "name": "",
            "y": 1160,
            "x": 1010,
            "z": "1dff07f1.603c08",
            "type": "subflow:f83a5f50.ef8e",
            "id": "17fd34ff.c30cdb"
        },
        {
            "wires": [
                [
                    "58eb3885.6ed9d8"
                ]
            ],
            "name": "",
            "y": 1160,
            "x": 1210,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "39b6e31e.6bea3c"
        },
        {
            "wires": [],
            "name": "",
            "y": 1160,
            "x": 1390,
            "z": "1dff07f1.603c08",
            "type": "subflow:bc6ff87.05a2908",
            "id": "58eb3885.6ed9d8"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] User Query Cases",
            "y": 1120,
            "x": 120,
            "z": "1dff07f1.603c08",
            "type": "comment",
            "id": "2a6e900f.ed1ae"
        },
        {
            "wires": [
                [
                    "ec6841de.69337"
                ]
            ],
            "name": "",
            "y": 500,
            "x": 470,
            "z": "1dff07f1.603c08",
            "type": "subflow:3962857e.44abba",
            "id": "2a3158bf.3a0838"
        },
        {
            "wires": [
                [
                    "1bb98b8e.87fff4"
                ]
            ],
            "name": "User Devices",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"User Devices\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\",\"status\"],\n    \"doc_type\": \"device\",\n    \"format\": \"array\",\n    \"object\": \"devices\",\n    \"returns\": [\"devices\"]\n};\nmsg.inputs = {\n    \"user_id\": msg.req.params.userID\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"doc_types\",\n    \"selector\": {\n        \"$or\": [{\"$and\": [{\"doc_type\": \"user\"},{\"status\": \"active\"},{\"_id\": msg.inputs.user_id}]},\n                {\"$and\": [{\"doc_type\": \"machine_link\"},{\"status\": \"active\"},{\"user\": msg.inputs.user_id}]}]\n    }\n};\nreturn msg;",
            "y": 500,
            "x": 650,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "ec6841de.69337"
        },
        {
            "wires": [
                [
                    "2a3158bf.3a0838"
                ]
            ],
            "name": "",
            "url": "/users/user/:userID/devices",
            "upload": false,
            "id": "5606368b.0f5fc8",
            "swaggerDoc": "",
            "y": 500,
            "x": 150,
            "z": "1dff07f1.603c08",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "fe4a0fcb.7a45a"
                ]
            ],
            "name": "",
            "y": 500,
            "x": 830,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "1bb98b8e.87fff4"
        },
        {
            "wires": [
                [
                    "df075575.8e95b8"
                ],
                [
                    "5ff613b0.735a8c"
                ],
                [
                    "7beac8b7.062f98"
                ]
            ],
            "name": "Paired Device Ids",
            "outputs": 3,
            "outputLabels": [
                "yes paired",
                "no paired",
                "no user"
            ],
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"users\") || msg.users.length === 0) {\n    return [null,null,msg];\n}\nif (msg.hasOwnProperty(\"machine_links\") && msg.machine_links.length > 0) {\n    msg.paired_device_ids = msg.machine_links.map(a => a.device);\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"selector\": {\n            \"$and\": [{\"doc_type\": \"device\"},{\"status\": \"active\"},{\"_id\": {\"$in\": msg.paired_device_ids}}]\n        },\n        \"sort\": [{ \"_id:string\": \"asc\"}],\n        \"object\": \"devices\"\n    };\n    if(msg.req.query.hasOwnProperty(\"limit\") || msg.req.query.hasOwnProperty(\"offset\")){\n        if(msg.req.query.hasOwnProperty(\"limit\")){msg.cloudant.limit = parseInt(msg.req.query.limit)}\n        if(msg.req.query.hasOwnProperty(\"offset\")){msg.cloudant.skip = parseInt(msg.req.query.offset)}\n    }\n    return [msg,null,null];\n}\nmsg.devices = [];\nmsg.api.path = 2;\nreturn [null,msg,null];",
            "y": 500,
            "x": 1030,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "fe4a0fcb.7a45a"
        },
        {
            "wires": [],
            "name": "",
            "y": 500,
            "x": 1610,
            "z": "1dff07f1.603c08",
            "type": "subflow:bc6ff87.05a2908",
            "id": "5ff613b0.735a8c"
        },
        {
            "wires": [
                [
                    "bdeca7d1.149ac8"
                ]
            ],
            "name": "",
            "y": 480,
            "x": 1230,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "df075575.8e95b8"
        },
        {
            "info": "This returns an array of documents of machines \npaired to a user\n",
            "wires": [],
            "name": "[CN] User Devices",
            "y": 460,
            "x": 110,
            "z": "1dff07f1.603c08",
            "type": "comment",
            "id": "a7a8ac21.e3b32"
        },
        {
            "wires": [
                [
                    "ab2fdab9.55c3b8"
                ]
            ],
            "name": "",
            "y": 680,
            "x": 470,
            "z": "1dff07f1.603c08",
            "type": "subflow:3962857e.44abba",
            "id": "a1a4f440.9c5a18"
        },
        {
            "wires": [
                [
                    "1371888f.402167"
                ]
            ],
            "name": "Users Files",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Users Files\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\",\"doc_type\",\"status\"],\n    \"doc_type\": \"settings_file\",\n    \"format\": \"array\",\n    \"object\": \"settings_files\",\n    \"returns\": [\"settings_files\"]\n};\nmsg.inputs = {\n    \"user_id\": msg.req.params.userID\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/\" + msg.inputs.user_id,\n    \"method\": \"GET\",\n    \"return_obj\": \"\",\n    \"object\": \"user\"\n};\nreturn msg;",
            "y": 680,
            "x": 790,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "1c01fc1f.ebd9a4"
        },
        {
            "wires": [
                [
                    "a1a4f440.9c5a18"
                ]
            ],
            "name": "",
            "url": "/users/user/:userID/files",
            "upload": true,
            "id": "3ecf6780.25ca88",
            "swaggerDoc": "",
            "y": 680,
            "x": 140,
            "z": "1dff07f1.603c08",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "ed7272f5.93f2e"
                ]
            ],
            "name": "",
            "y": 660,
            "x": 1510,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "a7501dbe.358ae"
        },
        {
            "wires": [],
            "name": "",
            "y": 660,
            "x": 1890,
            "z": "1dff07f1.603c08",
            "type": "subflow:bc6ff87.05a2908",
            "id": "41969339.8e8e1c"
        },
        {
            "info": "This gets every File for a User",
            "wires": [],
            "name": "[CN] [DEVICES] User Files",
            "y": 640,
            "x": 130,
            "z": "1dff07f1.603c08",
            "type": "comment",
            "id": "9245f14a.d349f"
        },
        {
            "wires": [
                [
                    "c87739c6.50c3f8"
                ]
            ],
            "name": "",
            "y": 820,
            "x": 470,
            "z": "1dff07f1.603c08",
            "type": "subflow:3962857e.44abba",
            "id": "fcb3a021.f5d13"
        },
        {
            "wires": [
                [
                    "b7f3968c.58ebd8"
                ]
            ],
            "name": "User Info",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"User Info\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"password\", \"doc_type\", \"status\"],\n    \"doc_type\": \"user\",\n    \"object\": \"user\",\n    \"format\": \"JSON\",\n    \"returns\": [\"user\"],\n    \"id\": msg.req.params.userID\n};\nmsg.inputs = {\n    \"user_id\": msg.req.params.userID\n};\nmsg.filters = {};\nmsg.filters.params = {};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/\" + msg.records.id,\n    \"method\": \"GET\",\n    \"return_obj\": \"\",\n    \"object\": \"user\"\n};\nreturn msg;",
            "y": 820,
            "x": 640,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "c87739c6.50c3f8"
        },
        {
            "wires": [
                [
                    "54e2ee12.45f6f"
                ]
            ],
            "name": "",
            "url": "/users/user/:userID",
            "upload": false,
            "id": "362ba31b.7435ac",
            "swaggerDoc": "",
            "y": 820,
            "x": 120,
            "z": "1dff07f1.603c08",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "eb579346.ac809"
                ]
            ],
            "name": "",
            "y": 820,
            "x": 810,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "b7f3968c.58ebd8"
        },
        {
            "wires": [
                [
                    "f59277d1.f57878"
                ]
            ],
            "name": "",
            "y": 800,
            "x": 1210,
            "z": "1dff07f1.603c08",
            "type": "subflow:313bd1d3.01c06e",
            "id": "899f840c.74d418"
        },
        {
            "wires": [],
            "name": "",
            "y": 800,
            "x": 1390,
            "z": "1dff07f1.603c08",
            "type": "subflow:bc6ff87.05a2908",
            "id": "f59277d1.f57878"
        },
        {
            "info": "Checks and returns user info if it exists",
            "wires": [],
            "name": "[CN] [DEVICES] User Info",
            "y": 780,
            "x": 130,
            "z": "1dff07f1.603c08",
            "type": "comment",
            "id": "ca821547.849ad8"
        },
        {
            "wires": [
                [
                    "7d4c1fc4.026b8"
                ]
            ],
            "name": "",
            "y": 920,
            "x": 470,
            "z": "1dff07f1.603c08",
            "type": "subflow:3962857e.44abba",
            "id": "afbb8311.d2f1e"
        },
        {
            "wires": [
                [
                    "9d966eb7.76ee9"
                ]
            ],
            "name": "",
            "url": "/users",
            "upload": false,
            "id": "5d63391a.f22528",
            "swaggerDoc": "",
            "y": 920,
            "x": 90,
            "z": "1dff07f1.603c08",
            "type": "http in",
            "method": "post"
        },
        {
            "info": "This flow first checks that fields password, role,\nand email in the payload. If the UID is included\nthan we check if we have that registered. If it is\nregistered we reactivate it or return that user is\nalready registered. If we don't have that UID or \nit wasn't included we create a User document.",
            "wires": [],
            "name": "[CN] User New",
            "y": 880,
            "x": 100,
            "z": "1dff07f1.603c08",
            "type": "comment",
            "id": "bfebfa68.2c8e58"
        },
        {
            "wires": [
                [
                    "f5c36594.30df18"
                ]
            ],
            "name": "User New",
            "outputs": 1,
            "noerr": 0,
            "func": "var genPwd = global.get(\"genpwd\");\nmsg.api = Object.assign(msg.api,\n    {\n        \"name\": \"User New\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"status\", \"password\"],\n    \"doc_type\": \"user\",\n    \"object\": \"user\",\n    \"format\": \"JSON\",\n    \"models\": [\"user\"],\n    \"returns\": [\"user\"],\n    \"return_code\": 201\n};\nif(!msg.payload.password || msg.payload.password === \"\") {\n    msg.records.password = genPwd.generate(global.get(\"PWD_GEN\"))\n}\nmsg.inputs = {\n    \"required\": [\"role\",\"email\"],\n    \"allowed\": [\"sub_roles\",\"uid\",\"first_name\",\"last_name\",\"mobile_phone\",\"password\",\"gets_change_email\",\"bart_sart\",\"business_unit\",\"sales_area\",\"sales_region\",\"sales_territory\",\"service_area\",\"service_region\",\"service_territory\",\"created_by\",\"remote_access_allowed\"]\n};\nif(msg.payload.hasOwnProperty(\"email\")) {\n    msg.records.email = msg.payload.email.toLowerCase();\n}\nreturn msg;",
            "y": 920,
            "x": 640,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "7d4c1fc4.026b8"
        },
        {
            "wires": [
                [
                    "134c7500.1c7cab"
                ]
            ],
            "name": "",
            "y": 920,
            "x": 780,
            "z": "1dff07f1.603c08",
            "type": "subflow:71afa3f9.81defc",
            "id": "f5c36594.30df18"
        },
        {
            "wires": [
                [
                    "334ee051.206e8"
                ]
            ],
            "name": "",
            "y": 920,
            "x": 940,
            "z": "1dff07f1.603c08",
            "type": "subflow:e0cd8199.1ad77",
            "id": "134c7500.1c7cab"
        },
        {
            "wires": [
                [
                    "cb82516b.87be9"
                ]
            ],
            "name": "",
            "y": 920,
            "x": 1130,
            "z": "1dff07f1.603c08",
            "type": "subflow:313bd1d3.01c06e",
            "id": "334ee051.206e8"
        },
        {
            "wires": [],
            "name": "",
            "y": 920,
            "x": 1310,
            "z": "1dff07f1.603c08",
            "type": "subflow:bc6ff87.05a2908",
            "id": "cb82516b.87be9"
        },
        {
            "wires": [
                [
                    "2df6949b.7911bc"
                ]
            ],
            "name": "",
            "y": 1380,
            "x": 470,
            "z": "1dff07f1.603c08",
            "type": "subflow:3962857e.44abba",
            "id": "3fafa365.afae5c"
        },
        {
            "wires": [
                [
                    "7e685dba.ed6804"
                ]
            ],
            "name": "User Query Tickets",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"User Query Tickets\"\n    });\nmsg.records = {\n    \"doc_type\": \"help_ticket\",\n    \"format\": \"array\",\n    \"object\": \"help_tickets\",\n    \"returns\": [\"help_tickets\"],\n    \"fields\": [ \"_id\",\n                \"system_sn\",\n                \"system_type\",\n                \"doctor_id\",\n                \"cell_tower_info\",\n                \"geo_location\",\n                \"start_time\",\n                \"close_time\",\n                \"ticket_status\",\n                \"reason\",\n                \"contact_name\",\n                \"contact_number\",\n                \"assigned_id\",\n                \"responder_id\",\n                \"surgeon_settings_file_id\",\n                \"surgeon_settings_name\",\n                \"device_ip\"\n               ],\n    \"sort\": [{\"start_time:number\": \"desc\"}]\n};\nif(msg.req.body.hasOwnProperty(\"return_assigned_users\") && msg.req.body.return_assigned_users === true) {\n    msg.records.returns.push(\"assigned_users\");\n}\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": [\"filter_options\", \"return_assigned_users\"]\n};\nmsg.filters = {\n    \"allowed\": [\"start_time_range_begin\" , \"start_time_range_end\" , \"ticket_status\" , \"reason\"],\n    \"required\": []\n};\nmsg.inputs.assigned_id = msg.req.params.assignedID;\nmsg.cloudant = {\n    \"request\": \"/help_tickets/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"bookmark_type\": \"payload\", //\"payload\", \"parameter\"\n    \"pagination\": true\n};\nreturn msg;",
            "y": 1380,
            "x": 670,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "2df6949b.7911bc"
        },
        {
            "wires": [
                [
                    "3fafa365.afae5c"
                ]
            ],
            "name": "",
            "url": "/users/user/:assignedID/tickets_query",
            "upload": false,
            "id": "8ce9c141.2b96f",
            "swaggerDoc": "",
            "y": 1380,
            "x": 190,
            "z": "1dff07f1.603c08",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "2b9a116b.1b0a6e"
                ]
            ],
            "name": "",
            "y": 1380,
            "x": 840,
            "z": "1dff07f1.603c08",
            "type": "subflow:71afa3f9.81defc",
            "id": "7e685dba.ed6804"
        },
        {
            "wires": [
                [
                    "ed4fc18d.d9efd"
                ]
            ],
            "name": "",
            "y": 1380,
            "x": 1430,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "1b347920.fd6e87"
        },
        {
            "wires": [],
            "name": "",
            "y": 1380,
            "x": 2010,
            "z": "1dff07f1.603c08",
            "type": "subflow:bc6ff87.05a2908",
            "id": "77536a3c.542ee4"
        },
        {
            "wires": [
                [
                    "1ac0f15b.6652af"
                ],
                [
                    "77536a3c.542ee4"
                ]
            ],
            "name": "Distinct List",
            "outputs": 2,
            "noerr": 0,
            "func": "if(msg.help_tickets.length > 0 && msg.inputs.body.hasOwnProperty(\"return_assigned_users\") && msg.inputs.body.return_assigned_users === true){\n    var unique_assigned_ids = [];\n    msg.help_tickets.forEach(function(record){\n        if(record.hasOwnProperty(\"assigned_id\")){\n            record.assigned_id.forEach(function(id){\n                if(unique_assigned_ids.indexOf(id) < 0){\n                    unique_assigned_ids.push(id);\n                }\n            });\n        }\n    });\n    msg.assigned_id = unique_assigned_ids;\n    if(unique_assigned_ids.length > 0){\n        msg.cloudant.request = \"/stellaris_documents/_find\";\n        msg.cloudant.method = \"POST\";\n        msg.cloudant.selector = { \"_id\":  { \"$in\": msg.assigned_id  }};\n        msg.cloudant.fields = [\"_id\", \"first_name\", \"last_name\"];\n        msg.cloudant.sort= [{ \"last_name:string\": \"asc\"}];\n        msg.cloudant.object = \"assigned_users\";\n        msg.cloudant.pagination = false;\n        msg.cloudant.bookmark_use = false;\n        msg.cloudant.bookmark_save = false;\n        return [msg, null];\n    }\n    msg.assigned_users = [];\n}\nreturn [null, msg];",
            "y": 1380,
            "x": 1610,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "ed4fc18d.d9efd"
        },
        {
            "wires": [
                [
                    "77536a3c.542ee4"
                ]
            ],
            "name": "",
            "y": 1340,
            "x": 1810,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "1ac0f15b.6652af"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN]  User Query Tickets",
            "y": 1340,
            "x": 130,
            "z": "1dff07f1.603c08",
            "type": "comment",
            "id": "79583195.f6388"
        },
        {
            "wires": [
                [
                    "f3cdcfcf.e819"
                ]
            ],
            "name": "",
            "y": 1520,
            "x": 470,
            "z": "1dff07f1.603c08",
            "type": "subflow:3962857e.44abba",
            "id": "2497d9af.ade676"
        },
        {
            "wires": [
                [
                    "232bc5db.bf823a"
                ]
            ],
            "name": "User Update",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"User Update\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"password\"],\n    \"doc_type\": \"user\", \n    \"object\": \"user\",\n    \"format\": \"JSON\",\n    \"returns\": [\"user\"],\n    \"id\": msg.req.params.userID\n};\nmsg.inputs = {\n    \"allowed\": [\"role\",\"sub_roles\",\"uid\",\"first_name\",\"last_name\",\"mobile_phone\",\"email\",\"gets_change_email\",\"bart_sart\",\"business_unit\",\"sales_area\",\"sales_region\",\"sales_territory\",\"service_area\",\"service_region\",\"service_territory\",\"created_by\",\"remote_access_allowed\",\"password\"],\n    \"required\": [],\n    \"user_id\": msg.req.params.userID\n};\nreturn msg;",
            "y": 1520,
            "x": 650,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "f3cdcfcf.e819"
        },
        {
            "wires": [
                [
                    "cebdcba9.dfac18"
                ]
            ],
            "name": "",
            "url": "/users/user/:userID",
            "upload": false,
            "id": "2fe2c77.339a938",
            "swaggerDoc": "",
            "y": 1520,
            "x": 120,
            "z": "1dff07f1.603c08",
            "type": "http in",
            "method": "put"
        },
        {
            "wires": [
                [
                    "563daded.823b64"
                ]
            ],
            "name": "",
            "y": 1520,
            "x": 800,
            "z": "1dff07f1.603c08",
            "type": "subflow:71afa3f9.81defc",
            "id": "232bc5db.bf823a"
        },
        {
            "wires": [
                [
                    "9d480bc5.b40dd8"
                ],
                [
                    "9be60157.ab452"
                ],
                [
                    "a51390d8.bb56f"
                ]
            ],
            "name": "Email Update?",
            "outputs": 3,
            "outputLabels": [
                "Yes",
                "No",
                "No body"
            ],
            "noerr": 0,
            "func": "if(Object.keys(msg.inputs.body).length >0) {\n    if(msg.inputs.body.hasOwnProperty(\"email\")) {\n        msg.cloudant = {\n            \"request\": \"/stellaris_documents/_find\",\n            \"method\": \"POST\",\n            \"return_obj\": \"docs\",\n            \"bookmark_type\": \"payload\", //\"payload\", \"parameter\"\n            \"object\": \"users_email\",\n            \"selector\": {\n                \"doc_type\": \"user\",\n                \"email\": msg.inputs.body.email.toLowerCase(),\n            },\n            \"fields\": [\"_id\", \"email\"]\n        }\n        return [msg, null,null]\n        \n    } else {\n        msg.api.path = 2;\n        return [null, msg,null]\n    }\n} else {\n    return [null,null,msg]\n}",
            "y": 1520,
            "x": 960,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "563daded.823b64"
        },
        {
            "wires": [
                [
                    "966aa5d.7c14a58"
                ]
            ],
            "name": "",
            "y": 1480,
            "x": 1150,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "9d480bc5.b40dd8"
        },
        {
            "wires": [
                [
                    "41964e86.c80ec"
                ]
            ],
            "name": "",
            "y": 1520,
            "x": 1550,
            "z": "1dff07f1.603c08",
            "type": "subflow:68197f61.7975",
            "id": "9be60157.ab452"
        },
        {
            "wires": [
                [
                    "9be60157.ab452"
                ],
                [
                    "a814cf22.a3b0a"
                ]
            ],
            "name": "Email Exist?",
            "outputs": 2,
            "outputLabels": [
                "Update Record",
                "Wrong or Multiple"
            ],
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"users_email\") && (msg.users_email.length === 0 || (msg.users_email.length === 1 && msg.users_email[0]._id === msg.records.id))) {\n    msg.api.path = 3;\n    return [msg,null]\n} else {\n    return [null,msg]\n} ",
            "y": 1480,
            "x": 1330,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "966aa5d.7c14a58"
        },
        {
            "wires": [
                [
                    "366859e5.634b36"
                ]
            ],
            "name": "",
            "y": 1520,
            "x": 1750,
            "z": "1dff07f1.603c08",
            "type": "subflow:313bd1d3.01c06e",
            "id": "41964e86.c80ec"
        },
        {
            "wires": [
                [
                    "3de299d9.5af206"
                ]
            ],
            "name": "Email Already in Use",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"The email address (\" + msg.inputs.body.email + \") is already associated with another user.\",\n    \"return\": [\"users_email\"]\n})\nmsg.records.format = \"array\";\nreturn msg;",
            "y": 1560,
            "x": 1540,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "a814cf22.a3b0a"
        },
        {
            "wires": [],
            "name": "",
            "y": 1520,
            "x": 1930,
            "z": "1dff07f1.603c08",
            "type": "subflow:bc6ff87.05a2908",
            "id": "366859e5.634b36"
        },
        {
            "wires": [],
            "name": "",
            "y": 1600,
            "x": 1760,
            "z": "1dff07f1.603c08",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "3de299d9.5af206"
        },
        {
            "info": "Checks for user and then updates. Any fields \nother than cloudant/logic ones can be updated",
            "wires": [],
            "name": "[CN] User Update",
            "y": 1480,
            "x": 110,
            "z": "1dff07f1.603c08",
            "type": "comment",
            "id": "ed50483c.f97fc8"
        },
        {
            "wires": [
                [
                    "8765f60c.c804f8"
                ]
            ],
            "name": "Users by Region",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Users by Region\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"password\"],\n    \"doc_type\": \"user\",\n    \"format\": \"array\",\n    \"object\": \"users\",\n    \"fields\": [\"_id\",\"status\",\"role\",\"sub_roles\",\"uid\",\"first_name\",\"last_name\",\"mobile_phone\",\"email\",\"gets_change_email\",\"bart_sart\",\"business_unit\",\"sales_area\",\"sales_region\",\"sales_territory\",\"service_area\",\"service_region\",\"service_territory\",\"created_by\",\"eula_create_date\",\"eula_accept_status\",\"eula_accept_date\",\"remote_access_allowed\"],\n    \"sort\": [{\"last_name:string\": \"asc\"}],\n    \"returns\": [\"users\"]\n};\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": [\"filter_options\"]};\nmsg.filters = {\n    \"allowed\": [\"gets_change_email\", \"sub_roles\", \"role\"],\n    \"required\": []};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"bookmark_type\": \"payload\",\n    \"pagination\": true,\n    \"bookmark_use\": false\n}\nmsg.filters.params = {\n    \"doc_type\": msg.records.doc_type,\n    \"status\": \"active\",\n    \"bart_sart\": msg.req.params.bart_sart\n}\nif(msg.req.params.bart_sart === \"bart\"){\n        var area = \"sales_area\";\n        var region = \"sales_region\";\n        var territory = \"sales_territory\";\n}\nelse {\n        var area = \"service_area\";\n        var region = \"service_region\";\n        var territory = \"service_territory\";\n}\nif(msg.req.params.business_unit.trim() != \"ALL\"){\n    msg.filters.params.business_unit =  msg.req.params.business_unit\n\tif(msg.req.params.area.trim() != \"ALL\"){\n\t    msg.filters.params[area] = msg.req.params.area;\n\t    if(msg.req.params.region.trim() != \"ALL\"){\n\t        msg.filters.params[region] = msg.req.params.region;\n\t        if(msg.req.params.territory.trim() != \"ALL\"){\n\t            msg.filters.params[territory] = msg.req.params.territory;\n\t        }\n\t    }\n\t}\n}\nreturn msg;",
            "y": 1660,
            "x": 980,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "bc9631a5.eebb9"
        },
        {
            "wires": [
                [
                    "520762ca.ba423c"
                ]
            ],
            "name": "",
            "y": 1660,
            "x": 1140,
            "z": "1dff07f1.603c08",
            "type": "subflow:71afa3f9.81defc",
            "id": "8765f60c.c804f8"
        },
        {
            "wires": [
                [
                    "bc9631a5.eebb9"
                ]
            ],
            "name": "",
            "y": 1660,
            "x": 790,
            "z": "1dff07f1.603c08",
            "type": "subflow:3962857e.44abba",
            "id": "3bcd4b75.f94e44"
        },
        {
            "wires": [
                [
                    "aeb139d4.c23978"
                ]
            ],
            "name": "",
            "y": 1660,
            "x": 1310,
            "z": "1dff07f1.603c08",
            "type": "subflow:f83a5f50.ef8e",
            "id": "520762ca.ba423c"
        },
        {
            "wires": [
                [
                    "20efb05e.928c8"
                ]
            ],
            "name": "",
            "url": "/users/user_query/region/:bart_sart/:business_unit/:area/:region/:territory",
            "upload": false,
            "id": "a2703c4d.00e93",
            "swaggerDoc": "",
            "y": 1660,
            "x": 290,
            "z": "1dff07f1.603c08",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "f56eae86.65d97"
                ]
            ],
            "name": "Add Or ALL",
            "outputs": 1,
            "noerr": 0,
            "func": "var addList = [\"business_unit\", \"sales_area\", \"sales_region\", \"sales_territory\", \"service_area\", \"service_region\", \"service_territory\"];\nmsg.cloudant.selector.$and.forEach(function(andObj, index){\n    andObjKey = Object.keys(andObj)[0];\n    andObjValue = andObj[andObjKey];if(addList.includes(andObjKey)){\n        msg.cloudant.selector.$and[index][andObjKey] = { \"$or\": [andObjValue, \"ALL\"]};\n    }\n});\nreturn msg;",
            "y": 1660,
            "x": 1490,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "aeb139d4.c23978"
        },
        {
            "wires": [
                [
                    "e67eeb3d.179488"
                ]
            ],
            "name": "",
            "y": 1660,
            "x": 1670,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "f56eae86.65d97"
        },
        {
            "wires": [],
            "name": "",
            "y": 1660,
            "x": 1850,
            "z": "1dff07f1.603c08",
            "type": "subflow:bc6ff87.05a2908",
            "id": "e67eeb3d.179488"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] Users by Region",
            "y": 1620,
            "x": 120,
            "z": "1dff07f1.603c08",
            "type": "comment",
            "id": "685584e9.e28ebc"
        },
        {
            "wires": [
                [
                    "6a62633a.206c4c"
                ]
            ],
            "name": "",
            "y": 1840,
            "x": 470,
            "z": "1dff07f1.603c08",
            "type": "subflow:3962857e.44abba",
            "id": "77408e62.94768"
        },
        {
            "wires": [
                [
                    "9bdecbf1.62b788"
                ]
            ],
            "name": "",
            "url": "/users/filter_by",
            "upload": false,
            "id": "c7915b17.1d84e8",
            "swaggerDoc": "",
            "y": 1840,
            "x": 110,
            "z": "1dff07f1.603c08",
            "type": "http in",
            "method": "get"
        },
        {
            "info": "Filters by field and value",
            "wires": [],
            "name": "[CN] [DEVICES] Users Filter By",
            "y": 1803,
            "x": 150,
            "z": "1dff07f1.603c08",
            "type": "comment",
            "id": "97fee292.78b22"
        },
        {
            "wires": [
                [
                    "344a4abb.ad3e26"
                ]
            ],
            "name": "Users Filter By",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Users Filter By\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"password\"],\n    \"doc_type\": \"user\",\n    \"format\": \"array\",\n    \"object\": \"users\",\n    \"fields\": [\"_id\",\"status\",\"role\",\"sub_roles\",\"uid\",\"first_name\",\"last_name\",\"mobile_phone\",\"email\",\"gets_change_email\",\"bart_sart\",\"business_unit\",\"sales_area\",\"sales_region\",\"sales_territory\",\"service_area\",\"service_region\",\"service_territory\",\"created_by\",\"eula_create_date\",\"eula_accept_status\",\"eula_accept_date\",\"remote_access_allowed\"],\n    \"sort\": [{\"last_name:string\": \"asc\"}],\n    \"returns\": [\"users\"]\n};\nmsg.inputs = {};\nmsg.filters = {};\nmsg.filters.params = {\n    \"doc_type\": \"user\",\n    \"status\": \"active\"\n}\nvar allowedFields = [\"_id\",\"status\",\"role\",\"sub_roles\",\"uid\",\"first_name\",\"last_name\",\"mobile_phone\",\"email\",\"gets_change_email\",\"bart_sart\",\"business_unit\",\"sales_area\",\"sales_region\",\"sales_territory\",\"service_area\",\"service_region\",\"service_territory\",\"created_by\",\"eula_create_date\",\"eula_accept_status\",\"eula_accept_date\",\"remote_access_allowed\"]\nif(msg.req.query.field && msg.req.query.value && allowedFields.indexOf(msg.req.query.field) >= 0)\n{\n    msg.req.query.value = msg.req.query.value.replace(/\\\"/g,\"\") //remove quotes from value\n    if(msg.req.query.field === \"email\")\n    {\n        msg.filters.params[msg.req.query.field] = msg.req.query.value.toLowerCase();\n    } else {\n        msg.filters.params[msg.req.query.field] = msg.req.query.value\n    }\n} else {\n    msg.inputs.allowed = [\"field\", \"value\"];\n    msg.inputs.required = [\"field\", \"value\"];\n}\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"bookmark_type\": \"payload\",\n    \"pagination\": true,\n    \"bookmark_use\": false\n}\nmsg.payload = {};\nreturn msg;",
            "y": 1840,
            "x": 660,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "6a62633a.206c4c"
        },
        {
            "wires": [
                [
                    "b40e020e.c1fa8"
                ]
            ],
            "name": "",
            "y": 1840,
            "x": 820,
            "z": "1dff07f1.603c08",
            "type": "subflow:71afa3f9.81defc",
            "id": "344a4abb.ad3e26"
        },
        {
            "wires": [
                [
                    "4a9a92bc.fd559c"
                ]
            ],
            "name": "",
            "y": 1840,
            "x": 1190,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "a09146a6.a383c8"
        },
        {
            "wires": [],
            "name": "",
            "y": 1840,
            "x": 1370,
            "z": "1dff07f1.603c08",
            "type": "subflow:bc6ff87.05a2908",
            "id": "4a9a92bc.fd559c"
        },
        {
            "wires": [
                [
                    "a09146a6.a383c8"
                ]
            ],
            "name": "",
            "y": 1840,
            "x": 990,
            "z": "1dff07f1.603c08",
            "type": "subflow:f83a5f50.ef8e",
            "id": "b40e020e.c1fa8"
        },
        {
            "wires": [
                [
                    "88626675.95df08"
                ]
            ],
            "name": "",
            "y": 1940,
            "x": 710,
            "z": "1dff07f1.603c08",
            "type": "subflow:3962857e.44abba",
            "id": "e87ec0f4.0009"
        },
        {
            "wires": [
                [
                    "dfea7251.479c6"
                ]
            ],
            "name": "",
            "url": "/users/user/partial_user_last_name/:partial_last_name",
            "upload": false,
            "id": "f5931e7e.e23e5",
            "swaggerDoc": "",
            "y": 1940,
            "x": 240,
            "z": "1dff07f1.603c08",
            "type": "http in",
            "method": "post"
        },
        {
            "info": "Get Users Last Name With Incomplete Input",
            "wires": [],
            "name": "[CN] Users Partial Last Name",
            "y": 1900,
            "x": 140,
            "z": "1dff07f1.603c08",
            "type": "comment",
            "id": "16fd541a.6a361c"
        },
        {
            "wires": [
                [
                    "cba52518.e54a98"
                ]
            ],
            "name": "Users Partial Last Name",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Users Partial Last Name\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"password\"],\n    \"doc_type\": \"user\",\n    \"format\": \"array\",\n    \"object\": \"users\",\n    \"fields\": [\"_id\",\"status\",\"role\",\"sub_roles\",\"uid\",\"first_name\",\"last_name\",\"mobile_phone\",\"email\",\"gets_change_email\",\"bart_sart\",\"business_unit\",\"sales_area\",\"sales_region\",\"sales_territory\",\"service_area\",\"service_region\",\"service_territory\",\"created_by\",\"eula_create_date\",\"eula_accept_status\",\"eula_accept_date\",\"remote_access_allowed\"],\n    \"sort\": [{\"last_name:string\": \"asc\"}],\n    \"returns\": [\"users\"]\n};\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": [\"filter_options\"],\n    \"partial_last_name\": msg.req.params.partial_last_name};\nmsg.filters = {\n    \"allowed\": [\"role\"],\n    \"required\": []};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"bookmark_type\": \"payload\",\n    \"pagination\": true,\n    \"bookmark_use\": false\n}\nmsg.filters.params = {\n    \"doc_type\": msg.records.doc_type,\n    \"status\": \"active\",\n    \"last_name\": {\"$regex\": \"(?i)^\" + msg.inputs.partial_last_name}\n}\nreturn msg;",
            "y": 1940,
            "x": 930,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "88626675.95df08"
        },
        {
            "wires": [
                [
                    "96ff9a16.4952d8"
                ]
            ],
            "name": "",
            "y": 1940,
            "x": 1120,
            "z": "1dff07f1.603c08",
            "type": "subflow:71afa3f9.81defc",
            "id": "cba52518.e54a98"
        },
        {
            "wires": [
                [
                    "f1e0148c.34a9d8"
                ]
            ],
            "name": "",
            "y": 1940,
            "x": 1490,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "5798ec25.1f5b14"
        },
        {
            "wires": [
                [
                    "5798ec25.1f5b14"
                ]
            ],
            "name": "",
            "y": 1940,
            "x": 1290,
            "z": "1dff07f1.603c08",
            "type": "subflow:f83a5f50.ef8e",
            "id": "96ff9a16.4952d8"
        },
        {
            "wires": [],
            "name": "",
            "y": 1940,
            "x": 1870,
            "z": "1dff07f1.603c08",
            "type": "subflow:bc6ff87.05a2908",
            "id": "8997b720.bd0518"
        },
        {
            "wires": [
                [
                    "c32462b0.dfae4",
                    "b2c41e4a.81f31"
                ]
            ],
            "name": "Error Handling Input",
            "links": [
                "f13de6c9.f7bde",
                "bab60eaa.3a63e",
                "ca04b5ae.702578",
                "641578a9.80022",
                "fa18c32.a739e4",
                "3a34f75f.ce0b98",
                "cbb433fa.24b308",
                "f9f59051.f09818",
                "5aadbd7c.0eeec4",
                "1fa4868.ab22bfa",
                "ebdeebf3.7cb3c8",
                "9503b81a.b25318",
                "dbc254a8.7a13b8",
                "5968bcd6.ca7dc4",
                "c03eaf40.418d"
            ],
            "y": 360,
            "x": 1415,
            "z": "57a5a054.9dfd3",
            "type": "link in",
            "id": "bd0472cc.d443f"
        },
        {
            "wires": [],
            "console": false,
            "name": "",
            "tosidebar": true,
            "y": 360,
            "tostatus": false,
            "active": true,
            "x": 1950,
            "z": "57a5a054.9dfd3",
            "type": "debug",
            "id": "e03de811.dbb6f8",
            "complete": "payload"
        },
        {
            "repeat": "",
            "y": 320,
            "name": "",
            "crontab": "",
            "id": "1a8fd291.d51e7d",
            "topic": "",
            "payloadType": "date",
            "wires": [
                [
                    "a2f7f59d.720198"
                ]
            ],
            "onceDelay": "",
            "x": 100,
            "z": "57a5a054.9dfd3",
            "type": "inject",
            "payload": "",
            "once": false
        },
        {
            "wires": [],
            "console": false,
            "name": "Show me errors",
            "tosidebar": true,
            "y": 320,
            "tostatus": false,
            "active": true,
            "x": 740,
            "z": "57a5a054.9dfd3",
            "type": "debug",
            "id": "63a87f66.9ae6a",
            "complete": "nodered_errors"
        },
        {
            "wires": [
                [
                    "e03de811.dbb6f8"
                ],
                [
                    "e03de811.dbb6f8",
                    "a7f81b63.732ff8"
                ]
            ],
            "name": "Check for couch returned 404 and throw it away",
            "outputs": "2",
            "noerr": 0,
            "func": "var entire_msg = msg;\n\nmsg.payload = msg.error;\nmsg.payload.entire_msg = entire_msg;\nif(msg.error.message == \"couch returned 404\")\n{\n    return [ msg, null ];\n}\nelse\n{\n    msg.payload.timestamp = Date.now();\n    return [ null, msg ];\n}\nreturn msg;",
            "y": 360,
            "x": 1640,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "c32462b0.dfae4"
        },
        {
            "wires": [],
            "name": "",
            "y": 440,
            "x": 2140,
            "z": "57a5a054.9dfd3",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "78aa26dd.8ea3f8"
        },
        {
            "wires": [
                [
                    "78aa26dd.8ea3f8"
                ]
            ],
            "name": "Node Red Error",
            "outputs": 1,
            "noerr": 0,
            "func": "node.warn({\"Error Handling\": msg})\nif(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": msg.error.message,\n    \"returns\": [\"source\"]\n});\nif(!msg.hasOwnProperty(\"records\")){msg.records = {}}\nmsg.records.format = \"array\";\nmsg.source = msg.error.source;\nreturn msg;",
            "y": 440,
            "x": 1960,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "b2c41e4a.81f31"
        },
        {
            "wires": [
                [
                    "4634e03f.e740e"
                ]
            ],
            "name": "",
            "y": 600,
            "x": 630,
            "z": "57a5a054.9dfd3",
            "type": "subflow:f4989ebd.9314",
            "id": "96b475e9.662688"
        },
        {
            "wires": [
                []
            ],
            "name": "",
            "y": 320,
            "x": 2180,
            "z": "1dff07f1.603c08",
            "type": "subflow:5dbd57cc.fc9bb8",
            "id": "2c1af94a.703936"
        },
        {
            "wires": [
                [
                    "95cc38f4.d2d858"
                ]
            ],
            "name": "Insert Node Red Error",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.url = global.get(\"VCAP_CLOUDANT\").credentials.url + \"/node-red_errors\"\nreturn msg;",
            "y": 400,
            "x": 1980,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "a7f81b63.732ff8"
        },
        {
            "tls": "",
            "wires": [
                []
            ],
            "name": "Node Red Error",
            "url": "",
            "ret": "txt",
            "id": "95cc38f4.d2d858",
            "y": 400,
            "x": 2190,
            "z": "57a5a054.9dfd3",
            "type": "http request",
            "method": "POST"
        },
        {
            "wires": [
                [
                    "dc1819a6.b842b8"
                ]
            ],
            "name": "Get Node Red Errors",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = {\n    \"version\": global.get(\"API_VERSION\")\n}\nmsg.cloudant = {\n    \"request\": \"/node-red_errors/_all_docs?include_docs=true\",\n    \"method\": \"GET\",\n    \"return_obj\": \"rows\",\n    \"object\": \"nodered_errors\"\n}\nreturn msg;",
            "y": 320,
            "x": 310,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "a2f7f59d.720198"
        },
        {
            "wires": [
                [
                    "63a87f66.9ae6a"
                ]
            ],
            "name": "",
            "y": 320,
            "x": 530,
            "z": "57a5a054.9dfd3",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "dc1819a6.b842b8"
        },
        {
            "wires": [
                [
                    "c97fd359.cbbfc"
                ]
            ],
            "name": "Devices Query",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Devices Query\"\n    });\nmsg.records = {\n    \"doc_type\": \"device\",\n    \"format\": \"array\",\n    \"object\": \"devices\",\n    \"fields\": [\"_id\", \"system_type\", \"business_unit\", \"sales_area\", \"sales_region\", \"sales_territory\", \"service_area\", \"service_region\", \"service_territory\", \"customer_id\", \"facility_id\", \"facility_name\", \"facility_address\", \"sales_status\", \"status_date\", \"get_me_help_allowed\", \"placed_by\", \"birth_date\", \"idp_id\"],\n    \"sort\": [{\"_id:string\": \"asc\"}],\n    \"returns\": [\"devices\"]\n};\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": [\"filter_options\"]};\nmsg.filters = {\n    \"required\": [],\n    \"allowed\": [\"_id\", \"_id_partial\", \"_id_like\", \"facility_name\", \"system_type\", \"get_me_help_allowed\", \"sales_status\", \"status_date_range_begin\", \"status_date_range_end\", \"birth_date_range_begin\", \"birth_date_range_end\", \"business_unit\", \"sales_area\", \"sales_region\", \"sales_territory\", \"service_area\", \"service_region\", \"service_territory\",\"idp_id\"]};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"bookmark_type\": \"payload\",\n    \"pagination\": true,\n    \"bookmark_use\": false\n}\nmsg.filters.params = {\n    \"doc_type\": msg.records.doc_type,\n    \"status\": \"active\"\n}\nreturn msg;",
            "y": 2440,
            "x": 720,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "dba65925.b3b1f8"
        },
        {
            "wires": [
                [
                    "468b8e37.cfc9c"
                ]
            ],
            "name": "",
            "y": 2440,
            "x": 880,
            "z": "61ffb71b.d286f",
            "type": "subflow:71afa3f9.81defc",
            "id": "c97fd359.cbbfc"
        },
        {
            "wires": [
                [
                    "dba65925.b3b1f8"
                ]
            ],
            "name": "",
            "y": 2440,
            "x": 530,
            "z": "61ffb71b.d286f",
            "type": "subflow:3962857e.44abba",
            "id": "702ce90b.ef4698"
        },
        {
            "wires": [
                [
                    "6815816d.2097"
                ]
            ],
            "name": "",
            "y": 2440,
            "x": 1050,
            "z": "61ffb71b.d286f",
            "type": "subflow:f83a5f50.ef8e",
            "id": "468b8e37.cfc9c"
        },
        {
            "wires": [
                [
                    "702ce90b.ef4698"
                ]
            ],
            "name": "",
            "url": "/devices/device_query",
            "upload": false,
            "id": "53bf960b.8841b8",
            "swaggerDoc": "",
            "y": 2440,
            "x": 140,
            "z": "61ffb71b.d286f",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "1746f287.174b0d"
                ]
            ],
            "name": "",
            "y": 2440,
            "x": 1250,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "6815816d.2097"
        },
        {
            "wires": [],
            "name": "",
            "y": 2440,
            "x": 1430,
            "z": "61ffb71b.d286f",
            "type": "subflow:bc6ff87.05a2908",
            "id": "1746f287.174b0d"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] Device Query",
            "y": 2400,
            "x": 110,
            "z": "61ffb71b.d286f",
            "type": "comment",
            "id": "29f90df6.5e9972"
        },
        {
            "wires": [
                [
                    "29eb87f5.122698"
                ]
            ],
            "name": "",
            "y": 1740,
            "x": 1470,
            "z": "61ffb71b.d286f",
            "type": "subflow:313bd1d3.01c06e",
            "id": "80e18637.e25728"
        },
        {
            "wires": [
                [
                    "5ff613b0.735a8c"
                ]
            ],
            "name": "",
            "y": 480,
            "x": 1430,
            "z": "1dff07f1.603c08",
            "type": "subflow:313bd1d3.01c06e",
            "id": "bdeca7d1.149ac8"
        },
        {
            "wires": [],
            "name": "",
            "y": 520,
            "x": 1400,
            "z": "1dff07f1.603c08",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "e9cbf636.9f3ff8"
        },
        {
            "wires": [
                [
                    "e9cbf636.9f3ff8"
                ]
            ],
            "name": "User Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Active user with id: \" + msg.inputs.user_id + \" was not found.\",\n})\nreturn msg;",
            "y": 520,
            "x": 1220,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "7beac8b7.062f98"
        },
        {
            "wires": [],
            "name": "",
            "y": 1780,
            "x": 1460,
            "z": "61ffb71b.d286f",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "8f8127ce.9e2878"
        },
        {
            "wires": [
                [
                    "8f8127ce.9e2878"
                ]
            ],
            "name": "Device Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Active device with id: \" + msg.inputs.device_id + \" was not found.\",\n})\nreturn msg;",
            "y": 1780,
            "x": 1270,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "d66b9503.38cc28"
        },
        {
            "wires": [
                [
                    "41969339.8e8e1c"
                ]
            ],
            "name": "",
            "y": 660,
            "x": 1710,
            "z": "1dff07f1.603c08",
            "type": "subflow:313bd1d3.01c06e",
            "id": "ed7272f5.93f2e"
        },
        {
            "wires": [
                [
                    "117ec4cf.45508b"
                ]
            ],
            "name": "",
            "url": "/users/user_query",
            "upload": false,
            "id": "7e29eb57.8ae134",
            "swaggerDoc": "",
            "y": 2080,
            "x": 120,
            "z": "1dff07f1.603c08",
            "type": "http in",
            "method": "post"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] [DEVICES] User Query",
            "y": 2040,
            "x": 140,
            "z": "1dff07f1.603c08",
            "type": "comment",
            "id": "431d2b00.2f63d4"
        },
        {
            "wires": [
                [
                    "70e9f908.9f3768"
                ]
            ],
            "name": "",
            "y": 2080,
            "x": 470,
            "z": "1dff07f1.603c08",
            "type": "subflow:3962857e.44abba",
            "id": "432d2c2f.7f4814"
        },
        {
            "wires": [
                [
                    "1877668b.722379"
                ]
            ],
            "name": "Users Query",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Users Query\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\",\"doc_type\",\"status\",\"password\"],\n    \"doc_type\": \"user\",\n    \"format\": \"array\",\n    \"object\": \"users\",\n    \"sort\": [{\"last_name:string\": \"asc\"}],\n    \"returns\": [\"users\"]\n};\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": [\"filter_options\"]};\nmsg.filters = {\n    \"required\": [],\n    \"allowed\": [\"_id\",\"role\",\"sub_roles\",\"uid\",\"first_name\",\"last_name\",\"last_name_partial\",\"mobile_phone\",\"email\",\"gets_change_email\",\"bart_sart\",\"business_unit\",\"sales_area\",\"sales_region\",\"sales_territory\",\"service_area\",\"service_region\",\"service_territory\",\"created_by\",\"remote_access_allowed\"]};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"bookmark_type\": \"payload\",\n    \"pagination\": true,\n    \"bookmark_use\": false\n}\nmsg.filters.params = {\n    \"doc_type\": msg.records.doc_type,\n    \"status\": \"active\"\n}\nreturn msg;",
            "y": 2080,
            "x": 650,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "70e9f908.9f3768"
        },
        {
            "wires": [
                [
                    "dfd8736e.dbbc2"
                ]
            ],
            "name": "",
            "y": 2080,
            "x": 800,
            "z": "1dff07f1.603c08",
            "type": "subflow:71afa3f9.81defc",
            "id": "1877668b.722379"
        },
        {
            "wires": [
                [
                    "bb5b499e.93ca28"
                ]
            ],
            "name": "",
            "y": 2080,
            "x": 970,
            "z": "1dff07f1.603c08",
            "type": "subflow:f83a5f50.ef8e",
            "id": "dfd8736e.dbbc2"
        },
        {
            "wires": [
                [
                    "28fa5aa.f459fa6"
                ]
            ],
            "name": "",
            "y": 2080,
            "x": 1170,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "bb5b499e.93ca28"
        },
        {
            "wires": [],
            "name": "",
            "y": 2080,
            "x": 1550,
            "z": "1dff07f1.603c08",
            "type": "subflow:bc6ff87.05a2908",
            "id": "3922b63e.0c665a"
        },
        {
            "wires": [
                [
                    "907e0f31.64e57"
                ]
            ],
            "name": "",
            "y": 120,
            "x": 2390,
            "z": "a17d8665.50cb88",
            "type": "subflow:e08f785c.844a68",
            "id": "5d9fcfb4.b94d9"
        },
        {
            "wires": [
                [
                    "3e3e2224.0c5eae"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID/maintenance",
            "upload": false,
            "id": "51ac4809.4cea98",
            "swaggerDoc": "",
            "y": 700,
            "x": 190,
            "z": "61ffb71b.d286f",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"Auth\": msg});\n}",
            "y": 20,
            "x": 1210,
            "z": "3962857e.44abba",
            "type": "function",
            "id": "aca5a392.3f18f"
        },
        {
            "wires": [
                [
                    "3922b63e.0c665a"
                ]
            ],
            "name": "",
            "y": 2080,
            "x": 1370,
            "z": "1dff07f1.603c08",
            "type": "subflow:313bd1d3.01c06e",
            "id": "28fa5aa.f459fa6"
        },
        {
            "wires": [
                [
                    "8997b720.bd0518"
                ]
            ],
            "name": "",
            "y": 1940,
            "x": 1690,
            "z": "1dff07f1.603c08",
            "type": "subflow:313bd1d3.01c06e",
            "id": "f1e0148c.34a9d8"
        },
        {
            "wires": [
                [
                    "6b661b5.70e66e4"
                ]
            ],
            "name": "Info",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.api.info) {\n    msg.info = {\n        \"name\": msg.api.name,\n        \"version\": msg.api.version\n    };\n    if (msg.api.hasOwnProperty(\"path\") && msg.api.hasOwnProperty(\"paths\")) {\n        var path = {\n            \"path\": msg.api.path,\n            \"paths\": msg.api.paths\n        }\n    } else {\n        var path = {\n            \"path\": 1,\n            \"paths\": 1\n        }\n    }\n    msg.info = Object.assign(msg.info, path);\n    if (msg.api.hasOwnProperty(\"example\")) { msg.info.example = msg.api.example }\n    if (msg.hasOwnProperty(\"inputs\") && msg.inputs.hasOwnProperty(\"required\") && msg.inputs.required.length > 0) { msg.info.inputs_required = msg.inputs.required }\n    if (msg.hasOwnProperty(\"inputs\") && msg.inputs.hasOwnProperty(\"allowed\") && msg.inputs.allowed .length > 0) { msg.info.inputs_allowed = msg.inputs.allowed }\n    if (msg.hasOwnProperty(\"filters\") && msg.filters.hasOwnProperty(\"required\") && msg.filters.required.length > 0) { msg.info.filters_required = msg.filters.required }\n    if (msg.hasOwnProperty(\"filters\") && msg.filters.hasOwnProperty(\"allowed\") && msg.filters.allowed.length > 0) { msg.info.filters_allowed = msg.filters.allowed }\n\n    if (msg.records.hasOwnProperty(\"returns\")) {\n        if (msg.records.returns.indexOf(\"info\") < 0 ) { msg.records.returns.unshift(\"info\") }\n    } else {\n        msg.records.returns = [\"info\"]\n    }\n    if (msg.api.hasOwnProperty(\"apic\")){\n        msg.info.apic = msg.api.apic\n    }\n    var system = global.get(\"SYSTEM\")\n    if(system) {\n        msg.info.app = system.name;\n        msg.info.instance = system.instance;\n        msg.info.space = system.space;\n    }\n}\nreturn msg;",
            "y": 180,
            "x": 190,
            "z": "b6210d1b.09e3a",
            "type": "function",
            "id": "7296ac0b.83c144"
        },
        {
            "wires": [
                [
                    "6b8c0164.25435"
                ]
            ],
            "name": "Stats",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.api.stats) {\n    msg.stats = msg.api.statistics\n    \n    if (msg.records.hasOwnProperty(\"returns\")) {\n        if (msg.records.returns.indexOf(\"stats\") < 0 ) { msg.records.returns.push(\"stats\") }\n    } else {\n        msg.records.returns = [\"stats\"]\n    }\n}\nreturn msg;",
            "y": 180,
            "x": 330,
            "z": "b6210d1b.09e3a",
            "type": "function",
            "id": "6b661b5.70e66e4"
        },
        {
            "wires": [
                [
                    "60d75440.bb3a6c"
                ]
            ],
            "name": "Combine Returns",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"records\")) {\n    if (msg.records.hasOwnProperty(\"returns\") && msg.records.returns.length > 0) {\n        // if msg.records.return is an array of object to return\n        msg.payload = {};\n        msg.records.returns.forEach(function(object){\n            if ([\"info\",\"stats\"].includes(object)){\n                if (msg.hasOwnProperty(object)) {\n                    msg.payload[object] = msg[object]\n                }\n            } else if (object === \"message\"){\n               if (msg.hasOwnProperty(object)){ msg.payload[object] = msg[object] }\n            } else if (object === \"file\"){\n               if (msg.hasOwnProperty(object)){ msg.payload = msg[object] }\n            } else {\n                if (msg.hasOwnProperty(object)){\n                    if (msg.records.hasOwnProperty(\"return_formats\") && msg.records.return_formats.hasOwnProperty(object)) {\n                        var format = msg.records.return_formats[object]\n                        node.warn({\"WARNING\": object})\n                        if (format === \"JSON\") {\n                            if(msg[object][0]) {\n                                msg.payload[object] = msg[object][0];\n                            } else {\n                                msg.payload[object] = {};\n                            }\n                        } else {\n                            msg.payload[object] = msg[object];\n                        }\n                    } else {\n                        if (msg.records.format === \"JSON\") {\n                            if(msg[object][0]) {\n                                msg.payload[object] = msg[object][0];\n                            } else {\n                                msg.payload[object] = {};\n                            }\n                        } else {\n                            msg.payload[object] = msg[object];\n                        }\n                    }\n                } else {\n                    node.warn({\"Returns\": \"Error\", \"Expected object not found in msg: \": object})\n                }\n            }\n        });\n    } else {\n        if (msg.records.hasOwnProperty(\"object\")) {\n            // return the one JSON or array of objects defined in records\n            if (msg.hasOwnProperty(msg.records.object)) {\n                if (msg.records.hasOwnProperty(\"format\") && msg.records.format === \"JSON\") { msg.payload = msg[msg.records.object][0]; }\n                else { msg.payload = msg[msg.records.object]; }\n            }\n            else {\n                node.warn({\"Returns\": \"Error\", \"Expected object not found in msg: \": msg.cloudant.object})\n            }\n        }\n    }\n    if (msg.records.hasOwnProperty(\"return_code\")) {msg.statusCode = msg.records.return_code}\n}\n// else return payload\nreturn msg;",
            "y": 200,
            "x": 630,
            "z": "bc6ff87.05a2908",
            "type": "function",
            "id": "838a5b09.936648"
        },
        {
            "wires": [
                [
                    "838a5b09.936648"
                ]
            ],
            "name": "",
            "y": 200,
            "x": 420,
            "z": "bc6ff87.05a2908",
            "type": "subflow:b6210d1b.09e3a",
            "id": "794affb4.5365"
        },
        {
            "wires": [
                [
                    "f86d4788.190438"
                ]
            ],
            "name": "",
            "y": 160,
            "x": 400,
            "z": "2638fa4d.cb43e6",
            "type": "subflow:b6210d1b.09e3a",
            "id": "9340a5fc.f0d5d8"
        },
        {
            "wires": [
                [
                    "4394da9d.caf384",
                    "fae978dd.b05238"
                ]
            ],
            "name": "Combine Returns",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.api.info) {msg.payload.info = msg.info}\nif (msg.api.stats) {msg.payload.stats = msg.stats}\nreturn msg;",
            "y": 160,
            "x": 610,
            "z": "2638fa4d.cb43e6",
            "type": "function",
            "id": "f86d4788.190438"
        },
        {
            "wires": [
                [
                    "794affb4.5365"
                ]
            ],
            "name": "Setup Returns",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"api\")) {\n    msg.api.end_time = Date.now();\n    if (msg.api.hasOwnProperty(\"statistics\")) {msg.api.statistics.time_ms = msg.api.end_time - msg.api.start_time}\n}\nreturn msg;",
            "y": 200,
            "x": 220,
            "z": "bc6ff87.05a2908",
            "type": "function",
            "id": "e20763f5.33406"
        },
        {
            "wires": [
                [
                    "28e890af.5d066"
                ]
            ],
            "name": "",
            "y": 380,
            "x": 1170,
            "z": "fc9978cc.27301",
            "type": "subflow:313bd1d3.01c06e",
            "id": "83d350cf.1e6e"
        },
        {
            "wires": [
                [
                    "ccd38f05.bc594"
                ]
            ],
            "name": "",
            "y": 540,
            "x": 1590,
            "z": "fc9978cc.27301",
            "type": "subflow:313bd1d3.01c06e",
            "id": "c101df63.e161e"
        },
        {
            "wires": [
                [
                    "3cb69122.9642de"
                ]
            ],
            "name": "",
            "y": 460,
            "x": 1370,
            "z": "fc9978cc.27301",
            "type": "subflow:313bd1d3.01c06e",
            "id": "8474bcea.06e8e"
        },
        {
            "wires": [
                [
                    "ce9a1759.9a9cc8"
                ]
            ],
            "name": "Add Support Person",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"support_users\") && msg.support_users.length > 0){\n    msg.inputs.body.assigned_id = msg.support_users.map(a => a._id);\n} else {\n    msg.inputs.body.assigned_id = [];\n}\nreturn msg;  ",
            "y": 620,
            "x": 2040,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "e3c619dc.89ed38"
        },
        {
            "wires": [
                [
                    "4fc569de.d37ce8"
                ]
            ],
            "name": "Expire RemConn in",
            "links": [
                "5331778e.bd6318"
            ],
            "y": 760,
            "x": 1435,
            "z": "a17d8665.50cb88",
            "type": "link in",
            "id": "d8fbd789.fe3c88"
        },
        {
            "wires": [],
            "name": "Expire RemConn Loop out",
            "links": [
                "d8fbd789.fe3c88"
            ],
            "y": 760,
            "x": 1895,
            "z": "a17d8665.50cb88",
            "type": "link out",
            "id": "5331778e.bd6318"
        },
        {
            "wires": [
                [
                    "9a2b83eb.4bddf"
                ]
            ],
            "name": "",
            "y": 280,
            "x": 3870,
            "z": "c13a158d.882c9",
            "type": "subflow:313bd1d3.01c06e",
            "id": "27759584.8e7e7a"
        },
        {
            "wires": [
                [
                    "ebfc8e3f.ff38c"
                ]
            ],
            "name": "Set Content",
            "outputs": 1,
            "noerr": 0,
            "func": "var ext = msg.cos.filename.split('.').pop();\nmsg.payload = msg.cos.return;\nmsg.headers = {\n    \"Content-Type\": \"image/\" + ext\n};\n//node.warn({\"image extension\": ext});\nreturn msg;",
            "y": 600,
            "x": 830,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "4634e03f.e740e"
        },
        {
            "wires": [
                [
                    "96b475e9.662688"
                ]
            ],
            "name": "Email Image",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = {\n        \"name\": \"Email Image\",\n        \"version\": global.get(\"API_VERSION\")\n    };\nmsg.cos = {\n    \"method\": \"GET\",\n    \"filename\": msg.req.params.filename,\n    \"container\": \"email-images\"\n}\nif (msg.hasOwnProperty(\"req\") && msg.req.hasOwnProperty(\"headers\")) {\n    if (msg.req.headers.hasOwnProperty(\"api_debug\")) {\n        msg.api.debug = (msg.req.headers.api_debug === \"true\");\n    } else {\n        msg.api.debug = false;\n    }\n    if (msg.req.headers.hasOwnProperty(\"apic\")) {\n        msg.api.apic = JSON.parse(msg.req.headers.apic)\n    }\n}\nreturn msg;",
            "y": 600,
            "x": 330,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "986af045.2f9b5"
        },
        {
            "tls": "",
            "wires": [
                [
                    "43f0142a.79e35c"
                ]
            ],
            "name": "Buffer",
            "url": "",
            "ret": "bin",
            "id": "d11807d.309b6f8",
            "y": 180,
            "x": 910,
            "z": "f4989ebd.9314",
            "type": "http request",
            "method": "use"
        },
        {
            "wires": [
                [
                    "7b3d1734.bde8f8"
                ]
            ],
            "name": "",
            "url": "/files/file/settings/:file_id",
            "upload": true,
            "id": "2b3172ba.aeaa4e",
            "swaggerDoc": "",
            "y": 140,
            "x": 140,
            "z": "fc9978cc.27301",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "48548ede.50f03"
                ],
                [
                    "5fc9bcaf.f9e084"
                ],
                [
                    "e4337144.2e964"
                ]
            ],
            "name": "Setup",
            "outputs": 3,
            "outputLabels": [
                "skip",
                "execute",
                "no users"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"userMgmt\") && msg.userMgmt.hasOwnProperty(\"method\")){\n    if (global.get(\"userIds\").length > 0) {\n        return [null,msg,null];\n    } else {\n        return [null,null,msg]\n    }\n    if (msg.userMgmt.hasOwnProperty(\"fields\") && msg.userMgmt.fields.length > 0) {\n        var allowedFields = [\"first_name\", \"last_name\", \"email\", \"mobile_phone\"]; //list of allowed PII that can be added in a return\n        msg.userMgmt.forEach(function(field){\n            if (allowedFields.indexOf(field) < 0 ){\n                delete msg.userMgmt.fields[field];\n            }\n        })\n    }\n}\nreturn [msg,null,null];",
            "y": 140,
            "x": 210,
            "z": "81f022a0.cad36",
            "type": "function",
            "id": "f43d6fba.3663a"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"User Mgmt\": msg});\n}",
            "y": 60,
            "x": 1170,
            "z": "81f022a0.cad36",
            "type": "function",
            "id": "48548ede.50f03"
        },
        {
            "checkall": "false",
            "z": "81f022a0.cad36",
            "name": "Method",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "Add PII"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "207026df.2c3b6a"
                ],
                [
                    "98820bb3.984f78"
                ]
            ],
            "propertyType": "msg",
            "y": 180,
            "x": 420,
            "property": "userMgmt.method",
            "type": "switch",
            "id": "5fc9bcaf.f9e084"
        },
        {
            "wires": [
                [
                    "e72b0ed8.94d46"
                ]
            ],
            "name": "Add PII",
            "outputs": 1,
            "noerr": 0,
            "func": "var users = global.get(\"users\");\nvar userIds = global.get(\"userIds\");\nif (msg.userMgmt.hasOwnProperty(\"object\")){\n    var object = msg.userMgmt.object;\n} else {\n    var object = payload;\n}\nif (Array.isArray(msg[object])){\n    msg[object].forEach(function(obj)\n    {\n        var userIdx = userIds.indexOf(obj._id);\n        addPii(obj,users[userIdx]);\n        \n    });    \n} else {\n    var userIdx = userIds.indexOf(msg[object]._id);\n    addPii(obj,users[userIdx]); \n}\nreturn msg;\n\n//Add PII information\nfunction addPii(userData,userPii) {\n    userEmpty = {\n            \"first_name\": \"\",\n            \"last_name\": \"\",\n            \"email\": \"\",\n            \"mobile_phone\": \"\",\n            \"PII\": true\n    }\n    if (userPii !== null) {\n        userPii = Object.assign({}, userEmpty, userPii); //needed to add PII debug field\n    } else {\n        userPii = userEmpty;\n    }\n    if (msg.userMgmt.hasOwnProperty(\"fields\") && msg.userMgmt.fields.length > 0) {\n        Object.keys(userPii).forEach(function(field) {\n            if (msg.userMgmt.fields.indexOf(field) < 0 && field !== \"PII\") {\n                delete userPii[field];\n            }\n        })\n    }\n    userData = Object.assign(userData, userPii);\n}",
            "y": 140,
            "x": 640,
            "z": "81f022a0.cad36",
            "type": "function",
            "id": "207026df.2c3b6a"
        },
        {
            "wires": [
                [
                    "5bc5d1d3.c4a37"
                ]
            ],
            "name": "Method Not Supported",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"User Mgmt: Method not supported\"\n})",
            "y": 280,
            "x": 660,
            "z": "81f022a0.cad36",
            "type": "function",
            "id": "98820bb3.984f78"
        },
        {
            "wires": [],
            "name": "",
            "y": 300,
            "x": 920,
            "z": "81f022a0.cad36",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "5bc5d1d3.c4a37"
        },
        {
            "wires": [
                [
                    "48548ede.50f03"
                ]
            ],
            "name": "Cleanup",
            "outputs": 1,
            "noerr": 0,
            "func": "return msg;",
            "y": 140,
            "x": 900,
            "z": "81f022a0.cad36",
            "type": "function",
            "id": "e72b0ed8.94d46"
        },
        {
            "wires": [
                [
                    "5bc5d1d3.c4a37"
                ]
            ],
            "name": "Users Not Available",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"User Mgmt: Users Not Available\"\n})",
            "y": 320,
            "x": 390,
            "z": "81f022a0.cad36",
            "type": "function",
            "id": "e4337144.2e964"
        },
        {
            "wires": [
                [
                    "dc666e86.cb48d"
                ]
            ],
            "name": "",
            "y": 1860,
            "x": 990,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "f89a1dc6.bd65e"
        },
        {
            "wires": [
                [
                    "f89a1dc6.bd65e"
                ]
            ],
            "name": "Device Users",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Device Users by Role\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\",\"status\",\"password\"],\n    \"doc_type\": \"users\",\n    \"format\": \"array\",\n    \"object\": \"users\",\n    \"returns\": [\"users\"],\n};\nmsg.inputs = {\n    \"device_id\": msg.req.params.deviceID,\n    \"role\": msg.req.params.role\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"doc_types\",\n    \"selector\": {\n        \"$or\": [{\"$and\": [{\"doc_type\": \"device\"},{\"status\": \"active\"},{\"_id\": msg.inputs.device_id}]},\n                {\"$and\": [{\"doc_type\": \"machine_link\"},{\"status\": \"active\"},{\"device\": msg.inputs.device_id}]}]\n    }\n};\nreturn msg;",
            "y": 1860,
            "x": 790,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "d7ddbf7b.cd38f"
        },
        {
            "wires": [
                [
                    "d01cec89.0a404"
                ]
            ],
            "name": "",
            "y": 1840,
            "x": 1370,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "d7221038.0502"
        },
        {
            "wires": [],
            "name": "",
            "y": 1860,
            "x": 1750,
            "z": "61ffb71b.d286f",
            "type": "subflow:bc6ff87.05a2908",
            "id": "4817e69c.dc4b78"
        },
        {
            "wires": [
                [
                    "d7221038.0502"
                ],
                [
                    "4817e69c.dc4b78"
                ],
                [
                    "56bf3276.2d53dc"
                ]
            ],
            "name": "Paired User Ids",
            "outputs": 3,
            "outputLabels": [
                "yes paired",
                "no paired",
                "no device"
            ],
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"devices\") || msg.devices.length === 0) {\n    return [null,null,msg];\n}\nif (msg.hasOwnProperty(\"machine_links\") && msg.machine_links.length > 0) {\n    msg.paired_user_ids = msg.machine_links.map(a => a.user);\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"selector\": { \"$and\": [\n            {\"_id\":  { \"$in\": msg.paired_user_ids  }},\n            {\"role\": msg.inputs.role}\n            ]},\n        \"sort\": [{ \"last_name:string\": \"asc\"}],\n        \"object\": \"users\"\n    };\n    if(msg.req.query.hasOwnProperty(\"limit\") || msg.req.query.hasOwnProperty(\"offset\")){\n        if(msg.req.query.hasOwnProperty(\"limit\")){msg.cloudant.limit = parseInt(msg.req.query.limit)}\n        if(msg.req.query.hasOwnProperty(\"offset\")){msg.cloudant.skip = parseInt(msg.req.query.offset)}\n    }\n    return [msg,null,null];\n}\nmsg.users = [];\nmsg.api.path = 2;\nreturn [null,msg,null];",
            "y": 1860,
            "x": 1180,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "dc666e86.cb48d"
        },
        {
            "wires": [
                [
                    "4817e69c.dc4b78"
                ]
            ],
            "name": "",
            "y": 1840,
            "x": 1570,
            "z": "61ffb71b.d286f",
            "type": "subflow:313bd1d3.01c06e",
            "id": "d01cec89.0a404"
        },
        {
            "wires": [],
            "name": "",
            "y": 1880,
            "x": 1560,
            "z": "61ffb71b.d286f",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "bc61e160.7a68e"
        },
        {
            "wires": [
                [
                    "bc61e160.7a68e"
                ]
            ],
            "name": "Device Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Active device with id: \" + msg.inputs.device_id + \" was not found.\",\n})\nreturn msg;",
            "y": 1880,
            "x": 1370,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "56bf3276.2d53dc"
        },
        {
            "wires": [],
            "name": "",
            "y": 400,
            "x": 1440,
            "z": "61ffb71b.d286f",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "99d23d5.28567c"
        },
        {
            "wires": [
                [
                    "99d23d5.28567c"
                ]
            ],
            "name": "Device Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Active device with id: \" + msg.inputs.device_id + \" was not found.\",\n})\nreturn msg;",
            "y": 400,
            "x": 1250,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "462cf092.5a01d"
        },
        {
            "wires": [
                [
                    "3de299d9.5af206"
                ]
            ],
            "name": "No Body",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"The request must have at least one allowed field in the body.\"\n})\nreturn msg;",
            "y": 1600,
            "x": 1120,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "a51390d8.bb56f"
        },
        {
            "wires": [],
            "name": "",
            "y": 840,
            "x": 1380,
            "z": "1dff07f1.603c08",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "682f4640.de4a58"
        },
        {
            "wires": [
                [
                    "682f4640.de4a58"
                ]
            ],
            "name": "User Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"User with id: \" + msg.inputs.user_id + \" was not found.\",\n})\nreturn msg;",
            "y": 840,
            "x": 1200,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "20331d15.b21c72"
        },
        {
            "wires": [
                [
                    "899f840c.74d418"
                ],
                [
                    "20331d15.b21c72"
                ]
            ],
            "name": "User Found?",
            "outputs": 2,
            "outputLabels": [
                "found",
                "not found"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"user\") && msg.user.length > 0 && msg.user[0].hasOwnProperty(\"doc_type\") && msg.user[0].doc_type === \"user\") {\n    return [msg,null];\n}\nreturn [null,msg];",
            "y": 820,
            "x": 990,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "eb579346.ac809"
        },
        {
            "wires": [],
            "name": "",
            "y": 940,
            "x": 1520,
            "z": "c13a158d.882c9",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "66e92ceb.8fbd24"
        },
        {
            "wires": [
                [
                    "66e92ceb.8fbd24"
                ]
            ],
            "name": "Doc_Type Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nswitch(msg.records.object) {\n    case \"case\":\n        var object_name = \"Case\"\n        break;\n    case \"machine_life\":\n        var object_name = \"Machine Life\"\n        break;\n    case \"edhr\":\n        var object_name = \"EDHR\"\n        break;\n}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": object_name + \" record with id: \" + msg.req.params[msg.records.object + \"ID\"] + \" was not found.\",\n})\nreturn msg;",
            "y": 940,
            "x": 1320,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "44e94690.e0c348"
        },
        {
            "wires": [
                [
                    "a9e40a42.47c7e8"
                ]
            ],
            "name": "",
            "y": 1380,
            "x": 1010,
            "z": "1dff07f1.603c08",
            "type": "subflow:f83a5f50.ef8e",
            "id": "2b9a116b.1b0a6e"
        },
        {
            "wires": [
                [
                    "1b347920.fd6e87"
                ]
            ],
            "name": "Filter by Assigned_ID",
            "outputs": 1,
            "noerr": 0,
            "func": "if (!msg.cloudant.hasOwnProperty(\"selector\")) { msg.cloudant.selector = {}}\nif (!msg.cloudant.selector.hasOwnProperty(\"$and\")) { msg.cloudant.selector[\"$and\"] = []}\nmsg.cloudant.selector[\"$and\"].push( {\"assigned_id\": {\"$elemMatch\": { \"$eq\": msg.inputs.assigned_id} } })\nreturn msg;",
            "y": 1380,
            "x": 1220,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "a9e40a42.47c7e8"
        },
        {
            "wires": [
                [
                    "713615fd.a07fbc"
                ]
            ],
            "name": "Ticket Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Ticket with id: \" + msg.inputs.ticket_id + \" was not found.\"\n});\nreturn msg;",
            "y": 160,
            "x": 1550,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "269a407b.075bd"
        },
        {
            "wires": [],
            "name": "",
            "y": 240,
            "x": 1900,
            "z": "a17d8665.50cb88",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "713615fd.a07fbc"
        },
        {
            "wires": [
                [
                    "4e652ad8.755814"
                ],
                [
                    "95ea631a.9d9c2"
                ]
            ],
            "name": "Ticket Found?",
            "outputs": 2,
            "outputLabels": [
                "no",
                "yes"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"help_ticket\") && msg.help_ticket.length === 1 && (msg.help_ticket[0]._id === msg.inputs.ticket_id)) {\n    return [msg,null];\n} else {\n    return [null,msg];\n}",
            "y": 260,
            "x": 920,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "d1ddb3d3.52a3b"
        },
        {
            "wires": [
                [
                    "aa5c653.3143d98"
                ]
            ],
            "name": "Ticket Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Ticket with id: \" + msg.inputs.ticket_id + \" was not found.\"\n});\nreturn msg;",
            "y": 300,
            "x": 1150,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "95ea631a.9d9c2"
        },
        {
            "wires": [],
            "name": "",
            "y": 300,
            "x": 1340,
            "z": "a17d8665.50cb88",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "aa5c653.3143d98"
        },
        {
            "wires": [
                [
                    "713615fd.a07fbc"
                ]
            ],
            "name": "No Body",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"The request must have at least one allowed field in the body.\"\n})\nreturn msg;",
            "y": 180,
            "x": 1120,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "9066da0d.905eb8"
        },
        {
            "wires": [
                [
                    "d518bc91.dddcc"
                ],
                [
                    "285a85d0.b2f51a"
                ]
            ],
            "name": "Loop and Combine",
            "outputs": 2,
            "noerr": 0,
            "func": "msg.cloudant.loop_count += 1;\nif(msg.payload.hasOwnProperty(\"bookmark\") && msg.cloudant.bookmark_save) {msg.bookmark = msg.payload.bookmark}\nif(msg.cloudant.return_obj === \"\"){\n    msg.cloudant.records = msg.cloudant.records.concat(msg.payload);\n    msg.payload = {};\n    msg.api.statistics.cloudant.req_loops.push(msg.cloudant.loop_count);\n    return [msg, null];\n} else {\n    if(msg.payload.hasOwnProperty(msg.cloudant.return_obj)) {\n        msg.cloudant.records = msg.cloudant.records.concat(msg.payload[msg.cloudant.return_obj]);\n        if(!msg.cloudant.hasOwnProperty(\"limit\") || (msg.cloudant.records.length < msg.cloudant.limit)) {\n            if(msg.payload.hasOwnProperty(\"bookmark\") && msg.payload[msg.cloudant.return_obj].length >= 200 && msg.cloudant.loop_count<msg.cloudant.loop_limit){\n                //Loop\n                if(msg.cloudant.bookmark_type === \"payload\" || msg.cloudant.method !== \"GET\"){\n                    msg.url = msg.cloudant.url;\n                    msg.headers = msg.cloudant.headers;\n                    msg.cloudant.body.bookmark = msg.payload.bookmark;\n                    msg.payload = msg.cloudant.body;\n                }\n                else {//bookmark_type = \"parameter\"\n                    msg.url = msg.cloudant.url + \"&bookmark=\" +  msg.payload.bookmark;\n                    msg.headers = msg.cloudant.headers;\n                }\n                msg.cloudant.start_time = Date.now()\n                //node.warn({\"Cloudant Loop\":msg})\n                return [null,msg];\n            }\n        }\n        //Exit Loop\n        //node.warn({\"Cloudant Loop End\":msg})\n        return [msg, null];\n    }\n    else {\n        //wrong cloudant return object\n        node.warn({\"Error\": \"Wrong return object in payload\", \"Expected\": msg.cloudant.return_obj, msg});\n    }\n}",
            "y": 260,
            "x": 1470,
            "z": "d35dd8d5.3b2a88",
            "type": "function",
            "id": "934ce807.c2d068"
        },
        {
            "wires": [],
            "name": "Cloudant Loop out",
            "links": [
                "4dfc5bee.86dae4"
            ],
            "y": 300,
            "x": 1735,
            "z": "d35dd8d5.3b2a88",
            "type": "link out",
            "id": "285a85d0.b2f51a"
        },
        {
            "wires": [
                [
                    "75d8150c.5acc6c"
                ]
            ],
            "name": "Coudant Loop In",
            "links": [
                "285a85d0.b2f51a"
            ],
            "y": 360,
            "x": 515,
            "z": "d35dd8d5.3b2a88",
            "type": "link in",
            "id": "4dfc5bee.86dae4"
        },
        {
            "wires": [
                [
                    "75d8150c.5acc6c"
                ]
            ],
            "name": "Cloudant Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.cloudant.hasOwnProperty(\"loop_limit\")) {msg.cloudant.loop_limit = global.get(\"cloudant_query_limit\")}\nif(!msg.cloudant.hasOwnProperty(\"server\")) {\n    var cloudant = global.get(\"VCAP_CLOUDANT\");\n    msg.cloudant.server = \"https://\" + cloudant.credentials.host;\n    msg.cloudant.headers = {\n        \"Authorization\": \"Basic \" + Buffer.from(cloudant.credentials.username + ':' + cloudant.credentials.password).toString('base64')\n    }\n}\nmsg.cloudant.url = msg.cloudant.server + msg.cloudant.request;\nmsg.cloudant.records = [];\nmsg.cloudant.body = {};\nif(msg.cloudant.hasOwnProperty(\"method\")){msg.method = msg.cloudant.method} else {msg.method = \"POST\"}\nmsg.url = msg.cloudant.url;\n\nvar findBody = {};\nif(msg.cloudant.hasOwnProperty(\"selector\")) { findBody[\"selector\"] = msg.cloudant.selector }\nif(msg.cloudant.hasOwnProperty(\"fields\")) { findBody[\"fields\"] = msg.cloudant.fields }\nif(msg.cloudant.hasOwnProperty(\"sort\")) { findBody[\"sort\"] = msg.cloudant.sort }\nif(msg.cloudant.hasOwnProperty(\"limit\")) { findBody[\"limit\"] = msg.cloudant.limit }\nif(msg.cloudant.hasOwnProperty(\"skip\")) { findBody[\"skip\"] = msg.cloudant.skip }\nif(msg.cloudant.bookmark_use && msg.inputs.body.hasOwnProperty(\"bookmark\")) {\n    if(msg.cloudant.bookmark_type === \"payload\") {\n        findBody[\"bookmark\"] = msg.inputs.body.bookmark;\n    }\n    else {\n        msg.cloudant.url += \"&bookmark=\" +  msg.inputs.body.bookmark;\n    }\n}\n\nmsg.cloudant.body = findBody;\nmsg.payload = msg.cloudant.body;\nmsg.headers = msg.cloudant.headers;\nmsg.cloudant.start_time = Date.now();\nreturn msg;",
            "y": 280,
            "x": 460,
            "z": "d35dd8d5.3b2a88",
            "type": "function",
            "id": "d03dd36b.66414"
        },
        {
            "wires": [
                [
                    "57b9385d.9648d8"
                ]
            ],
            "name": "Cloudant Object",
            "outputs": 1,
            "noerr": 0,
            "func": "delete msg.method; //necessary to avoid error on default nodes\ndelete msg.url;\ndelete msg.responseUrl;\ndelete msg.headers;\ndelete msg.statusCode;\n\nmsg.payload = {};\n\nif(msg.cloudant.return_obj === \"rows\"){ msg.cloudant.records = msg.cloudant.records.map(a => a.doc)}\nif(!msg.cloudant.hasOwnProperty(\"object\")){\n    if(!msg.records.hasOwnProperty(\"object\")){\n        if(msg.records.hasOwnProperty(\"doc_type\")){\n            msg.cloudant.object = msg.records.doc_type;\n            if(msg.records.hasOwnProperty(\"format\")){\n                if(msg.records.format === \"array\"){ msg.cloudant.object += \"s\" }\n            }\n        }\n        else {\n            msg.cloudant.object = \"payload\"\n        }\n    }\n    else {\n        msg.cloudant.object = msg.records.object\n    }\n}\n// if object is set to doc_type separate each record based on doc_type\nif ((msg.cloudant.object === \"doc_type\") || (msg.cloudant.object === \"doc_types\")) {\n    msg.cloudant.records.forEach(function(record){\n       if (record.hasOwnProperty(\"doc_type\")) {\n           var object = record.doc_type;\n           if (msg.cloudant.object === \"doc_types\") { object += \"s\" }\n           if (!msg.hasOwnProperty(object)) { msg[object] = [] }\n           msg[object].push(record);\n       }\n       else {\n           if (!msg.hasOwnProperty(\"document\")) { msg.document = [] }\n           msg.document.push(record);\n       }\n    }); \n}\nelse { \n    msg[msg.cloudant.object] = msg.cloudant.records;\n}\nreturn msg;",
            "y": 180,
            "x": 1700,
            "z": "d35dd8d5.3b2a88",
            "type": "function",
            "id": "d518bc91.dddcc"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"Cloudant Http\": msg});\n}",
            "y": 180,
            "x": 2430,
            "z": "d35dd8d5.3b2a88",
            "type": "function",
            "id": "694368d9.62c798"
        },
        {
            "wires": [
                [
                    "25a06cb8.5d6c44"
                ]
            ],
            "name": "Cloudant Error",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": msg.statusCode,\n    \"message\": {\n        \"code\": msg.payload.error,\n        \"description\": msg.payload.reason,\n        \"service\": \"cloudant\"\n    }\n});\nreturn msg;",
            "y": 440,
            "x": 1460,
            "z": "d35dd8d5.3b2a88",
            "type": "function",
            "id": "70c38799.bf5838"
        },
        {
            "checkall": "true",
            "z": "d35dd8d5.3b2a88",
            "name": "200, 404, 429",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "200"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "404"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "429"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 4,
            "wires": [
                [
                    "934ce807.c2d068"
                ],
                [
                    "61e2253e.31759c"
                ],
                [
                    "5ab53c4.3cb1dc4"
                ],
                [
                    "70c38799.bf5838"
                ]
            ],
            "propertyType": "msg",
            "y": 280,
            "x": 1240,
            "property": "statusCode",
            "type": "switch",
            "id": "285b3c64.8f64b4"
        },
        {
            "tls": "",
            "wires": [
                [
                    "51e91443.e2ec4c"
                ]
            ],
            "name": "",
            "url": "",
            "ret": "obj",
            "id": "d770cd1f.f9447",
            "y": 280,
            "x": 890,
            "z": "d35dd8d5.3b2a88",
            "type": "http request",
            "method": "use"
        },
        {
            "wires": [
                [
                    "2a03c952.1c9bc6"
                ]
            ],
            "name": "Error 404 Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api.statistics.cloudant.req_time_ms.push(Date.now() - msg.cloudant.start_time);\nmsg.api.statistics.cloudant.req_total += msg.cloudant.loop_count;\nmsg.api.statistics.cloudant.req_loops.push(msg.cloudant.loop_count);\nif(!msg.cloudant.hasOwnProperty(\"object\")){\n    msg.cloudant.object = msg.records.object\n}\nif(msg.cloudant.hasOwnProperty(\"records\") && msg.records.format === \"array\"){\n    msg[msg.cloudant.object] = msg.cloudant.records;\n} else {\n    msg[msg.cloudant.object] = [{}];\n}\nmsg.cloudant.error = {\n    \"statusCode\": msg.statusCode,\n    \"response\": msg.payload\n}\n\ndelete msg.method; //necessary to avoid error on default nodes\ndelete msg.url;\ndelete msg.responseUrl;\ndelete msg.headers;\ndelete msg.statusCode;\nmsg.payload = {};\n\nreturn msg;",
            "y": 300,
            "x": 1480,
            "z": "d35dd8d5.3b2a88",
            "type": "function",
            "id": "61e2253e.31759c"
        },
        {
            "wires": [
                [
                    "25a06cb8.5d6c44"
                ]
            ],
            "name": "Cloudant Rate Limit Error",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": msg.statusCode,\n    \"message\": {\n        \"code\": msg.payload.error,\n        \"description\": msg.payload.reason,\n        \"service\": \"cloudant\"\n    }\n});\nnode.warn(\"Cloudant Rate Limit Reached\")\nreturn msg;",
            "y": 400,
            "x": 1790,
            "z": "d35dd8d5.3b2a88",
            "type": "function",
            "id": "91d21a4e.ef8058"
        },
        {
            "wires": [
                [
                    "d770cd1f.f9447"
                ]
            ],
            "nbRateUnits": "1",
            "name": "Rate Limit 20msg/sec",
            "randomLast": "5",
            "timeoutUnits": "seconds",
            "drop": false,
            "randomUnits": "seconds",
            "rate": "20",
            "timeout": "5",
            "y": 280,
            "x": 680,
            "randomFirst": "1",
            "z": "d35dd8d5.3b2a88",
            "type": "delay",
            "id": "75d8150c.5acc6c",
            "rateUnits": "second",
            "pauseType": "rate"
        },
        {
            "wires": [
                [
                    "285a85d0.b2f51a"
                ],
                [
                    "91d21a4e.ef8058"
                ]
            ],
            "name": "Cloudant Query Limit Retry",
            "outputs": 2,
            "outputLabels": [
                "retry",
                "error"
            ],
            "noerr": 0,
            "func": "if (!msg.cloudant.hasOwnProperty(\"retry_count\")) {\n    msg.cloudant.retry_count = 1;\n} else {\n    msg.cloudant.retry_count ++;\n}\nif (msg.cloudant.retry_count > 50 ) {\n    //give up and return error\n    return [null,msg];\n} else {\n    //reformat request\n    msg.payload = msg.cloudant.body;\n    msg.headers = msg.cloudant.headers;\n    msg.cloudant.start_time = Date.now();\n    return [msg,null];\n}",
            "y": 360,
            "x": 1500,
            "z": "d35dd8d5.3b2a88",
            "type": "function",
            "id": "5ab53c4.3cb1dc4"
        },
        {
            "wires": [
                [
                    "285b3c64.8f64b4"
                ]
            ],
            "name": "Cloudant Stats",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api.statistics.cloudant.req_time_ms.push(Date.now() - msg.cloudant.start_time);\nreturn msg;",
            "y": 280,
            "x": 1060,
            "z": "d35dd8d5.3b2a88",
            "type": "function",
            "id": "51e91443.e2ec4c"
        },
        {
            "wires": [
                [
                    "694368d9.62c798"
                ]
            ],
            "name": "Cloudant Stats Total",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"cloudant\")) {\n    if (msg.cloudant.hasOwnProperty(\"loop_count\")) { \n        msg.api.statistics.cloudant.req_total += msg.cloudant.loop_count;\n        msg.api.statistics.cloudant.req_loops.push(msg.cloudant.loop_count);\n    }\n    if (msg.cloudant.hasOwnProperty(\"retry_count\")) { \n        msg.api.statistics.cloudant.retry_total += msg.cloudant.retry_count;\n        msg.api.statistics.cloudant.retry_loops.push(msg.cloudant.retry_count);\n    }\n}\nreturn msg;",
            "y": 220,
            "x": 2220,
            "z": "d35dd8d5.3b2a88",
            "type": "function",
            "id": "2a03c952.1c9bc6"
        },
        {
            "wires": [
                [
                    "2a03c952.1c9bc6"
                ],
                [
                    "d03dd36b.66414"
                ]
            ],
            "name": "Cloudant Stats Setup",
            "outputs": 2,
            "outputLabels": [
                "ignore",
                "execute"
            ],
            "noerr": 0,
            "func": "if (!msg.hasOwnProperty(\"cloudant\")) {\n    return [msg,null]\n} else {\n    msg.cloudant.loop_count = 0;\n    msg.cloudant.retry_count = 0;\n    if (!msg.api.hasOwnProperty(\"statistics\")) { msg.api.statistics = {} }\n    if (!msg.api.statistics.hasOwnProperty(\"cloudant\")) { msg.api.statistics.cloudant = {\n        \"req_total\": 0,\n        \"retry_total\": 0,\n        \"req_loops\": [],\n        \"retry_loops\": [],\n        \"req_time_ms\": []\n    }}\n    return [null,msg];\n}",
            "y": 220,
            "x": 220,
            "z": "d35dd8d5.3b2a88",
            "type": "function",
            "id": "54621c9b.f201d4"
        },
        {
            "wires": [
                [
                    "7adea78f.8c4e18"
                ]
            ],
            "name": "Cloudant Stats Total",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.cloudant.hasOwnProperty(\"loop_count\")) { \n    msg.api.statistics.cloudant.req_total += msg.cloudant.loop_count;\n    msg.api.statistics.cloudant.req_loops.push(msg.cloudant.loop_count);\n}\nif (msg.cloudant.hasOwnProperty(\"retry_count\")) { \n    msg.api.statistics.cloudant.retry_total += msg.cloudant.retry_count;\n    msg.api.statistics.cloudant.retry_loops.push(msg.cloudant.retry_count);\n}\nreturn msg;",
            "y": 440,
            "x": 2040,
            "z": "d35dd8d5.3b2a88",
            "type": "function",
            "id": "25a06cb8.5d6c44"
        },
        {
            "wires": [],
            "name": "",
            "y": 440,
            "x": 2260,
            "z": "d35dd8d5.3b2a88",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "7adea78f.8c4e18"
        },
        {
            "wires": [
                [
                    "1432fdb2.3cb952"
                ]
            ],
            "name": "User Settings",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"User Settings\",\n        \"info\": false\n    });\nmsg.records = {\n    \"doc_type\": \"dapp_user\",\n    \"format\": \"JSON\",\n    \"object\": \"dapp_user\",\n    \"returns\": [\"content\"],\n    \"models\": [\"dapp_user\"],\n    \"id\": msg.req.params.userId,\n    \"error_on_exist\": false\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/\" + msg.records.id,\n    \"method\": \"GET\",\n    \"return_obj\": \"\",\n    \"object\": \"user\"\n};\nreturn msg;",
            "y": 160,
            "x": 640,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "edc7b4f6.7c7e28"
        },
        {
            "wires": [
                [
                    "573487f.600e878"
                ]
            ],
            "name": "User Settings Update",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"User Settings Update\",\n        \"info\": false\n    });\nmsg.records = {\n    \"doc_type\": \"dapp_user\",\n    \"format\": \"JSON\",\n    \"object\": \"dapp_user\",\n    \"returns\": [\"content\"],\n    \"models\": [\"dapp_user\"],\n    \"id\": msg.req.params.userId\n};\nmsg.inputs = {\n    \"required\": [\"is_goal_visible\", \"is_lifetime_visible\", \"is_period_visible\", \"spotlight_metrics\", \"categories\",\"color_mapping\"],\n    \"allowed\": []\n}\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/\" + msg.records.id,\n    \"method\": \"GET\",\n    \"return_obj\": \"\",\n    \"object\": \"user\"\n};\nreturn msg;",
            "y": 280,
            "x": 660,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "aa6a5d10.ef1f3"
        },
        {
            "wires": [
                [
                    "218421ba.042dce"
                ]
            ],
            "name": "User Filters",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"User Filters\",\n        \"info\": false\n    });\nmsg.records = {\n    \"doc_type\": \"dapp_user\",\n    \"format\": \"JSON\",\n    \"object\": \"dapp_user\",\n    \"returns\": [\"content\"],\n    \"models\": [\"dapp_user\"],\n    \"id\": msg.req.params.userId,\n    \"error_on_exist\": false\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/\" + msg.records.id,\n    \"method\": \"GET\",\n    \"return_obj\": \"\",\n    \"object\": \"user\"\n};\nreturn msg;",
            "y": 400,
            "x": 630,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "d9039779.388578"
        },
        {
            "wires": [
                [
                    "43f65ec4.31949"
                ]
            ],
            "name": "User Filters Update",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"User Filters Update\",\n        \"info\": false\n    });\nmsg.records = {\n    \"doc_type\": \"dapp_user\",\n    \"format\": \"JSON\",\n    \"object\": \"dapp_user\",\n    \"returns\": [\"content\"],\n    \"models\": [\"dapp_user\"],\n    \"id\": msg.req.params.userId\n};\nmsg.inputs = {\n    \"required\": [\"data_user_id\", \"facility_id\", \"machine_id\", \"display_period\", \"date\", \"case_type\"],\n    \"allowed\": []\n}\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/\" + msg.records.id,\n    \"method\": \"GET\",\n    \"return_obj\": \"\",\n    \"object\": \"user\"\n};\nreturn msg;",
            "y": 520,
            "x": 650,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "32d328ba.a713c8"
        },
        {
            "wires": [
                [
                    "edc7b4f6.7c7e28"
                ]
            ],
            "name": "",
            "y": 160,
            "x": 450,
            "z": "429bd64.63fc828",
            "type": "subflow:3962857e.44abba",
            "id": "74be17dd.ff9028"
        },
        {
            "wires": [
                [
                    "aa6a5d10.ef1f3"
                ]
            ],
            "name": "",
            "y": 280,
            "x": 450,
            "z": "429bd64.63fc828",
            "type": "subflow:3962857e.44abba",
            "id": "1d0842a9.045ecd"
        },
        {
            "wires": [
                [
                    "d9039779.388578"
                ]
            ],
            "name": "",
            "y": 400,
            "x": 450,
            "z": "429bd64.63fc828",
            "type": "subflow:3962857e.44abba",
            "id": "c20930c2.43e12"
        },
        {
            "wires": [
                [
                    "32d328ba.a713c8"
                ]
            ],
            "name": "",
            "y": 520,
            "x": 450,
            "z": "429bd64.63fc828",
            "type": "subflow:3962857e.44abba",
            "id": "fe124e2b.1d6f3"
        },
        {
            "info": "",
            "wires": [],
            "name": "[DAPP] User Settings",
            "y": 120,
            "x": 140,
            "z": "429bd64.63fc828",
            "type": "comment",
            "id": "d8ae12c.efa12f"
        },
        {
            "info": "",
            "wires": [],
            "name": "[DAPP] User Settings Update",
            "y": 240,
            "x": 160,
            "z": "429bd64.63fc828",
            "type": "comment",
            "id": "ee5c9222.7f0b8"
        },
        {
            "info": "",
            "wires": [],
            "name": "[DAPP] User Filters",
            "y": 360,
            "x": 130,
            "z": "429bd64.63fc828",
            "type": "comment",
            "id": "a13dff2d.6a0f2"
        },
        {
            "info": "",
            "wires": [],
            "name": "[DAPP] User Filters Update",
            "y": 480,
            "x": 150,
            "z": "429bd64.63fc828",
            "type": "comment",
            "id": "4188e2a6.c7b04c"
        },
        {
            "wires": [
                [
                    "98c132f6.1c39f"
                ]
            ],
            "name": "",
            "y": 280,
            "x": 840,
            "z": "429bd64.63fc828",
            "type": "subflow:71afa3f9.81defc",
            "id": "573487f.600e878"
        },
        {
            "wires": [
                [
                    "73fa4ced.b12834"
                ]
            ],
            "name": "",
            "y": 520,
            "x": 840,
            "z": "429bd64.63fc828",
            "type": "subflow:71afa3f9.81defc",
            "id": "43f65ec4.31949"
        },
        {
            "wires": [
                [
                    "543212a0.0c75dc"
                ]
            ],
            "name": "",
            "y": 160,
            "x": 870,
            "z": "429bd64.63fc828",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "1432fdb2.3cb952"
        },
        {
            "wires": [],
            "name": "",
            "y": 140,
            "x": 1670,
            "z": "429bd64.63fc828",
            "type": "subflow:bc6ff87.05a2908",
            "id": "32b21a69.465416"
        },
        {
            "wires": [],
            "name": "",
            "y": 180,
            "x": 1460,
            "z": "429bd64.63fc828",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "b8224f3.2919cb"
        },
        {
            "wires": [
                [
                    "b8224f3.2919cb"
                ]
            ],
            "name": "User Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": {\n        \"error\": {\n        \"code\": 400,\n        \"message\": \"User with id: \" + msg.records.id + \" was not found.\"\n        }\n    }\n})\nreturn msg;",
            "y": 180,
            "x": 1260,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "10006853.509438"
        },
        {
            "wires": [
                [
                    "a3197ce3.635e3"
                ],
                [
                    "10006853.509438"
                ]
            ],
            "name": "User Found?",
            "outputs": 2,
            "outputLabels": [
                "found",
                "not found"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"user\") && msg.user.length > 0 && msg.user[0].hasOwnProperty(\"doc_type\") && msg.user[0].doc_type === \"user\") {\n    \n    return [msg,null];\n}\nreturn [null,msg];",
            "y": 160,
            "x": 1070,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "543212a0.0c75dc"
        },
        {
            "wires": [
                [
                    "7022df11.737f5"
                ]
            ],
            "name": "",
            "y": 140,
            "x": 1260,
            "z": "429bd64.63fc828",
            "type": "subflow:e0cd8199.1ad77",
            "id": "a3197ce3.635e3"
        },
        {
            "wires": [
                [
                    "32b21a69.465416"
                ]
            ],
            "name": "Create Settings Content",
            "outputs": 1,
            "noerr": 0,
            "func": "var dapp_user = msg[msg.records.object][0]\nmsg.content = [dapp_user.settings]\nmsg.content[0].user_id = dapp_user._id\nreturn msg;",
            "y": 140,
            "x": 1470,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "7022df11.737f5"
        },
        {
            "wires": [
                [
                    "86fcedb.068ad1"
                ]
            ],
            "name": "dapp_user",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.records.dapp_user = {\n    \"_id\": \"\",\n    \"settings\": {\n        \"is_goal_visible\": true,\n        \"is_lifetime_visible\": true,\n        \"is_period_visible\": true,\n        \"spotlight_metrics\": [\n            {\n                \"metric_id\": \"time_in_case_first_fp_end\",\n                \"display_order\": 0,\n                \"is_hidden\": false,\n                \"goal_value\": 0\n            },\n            {\n                \"metric_id\": \"us_effective_time\",\n                \"display_order\": 1,\n                \"is_hidden\": false,\n                \"goal_value\": 10\n            }\n        ],\n        \"categories\": [\n            {\n                \"category_name\": \"Case Time\",\n                \"display_order\": 0,\n                \"metrics\": [\n                    {\n                        \"metric_id\": \"time_in_case_setup_end\",\n                        \"display_order\": 0,\n                        \"is_hidden\": false,\n                        \"goal_value\": 0\n                    },\n                    {\n                        \"metric_id\": \"time_in_case_first_fp_end\",\n                        \"display_order\": 1,\n                        \"is_hidden\": false,\n                        \"goal_value\": 1\n                    }\n                ]\n            },\n            {\n                \"category_name\": \"Case Fluid\",\n                \"display_order\": 1,\n                \"metrics\": [\n                    {\n                        \"metric_id\": \"fluid_level\",\n                        \"display_order\": 0,\n                        \"is_hidden\": false,\n                        \"goal_value\": 0\n                    }\n                ]\n            },\n            {\n                \"category_name\": \"Infusion\",\n                \"display_order\": 2,\n                \"metrics\": [\n                    {\n                        \"metric_id\": \"infusion_actual_time\",\n                        \"display_order\": 0,\n                        \"is_hidden\": false,\n                        \"goal_value\": 25\n                    },\n                    {\n                        \"metric_id\": \"infusion_average_pressure_cmH2O\",\n                        \"display_order\": 1,\n                        \"is_hidden\": false,\n                        \"goal_value\": 0\n                    },\n                    {\n                        \"metric_id\": \"infusion_average_pressure_mmHg\",\n                        \"display_order\": 2,\n                        \"is_hidden\": false,\n                        \"goal_value\": 0\n                    }\n                ]\n            },\n            {\n                \"category_name\": \"Aspiration\",\n                \"display_order\": 3,\n                \"metrics\": [\n                    {\n                        \"metric_id\": \"aspiration_actual_time\",\n                        \"display_order\": 0,\n                        \"is_hidden\": false,\n                        \"goal_value\": 25\n                    },\n                    {\n                        \"metric_id\": \"aspiration_average_vacuum\",\n                        \"display_order\": 1,\n                        \"is_hidden\": false,\n                        \"goal_value\": 0\n                    },\n                    {\n                        \"metric_id\": \"aspiration_effective_vacuum_time\",\n                        \"display_order\": 2,\n                        \"is_hidden\": false,\n                        \"goal_value\": 0\n                    }\n                ]\n            },\n            {\n                \"category_name\": \"Ultrasound\",\n                \"display_order\": 4,\n                \"metrics\": [\n                    {\n                        \"metric_id\": \"us_actual_time\",\n                        \"display_order\": 0,\n                        \"is_hidden\": false,\n                        \"goal_value\": 0\n                    },\n                    {\n                        \"metric_id\": \"us_average_power\",\n                        \"display_order\": 1,\n                        \"is_hidden\": false,\n                        \"goal_value\": 0\n                    },\n                    {\n                        \"metric_id\": \"us_effective_time\",\n                        \"display_order\": 2,\n                        \"is_hidden\": false,\n                        \"goal_value\": 0\n                    }\n                ]\n            },\n            {\n                \"category_name\": \"Coagulation\",\n                \"display_order\": 5,\n                \"metrics\": [\n                    {\n                        \"metric_id\": \"coagulation_actual_time\",\n                        \"display_order\": 0,\n                        \"is_hidden\": false,\n                        \"goal_value\": 0\n                    },\n                    {\n                        \"metric_id\": \"coagulation_average_power\",\n                        \"display_order\": 1,\n                        \"is_hidden\": false,\n                        \"goal_value\": 25\n                    },\n                    {\n                        \"metric_id\": \"coagulation_effective_time\",\n                        \"display_order\": 2,\n                        \"is_hidden\": false,\n                        \"goal_value\": 0\n                    }\n                ]\n            },\n            {\n                \"category_name\": \"Vitrectomy\",\n                \"display_order\": 6,\n                \"metrics\": [\n                    {\n                        \"metric_id\": \"vitrectomy_actual_time\",\n                        \"display_order\": 0,\n                        \"is_hidden\": false,\n                        \"goal_value\": 0\n                    },\n                    {\n                        \"metric_id\": \"vitrectomy_average_cut_rate\",\n                        \"display_order\": 1,\n                        \"is_hidden\": false,\n                        \"goal_value\": 0\n                    },\n                    {\n                        \"metric_id\": \"vitrectomy_effective_time\",\n                        \"display_order\": 2,\n                        \"is_hidden\": false,\n                        \"goal_value\": 0\n                    }\n                ]\n            }\n        ],\n        \"color_mapping\": [\n            {\n                \"id\": \"mode_chop\",\n                \"color\": \"#CCFF99\"\n            },\n            {\n                \"id\": \"mode_debulk\", \n                \"color\": \"#33FF66\",\n            },\n            {\n                \"id\": \"mode_epi\", \n                \"color\": \"#33FF99\",\n            },\n            {\n                \"id\": \"mode_phaco\", \n                \"color\": \"#33CC33\",\n            },\n            {\n                \"id\": \"mode_scchop\", \n                \"color\": \"#99CC33\",\n            },\n            {\n                \"id\": \"mode_sculpt\", \n                \"color\": \"#00CC99\",\n            },\n            {\n                \"id\": \"mode_segment\", \n                \"color\": \"#99FFCC\",\n            },\n            {\n                \"id\": \"Ultrasound\", \n                \"color\": \"#CCFF66\",\n            },\n            {\n                \"id\": \"mode_frag\", \n                \"color\": \"#199919\",\n            },\n            {\n                \"id\": \"Frag\", \n                \"color\": \"#7BCC7B\",\n            },\n            {\n                \"id\": \"mode_ia\", \n                \"color\": \"#0033CC\",\n            },\n            {\n                \"id\": \"mode_polish\", \n                \"color\": \"#0066CC\",\n            },\n            {\n                \"id\": \"mode_visco\", \n                \"color\": \"#0099CC\",\n            },\n            {\n                \"id\": \"IrrigationAspiration\", \n                \"color\": \"#6699FF\",\n            },\n            {\n                \"id\": \"mode_extrude\", \n                \"color\": \"#3399FF\",\n            },\n            {\n                \"id\": \"Extrude\", \n                \"color\": \"#33CCFF\",\n            },\n            {\n                \"id\": \"mode_irr\", \n                \"color\": \"#66CCFF\",\n            },\n            {\n                \"id\": \"Irrigation\", \n                \"color\": \"#CCECFF\",\n            },\n            {\n                \"id\": \"mode_coag\", \n                \"color\": \"#CC00CC\",\n            },\n            {\n                \"id\": \"Coagulation\", \n                \"color\": \"#FF99FF\",\n            },\n            {\n                \"id\": \"mode_avit\", \n                \"color\": \"#FFFF00\",\n            },\n            {\n                \"id\": \"AnteriorVit\", \n                \"color\": \"#CCCC00\",\n            },\n            {\n                \"id\": \"mode_vit\", \n                \"color\": \"#FFFF99\",\n            },\n            {\n                \"id\": \"PosteriorVit\", \n                \"color\": \"#FFFF66\",\n            },\n            {\n                \"id\": \"mode_vitesse_core\", \n                \"color\": \"#CCFF33\",\n            },\n            {\n                \"id\": \"mode_vitesse_low\", \n                \"color\": \"#CCFF66\",\n            },\n            {\n                \"id\": \"Vitesse\", \n                \"color\": \"#CCFF99\",\n            },\n            {\n                \"id\": \"mode_laser\", \n                \"color\": \"#00FF00\",\n            },\n            {\n                \"id\": \"Laser\", \n                \"color\": \"#66FF66\",\n            },\n            {\n                \"id\": \"mode_vfi\", \n                \"color\": \"#996633\",\n            },\n            {\n                \"id\": \"ViscousFluidControl\", \n                \"color\": \"#CC9966\",\n            },\n            {\n                \"id\": \"Setup\", \n                \"color\": \"#808080\",\n            },\n            {\n                \"id\": \"Other\", \n                \"color\": \"#C0C0C0\"\n            }\n        ]\n    },\n    \"filters\": {\n        \"data_user_id\": null,\n        \"facility_id\": null,\n        \"machine_id\": null,\n        \"display_period\": \"monthly\",\n        \"date\": Date.now(),\n        \"case_type\": \"cataract\"\n    }\n}\nreturn msg;",
            "y": 660,
            "x": 690,
            "z": "df6d98dd.00d378",
            "type": "function",
            "id": "3be3718a.91923e"
        },
        {
            "wires": [
                [
                    "97f21f53.5f8b4"
                ]
            ],
            "name": "",
            "y": 400,
            "x": 870,
            "z": "429bd64.63fc828",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "218421ba.042dce"
        },
        {
            "wires": [],
            "name": "",
            "y": 380,
            "x": 1690,
            "z": "429bd64.63fc828",
            "type": "subflow:bc6ff87.05a2908",
            "id": "4139bc7b.c8c164"
        },
        {
            "wires": [],
            "name": "",
            "y": 420,
            "x": 1460,
            "z": "429bd64.63fc828",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "43001c48.386374"
        },
        {
            "wires": [
                [
                    "43001c48.386374"
                ]
            ],
            "name": "User Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": {\n        \"error\": {\n        \"code\": 400,\n        \"message\": \"User with id: \" + msg.records.id + \" was not found.\"\n        }\n    }\n})\nreturn msg;",
            "y": 420,
            "x": 1260,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "7d89a2ff.e27dec"
        },
        {
            "wires": [
                [
                    "4b49db43.18de04"
                ],
                [
                    "7d89a2ff.e27dec"
                ]
            ],
            "name": "User Found?",
            "outputs": 2,
            "outputLabels": [
                "found",
                "not found"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"user\") && msg.user.length > 0 && msg.user[0].hasOwnProperty(\"doc_type\") && msg.user[0].doc_type === \"user\") {\n    \n    return [msg,null];\n}\nreturn [null,msg];",
            "y": 400,
            "x": 1070,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "97f21f53.5f8b4"
        },
        {
            "wires": [
                [
                    "168d2b95.567664"
                ]
            ],
            "name": "",
            "y": 380,
            "x": 1260,
            "z": "429bd64.63fc828",
            "type": "subflow:e0cd8199.1ad77",
            "id": "4b49db43.18de04"
        },
        {
            "wires": [
                [
                    "4139bc7b.c8c164"
                ]
            ],
            "name": "Create Filters Content",
            "outputs": 1,
            "noerr": 0,
            "func": "var dapp_user = msg[msg.records.object][0];\nvar utcSeconds = dapp_user.filters.date/1000;\nvar date = new Date(0);\ndate.setUTCSeconds(utcSeconds);\nvar year = date.getFullYear();\nvar month = (\"0\" + (date.getMonth()+1))\nvar day = (\"0\" + date.getUTCDate())\ndapp_user.filters.date = year + \"-\" + month.substring(month.length-2) + \"-\" + day.substring(day.length-2);\nif(dapp_user.filters.facility_id) {\n    dapp_user.filters.facility_id= dapp_user.filters.facility_id.toString();\n}\nif(dapp_user.filters.machine_id) {\n    dapp_user.filters.machine_id = dapp_user.filters.machine_id.toString();\n}\nmsg.content = [dapp_user.filters]\nmsg.content[0].user_id = dapp_user._id\nreturn msg;",
            "y": 380,
            "x": 1480,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "168d2b95.567664"
        },
        {
            "wires": [
                [
                    "9a86be8f.79b83"
                ]
            ],
            "name": "",
            "y": 280,
            "x": 1030,
            "z": "429bd64.63fc828",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "98c132f6.1c39f"
        },
        {
            "wires": [],
            "name": "",
            "y": 260,
            "x": 1850,
            "z": "429bd64.63fc828",
            "type": "subflow:bc6ff87.05a2908",
            "id": "a130101a.c4d3c"
        },
        {
            "wires": [],
            "name": "",
            "y": 300,
            "x": 1620,
            "z": "429bd64.63fc828",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "fbadcf84.be35a"
        },
        {
            "wires": [
                [
                    "fbadcf84.be35a"
                ]
            ],
            "name": "User Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": {\n        \"error\": {\n        \"code\": 400,\n        \"message\": \"User with id: \" + msg.records.id + \" was not found.\"\n        }\n    }\n})\nreturn msg;",
            "y": 300,
            "x": 1420,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "26a100f9.53432"
        },
        {
            "wires": [
                [
                    "a9b6f336.62509"
                ],
                [
                    "26a100f9.53432"
                ]
            ],
            "name": "User Found?",
            "outputs": 2,
            "outputLabels": [
                "found",
                "not found"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"user\") && msg.user.length > 0 && msg.user[0].hasOwnProperty(\"doc_type\") && msg.user[0].doc_type === \"user\") {\n    msg.inputs.body = {\n        \"settings\": msg.inputs.body\n    };\n    return [msg,null];\n}\nreturn [null,msg];",
            "y": 280,
            "x": 1230,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "9a86be8f.79b83"
        },
        {
            "wires": [
                [
                    "a130101a.c4d3c"
                ]
            ],
            "name": "Create Settings Content",
            "outputs": 1,
            "noerr": 0,
            "func": "var dapp_user = msg[msg.records.object][0]\nmsg.content = [dapp_user.settings]\nmsg.content[0].user_id = dapp_user._id\nreturn msg;",
            "y": 260,
            "x": 1650,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "8f8e0124.7e687"
        },
        {
            "wires": [
                [
                    "8f8e0124.7e687"
                ]
            ],
            "name": "",
            "y": 260,
            "x": 1430,
            "z": "429bd64.63fc828",
            "type": "subflow:68197f61.7975",
            "id": "a9b6f336.62509"
        },
        {
            "wires": [
                [
                    "3b91c1f7.270d8e"
                ]
            ],
            "name": "",
            "y": 520,
            "x": 1030,
            "z": "429bd64.63fc828",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "73fa4ced.b12834"
        },
        {
            "wires": [],
            "name": "",
            "y": 500,
            "x": 1850,
            "z": "429bd64.63fc828",
            "type": "subflow:bc6ff87.05a2908",
            "id": "f4f49efe.d7fd6"
        },
        {
            "wires": [],
            "name": "",
            "y": 540,
            "x": 1620,
            "z": "429bd64.63fc828",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "aec20053.ea61f"
        },
        {
            "wires": [
                [
                    "aec20053.ea61f"
                ]
            ],
            "name": "User Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": {\n        \"error\": {\n        \"code\": 400,\n        \"message\": \"User with id: \" + msg.records.id + \" was not found.\"\n        }\n    }\n})\nreturn msg;",
            "y": 540,
            "x": 1420,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "d41d52e7.7adbb"
        },
        {
            "wires": [
                [
                    "5e121eb7.34f66"
                ],
                [
                    "d41d52e7.7adbb"
                ]
            ],
            "name": "User Found?",
            "outputs": 2,
            "outputLabels": [
                "found",
                "not found"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"user\") && msg.user.length > 0 && msg.user[0].hasOwnProperty(\"doc_type\") && msg.user[0].doc_type === \"user\") {\n    var filters = msg.inputs.body;\n    filters.date = Date.parse(filters.date);\n    msg.inputs.body = {\n        \"filters\": filters\n    };\n    return [msg,null];\n}\nreturn [null,msg];",
            "y": 520,
            "x": 1230,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "3b91c1f7.270d8e"
        },
        {
            "wires": [
                [
                    "e082fa7e.fc1648"
                ]
            ],
            "name": "",
            "y": 500,
            "x": 1430,
            "z": "429bd64.63fc828",
            "type": "subflow:68197f61.7975",
            "id": "5e121eb7.34f66"
        },
        {
            "wires": [
                [
                    "f4f49efe.d7fd6"
                ]
            ],
            "name": "Create Filters Content",
            "outputs": 1,
            "noerr": 0,
            "func": "var dapp_user = msg[msg.records.object][0];\nvar utcSeconds = dapp_user.filters.date/1000;\nvar date = new Date(0);\ndate.setUTCSeconds(utcSeconds);\nvar year = date.getFullYear();\nvar month = (\"0\" + (date.getMonth()+1))\nvar day = (\"0\" + date.getUTCDate())\ndapp_user.filters.date = year + \"-\" + month.substring(month.length-2) + \"-\" + day.substring(day.length-2);\nif(dapp_user.filters.facility_id) {\n    dapp_user.filters.facility_id= dapp_user.filters.facility_id.toString();\n}\nif(dapp_user.filters.machine_id) {\n    dapp_user.filters.machine_id = dapp_user.filters.machine_id.toString();\n}\nmsg.content = [dapp_user.filters]\nmsg.content[0].user_id = dapp_user._id;\nreturn msg;",
            "y": 500,
            "x": 1660,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "e082fa7e.fc1648"
        },
        {
            "wires": [
                [
                    "74be17dd.ff9028"
                ]
            ],
            "name": "",
            "url": "/dapp/users/user/:userId/settings",
            "upload": false,
            "id": "2f28790c.953f86",
            "swaggerDoc": "",
            "y": 160,
            "x": 190,
            "z": "429bd64.63fc828",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "1d0842a9.045ecd"
                ]
            ],
            "name": "",
            "url": "/dapp/users/user/:userId/settings",
            "upload": false,
            "id": "5f76466f.7506a8",
            "swaggerDoc": "",
            "y": 280,
            "x": 190,
            "z": "429bd64.63fc828",
            "type": "http in",
            "method": "put"
        },
        {
            "wires": [
                [
                    "c20930c2.43e12"
                ]
            ],
            "name": "",
            "url": "/dapp/users/user/:userId/filters",
            "upload": false,
            "id": "3cd91299.d1526e",
            "swaggerDoc": "",
            "y": 400,
            "x": 180,
            "z": "429bd64.63fc828",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "fe124e2b.1d6f3"
                ]
            ],
            "name": "",
            "url": "/dapp/users/user/:userId/filters",
            "upload": false,
            "id": "ea37a713.474cc8",
            "swaggerDoc": "",
            "y": 520,
            "x": 180,
            "z": "429bd64.63fc828",
            "type": "http in",
            "method": "put"
        },
        {
            "wires": [
                [
                    "601d3844.78ecc8"
                ]
            ],
            "name": "",
            "url": "/dapp/users/user/:userID",
            "upload": false,
            "id": "e30f497b.7b4468",
            "swaggerDoc": "",
            "y": 640,
            "x": 160,
            "z": "429bd64.63fc828",
            "type": "http in",
            "method": "get"
        },
        {
            "info": "",
            "wires": [],
            "name": "[DAPP] User Info (dapp)",
            "y": 600,
            "x": 150,
            "z": "429bd64.63fc828",
            "type": "comment",
            "id": "39745f59.4415b"
        },
        {
            "wires": [
                [
                    "aec2e944.65c2e8"
                ]
            ],
            "name": "",
            "url": "/dapp/users/user_query",
            "upload": false,
            "id": "a6dca1b4.61f1",
            "swaggerDoc": "",
            "y": 720,
            "x": 160,
            "z": "429bd64.63fc828",
            "type": "http in",
            "method": "post"
        },
        {
            "info": "",
            "wires": [],
            "name": "[DAPP] User Query (dapp)",
            "y": 680,
            "x": 150,
            "z": "429bd64.63fc828",
            "type": "comment",
            "id": "15a9156.1a44beb"
        },
        {
            "wires": [
                [
                    "9db8f4e2.b26ef8"
                ]
            ],
            "name": "User Info (dapp)",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"User Info (dapp)\",\n        \"info\": false\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"password\", \"doc_type\", \"status\"],\n    \"doc_type\": \"user\",\n    \"object\": \"user\",\n    \"format\": \"JSON\",\n    \"returns\": [\"content\"],\n    \"id\": msg.req.params.userID\n};\nmsg.inputs = {\n    \"user_id\": msg.req.params.userID\n};\nmsg.filters = {};\nmsg.filters.params = {};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/\" + msg.records.id,\n    \"method\": \"GET\",\n    \"return_obj\": \"\",\n    \"object\": \"user\"\n};\nreturn msg;",
            "y": 640,
            "x": 700,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "974c4af0.275628"
        },
        {
            "wires": [
                [
                    "661b9b3a.d9a684"
                ]
            ],
            "name": "",
            "y": 640,
            "x": 910,
            "z": "429bd64.63fc828",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "9db8f4e2.b26ef8"
        },
        {
            "wires": [
                [
                    "67333aa2.9ea5d4"
                ]
            ],
            "name": "",
            "y": 620,
            "x": 1290,
            "z": "429bd64.63fc828",
            "type": "subflow:313bd1d3.01c06e",
            "id": "978b733b.68056"
        },
        {
            "wires": [],
            "name": "",
            "y": 620,
            "x": 1690,
            "z": "429bd64.63fc828",
            "type": "subflow:bc6ff87.05a2908",
            "id": "10e08e36.953912"
        },
        {
            "wires": [],
            "name": "",
            "y": 660,
            "x": 1460,
            "z": "429bd64.63fc828",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "b134446d.0ec158"
        },
        {
            "wires": [
                [
                    "b134446d.0ec158"
                ]
            ],
            "name": "User Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"User with id: \" + msg.inputs.user_id + \" was not found.\",\n})\nreturn msg;",
            "y": 660,
            "x": 1280,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "4a3043d8.7f824c"
        },
        {
            "wires": [
                [
                    "978b733b.68056"
                ],
                [
                    "4a3043d8.7f824c"
                ]
            ],
            "name": "User Found?",
            "outputs": 2,
            "outputLabels": [
                "found",
                "not found"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"user\") && msg.user.length > 0 && msg.user[0].hasOwnProperty(\"doc_type\") && msg.user[0].doc_type === \"user\") {\n    return [msg,null];\n}\nreturn [null,msg];",
            "y": 640,
            "x": 1090,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "661b9b3a.d9a684"
        },
        {
            "wires": [
                [
                    "974c4af0.275628"
                ]
            ],
            "name": "",
            "y": 640,
            "x": 510,
            "z": "429bd64.63fc828",
            "type": "subflow:3962857e.44abba",
            "id": "f12b7dba.103b3"
        },
        {
            "wires": [
                [
                    "10e08e36.953912"
                ]
            ],
            "name": "Create User Content",
            "outputs": 1,
            "noerr": 0,
            "func": "var dapp_user = msg[msg.records.object]\nmsg.content = dapp_user\nreturn msg;",
            "y": 620,
            "x": 1500,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "67333aa2.9ea5d4"
        },
        {
            "wires": [],
            "name": "",
            "y": 720,
            "x": 1850,
            "z": "429bd64.63fc828",
            "type": "subflow:bc6ff87.05a2908",
            "id": "3afa4234.b1696e"
        },
        {
            "wires": [
                [
                    "c95b98a7.478388"
                ]
            ],
            "name": "",
            "y": 720,
            "x": 1450,
            "z": "429bd64.63fc828",
            "type": "subflow:313bd1d3.01c06e",
            "id": "ccb0488e.4a4858"
        },
        {
            "wires": [
                [
                    "ccb0488e.4a4858"
                ]
            ],
            "name": "",
            "y": 720,
            "x": 1250,
            "z": "429bd64.63fc828",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "12051fc9.8cd7a"
        },
        {
            "wires": [
                [
                    "12051fc9.8cd7a"
                ]
            ],
            "name": "",
            "y": 720,
            "x": 1050,
            "z": "429bd64.63fc828",
            "type": "subflow:f83a5f50.ef8e",
            "id": "25470ff8.bf28c"
        },
        {
            "wires": [
                [
                    "25470ff8.bf28c"
                ]
            ],
            "name": "",
            "y": 720,
            "x": 880,
            "z": "429bd64.63fc828",
            "type": "subflow:71afa3f9.81defc",
            "id": "207c962f.5cbeda"
        },
        {
            "wires": [
                [
                    "207c962f.5cbeda"
                ]
            ],
            "name": "Users Query (dapp)",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Users Query (dapp)\",\n        \"info\": false\n    });\nmsg.records = {\n    \"delete\": [\"_rev\",\"doc_type\",\"status\",\"password\"],\n    \"doc_type\": \"user\",\n    \"format\": \"array\",\n    \"object\": \"users\",\n    \"sort\": [{\"last_name:string\": \"asc\"}],\n    \"returns\": [\"content\"]\n};\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": [\"filter_options\"]};\nmsg.filters = {\n    \"required\": [],\n    \"allowed\": [\"_id\",\"role\",\"sub_roles\",\"uid\",\"first_name\",\"last_name\",\"last_name_partial\",\"mobile_phone\",\"email\",\"gets_change_email\",\"bart_sart\",\"business_unit\",\"sales_area\",\"sales_region\",\"sales_territory\",\"service_area\",\"service_region\",\"service_territory\",\"created_by\",\"remote_access_allowed\"]};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"bookmark_type\": \"payload\",\n    \"pagination\": true,\n    \"bookmark_use\": false\n}\nmsg.filters.params = {\n    \"doc_type\": msg.records.doc_type,\n    \"status\": \"active\"\n}\nreturn msg;",
            "y": 720,
            "x": 710,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "639230cd.efc4d"
        },
        {
            "wires": [
                [
                    "639230cd.efc4d"
                ]
            ],
            "name": "",
            "y": 720,
            "x": 510,
            "z": "429bd64.63fc828",
            "type": "subflow:3962857e.44abba",
            "id": "4476740f.ed6f8c"
        },
        {
            "wires": [
                [
                    "3afa4234.b1696e"
                ]
            ],
            "name": "Create Users Content",
            "outputs": 1,
            "noerr": 0,
            "func": "var dapp_user = msg[msg.records.object]\nmsg.content = dapp_user\nreturn msg;",
            "y": 720,
            "x": 1660,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "c95b98a7.478388"
        },
        {
            "wires": [],
            "name": "",
            "y": 720,
            "x": 1580,
            "z": "61ffb71b.d286f",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "2bb9e170.65b55e"
        },
        {
            "wires": [
                [
                    "2bb9e170.65b55e"
                ]
            ],
            "name": "Device Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Active device with id: \" + msg.inputs.device_id + \" was not found.\",\n})\nreturn msg;",
            "y": 720,
            "x": 1390,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "60a33077.686ee"
        },
        {
            "wires": [
                [
                    "a7501dbe.358ae"
                ],
                [
                    "1421da2f.848706"
                ]
            ],
            "name": "User Found?",
            "outputs": 2,
            "outputLabels": [
                "found",
                "not found"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"user\") && msg.user.length > 0 && msg.user[0].hasOwnProperty(\"doc_type\") && msg.user[0].doc_type === \"user\") {\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"selector\": {\n            \"doc_type\": \"settings_file\",\n            \"status\": \"active\",\n            \"user_id\": msg.inputs.user_id\n        },\n        \"sort\": [{\"file_id:string\": \"desc\"}]\n    };\n    if(msg.req.query.hasOwnProperty(\"limit\") || msg.req.query.hasOwnProperty(\"offset\")){\n        if(msg.req.query.hasOwnProperty(\"limit\")){msg.cloudant.limit = parseInt(msg.req.query.limit)}\n        if(msg.req.query.hasOwnProperty(\"offset\")){msg.cloudant.skip = parseInt(msg.req.query.offset)}\n    }\n    return [msg,null];\n}\nreturn [null,msg];",
            "y": 680,
            "x": 1310,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "dbcced9a.03622"
        },
        {
            "wires": [],
            "name": "",
            "y": 700,
            "x": 1680,
            "z": "1dff07f1.603c08",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "d8a16247.bbced"
        },
        {
            "wires": [
                [
                    "d8a16247.bbced"
                ]
            ],
            "name": "User Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"User with id: \" + msg.inputs.user_id + \" was not found.\",\n})\nreturn msg;",
            "y": 700,
            "x": 1500,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "1421da2f.848706"
        },
        {
            "wires": [
                [
                    "dbcced9a.03622"
                ]
            ],
            "name": "",
            "y": 680,
            "x": 1130,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "c24a421d.d2ee2"
        },
        {
            "wires": [],
            "name": "",
            "y": 800,
            "x": 1500,
            "z": "a17d8665.50cb88",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "db808349.0ea59"
        },
        {
            "wires": [
                [
                    "db808349.0ea59"
                ]
            ],
            "name": "Device Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"The device record for \" + msg.inputs.device_id + \" was not found.\"\n});\nreturn msg;",
            "y": 800,
            "x": 1310,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "52554231.a6839c"
        },
        {
            "wires": [
                [
                    "77a06453.a257fc"
                ],
                [
                    "52554231.a6839c"
                ]
            ],
            "name": "Device Found",
            "outputs": 2,
            "outputLabels": [
                "yes found",
                "no found"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"device\") && msg.device.length > 0 && msg.device[0].doc_type === \"device\") {\n    msg.cloudant = {\n        \"request\": \"/help_tickets/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"ticket_list\",\n        \"selector\": {\n            \"system_sn\": msg.inputs.device_id,\n            \"reason\": \"RemConn\",\n            \"ticket_status\": \"New\"        \n        },\n    \t\"sort\": [{\"start_time:number\": \"desc\"}]\n    };\n    return [msg,null];\n} else {\n    return [null,msg]\n}",
            "y": 760,
            "x": 1120,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "cf67a4b4.8a7358"
        },
        {
            "wires": [
                [
                    "cf67a4b4.8a7358"
                ]
            ],
            "name": "",
            "y": 760,
            "x": 930,
            "z": "a17d8665.50cb88",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "8377fb1e.c743c8"
        },
        {
            "wires": [
                [
                    "851918ee.31a918"
                ]
            ],
            "name": "",
            "url": "/dapp/system/user_profile_urls",
            "upload": false,
            "id": "6849de07.4be1",
            "swaggerDoc": "",
            "y": 800,
            "x": 180,
            "z": "429bd64.63fc828",
            "type": "http in",
            "method": "get"
        },
        {
            "info": "",
            "wires": [],
            "name": "[DAPP] User Profile Urls",
            "y": 760,
            "x": 150,
            "z": "429bd64.63fc828",
            "type": "comment",
            "id": "aa322532.c19a18"
        },
        {
            "wires": [
                [
                    "79d34d4a.fa6a34"
                ]
            ],
            "name": "",
            "y": 800,
            "x": 450,
            "z": "429bd64.63fc828",
            "type": "subflow:3962857e.44abba",
            "id": "851918ee.31a918"
        },
        {
            "wires": [
                [
                    "c152c927.89e088"
                ]
            ],
            "name": "User Profile URLs (dapp)",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"User Profile URLs (dapp)\",\n        \"info\": false\n    });\nmsg.records = {\n    \"object\": \"payload\",\n    \"returns\": [\"payload\"]\n};\nmsg.payload = {\n    \"content\":{\n    \"create_user_page\": \"www.google.com\",\n    \"forgot_password_page\": \"www.google.com\",\n    \"user_profile_page\": \"www.google.com\"\n    }\n}\nreturn msg;",
            "y": 800,
            "x": 670,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "79d34d4a.fa6a34"
        },
        {
            "wires": [],
            "name": "",
            "headers": {},
            "y": 800,
            "x": 850,
            "z": "429bd64.63fc828",
            "type": "http response",
            "id": "c152c927.89e088",
            "statusCode": ""
        },
        {
            "wires": [
                [
                    "9ce2945e.33ba08"
                ]
            ],
            "name": "",
            "url": "/utilities/xmls",
            "upload": false,
            "id": "db97d81e.7388b8",
            "swaggerDoc": "",
            "y": 700,
            "x": 100,
            "z": "57a5a054.9dfd3",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "d4387111.70451"
                ]
            ],
            "name": "",
            "y": 700,
            "x": 330,
            "z": "57a5a054.9dfd3",
            "type": "subflow:3962857e.44abba",
            "id": "9ce2945e.33ba08"
        },
        {
            "wires": [
                [
                    "7aafa9f.d8cc158"
                ]
            ],
            "name": "Get XMLs",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = {\n        \"name\": \"Get XMLs\"\n};\nmsg.records = {\n    \"format\": \"array\",\n    \"returns\": [\"xmls\"]\n};\nmsg.xmls = global.get(\"XMLs\");\nreturn msg;",
            "y": 700,
            "x": 500,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "d4387111.70451"
        },
        {
            "wires": [],
            "name": "",
            "y": 700,
            "x": 650,
            "z": "57a5a054.9dfd3",
            "type": "subflow:bc6ff87.05a2908",
            "id": "7aafa9f.d8cc158"
        },
        {
            "wires": [
                [
                    "40cd77ce.911f58"
                ]
            ],
            "name": "Get XML List",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = {\n        \"name\": \"Get XMLs\",\n        \"version\": 10.0\n    };\nvar COS = global.get(\"VCAP_COS\")\nglobal.set(\"XMLs\", undefined)\nif(msg.cos && msg.cos.authorization) {\n    msg.cos.method = \"GET\";\n    msg.cos.container = \"xmls\";\n    msg.cos.server = COS.url;\n    msg.cos.id = COS.credentials.resource_instance_id;\n    if (!msg.cos.base_path && COS.base_path !== \"\") { msg.cos.base_path = COS.base_path }\n    msg.cos.headers = {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": msg.cos.authorization\n    }\n    msg.cos.url = msg.cos.server + \"/\" + msg.cos.base_path + \".\" + msg.cos.container + \"?list-type=2\";\n    msg.method = msg.cos.method\n    msg.url = msg.cos.url;\n    msg.headers = msg.cos.headers\n    msg.payload = {};\n    return [msg,null];\n}",
            "y": 100,
            "x": 1430,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "1d301bf7.08d524"
        },
        {
            "tls": "",
            "wires": [
                [
                    "12f885c1.449e7a"
                ]
            ],
            "name": "File List",
            "url": "",
            "ret": "txt",
            "id": "40cd77ce.911f58",
            "y": 100,
            "x": 1580,
            "z": "57a5a054.9dfd3",
            "type": "http request",
            "method": "use"
        },
        {
            "z": "57a5a054.9dfd3",
            "attr": "",
            "chr": "",
            "wires": [
                [
                    "696fb9e8.b7c3e8"
                ]
            ],
            "y": 100,
            "x": 1900,
            "property": "payload",
            "type": "xml",
            "id": "d8981bcf.720878",
            "name": "XML => JSON"
        },
        {
            "wires": [
                [
                    "585cb5d3.fe416c"
                ]
            ],
            "name": "Create File List",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.file_list = msg.payload.ListBucketResult.Contents.map(a => a.Key)\n//node.warn({\"XMLs File list\": msg})\nreturn msg;",
            "y": 100,
            "x": 2080,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "696fb9e8.b7c3e8"
        },
        {
            "wires": [
                [
                    "c968f9f0.ee7188"
                ],
                [
                    "14275b0b.1297a5"
                ]
            ],
            "name": "Get XML File",
            "outputs": 2,
            "noerr": 0,
            "func": "if(msg.file_list.length > 0) {\n    msg.cos.filename = msg.file_list.pop();\n    msg.cos.url = msg.cos.server + \"/\" + msg.cos.base_path + \".\" + msg.cos.container + \"/\" + msg.cos.filename;\n    msg.url = msg.cos.url;\n    msg.headers = msg.cos.headers;\n    return [msg,msg]\n}\nnode.warn({\"XML List Done\": msg})",
            "y": 100,
            "x": 2270,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "585cb5d3.fe416c"
        },
        {
            "tls": "",
            "wires": [
                [
                    "ca63e68a.0baf98"
                ]
            ],
            "name": "XML File",
            "url": "",
            "ret": "txt",
            "id": "c968f9f0.ee7188",
            "y": 80,
            "x": 2440,
            "z": "57a5a054.9dfd3",
            "type": "http request",
            "method": "use"
        },
        {
            "wires": [],
            "name": "XML Loop in",
            "links": [
                "2ce043e4.323f2c"
            ],
            "y": 140,
            "x": 2375,
            "z": "57a5a054.9dfd3",
            "type": "link out",
            "id": "14275b0b.1297a5"
        },
        {
            "wires": [
                [
                    "585cb5d3.fe416c"
                ]
            ],
            "name": "XML Loop out",
            "links": [
                "14275b0b.1297a5"
            ],
            "y": 140,
            "x": 2155,
            "z": "57a5a054.9dfd3",
            "type": "link in",
            "id": "2ce043e4.323f2c"
        },
        {
            "z": "57a5a054.9dfd3",
            "attr": "",
            "chr": "",
            "wires": [
                [
                    "b74644dc.c96408"
                ]
            ],
            "y": 80,
            "x": 2730,
            "property": "xml",
            "type": "xml",
            "id": "ba3441ec.11fe5",
            "name": ""
        },
        {
            "wires": [
                []
            ],
            "name": "Store XML",
            "outputs": 1,
            "noerr": 0,
            "func": "var file = Object.keys(msg.xml)[0];\n//node.warn({\"XML File\": {\"name\": file, \"xml\": msg.xml[file], \"msg\": msg}})\nvar xmls = global.get(\"XMLs\");\nvar delete_keys = [\"xmlns:xsi\", \"xmlns:xsd\"]\nObject.keys(msg.xml[file]).forEach(function(key){\n    if(key === \"filter\"){\n        var ver = msg.xml[file][key].version;\n        delete msg.xml[file][key];\n        msg.xml[file].version = ver;\n    }\n    if(delete_keys.indexOf(key) >= 0) {\n        delete msg.xml[file][key];\n    }\n})\nif(file === \"permissions\"){\n    msg.xml[file].role.forEach(function(role,idx){\n        if(typeof role === \"string\") {\n           msg.xml[file].role[idx] = {\n               \"role\": role,\n               \"sub_roles\": []\n           } \n        } else {\n            msg.xml[file].role[idx] = {\n               \"role\": role._,\n               \"sub_roles\": role.sub_roles\n           }\n        }\n        msg.xml[file].role[idx].sub_roles.forEach(function(sub,sub_idx){\n            var subrole = sub._;\n            delete sub._;\n            var permissions = sub;\n            msg.xml[file].role[idx].sub_roles[sub_idx] = {};\n            msg.xml[file].role[idx].sub_roles[sub_idx][subrole] = permissions;\n        })\n    })\n}\nif(file === \"user_roles\"){\n    msg.xml[file].role.forEach(function(role,idx){\n        if(typeof role === \"string\") {\n           msg.xml[file].role[idx] = {\n               \"role\": role,\n               \"sub_roles\": []\n           } \n        } else {\n            msg.xml[file].role[idx] = {\n               \"role\": role._,\n               \"sub_roles\": role.sub_roles\n           }\n        }\n    })\n}\nif(file === \"kore_info\"){\n    msg.xml[file].sim_iccid_prefix.forEach(function(sim,idx){\n        j_sim = {\n            \"prefix\": sim._,\n            \"partnumber\": sim.sim_partnumber,\n            \"apn\": {\n                \"code\": sim.sim_apn._,\n                \"display\": sim.sim_apn.display\n            },\n            \"plans\": sim.plan.code\n        }\n        if(!Array.isArray(j_sim.plans)) {j_sim.plans = [j_sim.plans]}\n        j_sim.plans.forEach(function(plan,p_idx){\n            j_sim.plans[p_idx] = {};\n            j_sim.plans[p_idx][plan._] = {\n                \"eap\": plan.eap,\n                \"display\": plan.display,\n                \"description\": plan.desc\n            }\n        })\n        msg.xml[file].sim_iccid_prefix[idx] = j_sim;\n    })\n}\nfunction processBartSartArray(array, name) {\n    var new_array = [];\n    array.forEach(function(elm,idx){\n        var object = {}\n        Object.keys(elm).forEach(function(field){\n            if(field ===\"_\") { object[name] = elm[field]}\n            else if(field === \"id\") { object.id = elm[field] }\n            else if(Array.isArray(elm[field])) {\n                var names = field+\"s\"\n                if(field === \"sales_territory\") { names = \"sales_territories\" }\n                if(field === \"service_territory\") { names = \"service_territories\" }\n                object[names] = processBartSartArray(elm[field], field)\n            }\n        })\n        new_array.push(object)\n    })\n    return new_array;\n}\nif(file === \"bart_sart\"){\n    msg.xml[file].business_units = processBartSartArray(msg.xml[file].business_unit, \"business_unit\")\n    delete msg.xml[file].business_unit\n}\nif(!xmls){ xmls = {} }\nxmls[file] = msg.xml[file];\nglobal.set(\"XMLs\", xmls)",
            "y": 80,
            "x": 2870,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "b74644dc.c96408"
        },
        {
            "tls": "",
            "wires": [
                [
                    "f817388b.ecb6c8"
                ]
            ],
            "name": "AT&T SMS",
            "url": "",
            "ret": "txt",
            "id": "2cc5b368.a146ac",
            "y": 80,
            "x": 2630,
            "z": "4f94cf29.53815",
            "type": "http request",
            "method": "POST"
        },
        {
            "wires": [
                [
                    "2cc5b368.a146ac"
                ]
            ],
            "name": "ATT SMS Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"sms_list\") && msg.sms_list.length > 0 ) {\n    var att = msg.sms.provider.att;\n    var destination = msg.sms_list.join(',').replace(/[+]/g,''); // replacing + in the phone number\n    msg.url = att.credentials.sms_url + \"?destination=\" + destination  +\"&text=\" + msg.sms.message;\n    msg.headers = {\n           \"content-type\": \"application/x-www-form-urlencoded\",\n           \"authorization\": \"Basic \" + Buffer.from(att.credentials.username + \":\" + att.credentials.password).toString('base64')\n    };\n    node.warn({\"ATT SMS sent to: \": msg.sms_list})\n    return msg;\n}",
            "y": 80,
            "x": 2400,
            "z": "4f94cf29.53815",
            "type": "function",
            "id": "4250e36d.1e3c0c"
        },
        {
            "tls": "",
            "wires": [
                [
                    "f817388b.ecb6c8"
                ]
            ],
            "name": "AT&T Voice",
            "url": "",
            "ret": "txt",
            "id": "eccdac94.14b49",
            "y": 120,
            "x": 2630,
            "z": "4f94cf29.53815",
            "type": "http request",
            "method": "POST"
        },
        {
            "wires": [
                [
                    "eccdac94.14b49"
                ]
            ],
            "name": "ATT Voice Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"sms_voice_list\") && msg.sms_voice_list.length > 0 ) {\n    var att = msg.sms.provider.att;\n    var destination = msg.sms_voice_list.join('&destination=').replace(/[+]/g,'');\n    msg.url = att.credentials.voice_url + \"?subAction=20\" + \"&destination=\"+ destination + \"&text=\" + msg.sms.message + \"&loop=\" + att.loop;\n    msg.headers = {\n           \"content-type\": \"application/x-www-form-urlencoded\",\n           \"authorization\": \"Basic \" + Buffer.from(att.credentials.username + \":\" + att.credentials.password).toString('base64')\n    };\n    node.warn({\"ATT Voice sent to: \": msg.sms_voice_list})\n    return msg;\n}",
            "y": 120,
            "x": 2410,
            "z": "4f94cf29.53815",
            "type": "function",
            "id": "36e8c931.b4baa6"
        },
        {
            "wires": [
                [
                    "4250e36d.1e3c0c",
                    "36e8c931.b4baa6"
                ],
                [
                    "410a31fd.1f91e"
                ]
            ],
            "name": "Check Provider",
            "outputs": 2,
            "outputLabels": [
                "twilio",
                "att"
            ],
            "noerr": 0,
            "func": "msg.sms.provider = global.get(\"VCAP_SMS\");\nif(msg.sms.hasOwnProperty(\"provider\")) {\n    if(msg.sms.provider.hasOwnProperty(\"att\")) {\n        node.warn(\"ATT\");\n        return [msg,null];\n    }\n    if(msg.sms.provider.hasOwnProperty(\"twilio\")) {\n        node.warn(\"TWILIO\");\n        return [null, msg];\n    }\n}\n// No provider available do nothing\nnode.warn(\"WARNING: SMS Provider NOT available\");",
            "y": 180,
            "x": 2160,
            "z": "4f94cf29.53815",
            "type": "function",
            "id": "13885be8.270ac4"
        },
        {
            "wires": [
                [
                    "ede39252.d15c7"
                ]
            ],
            "name": "Twilio Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "tw = msg.sms.provider.twilio.credentials;\nmsg.url = tw.twilio_api_base_url + \"2010-04-01/Accounts/\" + tw.twilio_account_sid + \"/Messages.json\";\nmsg.sms.headers = {\n       \"content-type\": \"application/x-www-form-urlencoded\",\n       \"authorization\": \"Basic \" + Buffer.from(tw.twilio_account_sid + \":\" + tw.twilio_auth_token).toString('base64')\n};\nmsg.sms.body = { \"From\": tw.twilio_phone_number, \"To\": msg.topic, \"Body\": msg.sms.message};\nmsg.payload = msg.sms.body;\nmsg.headers = msg.sms.headers;\nnode.warn({\"Twilio SMS sent to: \": msg.topic});\nreturn msg;",
            "y": 180,
            "x": 2670,
            "z": "4f94cf29.53815",
            "type": "function",
            "id": "41619fef.427f2"
        },
        {
            "tls": "",
            "wires": [
                []
            ],
            "name": "Twilio SMS",
            "url": "",
            "ret": "txt",
            "id": "ede39252.d15c7",
            "y": 180,
            "x": 2850,
            "z": "4f94cf29.53815",
            "type": "http request",
            "method": "POST"
        },
        {
            "y": 440,
            "property": "",
            "from": "",
            "name": "Rem Conn",
            "rules": [
                {
                    "p": "email.template_file",
                    "tot": "str",
                    "t": "set",
                    "pt": "msg",
                    "to": "B+L_Eyetelligence_Rem_Conn_00.html"
                }
            ],
            "reg": false,
            "to": "",
            "wires": [
                [
                    "2988c5c0.8b57aa"
                ]
            ],
            "action": "",
            "x": 750,
            "z": "5dbd57cc.fc9bb8",
            "type": "change",
            "id": "5ccb4407.36faec"
        },
        {
            "wires": [
                [
                    "a04840d5.e19e6",
                    "97de7ab6.1754f8"
                ]
            ],
            "name": "EMAIL & SMS",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"support_users\") && msg.support_users.length > 0){\n    msg.email = {\n        \"to\": msg.support_users.map(a => a.email),\n        \"operation\": \"created\"\n    };\n    msg.sms = {\n        \"to\": msg.support_users.map(a => a.mobile_phone),\n        \"to_voice\": msg.support_users.map(a => a.voice_phone),\n        \"operation\": \"updated\"\n    }\n} else {\n    //do nothing\n    msg.email = {};\n    msg.sms = {};\n}\nreturn msg;",
            "y": 340,
            "x": 2780,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "7a7665d2.fb81dc"
        },
        {
            "wires": [
                []
            ],
            "name": "ATT Debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.statusCode !== 200) {\n    node.warn({\"WARNING ATT Send Error\": msg.payload});\n}",
            "y": 100,
            "x": 2810,
            "z": "4f94cf29.53815",
            "type": "function",
            "id": "f817388b.ecb6c8"
        },
        {
            "wires": [
                [
                    "571417f.b82ade8"
                ]
            ],
            "name": "v1 Inputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.apic && msg.api.apic.version === \"v1\") {\n    msg.v1 = true;\n}\nreturn msg;",
            "y": 160,
            "x": 580,
            "z": "c012d9b9.f1e028",
            "type": "function",
            "id": "995dac1d.9d569"
        },
        {
            "wires": [
                [
                    "2d2eb37c.8ee20c"
                ]
            ],
            "name": "v1 Outputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"v1\") && msg.v1){\n    delete msg.records.returns;\n    msg.records.delete = [];\n    delete msg.api.info;\n    delete msg.api.starts;\n}\nreturn msg;",
            "y": 160,
            "x": 950,
            "z": "c012d9b9.f1e028",
            "type": "function",
            "id": "a83e2e96.a3ec7"
        },
        {
            "wires": [
                [
                    "fca2ce1e.60d5c"
                ]
            ],
            "name": "v1 Outputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.v1){\n    delete msg.records.returns;\n    msg.records.delete = [];\n    delete msg.api.info;\n    delete msg.api.starts;\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"machine_link\",\n        \"selector\": {\n            \"doc_type\": \"machine_link\",\n            \"device\": msg.inputs.device_id,\n            \"user\": msg.inputs.user_id\n        }\n    };\n}\nreturn msg;",
            "y": 360,
            "x": 830,
            "z": "c012d9b9.f1e028",
            "type": "function",
            "id": "7188c7c5.f89e28"
        },
        {
            "wires": [
                [
                    "5969198a.623db8"
                ]
            ],
            "name": "",
            "url": "/logs",
            "upload": false,
            "id": "4fda7ec5.191eb",
            "swaggerDoc": "",
            "y": 380,
            "x": 80,
            "z": "c13a158d.882c9",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "d81d6328.63bd8"
                ],
                [
                    "6e753d70.f649c4"
                ],
                [
                    "df25c52.2380638"
                ]
            ],
            "name": "v1 Inputs",
            "outputs": 3,
            "outputLabels": [
                "case",
                "edhr",
                "machine_life"
            ],
            "noerr": 0,
            "func": "msg.v1 = true;\nif(msg.payload.hasOwnProperty(\"type\")){\n    if(msg.payload.type === \"case\") {\n        //manipulate case inputs\n        delete msg.payload.type\n        return [msg,null,null];\n    }\n    if(msg.payload.type === \"startup_log\"){\n        delete msg.payload.type\n        msg.payload.modlist = msg.payload.edhr;\n        delete msg.payload.edhr;\n        msg.payload.function_accumulator = msg.payload.machine_life_data;\n        delete msg.payload.machine_life_data;\n        msg.payload.timestamp = new Date().getTime();\n        msg.payload.power_on_time_stamp = msg.payload.power_on_event.timestamp\n        delete msg.payload.power_on_event.timestamp;\n        msg.payload.prev_power_off_time_stamp = msg.payload.power_off_event.timestamp\n        delete msg.payload.power_off_event;\n        if (msg.req.headers.birth === \"true\") {\n            msg.payload.birth = true;\n        } else {\n            msg.payload.birth = false;\n        }\n        //split in edhr and machine_life\n        return [null,msg,msg]\n    }\n}",
            "y": 380,
            "x": 760,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "442f624a.f0465c"
        },
        {
            "z": "c13a158d.882c9",
            "name": "json Parser",
            "y": 420,
            "wires": [
                [
                    "442f624a.f0465c"
                ]
            ],
            "pretty": false,
            "action": "",
            "x": 590,
            "property": "payload",
            "type": "json",
            "id": "8c571c39.404c4"
        },
        {
            "wires": [
                [
                    "442f624a.f0465c"
                ],
                [
                    "8c571c39.404c4"
                ]
            ],
            "name": "Check String",
            "outputs": 2,
            "outputLabels": [
                "no str",
                "yes str"
            ],
            "noerr": 0,
            "func": "if (typeof msg.payload === \"string\") { return [null, msg] }\nreturn [msg, null]; \n",
            "y": 380,
            "x": 430,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "11e39807.b03018"
        },
        {
            "wires": [
                [
                    "11e39807.b03018"
                ]
            ],
            "name": "",
            "y": 380,
            "x": 250,
            "z": "c13a158d.882c9",
            "type": "subflow:3962857e.44abba",
            "id": "5969198a.623db8"
        },
        {
            "info": "",
            "wires": [],
            "name": "[v1][Devices] Log New",
            "y": 340,
            "x": 120,
            "z": "c13a158d.882c9",
            "type": "comment",
            "id": "af895f57.d2f71"
        },
        {
            "info": "API paths:\n1. Missing Inputs\n2. Active Link record not found\n7. Active Link record found",
            "wires": [],
            "name": "[v1][DEVICES] Device User Unpair",
            "y": 400,
            "x": 160,
            "z": "c012d9b9.f1e028",
            "type": "comment",
            "id": "387c1ac1.6cfc06"
        },
        {
            "info": "API paths:\n1. Missing Inputs\n2. Fake user_id\n3. Fake email\n4. Fake device_id\n5. New link record\n6. Existing inactive link record\n7. Existing active link record",
            "wires": [],
            "name": "[v1] [DEVICES] Device User Pair",
            "y": 200,
            "x": 150,
            "z": "c012d9b9.f1e028",
            "type": "comment",
            "id": "b64e16f2.9df7a8"
        },
        {
            "wires": [
                [
                    "27759584.8e7e7a"
                ]
            ],
            "name": "v1 Outputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.v1){\n    delete msg.records.returns;\n    msg.records.delete = [\"_id\", \"_rev\", \"status\", \"address\"]\n    delete msg.api.info;\n    delete msg.api.stats;\n    delete msg.records.return_code;\n    msg.edhr[0].geo_location = msg.req.body.location;\n    msg.records.object = \"edhr\"\n    msg.records.doc_type = \"edhr\"\n}\nreturn msg;",
            "y": 280,
            "x": 3690,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "45b0ab31.18db54"
        },
        {
            "wires": [
                [
                    "7970b698.d57dc8"
                ]
            ],
            "name": "v1 Outputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.v1) {\n    delete msg.res // disable responding\n}\nreturn msg;",
            "y": 780,
            "x": 1070,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "4aca654c.0f624c"
        },
        {
            "wires": [
                [
                    "648a0f22.9fbd6"
                ]
            ],
            "name": "COS Endpoint",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.url = global.get(\"VCAP_COS\").credentials.endpoints\nreturn msg;",
            "y": 100,
            "x": 700,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "4d22178.8609fe8"
        },
        {
            "wires": [
                [
                    "379324f3.bb6e6c"
                ]
            ],
            "name": "Key Store",
            "outputs": 1,
            "noerr": 0,
            "func": "var KEYPROTECT = global.get(\"VCAP_KEYPROTECT\").credentials\nmsg.url = KEYPROTECT.url  + \"/\" + KEYPROTECT.com_key_id ;\nmsg.method = \"GET\";\nmsg.headers = {\n    \"authorization\": msg.keyprotect.authorization,\n    \"bluemix-instance\": KEYPROTECT.instance_id,\n    \"accept\": \"application/vnd.ibm.kms.key+json\"\n};\nreturn msg;",
            "y": 160,
            "x": 1060,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "ed90d453.615ab8"
        },
        {
            "tls": "",
            "wires": [
                [
                    "156670a7.30b9ff"
                ]
            ],
            "name": "Key Store",
            "url": "",
            "ret": "obj",
            "id": "379324f3.bb6e6c",
            "y": 160,
            "x": 1200,
            "z": "57a5a054.9dfd3",
            "type": "http request",
            "method": "use"
        },
        {
            "wires": [
                [
                    "f3d10722.d9c558"
                ]
            ],
            "name": "IAM KeyProtect",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.iam = { \"type\": \"keyprotect\" }\nreturn msg;",
            "y": 160,
            "x": 700,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "71d66758.3a1f88"
        },
        {
            "wires": [
                [
                    "59986608.a8b058"
                ]
            ],
            "name": "Save Crypto Key com",
            "outputs": 1,
            "noerr": 0,
            "func": "var KEYS = global.get(\"CRYPTO_KEYS\");\nif(KEYS){\n    KEYS.com = msg.payload.resources[0];\n} else {\n    KEYS = {\n        \"com\": msg.payload.resources[0]\n    };\n}\nglobal.set(\"CRYPTO_KEYS\", KEYS)\nvar KEYPROTECT = global.get(\"VCAP_KEYPROTECT\").credentials\nmsg.url = KEYPROTECT.url  + \"/\" + KEYPROTECT.cloudant_key_id ;\nmsg.method = \"GET\";\nmsg.headers = {\n    \"authorization\": msg.keyprotect.authorization,\n    \"bluemix-instance\": KEYPROTECT.instance_id,\n    \"accept\": \"application/vnd.ibm.kms.key+json\"\n};\nreturn msg;",
            "y": 160,
            "x": 1380,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "156670a7.30b9ff"
        },
        {
            "wires": [
                [
                    "71d66758.3a1f88",
                    "4d22178.8609fe8",
                    "22770158.30f6fe",
                    "f7214467.2dd8f8"
                ]
            ],
            "name": "Set Env Variables",
            "outputs": 1,
            "noerr": 0,
            "func": "var VCAP = global.get(\"VCAP\").services;\n//***** Legacy Override with Global Variables\n//***** KORE\nvar kore = global.get(\"VCAP_KORE\");\nif(!kore) {\n    if(context.global.process.env[\"KORE_url\"]) {\n        kore = {\n            \"name\": \"global_variables\",\n            \"credentials\": {\n                \"apikey\": \"QmF1c2NoQVBJOnV3VXVNc3Iz\",\n                \"iccid_prefixs\": [\"89014\",\"89302\",\"89314\"],\n                \"type\": \"Basic\",\n                \"url\": context.global.process.env[\"KORE_url\"]\n            }\n        }\n        global.set(\"VCAP_KORE\", kore)\n    } else {\n        node.warn(\"WARNING: No Kore configuration found.\")\n    }\n}\nvar google = global.get(\"VCAP_GOOGLE\");\nif(!google) {\n    if(context.global.process.env[\"Google_Geocoding_url\"] && context.global.process.env[\"Google_Geolocate_url\"]) {\n        google = {\n            \"name\": \"global_variables\",\n            \"credentials\": {\n                \"key\": context.global.process.env[\"Google_Geocoding_url\"].split(\"?\")[1].substring(4),\n                \"Google_Geocoding_url\": context.global.process.env[\"Google_Geocoding_url\"].split(\"?\")[0],\n                \"Google_Geolocate_url\": context.global.process.env[\"Google_Geolocate_url\"].split(\"?\")[0]\n            }\n        }\n        global.set(\"VCAP_GOOGLE\", google)\n    } else {\n        node.warn(\"WARNING: No Google configuration found.\")\n    }\n}\nglobal.set(\"FLOW_FILE\", context.global.process.env[\"NODE_RED_FLOW_NAME\"]);\nif(context.global.process.env[\"EULA_CATALOG\"]) {\n    global.set(\"EULA_CATALOG\", context.global.process.env[\"EULA_CATALOG\"]);\n} else {\n    global.set(\"EULA_CATALOG\", global.get(\"VCAP_CONFIG\").credentials.EULA_CATALOG);\n}\nif(context.global.process.env[\"Birth_Email_Distribution\"]) {\n    global.set(\"BIRTH_EMAIL_DISTRIBUTION\", context.global.process.env[\"Birth_Email_Distribution\"]);\n} else {\n    global.set(\"BIRTH_EMAIL_DISTRIBUTION\", global.get(\"VCAP_CONFIG\").credentials.Birth_Email_Distribution);\n}\nreturn msg;",
            "y": 100,
            "x": 450,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "7fb9763a.bffa58"
        },
        {
            "wires": [
                [
                    "84649a50.b813c8"
                ]
            ],
            "name": "App ID Public Key",
            "outputs": 1,
            "noerr": 0,
            "func": "var oauth_credentials = global.get(\"VCAP_APPID\").credentials;\nmsg.method = \"GET\";\noauth_credentials.oauthServerUrl = oauth_credentials.oauthServerUrl.replace(\"v4\",\"v3\"); //necessary for EU where this address is configured wrong\nmsg.url = oauth_credentials.oauthServerUrl + \"/publickey\";\nmsg.headers = {\n    \"authorization\": \"Basic \" +  Buffer.from(oauth_credentials.clientId + \":\" + oauth_credentials.secret).toString('base64')\n}\nreturn msg;",
            "y": 220,
            "x": 710,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "22770158.30f6fe"
        },
        {
            "tls": "",
            "wires": [
                [
                    "7f529bb3.035494"
                ]
            ],
            "name": "APP ID Request",
            "url": "",
            "ret": "obj",
            "id": "84649a50.b813c8",
            "y": 220,
            "x": 900,
            "z": "57a5a054.9dfd3",
            "type": "http request",
            "method": "use"
        },
        {
            "wires": [
                []
            ],
            "name": "Store Public Key",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.payload.hasOwnProperty(\"kty\")) {\n    var jsr = global.get('jsrsasign');\n    var appid_pub = {}\n    appid_pub.key = msg.payload;\n    appid_pub.key_jsr = jsr.KEYUTIL.getKey(msg.payload);\n    global.set(\"APPID_PUB\", appid_pub);\n}\nnode.warn({\"APP ID Public Key Done\": msg})\nreturn msg;",
            "y": 220,
            "x": 1090,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "7f529bb3.035494"
        },
        {
            "wires": [],
            "name": "",
            "y": 220,
            "x": 1240,
            "z": "3962857e.44abba",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "f795cb6f.150988"
        },
        {
            "wires": [
                [
                    "ed1d24e.f4bc6d8"
                ],
                [
                    "c4a24f6a.37c1b"
                ],
                [
                    "c3e26155.669ab"
                ]
            ],
            "name": "Basic Auth",
            "outputs": 3,
            "outputLabels": [
                "legacy",
                "authorized",
                "unauthorized"
            ],
            "noerr": 0,
            "func": "if(global.get(\"VCAP_AUTH\")) {\n    var auth = global.get(\"VCAP_AUTH\").credentials.type + \" \" + global.get(\"VCAP_AUTH\").auth_key;\n    if(msg.req.headers && msg.req.headers.authorization){\n        if (msg.req.headers.authorization === auth) {\n            if(msg.api && msg.api.debug) {\n                msg.api.auth = { \"type\": \"basic\" }\n            }\n            return [null,msg,null]\n        }\n    }\n    return [null,null,msg];\n}\nreturn [msg,null,null]",
            "y": 100,
            "x": 590,
            "z": "3962857e.44abba",
            "type": "function",
            "id": "b7b890fe.b54a6"
        },
        {
            "wires": [
                [
                    "514b425d.eea37c"
                ]
            ],
            "name": "Start Time",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = {\n    \"start_time\": Date.now(),\n    \"version\": global.get(\"API_VERSION\"),\n    \"statistics\": {}\n}\nreturn msg;",
            "y": 160,
            "x": 130,
            "z": "3962857e.44abba",
            "type": "function",
            "id": "bfe490a.2c4cf7"
        },
        {
            "wires": [
                [
                    "b7b890fe.b54a6"
                ],
                [
                    "e4adfe3d.c3c6b"
                ],
                [
                    "6a141388.c3e46c"
                ]
            ],
            "name": "Auth Type",
            "outputs": 3,
            "outputLabels": [
                "Basic",
                "Bearer",
                "no auth"
            ],
            "noerr": 0,
            "func": "if(msg.req.headers && msg.req.headers.authorization){\n    var auth_type = msg.req.headers.authorization.split(\" \")[0];\n    if(msg.api && msg.api.apic && msg.api.apic.version && [\"v4\",\"ve\"].indexOf(msg.api.apic.version) >= 0) {\n        //v4 only supporst bearer token\n        if(auth_type === \"Bearer\") {\n            return [null,msg,null];\n        } else {\n            return [null,null,msg];\n        }\n    } else {\n        // node red direct and any other version apic support both\n        if(auth_type === \"Bearer\") {\n            return [null,msg,null];\n        }\n        if(auth_type === \"Basic\") {\n            return [msg,null,null];\n        }\n    }\n}\nreturn [null,null,msg];",
            "y": 160,
            "x": 420,
            "z": "3962857e.44abba",
            "type": "function",
            "id": "b8c36493.e64ac8"
        },
        {
            "wires": [
                [
                    "f795cb6f.150988"
                ]
            ],
            "name": "Unauthorized Basic",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 401,\n    \"message\": {\n        \"code\": \"invalid_auth\",\n        \"description\":\"Unauthorized - Wrong Basic Auth Credentials\"\n    }\n})\nreturn msg;",
            "y": 180,
            "x": 1010,
            "z": "3962857e.44abba",
            "type": "function",
            "id": "c3e26155.669ab"
        },
        {
            "wires": [
                [
                    "f795cb6f.150988"
                ]
            ],
            "name": "Unauthorized - Invalid Token",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 401,\n    \"message\": {\n        \"code\": \"invalid_token\",\n        \"description\": \"Unauthorized - Invalid Token\"\n    }\n})\nreturn msg;",
            "y": 220,
            "x": 980,
            "z": "3962857e.44abba",
            "type": "function",
            "id": "99d252f4.5b4ed"
        },
        {
            "wires": [
                [
                    "f795cb6f.150988"
                ]
            ],
            "name": "Unauthorized - Token Not Supported",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 401,\n    \"message\": {\n        \"code\": \"unsupported_auth\",\n        \"description\": \"Unauthorized - Token Auth Not Supported\"\n    }\n})\nreturn msg;",
            "y": 260,
            "x": 950,
            "z": "3962857e.44abba",
            "type": "function",
            "id": "d3e04f7d.e76fb"
        },
        {
            "wires": [
                [
                    "f795cb6f.150988"
                ]
            ],
            "name": "Unauthorized",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 401,\n    \"message\": {\n        \"code\": \"invalid_auth\",\n        \"description\": \"Unauthorized - No valid Credentials\"\n    }\n})\nreturn msg;",
            "y": 320,
            "x": 1020,
            "z": "3962857e.44abba",
            "type": "function",
            "id": "6a141388.c3e46c"
        },
        {
            "wires": [
                [
                    "c4a24f6a.37c1b"
                ],
                [
                    "99d252f4.5b4ed"
                ],
                [
                    "d3e04f7d.e76fb"
                ]
            ],
            "name": "Bearer Auth",
            "outputs": 3,
            "outputLabels": [
                "authorized",
                "unauthorized",
                "not supported"
            ],
            "noerr": 0,
            "func": "if(global.get('jsrsasign') && global.get(\"VCAP_APPID\") && global.get(\"APPID_PUB\")) {\n    var jsr = global.get('jsrsasign');\n    var public_key = global.get('APPID_PUB').key_jsr;\n    if (msg.req.headers.authorization && msg.req.headers.authorization.split(\" \")[0] === \"Bearer\") {\n        msg.authorization = {\n            \"access_token\": msg.req.headers.authorization.split(\" \")[1]\n        };\n        try {\n            msg.authorization.token_header = jsr.KJUR.jws.JWS.readSafeJSONString(jsr.b64utoutf8(msg.authorization.access_token.split(\".\")[0]));\n            msg.authorization.token_payload = jsr.KJUR.jws.JWS.readSafeJSONString(jsr.b64utoutf8(msg.authorization.access_token.split(\".\")[1]));\n            msg.authorization.token_isValid = jsr.KJUR.jws.JWS.verifyJWT(msg.authorization.access_token, public_key, {alg: ['RS256'], verifyAt: Math.round(Date.now()/1000)})\n        }\n        catch(err) {\n            return [null,msg,null];\n        }\n        if(msg.api && msg.api.debug) {\n            msg.api.auth = { \"type\": \"bearer\" }\n        }\n        if (msg.authorization.token_isValid) {\n            return [msg,null,null];\n        } else {\n            return [null,msg,null];\n        }\n    }\n}\nreturn [null,null,msg];",
            "y": 160,
            "x": 590,
            "z": "3962857e.44abba",
            "type": "function",
            "id": "e4adfe3d.c3c6b"
        },
        {
            "wires": [
                [
                    "178ef45f.00a64c"
                ]
            ],
            "name": "",
            "url": "/token",
            "upload": false,
            "id": "4e42e061.1bfdd",
            "swaggerDoc": "",
            "y": 780,
            "x": 90,
            "z": "57a5a054.9dfd3",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "bd0f7250.6f7f8"
                ],
                [
                    "60ddcf4a.6c8f7"
                ]
            ],
            "name": "Access Token",
            "outputs": 2,
            "noerr": 0,
            "func": "msg.api = {\n    \"start_time\": Date.now(),\n    \"version\": global.get(\"API_VERSION\"),\n    \"name\": \"Access Token\",\n    \"statistics\": {}\n}\nmsg.inputs = {\n    \"required\": [\"grant_type\", \"scope\"],\n    \"allowed\": []\n}\nif(msg.payload.grant_type) {\n    if(msg.payload.grant_type === \"password\") {\n        msg.inputs.required = [\"grant_type\", \"username\", \"password\", \"scope\"]\n    } else if(msg.payload.grant_type === \"refresh_token\") {\n        msg.inputs.required = [\"grant_type\", \"refresh_token\", \"scope\"]\n    }\n}\nmsg.records = {};\nif(global.get(\"VCAP_APPID\")) {\n    msg.appid = {\n        \"server\": global.get(\"VCAP_APPID\").credentials.oauthServerUrl\n    }\n    return [msg,null];\n}\nreturn [null,msg]\n//Modification for rebirth\n//if APPID returns an error, check the username if it is a system_sn, check if in cloudant.\n//If there, add a record in appid with a random password and return the new password.",
            "y": 780,
            "x": 300,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "178ef45f.00a64c"
        },
        {
            "tls": "",
            "wires": [
                [
                    "7b43a735.8abdd8"
                ]
            ],
            "name": "APP ID Token",
            "url": "",
            "ret": "obj",
            "id": "bde75af7.2d5698",
            "y": 760,
            "x": 960,
            "z": "57a5a054.9dfd3",
            "type": "http request",
            "method": "use"
        },
        {
            "wires": [
                [
                    "692bef4.d6f061"
                ]
            ],
            "name": "Add c_id",
            "outputs": 1,
            "noerr": 0,
            "func": "var jsr = global.get('jsrsasign');\nif (!msg.hasOwnProperty(\"authorization\")) {msg.authorization = {}; }\nif (msg.payload.hasOwnProperty(\"access_token\")) {\n    msg.authorization.access_token = msg.payload.access_token;\n    msg.authorization.token_header = jsr.KJUR.jws.JWS.readSafeJSONString(jsr.b64utoutf8(msg.authorization.access_token.split(\".\")[0]))\n    //node.warn({\"token_header\":  msg.authorization.token_header})\n    msg.authorization.token_payload = jsr.KJUR.jws.JWS.readSafeJSONString(jsr.b64utoutf8(msg.authorization.access_token.split(\".\")[1]))\n    //node.warn({\"token_payload\":  msg.authorization.token_payload})\n}\nif (msg.payload.hasOwnProperty(\"id_token\")) {\n    msg.authorization.id_token = msg.payload.id_token;\n    msg.authorization.id_token_header = jsr.KJUR.jws.JWS.readSafeJSONString(jsr.b64utoutf8(msg.authorization.id_token.split(\".\")[0]))\n    //node.warn({\"id_token_header\":  msg.authorization.id_token_header})\n    msg.authorization.id_token_payload = jsr.KJUR.jws.JWS.readSafeJSONString(jsr.b64utoutf8(msg.authorization.id_token.split(\".\")[1]))\n    //node.warn({\"id_token_payload\":  msg.authorization.id_token_payload})\n    msg.authorization.appid_id = msg.authorization.id_token_payload.sub;\n    msg.authorization.id_token_payload.identities.forEach(function(idp){\n        if (idp.provider === \"cloud_directory\") {\n            msg.authorization.idp_id = idp.id;        \n        }\n    })\n    if(msg.authorization.id_token_payload.oauth_client) {\n        msg.authorization.requesting_app = msg.authorization.id_token_payload.oauth_client.name;\n    }\n}\nvar users = global.get(\"APPID\").users;\nvar devices = global.get(\"APPID\").devices\nvar user_idx = users.idp_ids.indexOf(msg.authorization.idp_id)\nif (user_idx >= 0 && ('null' != users.idp_ids[user_idx]) && users.idp_ids[user_idx] !== \"\") {\n    msg.authorization.c_id = users.c_ids[user_idx]\n} else {\n    var device_idx = users.idp_ids.indexOf(msg.authorization.idp_id)\n    if ( device_idx >= 0  && ('null' != devices.idp_ids[device_idx]) && devices.idp_ids[device_idx] !== \"\") {\n        msg.authorization.c_id = devices.c_ids[device_idx]\n    }\n}\nif (msg.authorization.hasOwnProperty(\"appid_id\")) { msg.payload.appid_id = msg.authorization.appid_id }\nif (msg.authorization.hasOwnProperty(\"idp_id\")) { msg.payload.idp_id = msg.authorization.idp_id }\nif (msg.authorization.hasOwnProperty(\"c_id\")) { msg.payload.c_id = msg.authorization.c_id }\n//node.warn({\"Token Info\": msg});\nmsg.api.info = false;\nmsg.api.stats = false;\nreturn msg;",
            "y": 740,
            "x": 1260,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "38d932.6d8546ce"
        },
        {
            "wires": [
                [
                    "f37244ae.346dd8"
                ]
            ],
            "name": "APP ID Not Configured",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": {\n        \"code\": \"appid_missing\",\n        \"description\": \"APP ID is not configured on this CF APP\"\n    }\n})\nreturn msg;",
            "y": 820,
            "x": 1310,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "60ddcf4a.6c8f7"
        },
        {
            "wires": [],
            "name": "",
            "y": 800,
            "x": 1540,
            "z": "57a5a054.9dfd3",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "f37244ae.346dd8"
        },
        {
            "wires": [
                [
                    "a37abe75.f5eab"
                ]
            ],
            "name": "",
            "y": 860,
            "x": 330,
            "z": "57a5a054.9dfd3",
            "type": "subflow:3962857e.44abba",
            "id": "9bd877f1.986f88"
        },
        {
            "wires": [],
            "name": "",
            "y": 860,
            "x": 670,
            "z": "57a5a054.9dfd3",
            "type": "subflow:bc6ff87.05a2908",
            "id": "26c89df2.e75ce2"
        },
        {
            "wires": [
                [
                    "9bd877f1.986f88"
                ]
            ],
            "name": "",
            "url": "/crypto_key",
            "upload": false,
            "id": "80de317f.7ca5f",
            "swaggerDoc": "",
            "y": 860,
            "x": 100,
            "z": "57a5a054.9dfd3",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "26c89df2.e75ce2"
                ]
            ],
            "name": "Crypto Key",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Crypto Key\",\n        \"encrypt\": false\n    });\nmsg.records = {\n    \"format\": \"array\",\n    \"returns\": [\"key\"]\n};\nmsg.key = global.get(\"CRYPTO_KEYS\").com.payload\nnode.warn({\"Crypto Key\": msg})\nreturn msg;",
            "y": 860,
            "x": 510,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "a37abe75.f5eab"
        },
        {
            "wires": [
                [
                    "e4a8dcfe.671d1",
                    "d6aa4528.4adaa8"
                ]
            ],
            "name": "Email Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "var device = msg.device[0];\nvar ticket = msg.help_ticket[0];\nvar users_email = msg.support_users.map(a => a.email).join(\",\")\nmsg.message = device.system_type + \" \" + device._id + \" has had Remote Connect enabled. Ticket # \"+ ticket._id + \" created at \" + Date(ticket.timestamp) + \" has been escalated. Connect to KORE VPN and point VNC Client to \" + ticket.device_ip + \" to initiate Remote Connect.\"\nif (!msg.hasOwnProperty(\"email\")) { msg.email = {} }\nmsg.email.fields = \n{\n    \"ticket_id\": ticket._id,\n    \"system_type\": device.system_type,\n    \"device_id\": device._id,\n    \"start_time\": Date(ticket.start_time),\n    \"device_ip\": ticket.device_ip,\n};\nmsg.email.topic = \"Remote Connect enabled: \" + ticket._id ;\nmsg.email.to = users_email;\n\nmsg.email.template_type = \"rem_conn\"\nreturn msg;",
            "y": 620,
            "x": 2410,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "7fe55e1f.27f52"
        },
        {
            "wires": [
                [
                    "1e092205.03841e"
                ]
            ],
            "name": "Link Already Inactive",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.records.returns) {\n    msg.records.returns.push(\"message\");\n}\nelse {\n    msg.records.returns = [\"message\"];\n}\nmsg.message = \"Link between Device: \" + msg.inputs.body.device_id + \" and User: \" + msg.inputs.body.user_id + \" was already delinked.\"\nreturn msg;",
            "y": 420,
            "x": 1520,
            "z": "c012d9b9.f1e028",
            "type": "function",
            "id": "8e78e591.f1a9e8"
        },
        {
            "wires": [
                [
                    "bcabe882.080058"
                ]
            ],
            "name": "v1 Errors",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.v1){\n    msg.errors[0].message = msg.errors[0].message.replace(\" was not found\",\" does not exist\");\n}\nreturn msg;",
            "y": 380,
            "x": 1740,
            "z": "c012d9b9.f1e028",
            "type": "function",
            "id": "29b16398.3bde7c"
        },
        {
            "tls": "",
            "wires": [
                [
                    "6d0a21fb.2bdab"
                ]
            ],
            "name": "Key Store",
            "url": "",
            "ret": "obj",
            "id": "59986608.a8b058",
            "y": 160,
            "x": 1560,
            "z": "57a5a054.9dfd3",
            "type": "http request",
            "method": "use"
        },
        {
            "wires": [
                []
            ],
            "name": "Save Crypto Key cloudant",
            "outputs": 1,
            "noerr": 0,
            "func": "var KEYS = global.get(\"CRYPTO_KEYS\");\nif(KEYS){\n    KEYS.cloudant = msg.payload.resources[0];\n} else {\n    KEYS = {\n        \"cloudant\": msg.payload.resources[0]\n    };\n}\nglobal.set(\"CRYPTO_KEYS\", KEYS)\nnode.warn({\"Crypto Keys Done\": msg})\nreturn msg;",
            "y": 160,
            "x": 1750,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "6d0a21fb.2bdab"
        },
        {
            "wires": [
                [
                    "471373d5.3cd54c"
                ]
            ],
            "name": "Decrypt Cloudant Fields",
            "outputs": 1,
            "noerr": 0,
            "func": "var cryptojs = global.get('cryptojs');\nvar encryption_available = global.get('CRYPTO_KEYS');\nif(encryption_available && encryption_available.cloudant) {\n    var key = encryption_available.cloudant.payload;\n    var field_list = [];\n    var types = [\"help_tickets\",\"help_ticket\",\"settings_files\",\"settings_file\"];\n    if(msg.payload && msg.payload !== {}) {\n        Object.keys(msg.payload).forEach(function(type) {\n            if(types.indexOf(type) >= 0) {\n                if([\"help_tickets\",\"help_ticket\"].indexOf(type) >= 0) { field_list = [\"contact_name\", \"contact_number\", \"surgeon_settings_name\"]; }\n                if([\"settings_files\",\"settings_file\"].indexOf(type) >= 0) { field_list = [\"file_name\"]; }\n                if(Array.isArray(msg.payload[type])) {\n                    msg.payload[type].forEach(function(record,idx){\n                        field_list.forEach(function(field){\n                            var efield = \"e_\" + field;\n                            if(record[efield]) {\n                                if(record[efield] !== \"\") {\n                                    try {\n                                        record[field] = JSON.parse(cryptojs.AES.decrypt(record[efield],key).toString(cryptojs.enc.Utf8));\n                                    }\n                                    catch(e){ node.warn({\"Decrypt ERROR\": e}) }\n                                } else {\n                                    record[field] = \"\";\n                                }\n                                delete record[efield];\n                            }\n                        });\n                    });\n                } else {\n                    field_list.forEach(function(field){\n                        //node.warn(field)\n                        var efield = \"e_\" + field;\n                        if(msg.payload[type][efield]) {\n                            if(msg.payload[type][efield] !== \"\") {\n                                try {\n                                    msg.payload[type][field] = JSON.parse(cryptojs.AES.decrypt(msg.payload[type][efield],key).toString(cryptojs.enc.Utf8));\n                                }\n                                catch(e){ node.warn( {\"Decrypt ERROR\": e}) }\n                            } else {\n                                msg.payload[type][field] = \"\";\n                            }\n                            delete msg.payload[type][efield];\n                        }\n                    });\n                }\n            }\n        });\n    }\n} else {\n    node.warn(\"WARNING [cloudant Encryption]: On this setup Cloudant Encrytpion is NOT available\")\n}\nreturn msg;",
            "y": 200,
            "x": 870,
            "z": "bc6ff87.05a2908",
            "type": "function",
            "id": "60d75440.bb3a6c"
        },
        {
            "wires": [
                [],
                [
                    "5268805f.92bc5"
                ]
            ],
            "name": "IAM Skip",
            "outputs": 2,
            "outputLabels": [
                "skip",
                "execute"
            ],
            "noerr": 0,
            "func": "if(msg.iam && msg.iam.type && (!msg[msg.iam.type] || !msg[msg.iam.type].authorization)) {\n    return [null,msg];\n}\nreturn [msg,null];",
            "y": 180,
            "x": 170,
            "z": "ab306e30.d0cc3",
            "type": "function",
            "id": "be86d379.943a6"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.debug === true && msg.api.version) {\n    node.warn({\"IAM Manager\": msg});\n}",
            "y": 120,
            "x": 1750,
            "z": "ab306e30.d0cc3",
            "type": "function",
            "id": "ad489be8.83b808"
        },
        {
            "wires": [
                [
                    "5440f228.63411c"
                ],
                [
                    "718667fc.df6078"
                ],
                [
                    "ee07c62.23f4238"
                ],
                [
                    "14b4a1fc.79f63e"
                ]
            ],
            "name": "IAM Check Token",
            "outputs": 4,
            "outputLabels": [
                "valid",
                "new-refresh",
                "error",
                ""
            ],
            "noerr": 0,
            "func": "var tokens = global.get(\"TOKENS\");\nvar type = msg.iam.type;\nvar mgmt = msg.iam.mgmt;\nif(!msg.iam.url) { msg.iam.url = \"https://iam.bluemix.net/identity/token\"; } //find a better place to get this url\nif(!msg.iam.headers) {\n     msg.iam.headers = {\n        \"accept\": \"application/json\",\n        \"content-type\": \"application/x-www-form-urlencoded\"\n    }\n}\nif(tokens && tokens[type]) {\n    msg.iam.token = tokens[type];\n    if(msg.iam.token.expiration > (Date.now()/1000) + 60) {\n        return [msg,null,null,null]; // return token\n    }\n}\nmsg.iam.credentials = global.get(\"VCAP_\" + type.toUpperCase()).credentials;\nif(!msg.iam.credentials) {\n    return [null,null,null,msg] // error\n}\nmsg.iam.body = \"grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=\" + msg.iam.credentials.apikey + \"&response_type=cloud_iam\";\nnode.warn(\"New Api Key Token for \" + msg.iam.type);\nif(type === \"dashdb\") {\n    return [null,null,msg,null]; // new DashDB token\n}\nif(type === \"appid\" && mgmt) {\n    msg.iam.url = \"https://iam.cloud.ibm.com/oidc/token\";\n    msg.iam.headers.Authorization = \"Basic \" + Buffer.from(msg.iam.credentials.clientId + ':' + msg.iam.credentials.secret).toString('base64')\n    if(msg.iam.token && msg.iam.token.refresh_token) {\n        msg.iam.body = \"grant_type=refresh_token&refresh_token=\" + msg.iam.token.refresh_token + \"&response_type=cloud_iam\";\n        node.warn(\"Refresh Token for \" + msg.iam.type);\n    } else {\n        msg.iam.body = \"grant_type=client_credentials&scope=openid&response_type=cloud_iam\";\n        node.warn(\"New Token for \" + msg.iam.type);\n    }\n}\nreturn [null,msg,null,null]; // new token",
            "y": 260,
            "x": 350,
            "z": "ab306e30.d0cc3",
            "type": "function",
            "id": "5268805f.92bc5"
        },
        {
            "wires": [
                [
                    "ad489be8.83b808"
                ]
            ],
            "name": "IAM Return Authorization",
            "outputs": 1,
            "noerr": 0,
            "func": "var authorization = msg.iam.token.token_type + \" \" + msg.iam.token.access_token;\nif(msg[msg.iam.type]) {\n    msg[msg.iam.type].authorization = authorization;\n} else {\n    msg[msg.iam.type] = {\n        \"authorization\": authorization\n    }\n}\nreturn msg;",
            "y": 200,
            "x": 1410,
            "z": "ab306e30.d0cc3",
            "type": "function",
            "id": "5440f228.63411c"
        },
        {
            "wires": [
                [
                    "ddaa190d.17c168"
                ]
            ],
            "name": "IAM Setup",
            "outputs": 1,
            "outputLabels": [
                "error",
                "ok"
            ],
            "noerr": 0,
            "func": "msg.url = msg.iam.url;\nmsg.headers = msg.iam.headers;\nmsg.payload = msg.iam.body;\nreturn msg;",
            "y": 260,
            "x": 630,
            "z": "ab306e30.d0cc3",
            "type": "function",
            "id": "718667fc.df6078"
        },
        {
            "tls": "",
            "wires": [
                [
                    "34d99932.b68a26"
                ]
            ],
            "name": "POST",
            "url": "",
            "ret": "obj",
            "id": "ddaa190d.17c168",
            "y": 260,
            "x": 770,
            "z": "ab306e30.d0cc3",
            "type": "http request",
            "method": "POST"
        },
        {
            "wires": [
                [
                    "666acb09.36f164"
                ],
                [
                    "1f349275.1d59ce"
                ]
            ],
            "name": "IAM Auth Token",
            "outputs": 2,
            "outputLabels": [
                "ok",
                "error"
            ],
            "noerr": 0,
            "func": "if (msg.statusCode === 200) {\n    msg.iam.token = msg.payload\n    msg.payload = {};\n    delete msg.headers;\n    delete msg.url;\n    delete msg.statusCode;\n    delete msg.responseUrl;\n    delete msg.responseCookies;\n    delete msg.topic;\n    return [msg,null];\n} else {\n    return [null,msg]\n}",
            "y": 260,
            "x": 920,
            "z": "ab306e30.d0cc3",
            "type": "function",
            "id": "34d99932.b68a26"
        },
        {
            "wires": [],
            "name": "",
            "y": 340,
            "x": 1380,
            "z": "ab306e30.d0cc3",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "319e6624.b4ff4a"
        },
        {
            "wires": [
                [
                    "319e6624.b4ff4a"
                ]
            ],
            "name": "IAM Auth Error",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": msg.statusCode,\n    \"message\": msg.payload\n})\nreturn msg;",
            "y": 280,
            "x": 1180,
            "z": "ab306e30.d0cc3",
            "type": "function",
            "id": "1f349275.1d59ce"
        },
        {
            "wires": [
                [
                    "5440f228.63411c"
                ]
            ],
            "name": "Save Token",
            "outputs": 1,
            "noerr": 0,
            "func": "var tokens = global.get(\"TOKENS\");\nif(!tokens) { tokens = {} }\ntokens[msg.iam.type] = msg.iam.token;\nglobal.set(\"TOKENS\", tokens)\nreturn msg;",
            "y": 240,
            "x": 1170,
            "z": "ab306e30.d0cc3",
            "type": "function",
            "id": "666acb09.36f164"
        },
        {
            "wires": [
                [
                    "319e6624.b4ff4a"
                ]
            ],
            "name": "IAM Credentials Error",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"IAM credentials for \" + msg.iam.type + \" are not configured.\"\n})\nreturn msg;",
            "y": 340,
            "x": 600,
            "z": "ab306e30.d0cc3",
            "type": "function",
            "id": "14b4a1fc.79f63e"
        },
        {
            "wires": [
                [
                    "1d301bf7.08d524"
                ]
            ],
            "name": "",
            "y": 100,
            "x": 1260,
            "z": "57a5a054.9dfd3",
            "type": "subflow:ab306e30.d0cc3",
            "id": "72dc701a.d7ecf"
        },
        {
            "wires": [
                [
                    "dcfa8b29.377188"
                ]
            ],
            "name": "",
            "y": 180,
            "x": 540,
            "z": "f4989ebd.9314",
            "type": "subflow:ab306e30.d0cc3",
            "id": "e8efde41.fb3c3"
        },
        {
            "wires": [
                [
                    "ed90d453.615ab8"
                ]
            ],
            "name": "",
            "y": 160,
            "x": 890,
            "z": "57a5a054.9dfd3",
            "type": "subflow:ab306e30.d0cc3",
            "id": "f3d10722.d9c558"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.debug && (msg.api.info || msg.api.stats)) {\n    node.warn({\"Info & Stats\": msg});\n}",
            "y": 140,
            "x": 490,
            "z": "b6210d1b.09e3a",
            "type": "function",
            "id": "6b8c0164.25435"
        },
        {
            "wires": [
                [],
                [
                    "df645591.6cfba8"
                ]
            ],
            "name": "AppID New Device Setup",
            "outputs": 2,
            "outputLabels": [
                "error",
                "ok"
            ],
            "noerr": 0,
            "func": "if (msg.records && msg.records.device) {\n    if(!msg.iam) { msg.iam = {} }\n    msg.iam.type = \"appid\";\n    if(!msg.appid) { msg.appid = {} }\n    var config = global.set(\"VCAP_CONFIG\");\n    if(config && config.Birth_Email_Distribution) {\n        msg.records.device.email = config.Birth_Email_Distribution;\n    } else {\n        msg.records.device.email = global.get(\"BIRTH_EMAIL_DISTRIBUTION\");\n    }\n    return [null,msg]\n} else {\n    return [msg,null]\n}",
            "y": 120,
            "x": 210,
            "z": "3cbceae5.45c156",
            "type": "function",
            "id": "19ed28b8.769907"
        },
        {
            "wires": [
                [
                    "7cf8c37f.aef6dc"
                ]
            ],
            "name": "AppID New Device Cleanup",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.appid.device = msg.payload;\nmsg.records.idp_id = msg.payload.id;\n\ndelete msg.method;\ndelete msg.url;\ndelete msg.responseUrl;\ndelete msg.headers;\ndelete msg.statusCode;\n\nreturn msg",
            "y": 120,
            "x": 1280,
            "z": "3cbceae5.45c156",
            "type": "function",
            "id": "da807d9a.f69fc"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.debug) {\n    node.warn({\"AppId New Device\": msg});\n}",
            "y": 40,
            "x": 1510,
            "z": "3cbceae5.45c156",
            "type": "function",
            "id": "7cf8c37f.aef6dc"
        },
        {
            "wires": [
                [
                    "8b70c25a.368f1"
                ]
            ],
            "name": "AppID Device Template",
            "outputs": 1,
            "noerr": 0,
            "func": "var device = msg.records.device;\nmsg.appid.mgmt_url = global.get(\"VCAP_APPID\").credentials.managementUrl;\nmsg.appid.headers = { \"Authorization\": msg.appid.authorization }\nmsg.appid.device = {\n  \"displayName\": device._id,\n  \"userName\": device._id,\n  \"password\": msg.records.password,\n  \"emails\": [\n    {\n      \"value\": device.email,\n      \"primary\": true\n    }\n  ],\n  \"name\": {\n    \"givenName\": device._id,\n    \"familyName\": device.system_type,\n    \"formatted\": device._id + \"(\" + device.system_type + \")\"\n  },\n  \"active\": true,\n  \"status\": \"CONFIRMED\",\n  \"entitlements\": [\n                {\n                    \"bl_cloud\": {\n                        \"c_id\": device._id,\n                        \"doc_type\": \"device\",\n                        \"system_type\": device.system_type\n                    }\n                }\n            ]\n}\nmsg.method = \"POST\";\nmsg.url = msg.appid.mgmt_url + \"/cloud_directory/Users\";\nmsg.payload = msg.appid.device;\nmsg.headers = msg.appid.headers;\nreturn msg;",
            "y": 140,
            "x": 670,
            "z": "3cbceae5.45c156",
            "type": "function",
            "id": "fb170db6.d6631"
        },
        {
            "tls": "",
            "wires": [
                [
                    "106d52c1.04dd1d"
                ]
            ],
            "name": "APPID MGMT",
            "url": "",
            "ret": "obj",
            "id": "8b70c25a.368f1",
            "y": 140,
            "x": 900,
            "z": "3cbceae5.45c156",
            "type": "http request",
            "method": "use"
        },
        {
            "checkall": "true",
            "z": "3cbceae5.45c156",
            "name": "Error?",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "201"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "da807d9a.f69fc"
                ],
                [
                    "33aa6952.3bbe16"
                ]
            ],
            "propertyType": "msg",
            "y": 140,
            "x": 1070,
            "property": "statusCode",
            "type": "switch",
            "id": "106d52c1.04dd1d"
        },
        {
            "wires": [
                [
                    "6ece93d8.19f22c"
                ]
            ],
            "name": "AppID Error",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nif(msg.payload.schemas) {\n    msg.errors.push({\n        \"code\": 412,\n        \"message\": {\n            \"code\": msg.payload.status,\n            \"description\": msg.payload.detail,\n            \"service\": \"appid\"\n        }\n    });\n} else {\n    msg.payload.service = \"appid\";\n    msg.errors.push({\n        \"code\": msg.statusCode,\n        \"message\": msg.payload\n    });\n}\nif (msg.hasOwnProperty(\"req\")) {\n    return msg;\n} else {\n    node.warn({\"AppID New Device Error\": msg.errors[0]})\n}",
            "y": 180,
            "x": 1230,
            "z": "3cbceae5.45c156",
            "type": "function",
            "id": "33aa6952.3bbe16"
        },
        {
            "wires": [
                [
                    "fb170db6.d6631"
                ]
            ],
            "name": "",
            "y": 140,
            "x": 440,
            "z": "3cbceae5.45c156",
            "type": "subflow:ab306e30.d0cc3",
            "id": "df645591.6cfba8"
        },
        {
            "wires": [],
            "name": "",
            "y": 180,
            "x": 1400,
            "z": "3cbceae5.45c156",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "6ece93d8.19f22c"
        },
        {
            "checkall": "false",
            "z": "e0cd8199.1ad77",
            "name": "doc_type",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "user"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "device"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 3,
            "wires": [
                [
                    "3cd3ca14.eae3d6"
                ],
                [
                    "897afc99.9645d"
                ],
                [
                    "7f36f4fa.4c3d1c"
                ]
            ],
            "propertyType": "msg",
            "y": 140,
            "x": 1240,
            "property": "records.doc_type",
            "type": "switch",
            "id": "f10e4ede.450cb"
        },
        {
            "wires": [
                [
                    "a5ba9d3d.b7007"
                ]
            ],
            "name": "",
            "y": 120,
            "x": 1450,
            "z": "e0cd8199.1ad77",
            "type": "subflow:3cbceae5.45c156",
            "id": "897afc99.9645d"
        },
        {
            "wires": [
                [
                    "7f36f4fa.4c3d1c"
                ]
            ],
            "name": "Device idp_id",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.appid.hasOwnProperty(\"device\") && msg.appid.device.hasOwnProperty(\"id\")) {\n    msg.records[msg.records.object].idp_id = msg.records.idp_id;\n    msg.records[msg.records.object].password = msg.records.password;\n}\nnode.warn({\"New Rec Device APPID\": msg})\nreturn msg;",
            "y": 120,
            "x": 1640,
            "z": "e0cd8199.1ad77",
            "type": "function",
            "id": "a5ba9d3d.b7007"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.debug) {\n    node.warn({\"AppId Update Device\": msg});\n}",
            "y": 160,
            "x": 2030,
            "z": "11fa1bee.eb6984",
            "type": "function",
            "id": "c5bb6e36.b66"
        },
        {
            "wires": [
                [
                    "d4c7f6fb.dbdcf8"
                ]
            ],
            "name": "",
            "y": 280,
            "x": 420,
            "z": "11fa1bee.eb6984",
            "type": "subflow:ab306e30.d0cc3",
            "id": "b47984e9.c2c9b8"
        },
        {
            "wires": [],
            "name": "",
            "y": 340,
            "x": 1940,
            "z": "11fa1bee.eb6984",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "f19f8fbb.0a107"
        },
        {
            "wires": [
                [],
                [
                    "b47984e9.c2c9b8"
                ]
            ],
            "name": "AppID Find Device",
            "outputs": 2,
            "outputLabels": [
                "skip",
                "ok"
            ],
            "noerr": 0,
            "func": "if (!msg.appid.hasOwnProperty(\"id\")) {\n    if (msg.appid.hasOwnProperty(\"device\") && msg.appid.device.hasOwnProperty(\"id\")) {\n        //update an already available AppID record.\n        msg.appid.id = msg.appid.device.id;\n    } else if (msg.hasOwnProperty(\"device\") && msg.device.length === 1 && msg.device[0].hasOwnProperty(\"idp_id\")) {\n        msg.appid.id = msg.device[0].idp_id;\n    } else if (msg.hasOwnProperty(\"device\") && msg.device.length === 1 && msg.device[0].hasOwnProperty(\"_id\")) {\n        var appID = global.get(\"APPID\");\n        var device_idx = appID.devices.c_ids.indexOf(msg.device[0]._id);\n        if (device_idx >= 0) {\n            msg.appid.id = appid.devices.idp_id[device_idx];\n        }\n    } else if (msg.hasOwnProperty(\"records\") && msg.records.hasOwnProperty(\"id\")){\n        var appID = global.get(\"APPID\");\n        var device_idx = appID.devices.c_ids.indexOf(msg.records.id);\n        if (device_idx >= 0) {\n            msg.appid.id = appid.devices.idp_id[device_idx];\n        }\n    }\n}\nif (msg.appid.hasOwnProperty(\"id\")) {\n    if(!msg.iam) { msg.iam = {} }\n    msg.iam.type = \"appid\";\n    return [null,msg];\n} else {\n    return [msg,null];\n}",
            "y": 260,
            "x": 190,
            "z": "11fa1bee.eb6984",
            "type": "function",
            "id": "bb709a71.dcf858"
        },
        {
            "wires": [
                [
                    "c7d28003.2d2d4"
                ]
            ],
            "name": "Get Device",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.appid.mgmt_url = global.get(\"VCAP_APPID\").credentials.managementUrl;\nmsg.appid.headers = { \"Authorization\": msg.appid.authorization }\nmsg.method = \"GET\";\nmsg.url = msg.appid.mgmt_url + \"/cloud_directory/Users/\" + msg.appid.id;\nmsg.headers = msg.appid.headers;\nreturn msg;",
            "y": 280,
            "x": 610,
            "z": "11fa1bee.eb6984",
            "type": "function",
            "id": "d4c7f6fb.dbdcf8"
        },
        {
            "tls": "",
            "wires": [
                [
                    "3f635259.acf6de"
                ]
            ],
            "name": "APPID MGMT",
            "url": "",
            "ret": "obj",
            "id": "c7d28003.2d2d4",
            "y": 280,
            "x": 800,
            "z": "11fa1bee.eb6984",
            "type": "http request",
            "method": "use"
        },
        {
            "checkall": "false",
            "z": "11fa1bee.eb6984",
            "name": "Error?",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "200"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "48515f9.64f2ca"
                ],
                [
                    "764552a6.91ff7c"
                ]
            ],
            "propertyType": "msg",
            "y": 280,
            "x": 950,
            "property": "statusCode",
            "type": "switch",
            "id": "3f635259.acf6de"
        },
        {
            "wires": [
                [
                    "6bc2faa0.dd7ee4"
                ]
            ],
            "name": "AppID Update Device",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.appid.device = msg.payload;\ndelete msg.method;\ndelete msg.url;\ndelete msg.responseUrl;\ndelete msg.headers;\ndelete msg.statusCode;\nif (msg.appid.device.hasOwnProperty(\"entitlements\")) {\n    msg.appid.device.entitlements.forEach(function (ent,idx) {\n        if (ent.hasOwnProperty(\"bl_cloud\")) {\n            msg.appid.bl_cloud = msg.appid.device.entitlements.splice(idx,1)[0].bl_cloud\n            //node.warn({\"Found bl_cloud\": idx})\n        }\n    })\n}\nif (!msg.appid.hasOwnProperty(\"bl_cloud\")) {\n    msg.appid.bl_cloud = {\n        \"doc_type\": \"device\"\n    }\n}\nnode.warn({\"AppID Update Device\": msg})\nObject.keys(msg.appid.updates).forEach(function (key) {\n    if (key === \"c_id\") {\n        msg.appid.bl_cloud.c_id = msg.appid.updates[key];\n    }\n    if (key === \"system_type\") {\n        msg.appid.bl_cloud.system_type = msg.appid.updates[key];\n    }\n    if (key === \"email\") {\n        msg.appid.device.emails = [\n            {\n              \"value\": msg.appid.updates[key],\n              \"primary\": true\n            }\n        ];\n    }\n    if (key === \"status\" && [\"CONFIRMED\"].indexOf(msg.appid.updates[key].toUpperCase()) >= 0) {\n        msg.appid.device.status = msg.appid.updates[key]\n    }\n})\nif(!msg.appid.device.entitlements) { msg.appid.device.entitlements = []}\nmsg.appid.device.entitlements.push({\"bl_cloud\": msg.appid.bl_cloud});\nif(msg.records && msg.records.password) {\n    msg.appid.device.password = msg.records.password;\n}\nmsg.method = \"PUT\";\nmsg.url = msg.appid.mgmt_url + \"/cloud_directory/Users/\" + msg.appid.id;\nmsg.payload = msg.appid.device;\nmsg.headers = msg.appid.headers;\ndelete msg.payload.meta;\ndelete msg.payload.schemas;\ndelete msg.payload.mfaContext;\ndelete msg.payload.id;\nreturn msg;",
            "y": 260,
            "x": 1160,
            "z": "11fa1bee.eb6984",
            "type": "function",
            "id": "48515f9.64f2ca"
        },
        {
            "tls": "",
            "wires": [
                [
                    "119d24fe.a45b0b"
                ]
            ],
            "name": "APPID MGMT",
            "url": "",
            "ret": "obj",
            "id": "6bc2faa0.dd7ee4",
            "y": 260,
            "x": 1380,
            "z": "11fa1bee.eb6984",
            "type": "http request",
            "method": "use"
        },
        {
            "checkall": "true",
            "z": "11fa1bee.eb6984",
            "name": "Error?",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "200"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "34dc469d.d26f8a"
                ],
                [
                    "764552a6.91ff7c"
                ]
            ],
            "propertyType": "msg",
            "y": 260,
            "x": 1550,
            "property": "statusCode",
            "type": "switch",
            "id": "119d24fe.a45b0b"
        },
        {
            "wires": [
                [
                    "c5bb6e36.b66"
                ]
            ],
            "name": "AppID Update Device Cleanup",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.appid.device = msg.payload;\n\ndelete msg.method;\ndelete msg.url;\ndelete msg.responseUrl;\ndelete msg.headers;\ndelete msg.statusCode;\nmsg.payload = {};\n\nreturn msg",
            "y": 240,
            "x": 1790,
            "z": "11fa1bee.eb6984",
            "type": "function",
            "id": "34dc469d.d26f8a"
        },
        {
            "wires": [
                [
                    "f19f8fbb.0a107"
                ]
            ],
            "name": "AppID Error",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nif(msg.payload.schemas) {\n    msg.errors.push({\n        \"code\": 412,\n        \"message\": {\n            \"code\": msg.payload.status,\n            \"description\": msg.payload.detail,\n            \"service\": \"appid\"\n        }\n    });\n} else {\n    msg.payload.service = \"appid\";\n    msg.errors.push({\n        \"code\": msg.statusCode,\n        \"message\": msg.payload\n    });\n}\nmsg.payload = {};\nif (msg.hasOwnProperty(\"req\")) {\n    return msg;\n} else {\n    node.warn({\"AppID Update Device Error\": msg.errors[0]})\n}",
            "y": 340,
            "x": 1750,
            "z": "11fa1bee.eb6984",
            "type": "function",
            "id": "764552a6.91ff7c"
        },
        {
            "wires": [
                [
                    "f5704060.0564c"
                ]
            ],
            "name": "",
            "y": 160,
            "x": 1220,
            "z": "68197f61.7975",
            "type": "subflow:11fa1bee.eb6984",
            "id": "6f3869a9.e36078"
        },
        {
            "wires": [
                [
                    "a2a10c47.415ea"
                ]
            ],
            "name": "v1 Inputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.apic && msg.api.apic.version === \"v1\") {\n    msg.v1 = true\n    if(msg.payload.userId) {\n        msg.payload.user_id = msg.payload.userId;\n        delete msg.payload.userId;\n    }\n}\nreturn msg;",
            "y": 280,
            "x": 640,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "1604ec79.d75484"
        },
        {
            "wires": [
                [
                    "5425dc39.566a54"
                ]
            ],
            "name": "",
            "url": "/users/user/:doctor_id/files/file/settings/:file_id",
            "upload": true,
            "id": "8eef34d3.fedb98",
            "swaggerDoc": "",
            "y": 240,
            "x": 210,
            "z": "fc9978cc.27301",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "7b3d1734.bde8f8"
                ]
            ],
            "name": "v1 Inputs",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.v1 = true;\nmsg.payload.user_id = msg.req.params.doctor_id\nreturn msg;",
            "y": 240,
            "x": 480,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "5425dc39.566a54"
        },
        {
            "wires": [
                [
                    "1c01fc1f.ebd9a4"
                ]
            ],
            "name": "v1 Inputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.apic && msg.api.apic.version === \"v1\") {\n    msg.v1 = true\n}\nreturn msg;",
            "y": 680,
            "x": 640,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "ab2fdab9.55c3b8"
        },
        {
            "wires": [
                [
                    "c24a421d.d2ee2"
                ]
            ],
            "name": "v1 Outputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.v1) {\n    msg.records.delete = [\"_rev\",\"doc_type\"]\n}\nreturn msg;",
            "y": 680,
            "x": 950,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "1371888f.402167"
        },
        {
            "wires": [
                [
                    "4e07670a.ba2538"
                ]
            ],
            "name": "v1 Outputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.v1){\n    delete msg.records.returns;\n    delete msg.api.info;\n    delete msg.api.starts;\n}\nreturn msg;",
            "y": 880,
            "x": 750,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "6f85db50.5efd64"
        },
        {
            "wires": [
                [
                    "74272503.f6446c"
                ]
            ],
            "name": "v1 Inputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.apic && msg.api.apic.version === \"v1\") {\n    msg.v1 = true;\n}\nreturn msg;",
            "y": 880,
            "x": 440,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "28717099.edb24"
        },
        {
            "wires": [
                [
                    "2a03c952.1c9bc6"
                ]
            ],
            "name": "Decrypt Cloudant Objects",
            "outputs": 1,
            "noerr": 0,
            "func": "var types = [\"help_tickets\",\"help_ticket\",\"settings_files\",\"settings_file\"];\nvar objects = Object.keys(msg);\nvar process = types.filter(value => objects.includes(value))\nif(process && process.length >= 0) {\n    var cryptojs = global.get('cryptojs');\n    var key = global.get('CRYPTO_KEYS').cloudant.payload;\n    var field_list = [];\n    process.forEach(function(type) {\n        if([\"help_tickets\",\"help_ticket\"].indexOf(type) >= 0) { field_list = [\"contact_name\", \"contact_number\", \"surgeon_settings_name\"]; }\n        if([\"settings_files\",\"settings_file\"].indexOf(type) >= 0) { field_list = [\"file_name\"]; }\n        if(Array.isArray(msg[type])) {\n            msg[type].forEach(function(record,idx){\n                field_list.forEach(function(field){\n                    var efield = \"e_\" + field;\n                    if(record[efield]) {\n                        if(record[efield] !== \"\") {\n                            try {\n                                record[field] = JSON.parse(cryptojs.AES.decrypt(record[efield],key).toString(cryptojs.enc.Utf8));\n                            }\n                            catch(e){ node.warn({\"Decrypt ERROR\": e}) }\n                        } else {\n                            record[field] = \"\";\n                        }\n                        delete record[efield];\n                    }\n                });\n            });\n        } else {\n            field_list.forEach(function(field){\n                //node.warn(field)\n                var efield = \"e_\" + field;\n                if(msg[type][efield]) {\n                    if(msg[type][efield] !== \"\") {\n                        try {\n                            msg[type][field] = JSON.parse(cryptojs.AES.decrypt(msg[type][efield],key).toString(cryptojs.enc.Utf8));\n                        }\n                        catch(e){ node.warn( {\"Decrypt ERROR\": e}) }\n                    } else {\n                        msg[type][field] = \"\";\n                    }\n                    delete msg[type][efield];\n                }\n            });\n        }\n    });\n}\nreturn msg;",
            "y": 180,
            "x": 1930,
            "z": "d35dd8d5.3b2a88",
            "type": "function",
            "id": "57b9385d.9648d8"
        },
        {
            "wires": [
                [
                    "625542f7.b8bb1c"
                ]
            ],
            "name": "v1 Errors",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.v1){\n    msg.errors[0].message = msg.errors[0].message.replace(\" was not found\",\" does not exist\");\n}\nreturn msg;",
            "y": 280,
            "x": 1740,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "490b4ef.93ca3b"
        },
        {
            "wires": [
                [
                    "c6fde4a7.09f7c8"
                ]
            ],
            "name": "v1 Outputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"v1\") && msg.v1){\n    delete msg.records.returns;\n    msg.records.delete = [\"_rev\", \"doc_type\"];\n    delete msg.api.info;\n    delete msg.api.starts;\n}\nreturn msg;",
            "y": 140,
            "x": 810,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "2dbaa227.50f91e"
        },
        {
            "wires": [
                [
                    "a061b3d1.5281a"
                ],
                [
                    "2bf2afcb.87bdf"
                ]
            ],
            "name": "v1 Update",
            "outputs": 2,
            "outputLabels": [
                "error",
                "v1"
            ],
            "noerr": 0,
            "func": "if(msg.v1){\n    delete msg.errors;\n    msg.payload = msg.req.body;\n    msg.payload.user_id = msg.req.params.doctor_id;\n    return [null,msg];\n}\nreturn [msg,null];",
            "y": 160,
            "x": 1600,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "57d0e6f5.67b918"
        },
        {
            "info": "",
            "wires": [],
            "name": "[v1][DEVICES] Settings File New & Update",
            "y": 200,
            "x": 180,
            "z": "fc9978cc.27301",
            "type": "comment",
            "id": "362649ac.68f486"
        },
        {
            "wires": [
                [
                    "8df95eb8.f7ae3"
                ]
            ],
            "name": "v1 Outputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"v1\") && msg.v1){\n    delete msg.records.returns;\n    msg.records.delete = [\"_rev\", \"doc_type\"];\n    delete msg.api.info;\n    delete msg.api.starts;\n}\nreturn msg;",
            "y": 320,
            "x": 830,
            "z": "fc9978cc.27301",
            "type": "function",
            "id": "4d823372.5cde6c"
        },
        {
            "info": "",
            "wires": [],
            "name": "Cloudant User Maintenance",
            "y": 40,
            "x": 140,
            "z": "92b74b12.836b78",
            "type": "comment",
            "id": "99a47d77.27874"
        },
        {
            "info": "",
            "wires": [],
            "name": "Cloudant Device Maintenance",
            "y": 660,
            "x": 140,
            "z": "92b74b12.836b78",
            "type": "comment",
            "id": "865d7102.734ed"
        },
        {
            "wires": [
                [
                    "e034be20.f790e"
                ]
            ],
            "name": "Get Lists Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "delete msg.appid.records;\nmsg.appid.headers = {\n    \"Authorization\": msg.appid.authorization\n}\nmsg.appid.mgmt_url = global.get(\"VCAP_APPID\").credentials.managementUrl;\nmsg.method = \"GET\";\nmsg.url = msg.appid.mgmt_url + \"/cloud_directory/Users\";\nmsg.headers = msg.appid.headers;\nreturn [msg];",
            "y": 140,
            "x": 760,
            "z": "16e7afc8.9866e",
            "type": "function",
            "id": "6ae58aaf.e170d4"
        },
        {
            "tls": "",
            "wires": [
                [
                    "1b6fd1bd.1d66fe"
                ]
            ],
            "name": "APPID MGMT",
            "url": "",
            "ret": "obj",
            "id": "e034be20.f790e",
            "y": 140,
            "x": 960,
            "z": "16e7afc8.9866e",
            "type": "http request",
            "method": "use"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"api\") && msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"APPID Get Users & Devices\": msg});\n}",
            "y": 120,
            "x": 1990,
            "z": "16e7afc8.9866e",
            "type": "function",
            "id": "90649835.db6f38"
        },
        {
            "wires": [
                [
                    "8aa34922.d66d78"
                ]
            ],
            "name": "Get Lists Cleanup",
            "outputs": 1,
            "noerr": 0,
            "func": "var raw_users = msg.appid.records;\nvar users = [];\nvar user_c_ids = [];\nvar user_idp_ids = [];\nvar user_emails = [];\nvar user_phones = [];\nvar devices = [];\nvar device_c_ids = [];\nvar device_idp_ids = [];\nraw_users.forEach(function(user){\n    if (user.hasOwnProperty(\"entitlements\")) {\n        var index = user.entitlements.findIndex(function(obj, idx){ if(obj.hasOwnProperty(\"bl_cloud\")) { return true }})\n        if (index >= 0 && user.entitlements[index].hasOwnProperty(\"bl_cloud\") && user.entitlements[index].bl_cloud.hasOwnProperty(\"doc_type\")) {\n            var ent = user.entitlements[index].bl_cloud;\n            var mobile = null;\n            var voice = null;\n            if (user.hasOwnProperty(\"phoneNumbers\")) {\n                var mobile_list = user.phoneNumbers.filter(function(phone) {\n                    if (phone.type === \"mobile\") {\n                        return true\n                    }\n                })\n                if(mobile_list.length > 0) { mobile = mobile_list[0].value }\n                var voice_list = user.phoneNumbers.filter(function(phone) {\n                    if (phone.type === \"voice\") {\n                        return true\n                    }\n                })\n                if(voice_list.length > 0) { voice = voice_list[0].value }\n            }\n            if (ent.doc_type === \"user\") {\n                bl_user = {\n                   \"idp_id\": user.id,\n                   \"c_id\": ent.c_id,\n                   \"last_name\": user.name.familyName,\n                   \"first_name\": user.name.givenName,\n                   \"email\": user.emails[0].value,\n                   \"role\": ent.role\n                   //\"sub_roles\": ent.sub_roles\n               };\n               if(mobile || mobile === \"\")(bl_user.mobile_phone = mobile);\n               if(voice)(bl_user.voice_phone = voice);\n               users.push(bl_user);\n            } else if (ent.doc_type === \"device\") {\n                bl_device = {\n                   \"idp_id\": user.id,\n                   \"c_id\": ent.c_id,\n                   \"system_type\": ent.system_type,\n                   \"email\": user.emails[0].value\n               };\n               devices.push(bl_device);\n            }\n        }\n    } else {\n        if (user.userName.search(\"@\") >= 0) {\n           bl_user = {\n               \"idp_id\": user.id,\n               \"c_id\": null,\n               \"last_name\": user.name.familyName,\n               \"first_name\": user.name.givenName,\n               \"email\": user.userName\n           };\n           users.push(bl_user);\n        } else {\n            bl_device = {\n               \"idp_id\": user.id,\n               \"c_id\": user.userName\n           };\n           devices.push(bl_device);\n        }\n    }\n});\nvar sorted_users = users.sort(sortUsers);\nvar sorted_devices = devices.sort(sortDevices);\nglobal.set(\"APPID\", {\n    \"users\": {\n        \"c_ids\": sorted_users.map(a => a.c_id), //user_c_ids,\n        \"idp_ids\": sorted_users.map(a => a.idp_id), //user_idp_ids,\n        \"emails\": sorted_users.map(a => a.email), //user_emails,\n        \"phones\": sorted_users.map(a => a.mobile_phone), //user_phones,\n        \"records\": sorted_users //users\n    },\n    \"devices\": {\n        \"c_ids\": sorted_devices.map(a => a.c_id), //device_c_ids,\n        \"idp_ids\": sorted_devices.map(a => a.idp_id), //device_idp_ids,\n        \"records\": sorted_devices //devices\n    }\n})\ndelete msg.appid.records;\ndelete msg.url;\ndelete msg.method;\ndelete msg.responseUrl;\ndelete msg.statusCode;\nmsg.payload = {};\nreturn msg;\n\nfunction sortUsers(a,b) {\n    if(a.last_name<b.last_name && a.first_name<b.first_name) { return -1 } else { return 1 }\n}\nfunction sortDevices(a,b) {\n    if(a.c_id<b.c_id) { return -1 } else { return 1 }\n}",
            "y": 140,
            "x": 1530,
            "z": "16e7afc8.9866e",
            "type": "function",
            "id": "5517404b.39a56"
        },
        {
            "checkall": "true",
            "z": "16e7afc8.9866e",
            "name": "Error?",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "200"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "ac57e76.bfb4b18"
                ],
                [
                    "2b4f8acb.432876"
                ]
            ],
            "propertyType": "msg",
            "y": 140,
            "x": 1130,
            "property": "statusCode",
            "type": "switch",
            "id": "1b6fd1bd.1d66fe"
        },
        {
            "wires": [
                [
                    "b8b0e4a9.4b31c8"
                ]
            ],
            "name": "AppID Error",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": msg.statusCode,\n    \"message\": msg.payload\n})\nreturn msg;",
            "y": 180,
            "x": 1290,
            "z": "16e7afc8.9866e",
            "type": "function",
            "id": "2b4f8acb.432876"
        },
        {
            "wires": [
                [
                    "5517404b.39a56"
                ],
                [
                    "e034be20.f790e"
                ]
            ],
            "name": "More Results",
            "outputs": 2,
            "outputLabels": [
                "exit",
                "loop"
            ],
            "noerr": 0,
            "func": "if (msg.payload.hasOwnProperty(\"totalResults\") && msg.payload.hasOwnProperty(\"itemsPerPage\")) {\n    msg.appid.totalResults = msg.payload.totalResults;\n    msg.appid.itemsPerPage = msg.payload.itemsPerPage;\n    if (!msg.appid.hasOwnProperty(\"records\")) {\n        msg.appid.records = msg.payload.Resources;\n        //node.warn({\"Creating records\": msg.appid.records});\n    } else {\n        msg.appid.records = msg.appid.records.concat(msg.payload.Resources);\n        //node.warn({\"Appending records\": msg.appid.records});\n    }\n    msg.appid.totalRecords = msg.appid.records.length;\n    if (msg.appid.totalResults > msg.appid.totalRecords) {\n        msg.method = \"GET\";\n        msg.url = msg.appid.mgmt_url + \"/cloud_directory/Users?startIndex=\" + msg.appid.totalRecords;\n        msg.headers = msg.appid.headers;\n        return [null,msg];\n    } else {\n        return [msg,null];\n    }\n} else {\n    msg.appid.records = msg.payload.Resources;\n    return [msg,null];\n}",
            "y": 60,
            "x": 1290,
            "z": "16e7afc8.9866e",
            "type": "function",
            "id": "ac57e76.bfb4b18"
        },
        {
            "wires": [
                [
                    "65db318c.fa416"
                ]
            ],
            "name": "Get Cloudant Users",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"doc_types\",\n    \"selector\": {\"$and\": [{\"doc_type\":\"user\"},{\"status\":\"active\"}]},\n    \"sort\": [{\"last_name:string\":\"asc\"},{\"first_name:string\":\"asc\"}]\n}\nreturn msg;",
            "y": 220,
            "x": 570,
            "z": "16e7afc8.9866e",
            "type": "function",
            "id": "7992d4b0.b6cebc"
        },
        {
            "wires": [
                [
                    "8aa34922.d66d78"
                ]
            ],
            "name": "Get Cloudant Users Cleanup",
            "outputs": 1,
            "noerr": 0,
            "func": "global.set(\"CLOUDANT.users\",  {\n    \"c_ids\": msg.users.map(a => a._id),\n    \"idp_ids\": msg.users.map(a => a.idp_id),\n    \"emails\": msg.users.map(a => a.email),\n    \"phones\": msg.users.map(a => a.mobile_phone),\n    \"records\": msg.users\n})\nreturn msg;",
            "y": 220,
            "x": 1500,
            "z": "16e7afc8.9866e",
            "type": "function",
            "id": "62011823.4b1588"
        },
        {
            "wires": [
                [
                    "90649835.db6f38"
                ]
            ],
            "name": "Combine Databases",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"appid\")) {\n    flow.set(\"appid\", true);\n}\nif (msg.hasOwnProperty(\"users\")) {\n    flow.set(\"users\", true);\n}\nif (msg.hasOwnProperty(\"devices\")) {\n    flow.set(\"devices\", true);\n}\nif (flow.get(\"appid\") && flow.get(\"users\") && flow.get(\"devices\")) {\n    msg.end_time = Date.now();\n    node.warn({\"Update List Time\": msg.end_time- msg.start_time })\n    return msg;   \n}",
            "y": 180,
            "x": 1780,
            "z": "16e7afc8.9866e",
            "type": "function",
            "id": "8aa34922.d66d78"
        },
        {
            "wires": [
                [
                    "7992d4b0.b6cebc",
                    "d98d78cf.05ecd8",
                    "57faa6c2.bbd878"
                ]
            ],
            "name": "Start Time",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.api){msg.api = {}}\nmsg.start_time = Date.now();\nflow.set(\"appid\",false);\nflow.set(\"users\",false);\nflow.set(\"devices\",false);\nif(!msg.iam) {msg.iam = {}}\nmsg.iam.type = \"appid\";\nmsg.iam.mgmt = false;\nreturn msg;",
            "y": 180,
            "x": 350,
            "z": "16e7afc8.9866e",
            "type": "function",
            "id": "3441d3ba.93abbc"
        },
        {
            "wires": [
                [
                    "883862e7.43d98"
                ]
            ],
            "name": "Get Cloudant Devices",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"doc_types\",\n    \"selector\": {\"$and\": [{\"doc_type\":\"device\"},{\"status\":\"active\"}]},\n    \"sort\": [{\"_id:string\":\"asc\"}]\n}\nreturn msg;",
            "y": 260,
            "x": 580,
            "z": "16e7afc8.9866e",
            "type": "function",
            "id": "d98d78cf.05ecd8"
        },
        {
            "wires": [
                [
                    "8aa34922.d66d78"
                ]
            ],
            "name": "Get Cloudant Devices Cleanup",
            "outputs": 1,
            "noerr": 0,
            "func": "global.set(\"CLOUDANT.devices\", {\n    \"c_ids\": msg.devices.map(a => a._id),\n    \"idp_ids\": msg.devices.map(a => a.idp_id),\n    \"records\": msg.devices\n})\nreturn msg;",
            "y": 260,
            "x": 1490,
            "z": "16e7afc8.9866e",
            "type": "function",
            "id": "a1d59098.90c4e"
        },
        {
            "wires": [
                [
                    "62011823.4b1588"
                ]
            ],
            "name": "",
            "y": 220,
            "x": 910,
            "z": "16e7afc8.9866e",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "65db318c.fa416"
        },
        {
            "wires": [
                [
                    "a1d59098.90c4e"
                ]
            ],
            "name": "",
            "y": 260,
            "x": 910,
            "z": "16e7afc8.9866e",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "883862e7.43d98"
        },
        {
            "wires": [],
            "name": "",
            "y": 180,
            "x": 1480,
            "z": "16e7afc8.9866e",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "b8b0e4a9.4b31c8"
        },
        {
            "wires": [
                [
                    "6ae58aaf.e170d4"
                ]
            ],
            "name": "",
            "y": 140,
            "x": 560,
            "z": "16e7afc8.9866e",
            "type": "subflow:ab306e30.d0cc3",
            "id": "57faa6c2.bbd878"
        },
        {
            "wires": [
                []
            ],
            "name": "",
            "y": 260,
            "x": 690,
            "z": "57a5a054.9dfd3",
            "type": "subflow:16e7afc8.9866e",
            "id": "f7214467.2dd8f8"
        },
        {
            "repeat": "300",
            "y": 260,
            "name": "",
            "crontab": "",
            "id": "d2c0b09b.0605",
            "topic": "Update Periodically",
            "payloadType": "date",
            "wires": [
                [
                    "f7214467.2dd8f8"
                ]
            ],
            "onceDelay": 0.1,
            "x": 510,
            "z": "57a5a054.9dfd3",
            "type": "inject",
            "payload": "",
            "once": false
        },
        {
            "checkall": "false",
            "z": "e0cd8199.1ad77",
            "name": "doc_type",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "user"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "device"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "2cddf891.d4a998"
                ],
                [
                    "25a03c33.80a984"
                ]
            ],
            "propertyType": "msg",
            "y": 240,
            "x": 2800,
            "property": "records.doc_type",
            "type": "switch",
            "id": "582c62cd.3bc4ac"
        },
        {
            "wires": [
                []
            ],
            "name": "",
            "y": 260,
            "x": 3330,
            "z": "e0cd8199.1ad77",
            "type": "subflow:16e7afc8.9866e",
            "id": "25a03c33.80a984"
        },
        {
            "checkall": "false",
            "z": "68197f61.7975",
            "name": "doc_type",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "user"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "device"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "c9c3c28.d7b2f4"
                ],
                [
                    "c9c3c28.d7b2f4"
                ]
            ],
            "propertyType": "msg",
            "y": 280,
            "x": 2380,
            "property": "records.doc_type",
            "type": "switch",
            "id": "5ded422f.342e1c"
        },
        {
            "wires": [
                []
            ],
            "name": "",
            "y": 280,
            "x": 2540,
            "z": "68197f61.7975",
            "type": "subflow:16e7afc8.9866e",
            "id": "c9c3c28.d7b2f4"
        },
        {
            "wires": [
                [
                    "5761c4cd.302f7c"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID/config_file",
            "upload": true,
            "id": "3b106f0f.72393",
            "swaggerDoc": "",
            "y": 2540,
            "x": 180,
            "z": "61ffb71b.d286f",
            "type": "http in",
            "method": "post"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] Configuration File New",
            "y": 2500,
            "x": 140,
            "z": "61ffb71b.d286f",
            "type": "comment",
            "id": "a327bf7.05c104"
        },
        {
            "wires": [
                [
                    "b09379db.d13d38"
                ]
            ],
            "name": "",
            "y": 2540,
            "x": 450,
            "z": "61ffb71b.d286f",
            "type": "subflow:3962857e.44abba",
            "id": "5761c4cd.302f7c"
        },
        {
            "wires": [
                [
                    "2e8cb193.ce71ee"
                ]
            ],
            "name": "Config File Send",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Config File Send\"\n    });\nmsg.records = {\n    \"format\": \"JSON\",\n    \"returns\": [\"message\"]\n};\nmsg.inputs = {\n    \"required\": [\"file_name\", \"user_id\"],\n    \"allowed\": [],\n    \"attach_num\": 1,\n    \"user_id\": msg.payload.user_id,\n    \"device_id\": msg.req.params.deviceID\n};\nmsg.email = {\n    //\"template_type\": \"config_file\", //Disabled because we can send either an email or an attachment currently\n    \"fields\":{\n        \"device_id\": msg.inputs.device_id\n    },\n    \"files\": []\n};\nif (msg.req.files && msg.req.files.length > 0) {\n    msg.email.files.push(msg.req.files[0])\n} else if (msg.payload.file && msg.payload.file !== \"\") {\n    msg.email.files.push({\n        \"fieldname\": \"file\",\n        \"originalname\": msg.payload.file_name,\n        \"encoding\":\"7bit\",\n        \"mimetype\": \"text/csv\",\n        \"buffer\": Buffer.from(msg.payload.file, 'ascii')\n    });\n}\nif (msg.inputs.user_id && msg.inputs.user_id !== \"\") {\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"doc_type\",\n        \"selector\": {\n            \"$or\": [\n                {\"$and\": [{\"doc_type\": \"device\"}, {\"_id\": msg.inputs.device_id}]},\n                {\"$and\": [{\"doc_type\": \"user\"}, {\"_id\": msg.inputs.user_id}]},\n                ]\n        }\n    };\n}\nreturn msg;",
            "y": 2540,
            "x": 650,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "b09379db.d13d38"
        },
        {
            "wires": [
                [
                    "4da1536.864adac"
                ]
            ],
            "name": "",
            "y": 2540,
            "x": 820,
            "z": "61ffb71b.d286f",
            "type": "subflow:71afa3f9.81defc",
            "id": "2e8cb193.ce71ee"
        },
        {
            "wires": [
                [
                    "c6fcf1ee.03f4d"
                ]
            ],
            "name": "",
            "y": 2540,
            "x": 990,
            "z": "61ffb71b.d286f",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "4da1536.864adac"
        },
        {
            "wires": [],
            "name": "",
            "y": 2560,
            "x": 1640,
            "z": "61ffb71b.d286f",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "88a63d46.58735"
        },
        {
            "wires": [
                [
                    "88a63d46.58735"
                ]
            ],
            "name": "User Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"User with id: \" + msg.inputs.user_id + \" was not found.\",\n})\nreturn msg;",
            "y": 2540,
            "x": 1420,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "b8bfac69.cec45"
        },
        {
            "wires": [
                [
                    "2283c1b2.9cf50e"
                ],
                [
                    "b8bfac69.cec45"
                ],
                [
                    "98f4dd17.dcb3d"
                ]
            ],
            "name": "User & Device Found?",
            "outputs": 3,
            "outputLabels": [
                "found",
                "not user found",
                "no device found"
            ],
            "noerr": 0,
            "func": "if (msg.user && msg.user.length > 0 && msg.user[0].doc_type && msg.user[0].doc_type === \"user\") {\n    var user = msg.user[0];\n    msg.message = \"Configuration File for \" + msg.inputs.device_id + \" has been emailed to \" + user.email\n    if(msg.device && msg.device.length > 0 && msg.device[0].doc_type && msg.device[0].doc_type === \"device\") {\n        var device = msg.device[0];\n        msg.email.to = user.email;\n        msg.email.topic = device._id + \" - Configuration File\";\n        msg.email.return = true;\n        msg.email.fields = Object.assign(msg.email.fields, {\n            \"first_name\": user.fist_name,\n            \"last_name\": user.last_name,\n            \"device_id\": device._id,\n            \"system_type\": device.system_type,\n        });\n        return [msg,null,null];\n    } else { return [null,null,msg] }\n} else { return [null,msg,null] }",
            "y": 2540,
            "x": 1200,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "c6fcf1ee.03f4d"
        },
        {
            "wires": [
                [
                    "88a63d46.58735"
                ]
            ],
            "name": "Device Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Active device with id: \" + msg.inputs.device_id + \" was not found.\",\n})\nreturn msg;",
            "y": 2580,
            "x": 1430,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "98f4dd17.dcb3d"
        },
        {
            "wires": [],
            "name": "",
            "y": 2500,
            "x": 1550,
            "z": "61ffb71b.d286f",
            "type": "subflow:bc6ff87.05a2908",
            "id": "d733c2c8.29fd2"
        },
        {
            "wires": [
                [
                    "d733c2c8.29fd2"
                ]
            ],
            "name": "",
            "y": 2500,
            "x": 1400,
            "z": "61ffb71b.d286f",
            "type": "subflow:5dbd57cc.fc9bb8",
            "id": "2283c1b2.9cf50e"
        },
        {
            "y": 480,
            "property": "",
            "from": "",
            "name": "Config File",
            "rules": [
                {
                    "p": "email.template_file",
                    "tot": "str",
                    "t": "set",
                    "pt": "msg",
                    "to": "B+L_Eyetelligence_Config_File_00.html"
                }
            ],
            "reg": false,
            "to": "",
            "wires": [
                [
                    "2988c5c0.8b57aa"
                ]
            ],
            "action": "",
            "x": 750,
            "z": "5dbd57cc.fc9bb8",
            "type": "change",
            "id": "25c6e7df.230978"
        },
        {
            "wires": [
                [
                    "7d6be2d6.b16bbc"
                ],
                [
                    "3c0558a.1a4f1a8"
                ]
            ],
            "name": "DashDB Setup",
            "outputs": 2,
            "outputLabels": [
                "skip",
                "execute"
            ],
            "noerr": 0,
            "func": "if(msg.dashdb) {\n    if(!msg.iam) {\n        msg.iam = {\n            \"type\": \"dashdb\"\n        }\n    }\n    return [null,msg];\n}\nreturn [msg,null];",
            "y": 100,
            "x": 200,
            "z": "2a17b7c7.4eaf08",
            "type": "function",
            "id": "b19df8b3.0b1828"
        },
        {
            "wires": [
                [
                    "d7abc96e.231908"
                ]
            ],
            "name": "",
            "y": 220,
            "x": 400,
            "z": "2a17b7c7.4eaf08",
            "type": "subflow:ab306e30.d0cc3",
            "id": "3c0558a.1a4f1a8"
        },
        {
            "tls": "",
            "wires": [
                [
                    "d285fa93.2552e8"
                ]
            ],
            "name": "DashDB http",
            "url": "",
            "ret": "txt",
            "id": "9dc5a99.4e71c58",
            "y": 220,
            "x": 770,
            "z": "2a17b7c7.4eaf08",
            "type": "http request",
            "method": "use"
        },
        {
            "checkall": "true",
            "z": "2a17b7c7.4eaf08",
            "name": "200, 201",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "201"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "200"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 3,
            "wires": [
                [
                    "3ccc46f8.57cdfa"
                ],
                [
                    "3ccc46f8.57cdfa"
                ],
                [
                    "492fc35d.43bd1c"
                ]
            ],
            "propertyType": "msg",
            "y": 220,
            "x": 920,
            "property": "statusCode",
            "type": "switch",
            "id": "d285fa93.2552e8"
        },
        {
            "wires": [
                [
                    "7d6be2d6.b16bbc"
                ]
            ],
            "name": "DashDB Process Returns",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.dashdb.results = JSON.parse(msg.payload);\nif(msg.dashdb.return_obj) {\n    if(msg.dashdb.results[msg.dashdb.return_obj]){\n        msg.dashdb[msg.dashdb.object] = msg.dashdb.results[msg.dashdb.return_obj];\n    } else {\n        node.warn(\"DashDB return_obj: \" + msg.dashdb.return_obj + \" was not found.\")\n    }\n}\nmsg.payload = {};\ndelete msg.headers;\ndelete msg.url;\ndelete msg.statusCode;\ndelete msg.responseUrl;\ndelete msg.responseCookies;\ndelete msg.topic;\ndelete msg.method;\nreturn msg;",
            "y": 160,
            "x": 1250,
            "z": "2a17b7c7.4eaf08",
            "type": "function",
            "id": "3ccc46f8.57cdfa"
        },
        {
            "wires": [
                [
                    "9dc5a99.4e71c58"
                ]
            ],
            "name": "DashDB Request",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.dashdb.server) {\n    msg.dashdb.credentials = global.get(\"VCAP_DASHDB\").credentials;\n    msg.dashdb.server = msg.dashdb.credentials.https_url;\n}\nmsg.dashdb.url = msg.dashdb.server + msg.dashdb.request;\nmsg.url = msg.dashdb.url;\nmsg.method = msg.dashdb.method;\nif(msg.method !== \"GET\" && msg.dashdb.body) { msg.payload = msg.dashdb.body; }\nif(!msg.headers){ msg.headers = {} }\nmsg.headers.Authorization = msg.dashdb.authorization;\nreturn msg;",
            "y": 220,
            "x": 590,
            "z": "2a17b7c7.4eaf08",
            "type": "function",
            "id": "d7abc96e.231908"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"DashDB Http\": msg});\n}",
            "y": 60,
            "x": 1470,
            "z": "2a17b7c7.4eaf08",
            "type": "function",
            "id": "7d6be2d6.b16bbc"
        },
        {
            "wires": [],
            "name": "",
            "y": 240,
            "x": 1420,
            "z": "2a17b7c7.4eaf08",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "3aeec3e9.68197c"
        },
        {
            "wires": [
                [
                    "3aeec3e9.68197c"
                ]
            ],
            "name": "DashDBError",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": msg.statusCode,\n    \"message\": {\n        \"code\": msg.statusCode,\n        \"descritpion\": msg.payload,\n        \"service\": \"dashdb\"\n    }\n})\nreturn msg;",
            "y": 240,
            "x": 1220,
            "z": "2a17b7c7.4eaf08",
            "type": "function",
            "id": "492fc35d.43bd1c"
        },
        {
            "wires": [
                [
                    "66078a5b.0e1a14"
                ]
            ],
            "name": "DashDB Token Setup",
            "outputs": 1,
            "outputLabels": [
                "error"
            ],
            "noerr": 0,
            "func": "msg.iam.url = msg.iam.credentials.https_url + \"/dbapi/v3/auth/tokens\";\nmsg.iam.headers = {};\nmsg.iam.body = {\n\t\"userid\": msg.iam.credentials.username,\n\t\"password\": msg.iam.credentials.password\n}\nmsg.headers = msg.iam.headers;\nmsg.url = msg.iam.url;\nmsg.payload = msg.iam.body;\nreturn msg;",
            "y": 300,
            "x": 600,
            "z": "ab306e30.d0cc3",
            "type": "function",
            "id": "ee07c62.23f4238"
        },
        {
            "tls": "",
            "wires": [
                [
                    "81c91dd2.dbf5e"
                ]
            ],
            "name": "POST",
            "url": "",
            "ret": "obj",
            "id": "66078a5b.0e1a14",
            "y": 300,
            "x": 770,
            "z": "ab306e30.d0cc3",
            "type": "http request",
            "method": "POST"
        },
        {
            "wires": [
                [
                    "666acb09.36f164"
                ],
                [
                    "1f349275.1d59ce"
                ]
            ],
            "name": "DashDB Auth Token",
            "outputs": 2,
            "outputLabels": [
                "ok",
                "error"
            ],
            "noerr": 0,
            "func": "if (msg.statusCode === 200) {\n    msg.iam.token = {\n        \"access_token\": msg.payload.token,\n        \"token_type\":\"Bearer\",\n        \"expires_in\":3600,\n        \"expiration\": Math.round(3600 + Date.now()/1000)\n    }\n    msg.payload = {};\n    delete msg.headers;\n    delete msg.url;\n    delete msg.statusCode;\n    delete msg.responseUrl;\n    delete msg.responseCookies;\n    delete msg.topic;\n    return [msg,null];\n} else {\n    return [null,msg]\n}",
            "y": 300,
            "x": 940,
            "z": "ab306e30.d0cc3",
            "type": "function",
            "id": "81c91dd2.dbf5e"
        },
        {
            "wires": [
                [
                    "3ec16871.b58648"
                ]
            ],
            "name": "DashDB SQL Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.dashdb.request = \"/dbapi/v3/sql_jobs\";\nmsg.dashdb.method = \"POST\";\ndelete msg.dashdb.return_obj\nmsg.dashdb.body = {\n    \"commands\": msg.dashdb.commands,\n    \"limit\": msg.dashdb.limit,\n    \"separator\": \";\",\n\t\"stop_on_error\": false\n};\nreturn msg;",
            "y": 120,
            "x": 460,
            "z": "5b840ccd.bdbfc4",
            "type": "function",
            "id": "d6bea762.f55398"
        },
        {
            "wires": [
                [
                    "2f8e1b99.2fa454"
                ]
            ],
            "name": "",
            "y": 120,
            "x": 670,
            "z": "5b840ccd.bdbfc4",
            "type": "subflow:2a17b7c7.4eaf08",
            "id": "3ec16871.b58648"
        },
        {
            "wires": [
                [
                    "e3600962.e33318"
                ]
            ],
            "name": "",
            "y": 120,
            "x": 1290,
            "z": "5b840ccd.bdbfc4",
            "type": "subflow:2a17b7c7.4eaf08",
            "id": "85f0bdf0.833a2"
        },
        {
            "wires": [
                [
                    "35652eff.a95602"
                ]
            ],
            "name": "SLQ Loop out",
            "links": [
                "4548938f.17c7cc"
            ],
            "y": 180,
            "x": 915,
            "z": "5b840ccd.bdbfc4",
            "type": "link in",
            "id": "796e77a.4747988"
        },
        {
            "wires": [],
            "name": "SQL Loop in",
            "links": [
                "796e77a.4747988"
            ],
            "y": 180,
            "x": 1695,
            "z": "5b840ccd.bdbfc4",
            "type": "link out",
            "id": "4548938f.17c7cc"
        },
        {
            "wires": [
                [
                    "85f0bdf0.833a2"
                ]
            ],
            "name": "DashDB SQL Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.dashdb.request = \"/dbapi/v3/sql_jobs/\" + msg.dashdb.job_id;\nmsg.dashdb.method = \"GET\";\ndelete msg.dashdb.results;\nreturn msg;",
            "y": 120,
            "x": 1100,
            "z": "5b840ccd.bdbfc4",
            "type": "function",
            "id": "35652eff.a95602"
        },
        {
            "wires": [
                [
                    "35652eff.a95602"
                ]
            ],
            "name": "DashDB Get job_id",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.dashdb.job_id = msg.dashdb.results.id;\ndelete msg.dashdb.rows \nreturn msg;",
            "y": 120,
            "x": 870,
            "z": "5b840ccd.bdbfc4",
            "type": "function",
            "id": "2f8e1b99.2fa454"
        },
        {
            "wires": [
                [
                    "b3baa402.ee4498"
                ],
                [
                    "4548938f.17c7cc"
                ],
                [
                    "cfa6a12b.afef7"
                ]
            ],
            "name": "DashDB Get all Records",
            "outputs": 3,
            "outputLabels": [
                "done",
                "loop",
                "error"
            ],
            "noerr": 0,
            "func": "// only supports one SQL statement at the time for now.\nif(msg.dashdb.results && msg.dashdb.results.results && msg.dashdb.results.results.length > 0) {\n    var sql_req = msg.dashdb.results.results[0];\n    sql_req.records = [];\n    if(sql_req.rows) {\n        sql_req.rows.forEach(function(row) {\n            var record = {};\n            sql_req.columns.forEach(function(col,idx) {\n                var type = sql_req.columns_type[idx];\n                switch(type) {\n                    case \"number\":\n                        record[col] = parseInt(row[idx]);\n                        break;\n                    case \"time\":\n                        record[col] = Date.parse(row[idx] + \"GMT\");\n                        break;\n                    default:\n                        record[col] = row[idx].trim();\n                }\n            });\n            sql_req.records.push(record);\n        });\n        msg.dashdb.sql_req = sql_req;\n    } else {\n        msg.dashdb.error = {\n            \"message\": sql_req.error,\n            \"code\": 400\n        }\n        return [null,null,msg];\n    }\n}\nif(!msg.dashdb.records) {\n    if(!msg.dashdb.sql_req) {msg.dashdb.sql_req = {}}\n    msg.dashdb.records = msg.dashdb.sql_req.records;\n} else {\n    msg.dashdb.records = msg.dashdb.records.concat(msg.dashdb.sql_req.records);\n}\nif(msg.dashdb.results.status === \"completed\") {\n    return [msg,null,null];\n} else {\n    return [null,msg,null];\n}",
            "y": 120,
            "x": 1490,
            "z": "5b840ccd.bdbfc4",
            "type": "function",
            "id": "e3600962.e33318"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"DashDB SQL\": msg});\n}",
            "y": 60,
            "x": 1970,
            "z": "5b840ccd.bdbfc4",
            "type": "function",
            "id": "21a8fbbb.847ea4"
        },
        {
            "wires": [
                [
                    "21a8fbbb.847ea4"
                ]
            ],
            "name": "DashDB Object",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.dashdb.object) {\n    msg[msg.dashdb.object] = msg.dashdb.records;\n}\nreturn msg;",
            "y": 100,
            "x": 1760,
            "z": "5b840ccd.bdbfc4",
            "type": "function",
            "id": "b3baa402.ee4498"
        },
        {
            "wires": [],
            "name": "",
            "y": 240,
            "x": 1960,
            "z": "5b840ccd.bdbfc4",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "bafd19b1.437e68"
        },
        {
            "wires": [
                [
                    "bafd19b1.437e68"
                ]
            ],
            "name": "DashDBError",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": msg.dashdb.error.code,\n    \"message\": {\n        \"code\": msg.dashdb.error.code,\n        \"description\": msg.dashdb.error.message,\n        \"service\": \"dashdb\"\n    }\n})\nreturn msg;",
            "y": 240,
            "x": 1760,
            "z": "5b840ccd.bdbfc4",
            "type": "function",
            "id": "cfa6a12b.afef7"
        },
        {
            "wires": [
                [
                    "d9d0d059.14d15"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID/change_password",
            "upload": false,
            "id": "48c27508.d3388c",
            "swaggerDoc": "",
            "y": 2640,
            "x": 200,
            "z": "61ffb71b.d286f",
            "type": "http in",
            "method": "put"
        },
        {
            "info": "",
            "wires": [],
            "name": "[CN] Device Change Password",
            "y": 2600,
            "x": 150,
            "z": "61ffb71b.d286f",
            "type": "comment",
            "id": "ed153f45.7aff"
        },
        {
            "wires": [
                [
                    "273cfd40.497202"
                ]
            ],
            "name": "",
            "y": 2640,
            "x": 530,
            "z": "61ffb71b.d286f",
            "type": "subflow:3962857e.44abba",
            "id": "d9d0d059.14d15"
        },
        {
            "wires": [
                [
                    "3bab4bb6.9fa674"
                ]
            ],
            "name": "Device Change Password",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Device Change Password\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\",\"status\",\"password\"],\n    \"doc_type\": \"device\",\n    \"object\": \"device\",\n    \"format\": \"JSON\",\n    \"returns\": [\"device\"],\n    \"id\": msg.req.params.deviceID\n};\nmsg.inputs = {\n    \"allowed\": [\"password\"],\n    \"required\": [],\n    \"device_id\": msg.req.params.deviceID\n};\nreturn msg;",
            "y": 2640,
            "x": 750,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "273cfd40.497202"
        },
        {
            "wires": [
                [
                    "756f1ced.204254"
                ]
            ],
            "name": "",
            "y": 2640,
            "x": 940,
            "z": "61ffb71b.d286f",
            "type": "subflow:71afa3f9.81defc",
            "id": "3bab4bb6.9fa674"
        },
        {
            "wires": [
                [
                    "9a9cd844.3789c8"
                ]
            ],
            "name": "",
            "y": 2640,
            "x": 1330,
            "z": "61ffb71b.d286f",
            "type": "subflow:68197f61.7975",
            "id": "80dedd39.11ed"
        },
        {
            "wires": [
                [
                    "6f074921.907c28"
                ]
            ],
            "name": "",
            "y": 2640,
            "x": 1530,
            "z": "61ffb71b.d286f",
            "type": "subflow:313bd1d3.01c06e",
            "id": "9a9cd844.3789c8"
        },
        {
            "wires": [],
            "name": "",
            "y": 2640,
            "x": 1950,
            "z": "61ffb71b.d286f",
            "type": "subflow:bc6ff87.05a2908",
            "id": "6dd17aef.b913a4"
        },
        {
            "wires": [
                [
                    "80dedd39.11ed"
                ]
            ],
            "name": "Generate Password",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.inputs.password) {\n    var genPwd = global.get(\"genpwd\");\n    msg.records.password = genPwd.generate(global.get(\"PWD_GEN\"))\n}\nreturn msg;",
            "y": 2640,
            "x": 1110,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "756f1ced.204254"
        },
        {
            "wires": [
                [
                    "6dd17aef.b913a4"
                ]
            ],
            "name": "add clientId & authToken",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.device[0].mqtt_clientId = msg.device[0]._id;\nmsg.device[0].mqtt_authToken = msg.records.password;\nreturn msg;",
            "y": 2640,
            "x": 1750,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "6f074921.907c28"
        },
        {
            "wires": [
                [
                    "95e1bc30.a8423"
                ]
            ],
            "name": "",
            "y": 940,
            "x": 630,
            "z": "c1ec6ee7.981a18",
            "type": "subflow:3962857e.44abba",
            "id": "dc53ae32.cc78b"
        },
        {
            "wires": [
                [
                    "6d0d2e62.f103f"
                ]
            ],
            "name": "Sim Status",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Sim Status\"\n    });\nmsg.records = {\n    \"object\": \"sim\",\n    \"format\": \"JSON\",\n    \"returns\": [\"sim\"]\n};\nmsg.inputs = {\n    \"allowed\": [],\n    \"required\": [\"sim_iccid\"]\n};\nmsg.sim_provider = {\n    \"req_type\": \"status\",\n    \"body\": msg.payload\n};\nif (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }\nif(msg.payload.details && msg.payload.details) { msg.sim_provider.details = true }\nreturn msg;",
            "y": 940,
            "x": 950,
            "z": "c1ec6ee7.981a18",
            "type": "function",
            "id": "24b7e3ce.e41b4c"
        },
        {
            "wires": [
                [
                    "a0a5577b.8dd158"
                ]
            ],
            "name": "",
            "y": 740,
            "x": 1440,
            "z": "c1ec6ee7.981a18",
            "type": "subflow:71afa3f9.81defc",
            "id": "22b7a3b5.846cbc"
        },
        {
            "wires": [],
            "name": "",
            "y": 740,
            "x": 1810,
            "z": "c1ec6ee7.981a18",
            "type": "subflow:bc6ff87.05a2908",
            "id": "761ba67.0445c58"
        },
        {
            "wires": [
                [
                    "22b7a3b5.846cbc"
                ]
            ],
            "name": "v1 Outputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.v1){\n    delete msg.records.returns;\n    delete msg.api.info;\n    delete msg.api.stats;\n}\nreturn msg;",
            "y": 940,
            "x": 1110,
            "z": "c1ec6ee7.981a18",
            "type": "function",
            "id": "6d0d2e62.f103f"
        },
        {
            "wires": [
                [],
                [
                    "9bd3da67.c0f8d8"
                ],
                [
                    "7112174f.7e5398"
                ]
            ],
            "name": "Sim Setup",
            "outputs": 3,
            "outputLabels": [
                "skip",
                "exec",
                "error"
            ],
            "noerr": 0,
            "func": "if(msg.sim_provider && msg.sim_provider.req_type) {\n    if(!msg.sim_provider.object) { msg.sim_provider.object = msg.records.object }\n    if(msg.sim_provider.req_type === \"plan_codes\") {\n        return [null,msg,null];\n    }\n    var found = false\n    var prefixs = global.get(\"VCAP_KORE\").credentials.iccid_prefixs\n    prefixs.forEach(function(prefix){\n        r_prefix = RegExp(\"^\" + prefix,\"g\")\n        if(r_prefix && r_prefix.test(msg.sim_provider.sim_iccid)) {\n            msg.sim_provider.provider = \"kore\";\n            found = true;\n        }\n    })\n    if(found) { return [null,msg,null]; } \n    var prefixs = global.get(\"VCAP_WEBBING\").credentials.iccid_prefixs\n    prefixs.forEach(function(prefix){\n        r_prefix = RegExp(\"^\" + prefix,\"g\")\n        if(r_prefix && r_prefix.test(msg.sim_provider.sim_iccid)) {\n            msg.sim_provider.provider = \"webbing\";\n            found = true;\n        }\n    })\n    if(found) {\n        return [null,msg,null];\n    } else {\n        return [null,null,msg];\n    }\n} else {\n    return [msg,null,null];\n}",
            "y": 160,
            "x": 210,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "5425652f.98238c"
        },
        {
            "wires": [
                [
                    "c8864c49.7a1bc"
                ]
            ],
            "name": "Sim Cleanup",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.sim_provider.hasOwnProperty(\"object\") && msg.sim_provider.hasOwnProperty(\"delete\")){\n    msg[msg.sim_provider.object].forEach(function(record) {\n        msg.sim_provider.delete.forEach(function(propertyName){\n            if(record.hasOwnProperty(propertyName)){\n                delete record[propertyName];\n            }\n        });\n    });\n}\nreturn msg;",
            "y": 440,
            "x": 2410,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "b8d8f269.e59ea"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"Sim Http\": msg});\n}",
            "y": 80,
            "x": 2610,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "c8864c49.7a1bc"
        },
        {
            "wires": [
                [
                    "b32e3a8f.3bed18"
                ]
            ],
            "name": "",
            "y": 340,
            "x": 1730,
            "z": "80a169dd.f18e78",
            "type": "subflow:da740a9b.08ed88",
            "id": "7530c7a9.0d0418"
        },
        {
            "checkall": "true",
            "z": "80a169dd.f18e78",
            "name": "Req Type",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "status"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "activate_to_state"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "reactivate"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "deactivate"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "update_plan_code"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "update_info"
                }
            ],
            "outputs": 6,
            "wires": [
                [
                    "b8ce5be3.4265f8"
                ],
                [
                    "c2fbf759.d3b4b8"
                ],
                [
                    "89d6a683.9ddcb8"
                ],
                [
                    "8f0826f5.8266b8"
                ],
                [
                    "24c2f1e5.67744e"
                ],
                [
                    "639c3142.77b7d"
                ]
            ],
            "propertyType": "msg",
            "y": 420,
            "x": 900,
            "property": "sim_provider.req_type",
            "type": "switch",
            "id": "bd01393.d4388c8"
        },
        {
            "wires": [
                [
                    "7530c7a9.0d0418"
                ]
            ],
            "name": "KORE Sim Status",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.kore = {\n    \"request\": \"queryDevice\",\n    \"return_obj\": \"d\",\n    \"object\": msg.sim_provider.object,\n    \"body\": {\n        \"deviceNumber\": msg.sim_provider.sim_iccid\n    }\n};\ndelete msg.kore_response;\nreturn msg;",
            "y": 340,
            "x": 1130,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "b8ce5be3.4265f8"
        },
        {
            "wires": [
                [
                    "1923b463.2eb3bc"
                ]
            ],
            "name": "KORE Plan Codes",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.records.delete = [\"__type\"]\nmsg.kore = {\n    \"request\": \"queryPlanCodesForNextPeriod\",\n    \"return_obj\": \"items\",\n    \"object\": \"plan_codes\"\n};\nreturn msg;",
            "y": 640,
            "x": 630,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "a440b346.1488c"
        },
        {
            "wires": [],
            "name": "KORE Status In",
            "links": [
                "c58e35ff.b158f8"
            ],
            "y": 440,
            "x": 1955,
            "z": "80a169dd.f18e78",
            "type": "link out",
            "id": "e7a31a69.00cee8"
        },
        {
            "wires": [
                [
                    "b8ce5be3.4265f8"
                ]
            ],
            "name": "KORE Status Out",
            "links": [
                "e7a31a69.00cee8"
            ],
            "y": 300,
            "x": 995,
            "z": "80a169dd.f18e78",
            "type": "link in",
            "id": "c58e35ff.b158f8"
        },
        {
            "wires": [
                [
                    "5d8e2025.d091d"
                ]
            ],
            "name": "KORE Activate To State",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.message = \"SIM Card \" + msg.sim_provider.sim_iccid + \" was successfully activated to \" + msg.sim_provider.body.status + \".\"\nmsg.kore = {\n    \"request\": \"activateToState\",\n    \"return_obj\": \"d\",\n    \"object\": \"kore_response\",\n    \"body\": {\n        \"deviceNumber\": msg.sim_provider.sim_iccid,\n        \"EAPCode\": msg.sim_provider.body.EAPCode || \"EAP039182036\",\n        \"toState\": msg.sim_provider.body.status\n    }\n};\nreturn msg;",
            "y": 380,
            "x": 1150,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "c2fbf759.d3b4b8"
        },
        {
            "wires": [
                [
                    "e7a31a69.00cee8"
                ]
            ],
            "name": "",
            "y": 440,
            "x": 1830,
            "z": "80a169dd.f18e78",
            "type": "subflow:da740a9b.08ed88",
            "id": "5d8e2025.d091d"
        },
        {
            "wires": [
                [
                    "bd01393.d4388c8"
                ]
            ],
            "name": "KORE Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "return msg;",
            "y": 420,
            "x": 730,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "b09af5f4.8a19e8"
        },
        {
            "wires": [
                [
                    "5d8e2025.d091d"
                ]
            ],
            "name": "KORE Reactivate",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.message = \"SIM Card \" + msg.sim_provider.sim_iccid + \" was successfully reactivated.\"\nmsg.kore = {\n    \"request\": \"reactivateDevice\",\n    \"return_obj\": \"d\",\n    \"object\": \"kore_response\",\n    \"body\": {\n        \"deviceNumber\": msg.sim_provider.sim_iccid\n    }\n};\nreturn msg;",
            "y": 420,
            "x": 1130,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "89d6a683.9ddcb8"
        },
        {
            "wires": [
                [
                    "adf136ef.284758"
                ]
            ],
            "name": "KORE Update Custom Info",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.message = \"Sim Card \" + msg.sim_provider.sim_iccid + \" custom information was successfully updated.\"\nmsg.kore = {\n    \"request\": \"queryDevice\",\n    \"return_obj\": \"d\",\n    \"object\": \"sim_kore\",\n    \"body\": {\n        \"deviceNumber\": msg.sim_provider.sim_iccid\n    }\n};\nmsg.sim_provider.allowed = [\"customField1\", \"customField2\", \"customField3\", \"customField4\", \"customField5\", \"customField6\"];\nmsg.sim_provider.details = true;\nreturn msg;",
            "y": 540,
            "x": 1160,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "639c3142.77b7d"
        },
        {
            "wires": [
                [
                    "5d8e2025.d091d"
                ]
            ],
            "name": "KORE Deactivate",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.message = \"SIM Card \" + msg.sim_provider.sim_iccid + \" was successfully deactivated.\"\nmsg.kore = {\n    \"request\": \"deactivateDevice\",\n    \"return_obj\": \"d\",\n    \"object\": \"kore_response\",\n    \"body\": {\n        \"deviceNumber\": msg.sim_provider.sim_iccid,\n        \"flagScrap\":\"false\"\n    }\n};\nreturn msg;",
            "y": 460,
            "x": 1130,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "8f0826f5.8266b8"
        },
        {
            "wires": [
                [
                    "5d8e2025.d091d"
                ]
            ],
            "name": "Update Custom Info",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.kore = {\n    \"request\": \"modifyDeviceCustomInfo\",\n    \"return_obj\": \"d\",\n    \"object\": \"kore_response\",\n    \"body\": {\n        \"deviceNumber\": msg.sim_provider.sim_iccid\n    }\n};\nmsg.sim_provider.allowed.forEach(function(field){\n   if(msg.sim_kore[0].hasOwnProperty(field)){\n       msg.kore.body[field] = msg.sim_kore[0][field]\n   }\n});\nmsg.sim_provider.allowed.forEach(function(field){\n   if(msg.sim_provider.body.hasOwnProperty(field)){\n       msg.kore.body[field] = msg.sim_provider.body[field]\n   }\n});\ndelete msg.sim_kore;\nreturn msg;",
            "y": 540,
            "x": 1600,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "af11c673.2b2728"
        },
        {
            "wires": [
                [
                    "af11c673.2b2728"
                ]
            ],
            "name": "",
            "y": 540,
            "x": 1390,
            "z": "80a169dd.f18e78",
            "type": "subflow:da740a9b.08ed88",
            "id": "adf136ef.284758"
        },
        {
            "wires": [
                [
                    "5d8e2025.d091d"
                ]
            ],
            "name": "KORE Update Plan Code",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.message = \"SIM Card \" +  msg.sim_provider.sim_iccid + \" was successfully updated to use plan code \" + msg.sim_provider.body.plan_code + \".\"\nmsg.kore = {\n    \"request\": \"modifyDevicePlanForNextPeriod\",\n    \"return_obj\": \"d\",\n    \"object\": \"kore_response\",\n    \"body\": {\n        \"deviceNumber\": msg.sim_provider.sim_iccid,\n        \"planCode\": msg.sim_provider.body.plan_code\n    }\n};\nreturn msg;",
            "y": 500,
            "x": 1150,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "24c2f1e5.67744e"
        },
        {
            "checkall": "true",
            "z": "80a169dd.f18e78",
            "name": "Provider",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "kore"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "webbing"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "b09af5f4.8a19e8"
                ],
                [
                    "cf5c0d83.1b583"
                ]
            ],
            "propertyType": "msg",
            "y": 720,
            "x": 540,
            "property": "sim_provider.provider",
            "type": "switch",
            "id": "9a71a509.52c068"
        },
        {
            "checkall": "true",
            "z": "80a169dd.f18e78",
            "name": "Req Type",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "status"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "activate_to_state"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "reactivate"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "deactivate"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "update_plan_code"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "update_info"
                }
            ],
            "outputs": 6,
            "wires": [
                [
                    "51a47300.b44cac"
                ],
                [
                    "4f92ddb3.e61014"
                ],
                [
                    "7b3afde7.1218a4"
                ],
                [
                    "c76cb1b2.b1fc1"
                ],
                [
                    "494e0fcb.14775"
                ],
                [
                    "5765c7fa.44a5b8"
                ]
            ],
            "propertyType": "msg",
            "y": 840,
            "x": 900,
            "property": "sim_provider.req_type",
            "type": "switch",
            "id": "d941b76a.e36ed8"
        },
        {
            "wires": [
                [
                    "d941b76a.e36ed8"
                ]
            ],
            "name": "Webbing Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "//node.warn({\"Webbing Branch\": msg})\nreturn msg;",
            "y": 840,
            "x": 720,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "cf5c0d83.1b583"
        },
        {
            "wires": [
                [
                    "24b7e3ce.e41b4c"
                ]
            ],
            "name": "v1 Inputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.apic && msg.api.apic.version === \"v1\") {\n    if(msg.payload.hasOwnProperty(\"deviceNumber\")){\n        msg.payload.sim_iccid = msg.payload.deviceNumber;\n        msg.req.body.sim_iccid = msg.req.body.deviceNumber;\n        delete msg.payload.deviceNumber;\n        delete msg.req.body.deviceNumber;\n    }\n    msg.v1 = true\n}\nreturn msg;",
            "y": 940,
            "x": 800,
            "z": "c1ec6ee7.981a18",
            "type": "function",
            "id": "95e1bc30.a8423"
        },
        {
            "checkall": "true",
            "z": "80a169dd.f18e78",
            "name": "Req Type",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "plan_codes"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "a440b346.1488c"
                ],
                [
                    "9a71a509.52c068"
                ]
            ],
            "propertyType": "msg",
            "y": 660,
            "x": 380,
            "property": "sim_provider.req_type",
            "type": "switch",
            "id": "9bd3da67.c0f8d8"
        },
        {
            "wires": [
                [
                    "9ab718a2.5c8d98"
                ]
            ],
            "name": "",
            "y": 640,
            "x": 810,
            "z": "80a169dd.f18e78",
            "type": "subflow:da740a9b.08ed88",
            "id": "1923b463.2eb3bc"
        },
        {
            "y": 520,
            "property": "",
            "from": "",
            "name": "Device Birth",
            "rules": [
                {
                    "p": "email.template_file",
                    "tot": "str",
                    "t": "set",
                    "pt": "msg",
                    "to": "B+L_Eyetelligence_Device_Birth_00.html"
                }
            ],
            "reg": false,
            "to": "",
            "wires": [
                [
                    "2988c5c0.8b57aa"
                ]
            ],
            "action": "",
            "x": 750,
            "z": "5dbd57cc.fc9bb8",
            "type": "change",
            "id": "521ce329.1a21dc"
        },
        {
            "y": 560,
            "property": "",
            "from": "",
            "name": "Device Change",
            "rules": [
                {
                    "p": "email.template_file",
                    "tot": "str",
                    "t": "set",
                    "pt": "msg",
                    "to": "B+L_Eyetelligence_Device_Change_00.html"
                }
            ],
            "reg": false,
            "to": "",
            "wires": [
                [
                    "2988c5c0.8b57aa"
                ]
            ],
            "action": "",
            "x": 760,
            "z": "5dbd57cc.fc9bb8",
            "type": "change",
            "id": "11c00066.cca8b"
        },
        {
            "wires": [
                [
                    "bde75af7.2d5698"
                ]
            ],
            "name": "APP ID Setup",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.url = msg.appid.server + \"/token\";\n//msg.payload = msg.inputs.body;\nif (msg.payload.hasOwnProperty(\"email\")) { msg.payload.email = msg.payload.email.toLowerCase() }\nmsg.headers = {\n    \"authorization\": msg.req.headers.authorization\n}\nmsg.method = \"POST\"\nreturn msg;",
            "y": 760,
            "x": 780,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "aed2ad76.87b3e"
        },
        {
            "wires": [
                [
                    "d6bea762.f55398"
                ]
            ],
            "name": "SQL SELECT Statement",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.dashdb && msg.dashdb.select){\n    if(msg.hasOwnProperty(\"filters\") && msg.filters.hasOwnProperty(\"options\")){\n        if(msg.hasOwnProperty(\"dashdb\")) {\n            var andFilters = [];\n            var addFilter = \"\";\n            if(msg.filters.hasOwnProperty(\"values\")) {\n                Object.keys(msg.filters.values).forEach(function(propertyName){\n                    addFilter = propertyName + \" = \\'\" + msg.filters.values[propertyName] + \"\\'\";\n                    andFilters.push(addFilter);\n                });\n            }\n            if(msg.filters.hasOwnProperty(\"arrays\")) {\n                Object.keys(msg.filters.arrays).forEach(function(propertyName){\n                    addFilter = propertyName + \" IN (\\'\" + msg.filters.arrays[propertyName].join(\"\\',\\'\") +\"\\')\";\n                    andFilters.push(addFilter);\n                });\n            }\n            if(msg.filters.hasOwnProperty(\"dates\")) {\n                var date_columns = [];\n                var date_filters = [];\n                Object.keys(msg.filters.dates).forEach(function(rangePropertyName){\n                    var dateValue = new Date(parseInt(msg.filters.dates[rangePropertyName]));\n                    var dateString = dateValue.getFullYear() + \"-\" + ('0' + (dateValue.getMonth()+1)).slice(-2) + \"-\" + ('0' + dateValue.getDate()).slice(-2) + \" \" + ('0' + dateValue.getHours()).slice(-2) + \":\" + ('0' + dateValue.getMinutes()).slice(-2) + \":\" + ('0' + dateValue.getSeconds()).slice(-2) + \".\" + dateValue.getMilliseconds();\n                    var propertyName = rangePropertyName.substring(0,rangePropertyName.indexOf(\"_range\",0));\n                    if(rangePropertyName.includes(\"_range_begin\")){\n                         addFilter = \"(\" + propertyName + \" >= \\'\" + dateString + \"\\')\";\n                    } else{\n                        addFilter = \"(\" + propertyName + \" <= \\'\" + dateString + \"\\')\";\n                    }\n                    andFilters.push(addFilter);\n                });\n            }\n            if(msg.filters.hasOwnProperty(\"partial\")) {\n            Object.keys(msg.filters.partial).forEach(function(partialPropertyName){\n                    var partialValue = msg.filters.partial[partialPropertyName];\n                    var propertyName = partialPropertyName.substring(0,partialPropertyName.indexOf(\"_partial\",0));\n                    addFilter = propertyName + \" LIKE \" + partialValue + \"%\";\n                    andFilters.push(addFilter);\n                });\n            }\n            if(andFilters.length >0) {\n                msg.dashdb.where = \"WHERE \" + andFilters.join(\" AND \");\n            } else {\n                msg.dashdb.where = \"\";\n            }\n        }\n    }\n    msg.dashdb.commands = msg.dashdb.select;\n    if(msg.dashdb.where) { msg.dashdb.commands = msg.dashdb.commands + \" \" + msg.dashdb.where; }\n    if(msg.dashdb.sort) { msg.dashdb.commands = msg.dashdb.commands + \" \" + msg.dashdb.sort; }\n}\nreturn msg;\n\n",
            "y": 120,
            "x": 210,
            "z": "5b840ccd.bdbfc4",
            "type": "function",
            "id": "8c5f15d.8f4dce8"
        },
        {
            "wires": [
                [
                    "ca46ff2a.7ec5e"
                ],
                [
                    "eba1fe6d.2e37b"
                ],
                [
                    "7dde1afa.d404f4"
                ]
            ],
            "name": "Check Payload Encryption",
            "outputs": 3,
            "outputLabels": [
                "skip",
                "encrypted",
                "not encrypted"
            ],
            "noerr": 0,
            "func": "if (msg.payload) {\n    if (msg.payload.ciphertext) {\n        if (IsJsonString(msg.payload.ciphertext)) {\n            node.warn({\"Expected Enc - Body - Not Encrypted\": msg})\n            msg.payload = {};\n            return [null,null,msg]\n        } else {\n            node.warn({\"Expected Enc - Body - Encrypted\": msg})\n            msg.encryption = {\n                \"ciphertext\": msg.payload\n            }\n            msg.payload = {};\n            return [null,msg,null]\n        }\n    } else {\n        if (Object.keys(msg.payload).length > 0) {\n            node.warn({\"Expected Enc - Body - Not Encrypted\": msg})\n            msg.payload = {};\n            return [null,null,msg]\n        }\n    }\n}\nreturn [msg,null,null]\n\nfunction IsJsonString(str) {\ntry {\n    return (str.indexOf('{') >= 0);\n  } catch (e) {\n    return false;\n  }\n}",
            "y": 120,
            "x": 420,
            "z": "f7b5cbff.598508",
            "type": "function",
            "id": "af682a75.b6daf8"
        },
        {
            "wires": [
                [
                    "ca46ff2a.7ec5e"
                ],
                [
                    "eb57155f.526f18"
                ],
                [
                    "dc9c6289.c9cd5"
                ]
            ],
            "name": "Decrypt",
            "outputs": 3,
            "outputLabels": [
                "decrypted",
                "failed",
                "not available"
            ],
            "noerr": 0,
            "func": "if (msg.encryption && msg.encryptionciphertext) {\n    var cryptojs = global.get('cryptojs');\n    var encryption_available = global.get(\"CRYPTO_KEYS\");\n    if(encryption_available && encryption_available.com) {\n        if (!msg.encryption.key) {msg.encryption.key = global.get(\"CRYPTO_KEYS\").com.payload}\n        try {\n            msg.encryption.decrypted = JSON.parse(cryptojs.AES.decrypt(msg.encryption.ciphertext, msg.encryption.key).toString(cryptojs.enc.Utf8));\n            msg.payload = msg.encryption.decrypted\n            return [msg,null,null];\n        }\n        catch(error) {\n            return [null,msg,null]\n        }\n    } else {\n        node.warn(\"WARNING [Com Decryption]: On this setup Communication Decryption is NOT available\")\n        return [null,null,msg]\n    }\n}\nreturn [msg,null,null];",
            "y": 140,
            "x": 700,
            "z": "f7b5cbff.598508",
            "type": "function",
            "id": "eba1fe6d.2e37b"
        },
        {
            "wires": [
                [
                    "f50f5ea3.bbe9d"
                ]
            ],
            "name": "Decryption Failed",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 403,\n    \"message\": \"Decryption - Failed: cypertext could not be decrypted\",\n})\nreturn msg;",
            "y": 200,
            "x": 930,
            "z": "f7b5cbff.598508",
            "type": "function",
            "id": "eb57155f.526f18"
        },
        {
            "wires": [
                [
                    "f50f5ea3.bbe9d"
                ]
            ],
            "name": "Body Not Encrypted",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 403,\n    \"message\": \"Decryption - Failed: Body not encrypted\",\n})\nreturn msg;",
            "y": 280,
            "x": 920,
            "z": "f7b5cbff.598508",
            "type": "function",
            "id": "7dde1afa.d404f4"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"Decryption\": msg});\n}",
            "y": 40,
            "x": 1270,
            "z": "f7b5cbff.598508",
            "type": "function",
            "id": "d9096a9f.275358"
        },
        {
            "wires": [],
            "name": "",
            "y": 240,
            "x": 1180,
            "z": "f7b5cbff.598508",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "f50f5ea3.bbe9d"
        },
        {
            "wires": [
                [
                    "ca46ff2a.7ec5e"
                ],
                [
                    "af682a75.b6daf8"
                ]
            ],
            "name": "Check Encryption",
            "outputs": 2,
            "outputLabels": [
                "no encryption",
                "encryption"
            ],
            "noerr": 0,
            "func": "msg.api.encrypt = false;\nif (msg.api.apic && [\"v4\",\"ve\"].indexOf(msg.api.apic.version) >= 0) { \n    if(!msg.force_encryption) {\n        if (msg.api.apic.catalog) { \n            var unencrypted_cat = [\"dapp\", \"erplx\", \"eula\"];\n            var encrypted = true;\n            unencrypted_cat.forEach(function(cat){\n                if(RegExp(\"^\"+ cat,\"g\").test(msg.api.apic.catalog)) {\n                    encrypted = false;\n                }\n            })\n            msg.api.encrypt = encrypted\n        }\n    } else {\n        msg.api.encrypt = true;\n    }\n}\nvar SPACE = global.get(\"SPACE\");\nif ([\"Development\", \"US Test\"].indexOf(SPACE) >= 0 && msg.api.hasOwnProperty(\"override_encrypt\")) {\n    msg.api.encrypt = msg.api.override_encrypt;\n}\nif(msg.api.encrypt) {\n    return [null,msg];\n} else {\n    return [msg,null];\n}",
            "y": 80,
            "x": 170,
            "z": "f7b5cbff.598508",
            "type": "function",
            "id": "e1900411.9c5ae8"
        },
        {
            "wires": [
                []
            ],
            "name": "",
            "y": 80,
            "x": 1220,
            "z": "3962857e.44abba",
            "type": "subflow:f7b5cbff.598508",
            "id": "81dc9242.80e54"
        },
        {
            "wires": [
                [
                    "d9096a9f.275358"
                ]
            ],
            "name": "Decrypt Cleanup",
            "outputs": 1,
            "noerr": 0,
            "func": "return msg;",
            "y": 80,
            "x": 1090,
            "z": "f7b5cbff.598508",
            "type": "function",
            "id": "ca46ff2a.7ec5e"
        },
        {
            "wires": [
                [
                    "d749acc8.9acb2"
                ],
                [
                    "287ed895.91abd8"
                ]
            ],
            "name": "AppID New User Setup",
            "outputs": 2,
            "outputLabels": [
                "ok",
                "error"
            ],
            "noerr": 0,
            "func": "if (msg.records && msg.records.user) {\n    if(!msg.iam) { msg.iam = {} }\n    msg.iam.type = \"appid\";\n    if(!msg.appid) { msg.appid = {} }\n    return [null,msg]\n} else {\n    return [msg,null]\n}",
            "y": 120,
            "x": 210,
            "z": "12505187.8b5d0e",
            "type": "function",
            "id": "3953d8fd.d97d18"
        },
        {
            "wires": [
                [
                    "d749acc8.9acb2"
                ]
            ],
            "name": "AppID New User Cleanup",
            "outputs": 1,
            "noerr": 0,
            "func": "//node.warn({\"AppID New User Returns\": msg})\nmsg.appid.user = msg.payload;\nmsg.records.idp_id = msg.payload.id;\n\ndelete msg.method;\ndelete msg.url;\ndelete msg.responseUrl;\ndelete msg.headers;\ndelete msg.statusCode;\n\nreturn msg",
            "y": 120,
            "x": 1250,
            "z": "12505187.8b5d0e",
            "type": "function",
            "id": "79db8e2c.ed8df"
        },
        {
            "wires": [
                [
                    "2b1568a8.0d6678"
                ]
            ],
            "name": "AppID User Template",
            "outputs": 1,
            "noerr": 0,
            "func": "var user = msg.records.user;\nmsg.appid.mgmt_url = global.get(\"VCAP_APPID\").credentials.managementUrl;\nmsg.appid.headers = { \"Authorization\": msg.appid.authorization }\nmsg.appid.user = {\n  \"displayName\": user.first_name + \", \" + user.last_name,\n  \"userName\": user.email,\n  \"password\": user.password,\n  \"emails\": [\n    {\n      \"value\": user.email,\n      \"primary\": true\n    }\n  ],\n  \"phoneNumbers\": [],\n  \"name\": {\n      \"givenName\": user.first_name,\n      \"familyName\": user.last_name,\n      \"formatted\": user.first_name + \", \" + user.last_name\n  },\n  \"active\": true,\n  \"status\": \"CONFIRMED\",\n  \"entitlements\": [\n                {\n                    \"bl_cloud\": {\n                        \"c_id\": user._id,\n                        \"doc_type\": \"user\",\n                        \"role\": user.role\n                        //\"sub_roles\": user.sub_roles\n                    }\n                }\n            ]\n}\nif (user.hasOwnProperty(\"mobile_phone\") || user.hasOwnProperty(\"voice_phone\")) {\n    if (user.hasOwnProperty(\"mobile_phone\") && user.mobile_phone !== \"\") {\n        msg.appid.user.phoneNumbers.push(\n            {\n                \"value\": user.mobile_phone,\n                \"type\": \"mobile\"\n            }\n        )\n    }\n    if (user.hasOwnProperty(\"voice_phone\") && user.voice_phone !== \"\") {\n        msg.appid.user.phoneNumbers.push(\n            {\n                \"value\": user.voice_phone,\n                \"type\": \"voice\"\n            }\n        )\n    }\n} else {\n    delete msg.appid.user.phoneNumbers;\n}\nmsg.method = \"POST\";\nmsg.url = msg.appid.mgmt_url + \"/cloud_directory/Users\";\nmsg.payload = msg.appid.user;\nmsg.headers = msg.appid.headers;\nreturn msg;",
            "y": 140,
            "x": 660,
            "z": "12505187.8b5d0e",
            "type": "function",
            "id": "a49a9003.00d0f"
        },
        {
            "tls": "",
            "wires": [
                [
                    "f8bd9cd0.1bbb3"
                ]
            ],
            "name": "APPID MGMT",
            "url": "",
            "ret": "obj",
            "id": "2b1568a8.0d6678",
            "y": 140,
            "x": 880,
            "z": "12505187.8b5d0e",
            "type": "http request",
            "method": "use"
        },
        {
            "checkall": "true",
            "z": "12505187.8b5d0e",
            "name": "Error?",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "201"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "79db8e2c.ed8df"
                ],
                [
                    "80548f87.17108"
                ]
            ],
            "propertyType": "msg",
            "y": 140,
            "x": 1050,
            "property": "statusCode",
            "type": "switch",
            "id": "f8bd9cd0.1bbb3"
        },
        {
            "wires": [
                [
                    "1b678f08.1410e1"
                ]
            ],
            "name": "AppID Error",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nif(msg.payload.schemas) {\n    msg.errors.push({\n        \"code\": 412,\n        \"message\": {\n            \"code\": msg.payload.status,\n            \"description\": msg.payload.detail,\n            \"service\": \"appid\"\n        }\n    });\n} else {\n    msg.payload.service = \"appid\";\n    msg.errors.push({\n        \"code\": msg.statusCode,\n        \"message\": msg.payload\n    });\n}\nmsg.payload = {};\nif (msg.hasOwnProperty(\"req\")) {\n    return msg;\n} else {\n    node.warn({\"AppID New User Error\": msg.errors[0]})\n}",
            "y": 180,
            "x": 1210,
            "z": "12505187.8b5d0e",
            "type": "function",
            "id": "80548f87.17108"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.hasOwnProperty(\"api\") && msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"AppID New User\": msg});\n}",
            "y": 60,
            "x": 1510,
            "z": "12505187.8b5d0e",
            "type": "function",
            "id": "d749acc8.9acb2"
        },
        {
            "wires": [
                [
                    "a49a9003.00d0f"
                ]
            ],
            "name": "",
            "y": 140,
            "x": 440,
            "z": "12505187.8b5d0e",
            "type": "subflow:ab306e30.d0cc3",
            "id": "287ed895.91abd8"
        },
        {
            "wires": [],
            "name": "",
            "y": 180,
            "x": 1400,
            "z": "12505187.8b5d0e",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "1b678f08.1410e1"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"Webbing Http\": msg});\n}",
            "y": 40,
            "x": 1850,
            "z": "98ce8d35.4c824",
            "type": "function",
            "id": "e59ad422.3f49f8"
        },
        {
            "tls": "",
            "wires": [
                [
                    "b4dd2fd0.51266"
                ]
            ],
            "name": "Webbing http",
            "url": "",
            "ret": "txt",
            "id": "9d1d2a7b.4eaba8",
            "y": 140,
            "x": 350,
            "z": "98ce8d35.4c824",
            "type": "http request",
            "method": "POST"
        },
        {
            "wires": [
                [
                    "9d1d2a7b.4eaba8"
                ]
            ],
            "name": "Webbing URL",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.webbing && !msg.webbing.server){\n    var webbing = global.get(\"VCAP_WEBBING\");\n    if(webbing) {\n        msg.webbing.server = webbing.credentials.url;\n        msg.webbing.credentials = webbing.credentials;\n    }\n}\nif(!msg.webbing.fields) { msg.webbing.fields = {} }\nmsg.webbing.fields = Object.assign(msg.webbing.fields, {\n    \"username\": msg.webbing.credentials.username,\n    \"password\": msg.webbing.credentials.password,\n    \"key\": msg.webbing.credentials.key\n})\nmsg.webbing.body = msg.webbing.template;\nObject.keys(msg.webbing.fields).forEach(function(field) {\n    var tag = \"{{{\" + field + \"}}}\";\n    msg.webbing.body = msg.webbing.body.replace(RegExp(tag, 'g'), msg.webbing.fields[field])\n});\nmsg.payload = msg.webbing.body;\nmsg.headers = {\n    \"content-type\": \"text/xml\"\n    };\nmsg.url = msg.webbing.server + msg.webbing.request\n//node.warn({\"Webbing Send\": msg});\nreturn msg;",
            "y": 140,
            "x": 160,
            "z": "98ce8d35.4c824",
            "type": "function",
            "id": "d5efcd6a.a13f8"
        },
        {
            "wires": [
                [
                    "66c66e0a.4408b"
                ]
            ],
            "name": "Webbing Error",
            "outputs": 1,
            "noerr": 0,
            "func": "node.warn({\"Webbing Error\": msg})\nif(!msg.errors){msg.errors = []}\nvar message = msg.payload;\nmessage.code = msg.statusCode;\nmessage.source = \"webbing\";\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": message\n})\nreturn msg;",
            "y": 180,
            "x": 1320,
            "z": "98ce8d35.4c824",
            "type": "function",
            "id": "b7fcf5d6.9a9428"
        },
        {
            "wires": [],
            "name": "",
            "y": 180,
            "x": 1800,
            "z": "98ce8d35.4c824",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "66c66e0a.4408b"
        },
        {
            "checkall": "true",
            "z": "98ce8d35.4c824",
            "name": "200",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "200"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "7bf7f662.04e238"
                ],
                [
                    "f0ae01ee.f87be"
                ]
            ],
            "propertyType": "msg",
            "y": 140,
            "x": 970,
            "property": "statusCode",
            "type": "switch",
            "id": "ffd58de0.27778"
        },
        {
            "wires": [
                [
                    "a3b42444.7b1dd8"
                ]
            ],
            "name": "XML Options",
            "outputs": 1,
            "noerr": 0,
            "func": "//node.warn({\"Webbing RAW Returns\": msg})\nmsg.options = {\n    \"explicitArray\": false,\n    \"ignoreAttrs\": true\n}\nreturn msg;",
            "y": 140,
            "x": 530,
            "z": "98ce8d35.4c824",
            "type": "function",
            "id": "b4dd2fd0.51266"
        },
        {
            "z": "98ce8d35.4c824",
            "attr": "",
            "chr": "",
            "wires": [
                [
                    "d7b1951f.eb54e8"
                ]
            ],
            "y": 140,
            "x": 670,
            "property": "payload",
            "type": "xml",
            "id": "a3b42444.7b1dd8",
            "name": ""
        },
        {
            "wires": [
                [
                    "ffd58de0.27778"
                ]
            ],
            "name": "SOAP Body",
            "outputs": 1,
            "noerr": 0,
            "func": "//node.warn({\"After XML with Options\": msg})\ndelete msg.options\nmsg.payload = msg.payload[\"soap:Envelope\"][\"soap:Body\"]\nreturn msg;",
            "y": 140,
            "x": 810,
            "z": "98ce8d35.4c824",
            "type": "function",
            "id": "d7b1951f.eb54e8"
        },
        {
            "wires": [
                [
                    "b7fcf5d6.9a9428"
                ]
            ],
            "name": "SOAP Fault",
            "outputs": 1,
            "noerr": 0,
            "func": "delete msg.options\nmsg.payload = msg.payload[\"soap:Fault\"]\nreturn msg;",
            "y": 180,
            "x": 1130,
            "z": "98ce8d35.4c824",
            "type": "function",
            "id": "f0ae01ee.f87be"
        },
        {
            "wires": [
                [
                    "75accef1.0f037"
                ]
            ],
            "name": "",
            "y": 740,
            "x": 1660,
            "z": "80a169dd.f18e78",
            "type": "subflow:98ce8d35.4c824",
            "id": "85604e49.e1df5"
        },
        {
            "wires": [
                [
                    "85604e49.e1df5"
                ]
            ],
            "name": "Webbing Sim Status",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.webbing = {\n    \"base_return\": \"GetServiceDevicesResponse.GetServiceDevicesResult\",\n    \"return_obj\": \"ServiceDevices.ServiceDeviceRecord\",\n    \"object\": \"sim_webbing\",\n    \"request\": \"/devices/GetServiceDevices\",\n    \"template\": '<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\"><soap12:Header><Credentials xmlns=\"http://wws.iamwebbing.com/\"><Username>{{{username}}}</Username><Password>{{{password}}}</Password><WSKey>{{{key}}}</WSKey></Credentials></soap12:Header><soap12:Body><GetServiceDevices xmlns=\"http://wws.iamwebbing.com/\"><GetServiceDevicesRequest><DeviceIdentifier><ICCID>{{{sim_iccid}}}</ICCID></DeviceIdentifier><PaginationRequest><PageSize>100</PageSize><PageNumber>1</PageNumber></PaginationRequest></GetServiceDevicesRequest></GetServiceDevices></soap12:Body></soap12:Envelope>',\n    \"fields\": {\n        \"sim_iccid\": msg.sim_provider.sim_iccid\n    }\n}\nreturn msg;",
            "y": 760,
            "x": 1140,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "51a47300.b44cac"
        },
        {
            "wires": [],
            "name": "KORE Status In",
            "links": [
                "6b20c87f.a7de98"
            ],
            "y": 920,
            "x": 2255,
            "z": "80a169dd.f18e78",
            "type": "link out",
            "id": "6225a63d.3ee3c8"
        },
        {
            "wires": [
                [
                    "51a47300.b44cac"
                ]
            ],
            "name": "Webbing Status Out",
            "links": [
                "6225a63d.3ee3c8"
            ],
            "y": 720,
            "x": 995,
            "z": "80a169dd.f18e78",
            "type": "link in",
            "id": "6b20c87f.a7de98"
        },
        {
            "wires": [
                [
                    "6225a63d.3ee3c8"
                ]
            ],
            "name": "",
            "y": 860,
            "x": 2120,
            "z": "80a169dd.f18e78",
            "type": "subflow:98ce8d35.4c824",
            "id": "8356c62a.cd3e58"
        },
        {
            "wires": [
                [
                    "b8d8f269.e59ea"
                ]
            ],
            "name": "Map to KORE Sim",
            "outputs": 1,
            "noerr": 0,
            "func": "var webbing = msg.sim_webbing;\nvar sim = {\n    MSISDNOrMDN: null,\n    IMSIOrMIN: null,\n    status: webbing.StatusName,\n    currentDataPlan: webbing.ProductName,\n    currentSMSPlan: null,\n    futureDataPlan: null,\n    futureSMSPlan: null,\n    dailyDataThreshold: null,\n    dailySMSThreshold: null,\n    monthlyDataThreshold: null,\n    monthlySMSThreshold: null,\n    customField1: \"\", \n    customField2: \"\",\n    customField3: \"\",\n    customField4: \"\",\n    customField5: \"\",\n    customField6: \"\",\n    lstHistoryOverLastYear:null, \n    lstFeatures: null,\n    costCenter: null\n};\nif(webbing.StatusName === \"Suspended\") {\n    sim.status = \"Deactivated\"\n}\nif(webbing.StatusName === \"Active\" && webbing.ProductID !== \"7136\") {\n    sim.status = \"Active\"\n}\nif(webbing.StatusName === \"Active\" && webbing.ProductID === \"7136\") {\n    sim.status = \"Test\"\n}\nif(webbing.StatusName === \"Inactive\") {\n    sim.status = \"Stock\"\n}\nmsg[msg.sim_provider.object] = [sim];\nif(msg.sim_provider.details) {\n    msg.sim_provider.delete = []\n} else {\n    msg.sim_provider.delete = [\"MSISDNOrMDN\", \"IMSIOrMIN\", \"currentDataPlan\", \"currentSMSPlan\", \"futureDataPlan\", \"futureSMSPlan\", \"dailyDataThreshold\", \"dailySMSThreshold\", \"monthlyDataThreshold\", \"monthlySMSThreshold\", \"customField1\", \"customField2\", \"customField3\", \"customField4\", \"customField5\", \"customField6\", \"lstHistoryOverLastYear\", \"lstFeatures\", \"costCenter\"];\n}\ndelete msg.sim_webbing;\nreturn msg;",
            "y": 740,
            "x": 1870,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "75accef1.0f037"
        },
        {
            "wires": [
                [
                    "64c933b6.4c341c"
                ],
                [
                    "c1ff557a.425668"
                ]
            ],
            "name": "Check Encryption",
            "outputs": 2,
            "outputLabels": [
                "no encryption",
                "encryption"
            ],
            "noerr": 0,
            "func": "if(msg.api.encrypt) {\n    var encryption_available = global.get(\"CRYPTO_KEYS\")\n    if(encryption_available && encryption_available.com) {\n        return [null,msg];\n    } else {\n        node.warn(\"WARNING [Com Encryption]: On this setup Communication Encrytpion is NOT available\")\n        return [msg,null];\n    }\n} else {\n    return [msg,null];\n}",
            "y": 160,
            "x": 190,
            "z": "86df012b.3eb7e",
            "type": "function",
            "id": "ac2f644e.9dd8f8"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"Encryption\": msg});\n}",
            "y": 120,
            "x": 810,
            "z": "86df012b.3eb7e",
            "type": "function",
            "id": "b381842f.bf47d8"
        },
        {
            "wires": [
                [
                    "b381842f.bf47d8"
                ]
            ],
            "name": "Encryption Cleanup",
            "outputs": 1,
            "noerr": 0,
            "func": "return msg;",
            "y": 160,
            "x": 630,
            "z": "86df012b.3eb7e",
            "type": "function",
            "id": "64c933b6.4c341c"
        },
        {
            "wires": [
                [
                    "64c933b6.4c341c"
                ]
            ],
            "name": "Encrypt Returns",
            "outputs": 1,
            "noerr": 0,
            "func": "if (!msg.encryption) { msg.encryption = {} }\nif (!msg.encryption.key) { msg.encryption.key = global.get(\"CRYPTO_KEYS\").com.payload }\nmsg.encryption.to_encrypt = {}\nvar clear_list = [\"info\", \"error\", \"stats\", \"error_fields\", \"reason\"]\nObject.keys(msg.payload).forEach(function(key) {\n    if (clear_list.indexOf(key) < 0) {\n        msg.encryption.to_encrypt[key] = msg.payload[key];\n        delete msg.payload[key];\n    }\n})\nif (Object.keys(msg.encryption.to_encrypt).length > 0) {\n    var cryptojs = global.get('cryptojs');\n    msg.encryption.ciphertext = cryptojs.AES.encrypt(JSON.stringify(msg.encryption.to_encrypt), msg.encryption.key).toString();\n    msg.payload.ciphertext =  msg.encryption.ciphertext;\n}\nreturn msg;",
            "y": 220,
            "x": 410,
            "z": "86df012b.3eb7e",
            "type": "function",
            "id": "c1ff557a.425668"
        },
        {
            "wires": [
                [
                    "53775c5.a4da7a4",
                    "d85da47d.445228"
                ]
            ],
            "name": "",
            "y": 200,
            "x": 1080,
            "z": "bc6ff87.05a2908",
            "type": "subflow:86df012b.3eb7e",
            "id": "471373d5.3cd54c"
        },
        {
            "wires": [],
            "name": "",
            "y": 220,
            "x": 620,
            "z": "80a169dd.f18e78",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "2f7a1e81.4348b2"
        },
        {
            "wires": [
                [
                    "2f7a1e81.4348b2"
                ]
            ],
            "name": "Sim Not Supported",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"The provided sim_iccid \" + msg.sim_provider.sim_iccid + \" is not supported\"\n})\nreturn msg;",
            "y": 220,
            "x": 430,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "7112174f.7e5398"
        },
        {
            "wires": [
                [
                    "1c923840.e30008"
                ],
                [
                    "8356c62a.cd3e58"
                ]
            ],
            "name": "Webbing Activate to State",
            "outputs": 2,
            "outputLabels": [
                "Plan & Activate",
                "Activate Only"
            ],
            "noerr": 0,
            "func": "msg.sim_provider.details = true;\nif((msg.sim_provider.body.status === \"Active\" && msg.sim_provider.body.EAPCode === \"7136\") || msg.sim_provider.body.status === \"Test\") {\n    msg.webbing = {\n        \"base_return\": \"ActivateServiceDeviceResponse.ActivateServiceDeviceResult\",\n        //\"return_obj\": \"\"\n        //\"object\": \"message\",\n        \"request\": \"/devices/ActivateServiceDevice\",\n        \"template\": '<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\"><soap12:Header><Credentials xmlns=\"http://wws.iamwebbing.com/\"><Username>{{{username}}}</Username><Password>{{{password}}}</Password><WSKey>{{{key}}}</WSKey></Credentials></soap12:Header><soap12:Body><ActivateServiceDevice xmlns=\"http://wws.iamwebbing.com/\"><ActivateServiceDeviceRequest><ServiceDeviceIdentifier><ICCID>{{{sim_iccid}}}</ICCID></ServiceDeviceIdentifier></ActivateServiceDeviceRequest></ActivateServiceDevice></soap12:Body></soap12:Envelope>',\n        \"fields\": {\n            \"sim_iccid\": msg.sim_provider.sim_iccid\n        }\n    }\n    return [null,msg];\n} else {\n    msg.webbing = {\n        \"base_return\": \"ChangeServiceDeviceProductResponse.ChangeServiceDeviceProductResult\",\n        \"request\": \"/devices/ChangeServiceDeviceProduct\",\n        \"template\": '<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\"><soap12:Header><Credentials xmlns=\"http://wws.iamwebbing.com/\"><Username>{{{username}}}</Username><Password>{{{password}}}</Password><WSKey>{{{key}}}</WSKey></Credentials></soap12:Header><soap12:Body><ChangeServiceDeviceProduct xmlns=\"http://wws.iamwebbing.com/\"><ChangeServiceDeviceProductRequest><ServiceDeviceIdentifier><ICCID>{{{sim_iccid}}}</ICCID></ServiceDeviceIdentifier><ProductID>{{{product_id}}}</ProductID></ChangeServiceDeviceProductRequest></ChangeServiceDeviceProduct></soap12:Body></soap12:Envelope>',\n        \"fields\": {\n            \"sim_iccid\": msg.sim_provider.sim_iccid,\n            \"product_id\": msg.sim_provider.body.EAPCode\n        }\n    }\n    return [msg,null];\n}",
            "y": 800,
            "x": 1150,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "4f92ddb3.e61014"
        },
        {
            "wires": [
                [
                    "8356c62a.cd3e58"
                ]
            ],
            "name": "Webbing Reactivate",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.webbing = {\n    \"base_return\": \"ActivateServiceDeviceResponse.ActivateServiceDeviceResult\",\n    \"request\": \"/devices/ActivateServiceDevice\",\n    \"template\": '<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\"><soap12:Header><Credentials xmlns=\"http://wws.iamwebbing.com/\"><Username>{{{username}}}</Username><Password>{{{password}}}</Password><WSKey>{{{key}}}</WSKey></Credentials></soap12:Header><soap12:Body><ActivateServiceDevice xmlns=\"http://wws.iamwebbing.com/\"><ActivateServiceDeviceRequest><ServiceDeviceIdentifier><ICCID>{{{sim_iccid}}}</ICCID></ServiceDeviceIdentifier></ActivateServiceDeviceRequest></ActivateServiceDevice></soap12:Body></soap12:Envelope>',\n    \"fields\": {\n        \"sim_iccid\": msg.sim_provider.sim_iccid\n    }\n}\nmsg.sim_provider.details = true;\nreturn msg;",
            "y": 840,
            "x": 1140,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "7b3afde7.1218a4"
        },
        {
            "wires": [
                [
                    "8356c62a.cd3e58"
                ]
            ],
            "name": "Webbing Deactivate",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.webbing = {\n    \"base_return\": \"SuspendServiceDeviceResponse.SuspendServiceDeviceResult\",\n    \"request\": \"/devices/SuspendServiceDevice\",\n    \"template\": '<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\"><soap12:Header><Credentials xmlns=\"http://wws.iamwebbing.com/\"><Username>{{{username}}}</Username><Password>{{{password}}}</Password><WSKey>{{{key}}}</WSKey></Credentials></soap12:Header><soap12:Body><SuspendServiceDevice xmlns=\"http://wws.iamwebbing.com/\"><SuspendServiceDeviceRequest><ServiceDeviceIdentifier><ICCID>{{{sim_iccid}}}</ICCID></ServiceDeviceIdentifier></SuspendServiceDeviceRequest></SuspendServiceDevice></soap12:Body></soap12:Envelope>',\n    \"fields\": {\n        \"sim_iccid\": msg.sim_provider.sim_iccid\n    }\n}\nmsg.sim_provider.details = true;\nreturn msg;",
            "y": 880,
            "x": 1140,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "c76cb1b2.b1fc1"
        },
        {
            "wires": [
                [
                    "8356c62a.cd3e58"
                ]
            ],
            "name": "Webbing Update Plan Code",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.webbing = {\n    \"base_return\": \"ChangeServiceDeviceProductResponse.ChangeServiceDeviceProductResult\",\n    \"request\": \"/devices/ChangeServiceDeviceProduct\",\n    \"template\": '<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\"><soap12:Header><Credentials xmlns=\"http://wws.iamwebbing.com/\"><Username>{{{username}}}</Username><Password>{{{password}}}</Password><WSKey>{{{key}}}</WSKey></Credentials></soap12:Header><soap12:Body><ChangeServiceDeviceProduct xmlns=\"http://wws.iamwebbing.com/\"><ChangeServiceDeviceProductRequest><ServiceDeviceIdentifier><ICCID>{{{sim_iccid}}}</ICCID></ServiceDeviceIdentifier><ProductID>{{{product_id}}}</ProductID></ChangeServiceDeviceProductRequest></ChangeServiceDeviceProduct></soap12:Body></soap12:Envelope>',\n    \"fields\": {\n        \"sim_iccid\": msg.sim_provider.sim_iccid,\n        \"product_id\": msg.sim_provider.body.plan_code\n    }\n}\nmsg.sim_provider.details = true;\nreturn msg;",
            "y": 920,
            "x": 1160,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "494e0fcb.14775"
        },
        {
            "wires": [
                [
                    "6225a63d.3ee3c8"
                ]
            ],
            "name": "Webbing Update Custom Info",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.sim_provider.details = true;\nreturn msg;",
            "y": 960,
            "x": 1170,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "5765c7fa.44a5b8"
        },
        {
            "wires": [
                [
                    "45b75922.dac428"
                ]
            ],
            "name": "Webbing Activate to State",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.webbing = {\n    \"base_return\": \"GetProductsListResponse.GetProductsListResult\",\n    \"return_obj\": \"Products.ProductRecord\",\n    \"object\": \"plan_codes_webbing\",\n    \"request\": \"/service/GetProductsList\",\n    \"template\": '<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\"><soap12:Header><Credentials xmlns=\"http://wws.iamwebbing.com/\"><Username>{{{username}}}</Username><Password>{{{password}}}</Password><WSKey>{{{key}}}</WSKey></Credentials></soap12:Header><soap12:Body><GetProductsList xmlns=\"http://wws.iamwebbing.com/\"><GetProductsRequest><PaginationRequest><PageSize>100</PageSize><PageNumber>1</PageNumber></PaginationRequest></GetProductsRequest></GetProductsList></soap12:Body></soap12:Envelope>',\n    \"fields\": {}\n}\nreturn msg;",
            "y": 640,
            "x": 1450,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "3c66c7aa.d64418"
        },
        {
            "wires": [
                [
                    "53b2f90a.9db858"
                ]
            ],
            "name": "",
            "y": 640,
            "x": 1670,
            "z": "80a169dd.f18e78",
            "type": "subflow:98ce8d35.4c824",
            "id": "45b75922.dac428"
        },
        {
            "wires": [
                [
                    "b8d8f269.e59ea"
                ]
            ],
            "name": "Merge Plan Codes",
            "outputs": 1,
            "noerr": 0,
            "func": "msg[msg.records.object] = msg[msg.records.object].concat(msg.plan_codes_webbing);\nreturn msg;",
            "y": 640,
            "x": 2130,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "37901336.961b1c"
        },
        {
            "wires": [
                [
                    "27ab0656.d57e7a"
                ]
            ],
            "name": "",
            "y": 1080,
            "x": 630,
            "z": "c1ec6ee7.981a18",
            "type": "subflow:3962857e.44abba",
            "id": "b5c4a534.d50fa8"
        },
        {
            "wires": [
                [
                    "a0a5577b.8dd158"
                ]
            ],
            "name": "Sim Plan Codes",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Sim Plan Codes\"\n    });\nmsg.records = {\n    \"object\": \"plan_codes\",\n    \"returns\": [\"plan_codes\"]\n};\nmsg.sim_provider = {\n    \"req_type\": \"plan_codes\"\n}\nreturn msg;",
            "y": 1080,
            "x": 960,
            "z": "c1ec6ee7.981a18",
            "type": "function",
            "id": "95572347.dd40a"
        },
        {
            "wires": [
                [
                    "95572347.dd40a"
                ]
            ],
            "name": "v1 Inputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.apic && msg.api.apic.version === \"v1\") {\n    msg.v1 = true\n}\nreturn msg;",
            "y": 1080,
            "x": 800,
            "z": "c1ec6ee7.981a18",
            "type": "function",
            "id": "27ab0656.d57e7a"
        },
        {
            "wires": [
                [
                    "14d84d61.e37593"
                ]
            ],
            "name": "",
            "y": 640,
            "x": 990,
            "z": "80a169dd.f18e78",
            "type": "subflow:313bd1d3.01c06e",
            "id": "9ab718a2.5c8d98"
        },
        {
            "wires": [
                [
                    "37901336.961b1c"
                ]
            ],
            "name": "Format Webbing Plan Codes",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg[msg.webbing.object]){\n    msg[msg.webbing.object].forEach(function(plan){\n        plan.code = plan.ID;\n        plan.name = plan.Name;\n        delete plan.ID;\n        delete plan.Name;\n    })\n    msg[msg.webbing.object].forEach(function(element) { element.provider = \"webbing\"; });\n}\nreturn msg;",
            "y": 640,
            "x": 1900,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "53b2f90a.9db858"
        },
        {
            "wires": [
                [
                    "3c66c7aa.d64418"
                ]
            ],
            "name": "Format Kore Plan Codes",
            "outputs": 1,
            "noerr": 0,
            "func": "msg[msg.kore.object].forEach(function(element) { element.provider = \"kore\"; });\nreturn msg;",
            "y": 640,
            "x": 1210,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "14d84d61.e37593"
        },
        {
            "wires": [
                [
                    "85a02a72.2d6718"
                ]
            ],
            "name": "",
            "y": 1260,
            "x": 630,
            "z": "c1ec6ee7.981a18",
            "type": "subflow:3962857e.44abba",
            "id": "3ff0e8c.7279e18"
        },
        {
            "wires": [
                [
                    "22b7a3b5.846cbc"
                ]
            ],
            "name": "Sim Update Plan Code",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Sim Modify Plan Code\"\n    });\nmsg.records = {\n    \"object\": \"sim\",\n    \"returns\": [\"message\",\"sim\"]\n};\nmsg.inputs = {\n    \"required\": [\"sim_iccid\", \"plan_code\"]\n};\nmsg.sim_provider = {\n    \"req_type\": \"update_plan_code\",\n    \"body\": msg.payload\n}\nif (msg.payload.plan_code && typeof msg.payload.plan_code !== \"string\") {\n    if (msg.payload.plan_code.code) {\n        msg.sim_provider.body.plan_code = msg.payload.plan_code.code;\n    } else {\n        delete msg.payload.plan_code;\n        delete msg.sim_provider.plan_code\n    }\n}\nif (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }\nmsg.message = \"SIM Card \" +  msg.sim_provider.sim_iccid + \" was successfully updated to use plan code \" + msg.sim_provider.body.plan_code + \".\"\nreturn msg;",
            "y": 1260,
            "x": 980,
            "z": "c1ec6ee7.981a18",
            "type": "function",
            "id": "be86f9ca.2f2238"
        },
        {
            "wires": [
                [
                    "be86f9ca.2f2238"
                ]
            ],
            "name": "v1 Inputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.apic && msg.api.apic.version === \"v1\") {\n    if(msg.payload.hasOwnProperty(\"deviceNumber\")){\n        msg.payload.sim_iccid = msg.payload.deviceNumber;\n        msg.req.body.sim_iccid = msg.req.body.deviceNumber;\n        delete msg.payload.deviceNumber;\n        delete msg.req.body.deviceNumber;\n    }\n    if(msg.payload.hasOwnProperty(\"planCode\")){\n        msg.payload.plan_code = msg.payload.planCode;\n        msg.req.body.plan_code = msg.req.body.planCode;\n        delete msg.payload.planCode;\n        delete msg.req.body.planCode;\n    }\n    msg.v1 = true\n}\nreturn msg;",
            "y": 1260,
            "x": 800,
            "z": "c1ec6ee7.981a18",
            "type": "function",
            "id": "85a02a72.2d6718"
        },
        {
            "wires": [
                [
                    "634242b2.d749bc"
                ]
            ],
            "name": "Webbing Response",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.webbing.success = (eval(\"msg.payload.\" + msg.webbing.base_return + \".Success\") === \"true\")\nif(!msg.webbing.success) {\n    msg.webbing.error = {\n        \"code\": eval(\"msg.payload.\" + msg.webbing.base_return + \".ResponseCode\"),\n        \"description\": eval(\"msg.payload.\" + msg.webbing.base_return + \".ResponseDescription\")\n    }\n} else {\n    if(msg.webbing.return_obj) {\n        msg.webbing.response = eval(\"msg.payload.\" + msg.webbing.base_return + \".\" + msg.webbing.return_obj);\n    } else {\n        msg.webbing.response = eval(\"msg.payload.\" + msg.webbing.base_return);\n    }\n    if(msg.webbing.object) {\n        msg[msg.webbing.object] = msg.webbing.response\n    }\n    msg.payload = {};\n    delete msg.statusCode;\n    delete msg.url;\n    delete msg.responseUrl;\n    delete msg.headers;\n    delete msg.topic;\n    delete msg.responseCookies;\n}\nreturn msg;",
            "y": 100,
            "x": 1150,
            "z": "98ce8d35.4c824",
            "type": "function",
            "id": "7bf7f662.04e238"
        },
        {
            "checkall": "true",
            "z": "98ce8d35.4c824",
            "name": "Success",
            "repair": false,
            "rules": [
                {
                    "t": "true"
                },
                {
                    "t": "false"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "e59ad422.3f49f8"
                ],
                [
                    "a6a3d1e6.9b9d5"
                ]
            ],
            "propertyType": "msg",
            "y": 100,
            "x": 1340,
            "property": "webbing.success",
            "type": "switch",
            "id": "634242b2.d749bc"
        },
        {
            "wires": [
                [
                    "66c66e0a.4408b"
                ]
            ],
            "name": "Webbing Request Error",
            "outputs": 1,
            "noerr": 0,
            "func": "node.warn({\"Webbing Error\": msg})\nif(!msg.errors){msg.errors = []}\nvar message = msg.webbing.error\nmessage.source = \"webbing\";\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": message\n})\nreturn msg;",
            "y": 140,
            "x": 1550,
            "z": "98ce8d35.4c824",
            "type": "function",
            "id": "a6a3d1e6.9b9d5"
        },
        {
            "wires": [
                [
                    "72d4978b.b46228"
                ]
            ],
            "name": "",
            "y": 240,
            "x": 630,
            "z": "c1ec6ee7.981a18",
            "type": "subflow:3962857e.44abba",
            "id": "6f3005b7.1b698c"
        },
        {
            "wires": [
                [
                    "22b7a3b5.846cbc"
                ]
            ],
            "name": "Sim Activate to State",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Sim Activate To State\"\n    });\nmsg.records = {\n    \"object\": \"sim\",\n    \"format\": \"JSON\",\n    \"returns\": [\"message\", \"sim\"]\n};\nmsg.inputs = {\n    \"required\": [\"sim_iccid\", \"EAPCode\", \"status\"],\n    \"values\": {\n        \"status\": [\"Test\", \"Active\"]\n    }\n};\nmsg.sim_provider = {\n    \"req_type\": \"activate_to_state\",\n    \"body\": msg.payload\n};\nif (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }\nmsg.message = \"SIM Card \" + msg.payload.sim_iccid + \" was successfully activated to \" + msg.payload.status + \".\"\nreturn msg;",
            "y": 240,
            "x": 980,
            "z": "c1ec6ee7.981a18",
            "type": "function",
            "id": "d87752cb.f9983"
        },
        {
            "wires": [
                [
                    "d87752cb.f9983"
                ]
            ],
            "name": "v1 Inputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.apic && msg.api.apic.version === \"v1\") {\n    if(msg.payload.hasOwnProperty(\"deviceNumber\")){\n        msg.payload.sim_iccid = msg.payload.deviceNumber;\n        msg.req.body.sim_iccid = msg.req.body.deviceNumber;\n        delete msg.payload.deviceNumber;\n        delete msg.req.body.deviceNumber;\n    }\n    if(msg.payload.hasOwnProperty(\"toState\")){\n        msg.payload.status = msg.payload.toState;\n        msg.req.body.status = msg.req.body.toState;\n        delete msg.payload.toState;\n        delete msg.req.body.toState;\n    }\n    msg.v1 = true\n}\nreturn msg;",
            "y": 240,
            "x": 800,
            "z": "c1ec6ee7.981a18",
            "type": "function",
            "id": "72d4978b.b46228"
        },
        {
            "wires": [
                [
                    "356c72db.3ce29e"
                ]
            ],
            "name": "",
            "y": 800,
            "x": 1670,
            "z": "80a169dd.f18e78",
            "type": "subflow:98ce8d35.4c824",
            "id": "1c923840.e30008"
        },
        {
            "wires": [
                [
                    "8356c62a.cd3e58"
                ]
            ],
            "name": "Activate Sim",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.webbing = {\n    \"base_return\": \"ActivateServiceDeviceResponse.ActivateServiceDeviceResult\",\n    //\"return_obj\": \"\"\n    //\"object\": \"message\",\n    \"request\": \"/devices/ActivateServiceDevice\",\n    \"template\": '<?xml version=\"1.0\" encoding=\"utf-8\"?><soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\"><soap12:Header><Credentials xmlns=\"http://wws.iamwebbing.com/\"><Username>{{{username}}}</Username><Password>{{{password}}}</Password><WSKey>{{{key}}}</WSKey></Credentials></soap12:Header><soap12:Body><ActivateServiceDevice xmlns=\"http://wws.iamwebbing.com/\"><ActivateServiceDeviceRequest><ServiceDeviceIdentifier><ICCID>{{{sim_iccid}}}</ICCID></ServiceDeviceIdentifier></ActivateServiceDeviceRequest></ActivateServiceDevice></soap12:Body></soap12:Envelope>',\n    \"fields\": {\n        \"sim_iccid\": msg.sim_provider.sim_iccid\n    }\n}\nmsg.inputs.details = true;\nreturn msg;",
            "y": 800,
            "x": 1870,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "356c72db.3ce29e"
        },
        {
            "wires": [
                [
                    "3a473fea.3e376"
                ]
            ],
            "name": "",
            "y": 740,
            "x": 630,
            "z": "c1ec6ee7.981a18",
            "type": "subflow:3962857e.44abba",
            "id": "c393c069.a7c09"
        },
        {
            "wires": [
                [
                    "22b7a3b5.846cbc"
                ]
            ],
            "name": "Sim Deactivate",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Sim Deactivate\"\n    });\nmsg.records = {\n    \"object\": \"sim\",\n    \"returns\": [\"message\",\"sim\"]\n};\nmsg.inputs = {\n    \"required\": [\"sim_iccid\"]\n};\nmsg.sim_provider = {\n    \"req_type\": \"deactivate\",\n    \"body\": msg.payload\n};\nif (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }\nmsg.message = \"SIM Card \" +  msg.payload.sim_iccid + \" was successfully deactivated.\"\nreturn msg;",
            "y": 740,
            "x": 960,
            "z": "c1ec6ee7.981a18",
            "type": "function",
            "id": "d68a7ab.71f5488"
        },
        {
            "wires": [
                [
                    "d68a7ab.71f5488"
                ]
            ],
            "name": "v1 Inputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.apic && msg.api.apic.version === \"v1\") {\n    if(msg.payload.hasOwnProperty(\"deviceNumber\")){\n        msg.payload.sim_iccid = msg.payload.deviceNumber;\n        msg.req.body.sim_iccid = msg.req.body.deviceNumber;\n        delete msg.payload.deviceNumber;\n        delete msg.req.body.deviceNumber;\n    }\n    if(msg.payload.hasOwnProperty(\"flagScrap\")){\n        delete msg.payload.flagScrap;\n        delete msg.req.body.flagScrap;\n    }\n    msg.v1 = true\n}\nreturn msg;",
            "y": 740,
            "x": 800,
            "z": "c1ec6ee7.981a18",
            "type": "function",
            "id": "3a473fea.3e376"
        },
        {
            "wires": [
                [
                    "f50f5ea3.bbe9d"
                ]
            ],
            "name": "Decryption Not Available",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 403,\n    \"message\": \"Decryption - Failed: cypertext could not be decrypted\",\n})\nreturn msg;",
            "y": 240,
            "x": 910,
            "z": "f7b5cbff.598508",
            "type": "function",
            "id": "dc9c6289.c9cd5"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api.hasOwnProperty(\"debug\") && msg.api.debug === true) {\n    node.warn({\"Email\": msg});\n}",
            "y": 40,
            "x": 2270,
            "z": "5dbd57cc.fc9bb8",
            "type": "function",
            "id": "6cc5e7f5.857148"
        },
        {
            "wires": [
                [
                    "acdaf127.7ffc5"
                ],
                [
                    "8220fc30.6bebf"
                ]
            ],
            "name": "Check Input Data Type",
            "outputs": 2,
            "noerr": 0,
            "func": "var errors = [];\nif(msg.hasOwnProperty(\"inputs\") && msg.inputs.hasOwnProperty(\"body\") && msg.inputs.hasOwnProperty(\"types\")) { \n    Object.keys(msg.inputs.types).forEach(function(key) {\n        if (msg.inputs.body.hasOwnProperty(key)) {\n            if(typeof(msg.inputs.body[key]) !== msg.inputs.types[key]) {\n                     var error_key = {};\n                     error_key[key] = msg.inputs.types[key];\n                     errors.push(error_key);\n                }\n        }\n    })\n}\nif (errors.length > 0) {\n    msg.error_keys = errors;\n    return [null,msg];\n} else {\n    return [msg,null];   \n}",
            "y": 120,
            "x": 1200,
            "z": "71afa3f9.81defc",
            "type": "function",
            "id": "c541bab7.920618"
        },
        {
            "wires": [
                [
                    "44304eec.b88b6"
                ]
            ],
            "name": "Invalid Input Data Type",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 412,\n    \"message\": \"Invalid key data type.\",\n    \"returns\": [\"error_keys\"]\n});\nmsg.records.format = \"array\";\nreturn msg;",
            "y": 200,
            "x": 1660,
            "z": "71afa3f9.81defc",
            "type": "function",
            "id": "8220fc30.6bebf"
        },
        {
            "checkall": "true",
            "z": "57a5a054.9dfd3",
            "name": "200",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "200"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "38d932.6d8546ce"
                ],
                [
                    "9531e771.713668"
                ]
            ],
            "propertyType": "msg",
            "y": 760,
            "x": 1110,
            "property": "statusCode",
            "type": "switch",
            "id": "7b43a735.8abdd8"
        },
        {
            "wires": [
                [
                    "f37244ae.346dd8"
                ]
            ],
            "name": "APP ID Wrong Credentials",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 401,\n    \"message\": {\n            \"code\": msg.payload.error,\n            \"description\": msg.payload.error_description,\n            \"service\": \"appid\"\n    }\n})\nreturn msg;",
            "y": 780,
            "x": 1320,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "9531e771.713668"
        },
        {
            "wires": [
                [
                    "aed2ad76.87b3e"
                ]
            ],
            "name": "Headers",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"req\") && msg.req.hasOwnProperty(\"headers\")) {\n    if (msg.req.headers.hasOwnProperty(\"api_info\")) {\n        msg.api.info = (msg.req.headers.api_info === \"true\");\n    } else {\n        msg.api.info = false;\n    }\n    if (msg.req.headers.hasOwnProperty(\"api_debug\")) {\n        msg.api.debug = (msg.req.headers.api_debug === \"true\");\n    } else {\n        msg.api.debug = false;\n    }\n    if (msg.req.headers.hasOwnProperty(\"api_stats\")) {\n        msg.api.stats = (msg.req.headers.api_stats === \"true\");\n    } else {\n        msg.api.stats = false;\n    }\n    if (msg.req.headers.hasOwnProperty(\"debug\")) {\n        msg.debug = JSON.parse(msg.req.headers.debug)\n    }\n    if (msg.req.headers.hasOwnProperty(\"apic\")) {\n        msg.api.apic = JSON.parse(msg.req.headers.apic)\n    }\n    if (msg.req.headers.hasOwnProperty(\"api_encrypt\")) {\n        msg.api.encrypt = (msg.req.headers.api_encrypt === \"true\")\n    } else {\n        msg.api.encrypt = false\n    }\n}\n// override info flag here for vx environment\n//if (global.get(\"VCAP\").app.application_name.substr(-1) === \"x\"){ msg.api.info = true; }\nreturn msg;",
            "y": 760,
            "x": 480,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "bd0f7250.6f7f8"
        },
        {
            "wires": [
                [
                    "c4369d37.22b4c"
                ]
            ],
            "name": "Enc",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.force_encryption = true;\nreturn msg;",
            "y": 440,
            "x": 250,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "114a461b.bf575a"
        },
        {
            "wires": [
                [
                    "d8827839.727638"
                ]
            ],
            "name": "Enc",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.force_encryption = true;\nreturn msg;",
            "y": 1760,
            "x": 370,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "4f9e1739.3ceb98"
        },
        {
            "wires": [
                [
                    "e6a4d1f.c44fb3"
                ]
            ],
            "name": "Enc",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.force_encryption = true;\nreturn msg;",
            "y": 1860,
            "x": 430,
            "z": "61ffb71b.d286f",
            "type": "function",
            "id": "11e5486f.2c6b08"
        },
        {
            "wires": [
                [
                    "70a6c339.a33ffc"
                ]
            ],
            "name": "Enc",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.force_encryption = true;\nreturn msg;",
            "y": 280,
            "x": 310,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "c365d482.561be8"
        },
        {
            "wires": [
                [
                    "fcb3a021.f5d13"
                ]
            ],
            "name": "Enc",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.force_encryption = true;\nreturn msg;",
            "y": 820,
            "x": 310,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "54e2ee12.45f6f"
        },
        {
            "wires": [
                [
                    "afbb8311.d2f1e"
                ]
            ],
            "name": "Enc",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.force_encryption = true;\nreturn msg;",
            "y": 920,
            "x": 310,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "9d966eb7.76ee9"
        },
        {
            "wires": [
                [
                    "1e2c5f61.780851"
                ]
            ],
            "name": "Enc",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.force_encryption = true;\nreturn msg;",
            "y": 1020,
            "x": 310,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "6dab3b10.8c28a4"
        },
        {
            "wires": [
                [
                    "2497d9af.ade676"
                ]
            ],
            "name": "Enc",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.force_encryption = true;\nreturn msg;",
            "y": 1520,
            "x": 310,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "cebdcba9.dfac18"
        },
        {
            "wires": [
                [
                    "3bcd4b75.f94e44"
                ]
            ],
            "name": "Enc",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.force_encryption = true;\nreturn msg;",
            "y": 1660,
            "x": 630,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "20efb05e.928c8"
        },
        {
            "wires": [
                [
                    "77408e62.94768"
                ]
            ],
            "name": "Enc",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.force_encryption = true;\nreturn msg;",
            "y": 1840,
            "x": 310,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "9bdecbf1.62b788"
        },
        {
            "wires": [
                [
                    "e87ec0f4.0009"
                ]
            ],
            "name": "Enc",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.force_encryption = true;\nreturn msg;",
            "y": 1940,
            "x": 530,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "dfea7251.479c6"
        },
        {
            "wires": [
                [
                    "432d2c2f.7f4814"
                ]
            ],
            "name": "Enc",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.force_encryption = true;\nreturn msg;",
            "y": 2080,
            "x": 310,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "117ec4cf.45508b"
        },
        {
            "wires": [
                [
                    "4476740f.ed6f8c"
                ]
            ],
            "name": "Enc",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.force_encryption = true;\nreturn msg;",
            "y": 720,
            "x": 350,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "aec2e944.65c2e8"
        },
        {
            "wires": [
                [
                    "f12b7dba.103b3"
                ]
            ],
            "name": "Enc",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.force_encryption = true;\nreturn msg;",
            "y": 640,
            "x": 350,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "601d3844.78ecc8"
        },
        {
            "wires": [
                [
                    "eba1bc79.4683c"
                ]
            ],
            "name": "Paired Lens Rep Service",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"machine_link\") && msg.machine_link.length > 0) {\n    var linked_user_ids = msg.machine_link.map(a => a.user);\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"support_users\",\n        \"selector\": {\n            \"$and\": [\n                {\"doc_type\": \"user\"},\n                {\"status\": \"active\"},\n                {\"_id\": {\"$in\": linked_user_ids}},\n                {\"sub_roles\": {\n                    \"$or\": [{\"$elemMatch\": { \"$eq\": \"Lens Rep\" }}]\n                    }\n                }]\n        }\n    };\n} else {\n    var linked_user_ids = [];\n    delete msg.cloudant;\n}\nreturn msg;",
            "y": 420,
            "x": 1550,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "15c724d0.a828fb"
        },
        {
            "wires": [
                [
                    "981f5629.ed25f8"
                ]
            ],
            "name": "",
            "url": "/encrypt/:data",
            "upload": false,
            "id": "cd1e004d.8897d",
            "swaggerDoc": "",
            "y": 920,
            "x": 110,
            "z": "57a5a054.9dfd3",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "d42463d1.45793"
                ]
            ],
            "name": "",
            "url": "/decrypt",
            "upload": false,
            "id": "233a5ea7.405a92",
            "swaggerDoc": "",
            "y": 960,
            "x": 90,
            "z": "57a5a054.9dfd3",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "2cf230c5.f2f98"
                ]
            ],
            "name": "Encrypt",
            "outputs": 1,
            "noerr": 0,
            "func": "var cryptojs = global.get('cryptojs');\nmsg.encrypt = {\n    \"key\": global.get(\"CRYPTO_KEYS\").com.payload\n}\nnode.warn(\"key: \"+ msg.encrypt.key)\nmsg.json_string = msg.req.params.data;\nnode.warn(\"E-json_string: \"+ msg.json_string)\nmsg.encrypted = cryptojs.AES.encrypt(msg.json_string, msg.encrypt.key);\nnode.warn({\"E-encrypted\": msg.encrypted});\nmsg.encrypted_string = msg.encrypted.toString();\nnode.warn({\"E-encrypted_string\": msg.encrypted_string});\nmsg.payload = msg.encrypted_string;\nreturn msg;",
            "y": 920,
            "x": 500,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "89860ecf.bac86"
        },
        {
            "wires": [
                [
                    "286a5787.9f91c8"
                ]
            ],
            "name": "Decrypt",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.payload.ciphertext){ \n    var cryptojs = global.get('cryptojs');\n    msg.encrypt = {\n        \"key\": global.get(\"CRYPTO_KEYS\").com.payload\n    };\n    node.warn(\"D-encrypted_string: \"+ msg.payload.ciphertext);\n    msg.decrypt = cryptojs.AES.decrypt(msg.payload.ciphertext, msg.encrypt.key);\n    node.warn(\"D-decrypt: \"+ msg.decrypt);\n    msg.decrypt_string = msg.decrypt.toString(cryptojs.enc.Utf8);\n    node.warn(\"D-decrypt_string: \"+ msg.decrypt_string);\n    try {\n        msg.decrypt_json = JSON.parse(msg.decrypt_string);\n        node.warn({\"D-decrypt_json\": msg.decrypt_json});\n        msg.payload = msg.decrypt_json;\n    }\n    catch(error) {\n        msg.payload = msg.decrypt;\n    }\n}\nreturn msg;",
            "y": 960,
            "x": 500,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "c7fbecda.c7d7a"
        },
        {
            "wires": [],
            "name": "",
            "headers": {},
            "y": 920,
            "x": 650,
            "z": "57a5a054.9dfd3",
            "type": "http response",
            "id": "2cf230c5.f2f98",
            "statusCode": ""
        },
        {
            "wires": [],
            "name": "",
            "headers": {},
            "y": 960,
            "x": 650,
            "z": "57a5a054.9dfd3",
            "type": "http response",
            "id": "286a5787.9f91c8",
            "statusCode": ""
        },
        {
            "wires": [
                [
                    "89860ecf.bac86"
                ]
            ],
            "name": "",
            "y": 920,
            "x": 330,
            "z": "57a5a054.9dfd3",
            "type": "subflow:3962857e.44abba",
            "id": "981f5629.ed25f8"
        },
        {
            "wires": [
                [
                    "c7fbecda.c7d7a"
                ]
            ],
            "name": "",
            "y": 960,
            "x": 330,
            "z": "57a5a054.9dfd3",
            "type": "subflow:3962857e.44abba",
            "id": "d42463d1.45793"
        },
        {
            "wires": [],
            "name": "",
            "y": 740,
            "x": 1430,
            "z": "57a5a054.9dfd3",
            "type": "subflow:bc6ff87.05a2908",
            "id": "692bef4.d6f061"
        },
        {
            "wires": [
                [
                    "7aef97a2.b2b238"
                ]
            ],
            "name": "",
            "y": 600,
            "x": 630,
            "z": "c1ec6ee7.981a18",
            "type": "subflow:3962857e.44abba",
            "id": "ad4d16d7.a27ac8"
        },
        {
            "wires": [
                [
                    "231352bf.6eeb3e"
                ]
            ],
            "name": "v1 Inputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.apic && msg.api.apic.version === \"v1\") {\n    if(msg.payload.hasOwnProperty(\"deviceNumber\")){\n        msg.payload.sim_iccid = msg.payload.deviceNumber;\n        msg.req.body.sim_iccid = msg.req.body.deviceNumber;\n        delete msg.payload.deviceNumber;\n        delete msg.req.body.deviceNumber;\n    }\n    msg.v1 = true\n}\nreturn msg;",
            "y": 600,
            "x": 800,
            "z": "c1ec6ee7.981a18",
            "type": "function",
            "id": "7aef97a2.b2b238"
        },
        {
            "wires": [
                [
                    "22b7a3b5.846cbc"
                ]
            ],
            "name": "Sim Update Custom Info",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Sim Update Custom Info\"\n    });\nmsg.records = {\n    \"object\": \"sim\",\n    \"format\": \"JSON\",\n    \"returns\": [\"message\", \"sim\"]\n};\nmsg.inputs = {\n    \"required\": [\"sim_iccid\"],\n    \"allowed\": [\"customField1\", \"customField2\", \"customField3\", \"customField4\", \"customField5\", \"customField6\"]\n};\nmsg.sim_provider = {\n    \"req_type\": \"update_info\",\n    \"body\": msg.payload\n};\nif (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }\nmsg.message = \"Sim Card \" + msg.payload.sim_iccid + \" custom information was successfully updated.\"\nreturn msg;",
            "y": 600,
            "x": 990,
            "z": "c1ec6ee7.981a18",
            "type": "function",
            "id": "231352bf.6eeb3e"
        },
        {
            "wires": [
                [
                    "2cd1ac5e.1793e4"
                ]
            ],
            "name": "",
            "y": 420,
            "x": 630,
            "z": "c1ec6ee7.981a18",
            "type": "subflow:3962857e.44abba",
            "id": "cc6048c0.ed4cf8"
        },
        {
            "wires": [
                [
                    "c682ec6e.e63d3"
                ]
            ],
            "name": "v1 Inputs",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.apic && msg.api.apic.version === \"v1\") {\n    if(msg.payload.hasOwnProperty(\"deviceNumber\")){\n        msg.payload.sim_iccid = msg.payload.deviceNumber;\n        msg.req.body.sim_iccid = msg.req.body.deviceNumber;\n        delete msg.payload.deviceNumber;\n        delete msg.req.body.deviceNumber;\n    }\n    msg.v1 = true\n}\nreturn msg;",
            "y": 420,
            "x": 800,
            "z": "c1ec6ee7.981a18",
            "type": "function",
            "id": "2cd1ac5e.1793e4"
        },
        {
            "wires": [
                [
                    "22b7a3b5.846cbc"
                ]
            ],
            "name": "Sim Reactivate",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Sim Reactivate\"\n    });\nmsg.records = {\n    \"object\": \"sim\",\n    \"format\": \"JSON\",\n    \"returns\": [\"message\", \"sim\"]\n};\nmsg.inputs = {\n    \"required\": [\"sim_iccid\"]\n};\nmsg.sim_provider = {\n    \"req_type\": \"reactivate\",\n    \"body\": msg.payload\n}\nif (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }\nmsg.message = \"SIM Card \" + msg.payload.sim_iccid + \" was successfully reactivated.\"\nreturn msg;",
            "y": 420,
            "x": 960,
            "z": "c1ec6ee7.981a18",
            "type": "function",
            "id": "c682ec6e.e63d3"
        },
        {
            "wires": [
                [
                    "b8c36493.e64ac8"
                ]
            ],
            "name": "Headers",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"req\") && msg.req.hasOwnProperty(\"headers\")) {\n    if (msg.req.headers.hasOwnProperty(\"api_info\")) {\n        msg.api.info = (msg.req.headers.api_info === \"true\");\n    } else {\n        msg.api.info = false;\n    }\n    if (msg.req.headers.hasOwnProperty(\"api_debug\")) {\n        msg.api.debug = (msg.req.headers.api_debug === \"true\");\n    } else {\n        msg.api.debug = false;\n    }\n    if (msg.req.headers.hasOwnProperty(\"api_stats\")) {\n        msg.api.stats = (msg.req.headers.api_stats === \"true\");\n    } else {\n        msg.api.stats = false;\n    }\n    if (msg.req.headers.hasOwnProperty(\"debug\")) {\n        msg.debug = JSON.parse(msg.req.headers.debug)\n    }\n    if (msg.req.headers.hasOwnProperty(\"apic\")) {\n        msg.api.apic = JSON.parse(msg.req.headers.apic)\n    }\n    if (msg.req.headers.hasOwnProperty(\"api_encrypt\")) {\n        msg.api.override_encrypt = (msg.req.headers.api_encrypt === \"true\")\n    }\n}\n// override info flag here for vx environment\n//if (global.get(\"VCAP\").app.application_name.substr(-1) === \"x\"){ msg.api.info = true; }\nreturn msg;",
            "y": 160,
            "x": 280,
            "z": "3962857e.44abba",
            "type": "function",
            "id": "514b425d.eea37c"
        },
        {
            "info": "API paths:\n1. Missing Inputs\n2. Fake user_id\n3. Fake email\n4. Fake device_id\n5. New link record\n6. Existing inactive link record\n7. Existing active link record",
            "wires": [],
            "name": "Provider Consumer Pair",
            "y": 900,
            "x": 140,
            "z": "429bd64.63fc828",
            "type": "comment",
            "id": "3a5edef0.6fda62"
        },
        {
            "wires": [
                [
                    "2b35f87.3d49308"
                ]
            ],
            "name": "",
            "url": "/dapp/pairing/pair/provider_consumer",
            "upload": false,
            "id": "52af7c99.8c4914",
            "swaggerDoc": "",
            "y": 940,
            "x": 200,
            "z": "429bd64.63fc828",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "a78e3781.cc1708"
                ]
            ],
            "name": "Pair Provider and Consumer",
            "outputs": 1,
            "noerr": 0,
            "func": "\nmsg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Pair Provider and Consumer\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\",\"status\"],\n    \"doc_type\": \"provider_link\",\n    \"object\": \"provider_link\",\n    \"format\": \"JSON\",\n    \"returns\": [\"content\"],\n    \"models\": [\"provider_link\"]\n};\nmsg.inputs = {\n    \"required\": [\"provider_id\",\"consumer_id\"],\n    \"provider_id\":msg.payload.provider_id,\n    \"consumer_id\":msg.payload.consumer_id\n    \n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"users\",\n    \"selector\": {\n        \"$and\": [   {\"doc_type\": \"user\"},\n                    {\"status\": \"active\"},\n                    {\"_id\": {\"$in\": [msg.inputs.provider_id, msg.inputs.consumer_id]}}\n                ]\n    }\n}\nreturn msg;",
            "y": 940,
            "x": 740,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "bb375fa7.d25c1"
        },
        {
            "wires": [
                [
                    "4860fb68.bc9274"
                ],
                [
                    "bf58f76e.dd4bb8"
                ],
                [
                    "1095583a.c81a88"
                ]
            ],
            "name": "Povider  & Consmer Exists",
            "outputs": 3,
            "outputLabels": [
                "yes",
                "no device",
                "no user"
            ],
            "noerr": 0,
            "func": "if(msg.users && msg.users.length > 0) {\n    user_ids = msg.users.map(a => a._id)\n    var provider = user_ids.indexOf(msg.inputs.provider_id)\n    node.warn(provider)\n    var consumer = user_ids.indexOf(msg.inputs.consumer_id)\n    node.warn(consumer)\n    if (provider < 0 && msg.users[provider].role !== \"Surgeon\" ) { return [null,msg,null]; }\n    if (consumer < 0) { return [null,null,msg]; }\n} else {\n    return [null,msg,null];\n}\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"provider_link\",\n    \"selector\": {\n        \"$and\": [   {\"doc_type\": \"provider_link\"},\n                    {\"provider_id\": msg.inputs.provider_id},//{_id\": msg.inputs.provider_id},\n                    {\"consumer_id\": msg.inputs.consumer_id} //{_id\": msg.inputs.provider_id},\n                ]\n    }\n};\nreturn [msg,null,null];",
            "y": 940,
            "x": 1350,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "b321feb5.c030d"
        },
        {
            "wires": [
                [
                    "fc0dabdf.071678"
                ]
            ],
            "name": "Provider Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Provider user: \" + msg.inputs.provider_id + \" was not found.\",\n})\nreturn msg;",
            "y": 940,
            "x": 1570,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "bf58f76e.dd4bb8"
        },
        {
            "wires": [
                [
                    "fc0dabdf.071678"
                ]
            ],
            "name": "Consumer Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Consumern user: \" + msg.inputs.consumer_id + \" was not found.\",\n})\nreturn msg;",
            "y": 980,
            "x": 1580,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "1095583a.c81a88"
        },
        {
            "wires": [
                [
                    "6f94f387.cfd60c"
                ],
                [
                    "16222a54.4ad966"
                ],
                [
                    "5006bbc9.875c24"
                ]
            ],
            "name": "Link Exists",
            "outputs": 3,
            "outputLabels": [
                "no",
                "yes active",
                "yes inactive"
            ],
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"provider_link\") || msg.provider_link.length === 0){\n    msg.records.id = \"\";\n    return [msg,null,null];\n}\nif (msg.provider_link[0].status === \"inactive\") {\n    msg.inputs.provider_link = msg.provider_link[0]._id;\n    msg.records.id = msg.provider_link[0]._id;\n    delete msg.provider_link;\n    msg.inputs.body = { \"status\": \"active\" }\n    return [null,null,msg];\n} else {\n    return [null,msg,null];\n}",
            "y": 900,
            "x": 1750,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "10713b80.691655"
        },
        {
            "wires": [
                [
                    "5beccb71.602304"
                ]
            ],
            "name": "",
            "y": 940,
            "x": 960,
            "z": "429bd64.63fc828",
            "type": "subflow:71afa3f9.81defc",
            "id": "a78e3781.cc1708"
        },
        {
            "wires": [
                [
                    "b321feb5.c030d"
                ]
            ],
            "name": "",
            "y": 940,
            "x": 1130,
            "z": "429bd64.63fc828",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "5beccb71.602304"
        },
        {
            "wires": [
                [
                    "10713b80.691655"
                ]
            ],
            "name": "",
            "y": 900,
            "x": 1570,
            "z": "429bd64.63fc828",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "4860fb68.bc9274"
        },
        {
            "wires": [],
            "name": "",
            "y": 960,
            "x": 1800,
            "z": "429bd64.63fc828",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "fc0dabdf.071678"
        },
        {
            "wires": [
                [
                    "16222a54.4ad966"
                ]
            ],
            "name": "",
            "y": 920,
            "x": 1930,
            "z": "429bd64.63fc828",
            "type": "subflow:68197f61.7975",
            "id": "5006bbc9.875c24"
        },
        {
            "wires": [
                [
                    "16222a54.4ad966"
                ]
            ],
            "name": "",
            "y": 880,
            "x": 1920,
            "z": "429bd64.63fc828",
            "type": "subflow:e0cd8199.1ad77",
            "id": "6f94f387.cfd60c"
        },
        {
            "wires": [
                [
                    "f8d88d89.52923"
                ]
            ],
            "name": "",
            "y": 900,
            "x": 2150,
            "z": "429bd64.63fc828",
            "type": "subflow:313bd1d3.01c06e",
            "id": "16222a54.4ad966"
        },
        {
            "wires": [],
            "name": "",
            "y": 900,
            "x": 2550,
            "z": "429bd64.63fc828",
            "type": "subflow:bc6ff87.05a2908",
            "id": "2ae62aa7.76b926"
        },
        {
            "wires": [
                [
                    "bb375fa7.d25c1"
                ]
            ],
            "name": "",
            "y": 940,
            "x": 490,
            "z": "429bd64.63fc828",
            "type": "subflow:3962857e.44abba",
            "id": "2b35f87.3d49308"
        },
        {
            "info": "API paths:\n1. Missing Inputs\n2. Active Link record not found\n7. Active Link record found",
            "wires": [],
            "name": "Provider Consumer Unpair",
            "y": 1020,
            "x": 150,
            "z": "429bd64.63fc828",
            "type": "comment",
            "id": "5a919d33.852c44"
        },
        {
            "wires": [
                [
                    "ae33d23f.bc37b"
                ]
            ],
            "name": "",
            "url": "/dapp/pairing/unpair/provider_consumer",
            "upload": false,
            "id": "16109ee.b3e1b61",
            "swaggerDoc": "",
            "y": 1060,
            "x": 209,
            "z": "429bd64.63fc828",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "ac573156.095cc"
                ]
            ],
            "name": "Unpair Provider and Consumer",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Unpair Provider and Consumer\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\", \"status\"],\n    \"doc_type\": \"provider_link\",\n    \"object\": \"provider_link\",\n    \"format\": \"JSON\",\n    \"returns\": [\"content\"],\n};\nmsg.inputs = {\n    \"required\": [\"provider_id\", \"consumer_id\"],\n    \"provider_id\": msg.payload.provider_id,\n    \"consumer_id\": msg.payload.consumer_id\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"provider_link\",\n    \"selector\": {\n        \"$and\": [   {\"doc_type\": \"provider_link\"},\n                    {\"provider_id\": msg.inputs.provider_id},\n                    {\"consumer_id\": msg.inputs.consumer_id}\n                ]\n    }\n};\nreturn msg;",
            "y": 1060,
            "x": 750,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "701b6e58.67937"
        },
        {
            "wires": [
                [
                    "1995407f.ffd5c"
                ],
                [
                    "9e96db2a.b84e78"
                ],
                [
                    "4b243f5c.dd857"
                ]
            ],
            "name": "Link exists",
            "outputs": 3,
            "outputLabels": [
                "yes",
                "no",
                ""
            ],
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"provider_link\") || msg.provider_link.length === 0){\n    return [null,msg,null]\n}\nif(msg.hasOwnProperty(\"provider_link\") && msg.provider_link[0].status === \"inactive\"){\n    return [null,null,msg]\n}\nmsg.inputs.provider_link = msg.provider_link[0]._id;\nmsg.records.id = msg.provider_link[0]._id;\ndelete msg.provider_link;\nmsg.inputs.body = { \"status\": \"inactive\" };\nreturn [msg,null,null];",
            "y": 1060,
            "x": 1310,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "7ba6c216.3d934c"
        },
        {
            "wires": [
                [
                    "c07af3dc.e58bc"
                ]
            ],
            "name": "Link Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Active Link between Provider: \" + msg.inputs.provider_id + \" and Consumer: \" + msg.inputs.consumer_id + \" was not found.\",\n})\nreturn msg;",
            "y": 1060,
            "x": 1480,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "9e96db2a.b84e78"
        },
        {
            "wires": [
                [
                    "981913cd.2e3b2"
                ]
            ],
            "name": "Link Already Inactive",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.records.returns) {\n    msg.records.returns.push(\"message\");\n}\nelse {\n    msg.records.returns = [\"message\"];\n}\nmsg.message = \"Link between Provider: \" + msg.inputs.provider_id + \" and Consumer: \" + msg.inputs.consumer_id + \" was already delinked.\";\nreturn msg;",
            "y": 1100,
            "x": 1500,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "4b243f5c.dd857"
        },
        {
            "wires": [
                [
                    "701b6e58.67937"
                ]
            ],
            "name": "",
            "y": 1060,
            "x": 490,
            "z": "429bd64.63fc828",
            "type": "subflow:3962857e.44abba",
            "id": "ae33d23f.bc37b"
        },
        {
            "wires": [
                [
                    "25c04843.2cc518"
                ]
            ],
            "name": "",
            "y": 1060,
            "x": 960,
            "z": "429bd64.63fc828",
            "type": "subflow:71afa3f9.81defc",
            "id": "ac573156.095cc"
        },
        {
            "wires": [
                [
                    "7ba6c216.3d934c"
                ]
            ],
            "name": "",
            "y": 1060,
            "x": 1130,
            "z": "429bd64.63fc828",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "25c04843.2cc518"
        },
        {
            "wires": [],
            "name": "",
            "y": 1080,
            "x": 1740,
            "z": "429bd64.63fc828",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "c07af3dc.e58bc"
        },
        {
            "wires": [],
            "name": "",
            "y": 1020,
            "x": 2170,
            "z": "429bd64.63fc828",
            "type": "subflow:bc6ff87.05a2908",
            "id": "be00f51e.4286d8"
        },
        {
            "wires": [
                [
                    "164ffc81.9542f3"
                ]
            ],
            "name": "",
            "y": 1020,
            "x": 1770,
            "z": "429bd64.63fc828",
            "type": "subflow:313bd1d3.01c06e",
            "id": "981913cd.2e3b2"
        },
        {
            "wires": [
                [
                    "981913cd.2e3b2"
                ]
            ],
            "name": "",
            "y": 1020,
            "x": 1490,
            "z": "429bd64.63fc828",
            "type": "subflow:68197f61.7975",
            "id": "1995407f.ffd5c"
        },
        {
            "wires": [
                [
                    "83a830c2.15ab"
                ]
            ],
            "name": "Enc",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.force_encryption = true;\nreturn msg;",
            "y": 1160,
            "x": 450,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "43efb967.640608"
        },
        {
            "wires": [
                [
                    "af9d0519.cd4e88"
                ]
            ],
            "name": "",
            "y": 1160,
            "x": 610,
            "z": "429bd64.63fc828",
            "type": "subflow:3962857e.44abba",
            "id": "83a830c2.15ab"
        },
        {
            "wires": [
                [
                    "9179657b.0713b8"
                ]
            ],
            "name": "User Consumers",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"User Consumers\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\",\"status\",\"password\"],\n    \"doc_type\": \"user\",\n    \"format\": \"array\",\n    \"object\": \"users\",\n    \"returns\": [\"content\"]\n};\nmsg.inputs = {\n    \"user_id\": msg.req.params.userID\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"doc_types\",\n    \"selector\": {\n        \"$or\": [{\"$and\": [{\"doc_type\": \"user\"},{\"status\": \"active\"},{\"_id\": msg.inputs.user_id}]},\n                {\"$and\": [{\"doc_type\": \"provider_link\"},{\"status\": \"active\"},{\"provider_id\": msg.inputs.user_id}]}]\n    }\n};\nreturn msg;",
            "y": 1160,
            "x": 810,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "af9d0519.cd4e88"
        },
        {
            "wires": [
                [
                    "edf86da6.4a2cb"
                ]
            ],
            "name": "",
            "y": 1160,
            "x": 1010,
            "z": "429bd64.63fc828",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "9179657b.0713b8"
        },
        {
            "wires": [
                [
                    "1da746c3.2f3979"
                ],
                [
                    "32d8be6e.52e7e2"
                ],
                [
                    "a7ce1edb.62206"
                ]
            ],
            "name": "Paired Comsumer Ids",
            "outputs": 3,
            "outputLabels": [
                "yes paired",
                "no paired",
                "no device"
            ],
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"users\") || msg.users.length === 0){\n    return [null,null,msg];\n}\nif(!msg.hasOwnProperty(\"provider_links\") || msg.provider_links.length === 0){\n    msg.users = [];\n    return [null,msg,null]\n}\nmsg.paired_user_ids = msg.provider_links.map(a => a.consumer_id);\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"users\",\n    \"selector\": {\n        \"$and\": [{\"doc_type\": \"user\"},{\"status\": \"active\"},{\"_id\":  { \"$in\": msg.paired_user_ids }}]\n    },\n    \"sort\": [{ \"last_name:string\": \"asc\"},{ \"first_name:string\": \"asc\"}],\n};\nif(msg.req.query.hasOwnProperty(\"limit\") || msg.req.query.hasOwnProperty(\"offset\")){\n    if(msg.req.query.hasOwnProperty(\"limit\")){msg.cloudant.limit = parseInt(msg.req.query.limit)}\n    if(msg.req.query.hasOwnProperty(\"offset\")){msg.cloudant.skip = parseInt(msg.req.query.offset)}\n}\nreturn [msg,null,null];",
            "y": 1160,
            "x": 1220,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "edf86da6.4a2cb"
        },
        {
            "wires": [
                [
                    "64396a28.d0d394"
                ]
            ],
            "name": "",
            "y": 1140,
            "x": 1430,
            "z": "429bd64.63fc828",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "1da746c3.2f3979"
        },
        {
            "wires": [],
            "name": "",
            "y": 1160,
            "x": 2070,
            "z": "429bd64.63fc828",
            "type": "subflow:bc6ff87.05a2908",
            "id": "d7edca4f.8d4438"
        },
        {
            "wires": [
                [
                    "3fd78df9.015a42"
                ]
            ],
            "name": "User Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Active user with id: \" + msg.inputs.user_id + \" was not found.\",\n})\nreturn msg;",
            "y": 1180,
            "x": 1420,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "a7ce1edb.62206"
        },
        {
            "wires": [
                [
                    "32d8be6e.52e7e2"
                ]
            ],
            "name": "",
            "y": 1140,
            "x": 1630,
            "z": "429bd64.63fc828",
            "type": "subflow:313bd1d3.01c06e",
            "id": "64396a28.d0d394"
        },
        {
            "wires": [],
            "name": "",
            "y": 1180,
            "x": 1620,
            "z": "429bd64.63fc828",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "3fd78df9.015a42"
        },
        {
            "info": "",
            "wires": [],
            "name": "User Consumers",
            "y": 1120,
            "x": 120,
            "z": "429bd64.63fc828",
            "type": "comment",
            "id": "ba536fc3.c0f86"
        },
        {
            "wires": [
                [
                    "d7edca4f.8d4438"
                ]
            ],
            "name": "Create Users Content",
            "outputs": 1,
            "noerr": 0,
            "func": "var offset = 0;\nvar next = 0;\nvar available = 0;\nif(msg.paired_user_ids) { available = msg.paired_user_ids.length }\nif(msg.cloudant.hasOwnProperty(\"skip\")) {\n    offset = (msg.cloudant.skip || 0);\n    next = offset + (msg[msg.records.object].length);\n}\nmsg.content = {\n    \"consumers\": msg[msg.records.object],\n    \"pagination\": {\n        \"available\": available,\n        \"count\": msg[msg.records.object].length,\n        \"offset\": offset,\n        \"next\": next\n    }\n}\nreturn msg;",
            "y": 1160,
            "x": 1860,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "32d8be6e.52e7e2"
        },
        {
            "wires": [
                [
                    "c3575b75.ef2418"
                ]
            ],
            "name": "Enc",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.force_encryption = true;\nreturn msg;",
            "y": 1240,
            "x": 450,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "6c86ab14.d87224"
        },
        {
            "wires": [
                [
                    "6b4fa77a.b57c68"
                ]
            ],
            "name": "",
            "y": 1240,
            "x": 610,
            "z": "429bd64.63fc828",
            "type": "subflow:3962857e.44abba",
            "id": "c3575b75.ef2418"
        },
        {
            "wires": [
                [
                    "280a4100.fdc7ee"
                ]
            ],
            "name": "User Providers",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"User Providers\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\", \"doc_type\",\"status\",\"password\"],\n    \"doc_type\": \"user\",\n    \"format\": \"array\",\n    \"object\": \"users\",\n    \"returns\": [\"content\"]\n};\nmsg.inputs = {\n    \"user_id\": msg.req.params.userID\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"doc_types\",\n    \"selector\": {\n        \"$or\": [{\"$and\": [{\"doc_type\": \"user\"},{\"status\": \"active\"},{\"_id\": msg.inputs.user_id}]},\n                {\"$and\": [{\"doc_type\": \"provider_link\"},{\"status\": \"active\"},{\"consumer_id\": msg.inputs.user_id}]}]\n    }\n};\nreturn msg;",
            "y": 1240,
            "x": 800,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "6b4fa77a.b57c68"
        },
        {
            "wires": [
                [
                    "6f4cf458.a31a1c"
                ]
            ],
            "name": "",
            "y": 1240,
            "x": 1010,
            "z": "429bd64.63fc828",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "280a4100.fdc7ee"
        },
        {
            "wires": [
                [
                    "2e8c2ad4.66ec36"
                ],
                [
                    "fbfbcdbc.46365"
                ],
                [
                    "b56ec96.20cef38"
                ]
            ],
            "name": "Paired Provider Ids",
            "outputs": 3,
            "outputLabels": [
                "yes paired",
                "no paired",
                "no device"
            ],
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"users\") || msg.users.length === 0){\n    return [null,null,msg];\n}\nif(!msg.hasOwnProperty(\"provider_links\") || msg.provider_links.length === 0){\n    msg.users = [];\n    return [null,msg,null]\n}\nmsg.paired_user_ids = msg.provider_links.map(a => a.provider_id);\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"users\",\n    \"selector\": {\n        \"$and\": [{\"doc_type\": \"user\"},{\"status\": \"active\"},{\"_id\":  { \"$in\": msg.paired_user_ids }}]\n    },\n    \"sort\": [{ \"last_name:string\": \"asc\"},{ \"first_name:string\": \"asc\"}]\n};\nif(msg.req.query.hasOwnProperty(\"limit\") || msg.req.query.hasOwnProperty(\"offset\")){\n    if(msg.req.query.hasOwnProperty(\"limit\")){msg.cloudant.limit = parseInt(msg.req.query.limit)}\n    if(msg.req.query.hasOwnProperty(\"offset\")){msg.cloudant.skip = parseInt(msg.req.query.offset)}\n}\nreturn [msg,null,null];",
            "y": 1240,
            "x": 1210,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "6f4cf458.a31a1c"
        },
        {
            "wires": [
                [
                    "5c663b5a.3a5df4"
                ]
            ],
            "name": "",
            "y": 1220,
            "x": 1430,
            "z": "429bd64.63fc828",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "2e8c2ad4.66ec36"
        },
        {
            "wires": [
                [
                    "8900d65d.b1e5e8"
                ]
            ],
            "name": "User Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"Active user with id: \" + msg.inputs.user_id + \" was not found.\",\n})\nreturn msg;",
            "y": 1260,
            "x": 1420,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "b56ec96.20cef38"
        },
        {
            "wires": [
                [
                    "735ea94c.fcff08"
                ]
            ],
            "name": "Create Providers Content",
            "outputs": 1,
            "noerr": 0,
            "func": "var offset = 0;\nvar next = 0;\nvar available = 0;\nif(msg.paired_user_ids) { available = msg.paired_user_ids.length }\nif(msg.cloudant.hasOwnProperty(\"skip\")) {\n    offset = (msg.cloudant.skip || 0);\n    next = offset + (msg[msg.records.object].length);\n}\nmsg.content = {\n    \"providers\": msg[msg.records.object],\n    \"pagination\": {\n        \"available\": available,\n        \"count\": msg[msg.records.object].length,\n        \"offset\": offset,\n        \"next\": next\n    }\n}\nreturn msg;",
            "y": 1240,
            "x": 1870,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "fbfbcdbc.46365"
        },
        {
            "wires": [
                [
                    "fbfbcdbc.46365"
                ]
            ],
            "name": "",
            "y": 1220,
            "x": 1630,
            "z": "429bd64.63fc828",
            "type": "subflow:313bd1d3.01c06e",
            "id": "5c663b5a.3a5df4"
        },
        {
            "wires": [],
            "name": "",
            "y": 1260,
            "x": 1620,
            "z": "429bd64.63fc828",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "8900d65d.b1e5e8"
        },
        {
            "wires": [],
            "name": "",
            "y": 1240,
            "x": 2070,
            "z": "429bd64.63fc828",
            "type": "subflow:bc6ff87.05a2908",
            "id": "735ea94c.fcff08"
        },
        {
            "info": "",
            "wires": [],
            "name": "User Providers",
            "y": 1200,
            "x": 120,
            "z": "429bd64.63fc828",
            "type": "comment",
            "id": "f02a4214.f8562"
        },
        {
            "wires": [
                [
                    "43efb967.640608"
                ]
            ],
            "name": "",
            "url": "/dapp/users/user/:userID/consumers",
            "upload": false,
            "id": "a7a55c7.6bdd3a",
            "swaggerDoc": "",
            "y": 1160,
            "x": 200,
            "z": "429bd64.63fc828",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "6c86ab14.d87224"
                ]
            ],
            "name": "",
            "url": "/dapp/users/user/:userID/providers",
            "upload": false,
            "id": "15d08ab8.403e05",
            "swaggerDoc": "",
            "y": 1240,
            "x": 190,
            "z": "429bd64.63fc828",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [
                [
                    "f3e272dd.d0c98"
                ]
            ],
            "name": "",
            "url": "/users/user/password_reset",
            "upload": false,
            "id": "7b3aa890.8ba488",
            "swaggerDoc": "",
            "y": 2180,
            "x": 150,
            "z": "1dff07f1.603c08",
            "type": "http in",
            "method": "post"
        },
        {
            "info": "",
            "wires": [],
            "name": "[ ] User Password Reset",
            "y": 2140,
            "x": 130,
            "z": "1dff07f1.603c08",
            "type": "comment",
            "id": "67cda737.c19d48"
        },
        {
            "wires": [
                [
                    "f17225ca.01f9c8"
                ]
            ],
            "name": "",
            "y": 2180,
            "x": 470,
            "z": "1dff07f1.603c08",
            "type": "subflow:3962857e.44abba",
            "id": "f3e272dd.d0c98"
        },
        {
            "wires": [
                [
                    "564122a.12cb3dc"
                ]
            ],
            "name": "Users Password Reset",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"Users Password Reset\"\n    });\nmsg.records = {\n    \"delete\": [\"_rev\",\"doc_type\",\"status\",\"password\"],\n    \"doc_type\": \"user\",\n    \"format\": \"json\",\n    \"object\": \"user\",\n    \"returns\": [\"message\",\"user\"]\n};\nmsg.inputs = {\n    \"required\": [\"email\"],\n    \"allowed\": []\n};\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"user\",\n    \"selector\": {\n        \"$and\": [{\"email\": msg.payload.email},{\"status\": \"active\"}]\n    }\n}\nreturn msg;",
            "y": 2180,
            "x": 680,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "f17225ca.01f9c8"
        },
        {
            "wires": [
                [
                    "5034b236.6829bc"
                ]
            ],
            "name": "",
            "y": 2180,
            "x": 860,
            "z": "1dff07f1.603c08",
            "type": "subflow:71afa3f9.81defc",
            "id": "564122a.12cb3dc"
        },
        {
            "wires": [
                [
                    "be8fad80.20d7b"
                ],
                [
                    "51befd69.2916a4"
                ]
            ],
            "name": "User Found?",
            "outputs": 2,
            "outputLabels": [
                "found",
                "not found"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"user\") && msg.user.length > 0 && msg.user[0].hasOwnProperty(\"doc_type\") && msg.user[0].doc_type === \"user\") {\n    return [msg,null];\n}\nreturn [null,msg];",
            "y": 2180,
            "x": 1210,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "545ffdf0.5ddfc4"
        },
        {
            "wires": [
                [
                    "4512e03c.53bbd"
                ]
            ],
            "name": "",
            "y": 2160,
            "x": 1430,
            "z": "1dff07f1.603c08",
            "type": "subflow:313bd1d3.01c06e",
            "id": "be8fad80.20d7b"
        },
        {
            "wires": [
                [
                    "38333690.40b41a"
                ]
            ],
            "name": "User Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"User with provided email was not found.\",\n})\nreturn msg;",
            "y": 2200,
            "x": 1420,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "51befd69.2916a4"
        },
        {
            "wires": [],
            "name": "",
            "y": 2120,
            "x": 2710,
            "z": "1dff07f1.603c08",
            "type": "subflow:bc6ff87.05a2908",
            "id": "2e318782.d30ea8"
        },
        {
            "wires": [],
            "name": "",
            "y": 2200,
            "x": 2900,
            "z": "1dff07f1.603c08",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "38333690.40b41a"
        },
        {
            "wires": [
                [
                    "545ffdf0.5ddfc4"
                ]
            ],
            "name": "",
            "y": 2180,
            "x": 1030,
            "z": "1dff07f1.603c08",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "5034b236.6829bc"
        },
        {
            "wires": [
                [
                    "2e318782.d30ea8"
                ],
                [
                    "344304a5.8b656c"
                ]
            ],
            "name": "email confirmation",
            "outputs": 2,
            "noerr": 0,
            "func": "if(msg.statusCode !== 200) {\n    return [null,msg]\n}\n\ndelete msg.method; //necessary to avoid error on default nodes\ndelete msg.url;\ndelete msg.responseUrl;\ndelete msg.headers;\ndelete msg.statusCode;\n\nmsg.message = \"An email was sent to \" + msg.inputs.body.email + \" to reset the password.\"\nreturn [msg,null];",
            "y": 2140,
            "x": 2490,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "fea147ea.4d2f88"
        },
        {
            "wires": [
                [
                    "9511a2d2.41a42"
                ],
                [
                    "2781d36b.71c89c"
                ]
            ],
            "name": "App ID Get Token",
            "outputs": 2,
            "outputLabels": [
                "execute",
                "no appid"
            ],
            "noerr": 0,
            "func": "if(global.get(\"VCAP_APPID\")) {\n    msg.iam = {\n        \"type\": \"appid\",\n        \"mgmt\": true\n    }\n    return [msg,null];\n}\nreturn [null,msg]",
            "y": 2160,
            "x": 1630,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "4512e03c.53bbd"
        },
        {
            "tls": "",
            "wires": [
                [
                    "fea147ea.4d2f88"
                ]
            ],
            "name": "",
            "url": "",
            "ret": "obj",
            "id": "ec42f2ba.c9f11",
            "y": 2140,
            "x": 2300,
            "z": "1dff07f1.603c08",
            "type": "http request",
            "method": "use"
        },
        {
            "wires": [
                [
                    "38333690.40b41a"
                ]
            ],
            "name": "APP ID Not Configured",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": {\n        \"code\": \"appid_missing\",\n        \"description\": \"APP ID is not configured on this CF APP\"\n    }\n})\nreturn msg;",
            "y": 2180,
            "x": 1890,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "2781d36b.71c89c"
        },
        {
            "wires": [
                [
                    "8c681569.2ec6e8"
                ]
            ],
            "name": "",
            "y": 2140,
            "x": 1860,
            "z": "1dff07f1.603c08",
            "type": "subflow:ab306e30.d0cc3",
            "id": "9511a2d2.41a42"
        },
        {
            "wires": [
                [
                    "ec42f2ba.c9f11"
                ]
            ],
            "name": "App ID Reset Password",
            "outputs": 1,
            "noerr": 0,
            "func": "var appid = global.get(\"VCAP_APPID\").credentials;\nmsg.method = \"POST\";\nmsg.url = appid.managementUrl + \"/cloud_directory/forgot_password\";\nmsg.headers = {\n    \"Authorization\": msg.appid.authorization\n}\nmsg.payload = {\n    \"tenantId\": appid.tenantId,\n    \"user\": msg.inputs.body.email,\n    \"language\": \"en\"\n};\nreturn msg;",
            "y": 2140,
            "x": 2090,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "8c681569.2ec6e8"
        },
        {
            "wires": [
                [
                    "38333690.40b41a"
                ]
            ],
            "name": "AppID Error",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": msg.statusCode,\n    \"message\": msg.payload\n})\nmsg.payload = {};\nif (msg.hasOwnProperty(\"req\")) {\n    return msg;\n} else {\n    node.warn({\"AppID User Password Reset Error\": msg.errors[0]})\n}",
            "y": 2160,
            "x": 2710,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "344304a5.8b656c"
        },
        {
            "wires": [
                [
                    "d8981bcf.720878"
                ]
            ],
            "name": "XML Options",
            "outputs": 1,
            "noerr": 0,
            "func": "//node.warn({\"XMLs File list\": msg})\nmsg.options = {\n    \"explicitArray\": false,\n    \"ignoreAttrs\": true,\n    \"trim\": true\n}\nreturn msg;",
            "y": 100,
            "x": 1730,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "12f885c1.449e7a"
        },
        {
            "wires": [
                [
                    "ba3441ec.11fe5"
                ]
            ],
            "name": "XML Options",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.xml = msg.payload\nmsg.options = {\n    \"explicitArray\": false,\n    \"ignoreAttrs\": false,\n    \"mergeAttrs\": true,\n    \"trim\": true\n}\nreturn msg;",
            "y": 80,
            "x": 2590,
            "z": "57a5a054.9dfd3",
            "type": "function",
            "id": "ca63e68a.0baf98"
        },
        {
            "wires": [
                [
                    "543f09e7.6d93a8"
                ]
            ],
            "name": "",
            "url": "/pairing/pair/user_to_device",
            "upload": false,
            "id": "81677d22.f17a8",
            "swaggerDoc": "",
            "y": 280,
            "x": 150,
            "z": "c012d9b9.f1e028",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "a11dd7ca.4a0b58"
                ]
            ],
            "name": "",
            "y": 80,
            "x": 1450,
            "z": "e0cd8199.1ad77",
            "type": "subflow:12505187.8b5d0e",
            "id": "3cd3ca14.eae3d6"
        },
        {
            "wires": [
                [
                    "7f36f4fa.4c3d1c"
                ]
            ],
            "name": "User idp_id",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.appid.hasOwnProperty(\"user\") && msg.appid.user.hasOwnProperty(\"id\")) {\n    msg.records[msg.records.object].idp_id = msg.records.idp_id;\n    if(msg.records.password) {\n        msg.records[msg.records.object].password = msg.records.password;\n    }\n}\nnode.warn({\"New Rec User APPID\": msg})\nreturn msg;",
            "y": 80,
            "x": 1630,
            "z": "e0cd8199.1ad77",
            "type": "function",
            "id": "a11dd7ca.4a0b58"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.debug) {\n    node.warn({\"AppID Update User\": msg});\n}",
            "y": 80,
            "x": 2030,
            "z": "67ed0408.e2437c",
            "type": "function",
            "id": "febc43f3.28b13"
        },
        {
            "wires": [
                [
                    "1c8d8d2a.cb8233"
                ]
            ],
            "name": "",
            "y": 200,
            "x": 420,
            "z": "67ed0408.e2437c",
            "type": "subflow:ab306e30.d0cc3",
            "id": "19afbd7b.6020f3"
        },
        {
            "wires": [],
            "name": "",
            "y": 260,
            "x": 1940,
            "z": "67ed0408.e2437c",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "1d92a5f5.e4bf3a"
        },
        {
            "wires": [
                [],
                [
                    "19afbd7b.6020f3"
                ]
            ],
            "name": "AppID Find User",
            "outputs": 2,
            "outputLabels": [
                "skip",
                "ok"
            ],
            "noerr": 0,
            "func": "if (!msg.appid.hasOwnProperty(\"id\")) {\n    if (msg.appid.hasOwnProperty(\"user\") && msg.appid.user.hasOwnProperty(\"id\")) {\n        //update an already available AppID record.\n        msg.appid.id = msg.appid.user.id;\n    } else if (msg.hasOwnProperty(\"user\") && msg.user.length === 1 && msg.user[0].hasOwnProperty(\"idp_id\")) {\n        msg.appid.id = msg.user[0].idp_id;\n    } else if (msg.hasOwnProperty(\"user\") && msg.user.length === 1 && msg.user[0].hasOwnProperty(\"_id\")) {\n        var appID = global.get(\"APPID\");\n        var user_idx = appID.users.c_ids.indexOf(msg.user[0]._id);\n        if (user_idx >= 0) {\n            msg.appid.id = appid.users.idp_id[user_idx];\n        }\n    } else if (msg.hasOwnProperty(\"records\") && msg.records.hasOwnProperty(\"id\")){\n        var appID = global.get(\"APPID\");\n        var user_idx = appID.users.c_ids.indexOf(msg.records.id);\n        if (user_idx >= 0) {\n            msg.appid.id = appID.users.idp_id[user_idx];\n        }\n    }\n}\nif (msg.appid.hasOwnProperty(\"id\")) {\n    if(!msg.iam) { msg.iam = {} }\n    msg.iam.type = \"appid\";\n    return [null,msg];\n} else {\n    return [msg,null];\n}",
            "y": 180,
            "x": 180,
            "z": "67ed0408.e2437c",
            "type": "function",
            "id": "95eb6b24.16f7f8"
        },
        {
            "wires": [
                [
                    "ebda8ac5.8c7668"
                ]
            ],
            "name": "Get User",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.appid.mgmt_url = global.get(\"VCAP_APPID\").credentials.managementUrl;\nmsg.appid.headers = { \"Authorization\": msg.appid.authorization }\nmsg.method = \"GET\";\nmsg.url = msg.appid.mgmt_url + \"/cloud_directory/Users/\" + msg.appid.id;\nmsg.headers = msg.appid.headers;\nreturn msg;",
            "y": 200,
            "x": 600,
            "z": "67ed0408.e2437c",
            "type": "function",
            "id": "1c8d8d2a.cb8233"
        },
        {
            "tls": "",
            "wires": [
                [
                    "102f1dcf.e09442"
                ]
            ],
            "name": "APPID MGMT",
            "url": "",
            "ret": "obj",
            "id": "ebda8ac5.8c7668",
            "y": 200,
            "x": 800,
            "z": "67ed0408.e2437c",
            "type": "http request",
            "method": "use"
        },
        {
            "checkall": "false",
            "z": "67ed0408.e2437c",
            "name": "Error?",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "200"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "17577dda.2dd6d2"
                ],
                [
                    "819b0371.b7a78"
                ]
            ],
            "propertyType": "msg",
            "y": 200,
            "x": 950,
            "property": "statusCode",
            "type": "switch",
            "id": "102f1dcf.e09442"
        },
        {
            "wires": [
                [
                    "8875d11e.92ef9"
                ]
            ],
            "name": "AppID Update User",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.appid.user = msg.payload;\ndelete msg.appid.user.mfaContext;\ndelete msg.appid.user.meta;\ndelete msg.appid.user.schemas;\nvar c_user = msg.user[0];\ndelete msg.method;\ndelete msg.url;\ndelete msg.responseUrl;\ndelete msg.headers;\ndelete msg.statusCode;\nif (msg.appid.user.hasOwnProperty(\"entitlements\")) {\n    msg.appid.user.entitlements.forEach(function (ent,idx) {\n        if (ent.hasOwnProperty(\"bl_cloud\")) {\n            msg.appid.bl_cloud = msg.appid.user.entitlements.splice(idx,1)[0].bl_cloud\n        }\n    })\n} else {\n    msg.appid.user.entitlements = [];\n}\nif (msg.appid.user.hasOwnProperty(\"phoneNumbers\")) {\n    msg.appid.user.phoneNumbers.forEach(function (phone,idx) {\n        if (phone.type === \"mobile\") {\n            msg.appid.mobile = phone;\n        }\n        if (phone.type === \"voice\") {\n            msg.appid.voice = phone;\n        }\n    })\n    msg.appid.user.phoneNumbers = [];\n}\n//Hack to enter voice_phone in AppID\nif(c_user.voice_phone) {\n    msg.appid.updates.voice_phone = c_user.voice_phone\n} else {\n    delete msg.appid.voice;\n}\nif (!msg.appid.hasOwnProperty(\"bl_cloud\")) {\n    msg.appid.bl_cloud = {\n        \"c_id\": c_user._id,\n        \"doc_type\": \"user\",\n        \"role\": c_user.role\n        //\"sub_roles\": c_user.sub_roles\n    }\n}\nif (!msg.appid.bl_cloud.c_id || msg.appid.bl_cloud.c_id === \"\") {\n    msg.appid.bl_cloud.c_id = c_user._id;\n}\n//node.warn({\"AppID Update user - Original\": msg})\nObject.keys(msg.appid.updates).forEach(function (key) {\n    if (key === \"last_name\") {\n        msg.appid.user.displayName = msg.appid.user.name.givenName + \", \" + msg.appid.updates[key];\n        msg.appid.user.name.familyName = msg.appid.updates[key];\n        msg.appid.user.name.formatted = msg.appid.user.name.givenName + \", \" + msg.appid.updates[key];\n    }\n    if (key === \"first_name\") {\n        msg.appid.user.displayName = msg.appid.updates[key] + \", \" + msg.appid.user.name.familyName;\n        msg.appid.user.name.givenName = msg.appid.updates[key];\n        msg.appid.user.name.formatted = msg.appid.updates[key] + \", \" + msg.appid.user.name.familyName;\n    }\n    if (key === \"email\") {\n        msg.appid.user.userName = msg.appid.updates[key];\n        msg.appid.user.emails = [\n            {\n              \"value\": msg.appid.updates[key],\n              \"primary\": true\n            }\n        ];\n    }\n    if (key === \"password\") {\n        msg.appid.user.password = msg.appid.updates[key];\n    }\n    if (key === \"mobile_phone\") {\n        if(msg.appid.updates[key] === \"\") {\n            delete msg.appid.mobile;\n        } else {\n            msg.appid.mobile = {\n                \"value\": msg.appid.updates[key],\n                \"type\": \"mobile\"\n            };\n        }\n    }\n    if (key === \"voice_phone\") {\n        if(msg.appid.updates[key] === \"\"){\n            delete msg.appid.voice;\n        } else {\n            msg.appid.voice = {\n                \"value\": msg.appid.updates[key],\n                \"type\": \"voice\"\n            };\n        }\n    }\n    if (key === \"role\") {\n        msg.appid.bl_cloud.role = msg.appid.updates[key];\n    }\n    if (key === \"sub_roles\") {\n        msg.appid.bl_cloud.sub_roles = msg.appid.updates[key];\n    }\n    if (key === \"c_id\") {\n        msg.appid.bl_cloud.c_id = msg.appid.updates[key];\n    }\n})\nmsg.appid.user.entitlements.push({\"bl_cloud\": msg.appid.bl_cloud});\nif(msg.appid.mobile) {msg.appid.user.phoneNumbers.push(msg.appid.mobile)}\nif(msg.appid.voice) {msg.appid.user.phoneNumbers.push(msg.appid.voice)}\nif(msg.records && msg.records.password) {\n    msg.appid.user.password = msg.records.password;\n}\nmsg.method = \"PUT\";\nmsg.url = msg.appid.mgmt_url + \"/cloud_directory/Users/\" + msg.appid.id;\nmsg.payload = msg.appid.user;\nmsg.headers = msg.appid.headers;\ndelete msg.payload.meta;\ndelete msg.payload.schemas;\ndelete msg.payload.mfaContext;\ndelete msg.payload.id;\n//node.warn({\"AppID Update user - Request\": msg})\nreturn msg;",
            "y": 180,
            "x": 1150,
            "z": "67ed0408.e2437c",
            "type": "function",
            "id": "17577dda.2dd6d2"
        },
        {
            "tls": "",
            "wires": [
                [
                    "7cb661c7.ac4f"
                ]
            ],
            "name": "APPID MGMT",
            "url": "",
            "ret": "obj",
            "id": "8875d11e.92ef9",
            "y": 180,
            "x": 1380,
            "z": "67ed0408.e2437c",
            "type": "http request",
            "method": "use"
        },
        {
            "checkall": "true",
            "z": "67ed0408.e2437c",
            "name": "Error?",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "200"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "45b1df63.9e79a"
                ],
                [
                    "819b0371.b7a78"
                ]
            ],
            "propertyType": "msg",
            "y": 180,
            "x": 1550,
            "property": "statusCode",
            "type": "switch",
            "id": "7cb661c7.ac4f"
        },
        {
            "wires": [
                [
                    "febc43f3.28b13"
                ]
            ],
            "name": "AppID Update User Cleanup",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.appid.user = msg.payload;\n\ndelete msg.method;\ndelete msg.url;\ndelete msg.responseUrl;\ndelete msg.headers;\ndelete msg.statusCode;\nmsg.payload = {};\n\nreturn msg",
            "y": 160,
            "x": 1780,
            "z": "67ed0408.e2437c",
            "type": "function",
            "id": "45b1df63.9e79a"
        },
        {
            "wires": [
                [
                    "1d92a5f5.e4bf3a"
                ]
            ],
            "name": "AppID Error",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nif(msg.payload.schemas) {\n    msg.errors.push({\n        \"code\": 412,\n        \"message\": {\n            \"code\": msg.payload.status,\n            \"description\": msg.payload.detail,\n            \"service\": \"appid\"\n        }\n    });\n} else {\n    msg.payload.service = \"appid\";\n    msg.errors.push({\n        \"code\": msg.statusCode,\n        \"message\": msg.payload\n    });\n}\nmsg.payload = {};\nif (msg.hasOwnProperty(\"req\")) {\n    return msg;\n} else {\n    node.warn({\"AppID Update User Error\": msg.errors[0]});\n}",
            "y": 260,
            "x": 1750,
            "z": "67ed0408.e2437c",
            "type": "function",
            "id": "819b0371.b7a78"
        },
        {
            "wires": [
                [
                    "f5704060.0564c"
                ]
            ],
            "name": "",
            "y": 120,
            "x": 1210,
            "z": "68197f61.7975",
            "type": "subflow:67ed0408.e2437c",
            "id": "120fbfbf.e3ce1"
        },
        {
            "checkall": "false",
            "z": "68197f61.7975",
            "name": "doc_type",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "user"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "device"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "120fbfbf.e3ce1"
                ],
                [
                    "6f3869a9.e36078"
                ]
            ],
            "propertyType": "msg",
            "y": 140,
            "x": 1040,
            "property": "records.doc_type",
            "type": "switch",
            "id": "7294442a.03530c"
        },
        {
            "wires": [
                []
            ],
            "name": "debug",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.api && msg.api.debug) {\n    node.warn({\"AppId Delete User\": msg});\n}",
            "y": 40,
            "x": 2030,
            "z": "9791a478.8db8f8",
            "type": "function",
            "id": "1cc053ad.3cac6c"
        },
        {
            "wires": [
                [
                    "8416becc.ffc55"
                ]
            ],
            "name": "",
            "y": 160,
            "x": 420,
            "z": "9791a478.8db8f8",
            "type": "subflow:ab306e30.d0cc3",
            "id": "ba027845.9a4788"
        },
        {
            "wires": [],
            "name": "",
            "y": 220,
            "x": 1940,
            "z": "9791a478.8db8f8",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "14b60d65.d43573"
        },
        {
            "wires": [
                [],
                [
                    "ba027845.9a4788"
                ]
            ],
            "name": "AppID Find User",
            "outputs": 2,
            "outputLabels": [
                "skip",
                "ok"
            ],
            "noerr": 0,
            "func": "if (!msg.appid.hasOwnProperty(\"id\")) {\n    if (msg.appid.hasOwnProperty(\"user\") && msg.appid.user.hasOwnProperty(\"id\")) {\n        //update an already available AppID record.\n        msg.appid.id = msg.appid.user.id;\n    } else if (msg.hasOwnProperty(\"user\") && msg.user.length === 1 && msg.user[0].hasOwnProperty(\"idp_id\")) {\n        msg.appid.id = msg.user[0].idp_id;\n    } else if (msg.hasOwnProperty(\"user\") && msg.user.length === 1 && msg.user[0].hasOwnProperty(\"_id\")) {\n        var appID = global.get(\"APPID\");\n        var user_idx = appID.users.c_ids.indexOf(msg.user[0]._id);\n        if (user_idx >= 0) {\n            msg.appid.id = appid.users.idp_id[user_idx];\n        }\n    } else if (msg.hasOwnProperty(\"records\") && msg.records.hasOwnProperty(\"id\")){\n        var appID = global.get(\"APPID\");\n        var user_idx = appID.users.c_ids.indexOf(msg.records.id);\n        if (user_idx >= 0) {\n            msg.appid.id = appid.users.idp_id[user_idx];\n        }\n    }\n}\nif (msg.appid.hasOwnProperty(\"id\")) {\n    if(!msg.iam) { msg.iam = {} }\n    msg.iam.type = \"appid\";\n    return [null,msg];\n} else {\n    return [msg,null];\n}",
            "y": 140,
            "x": 180,
            "z": "9791a478.8db8f8",
            "type": "function",
            "id": "f6e12cb0.b33c6"
        },
        {
            "wires": [
                [
                    "b2015582.3bfbe8"
                ]
            ],
            "name": "Get User",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.appid.mgmt_url = global.get(\"VCAP_APPID\").credentials.managementUrl;\nmsg.appid.headers = { \"Authorization\": msg.appid.authorization }\nmsg.method = \"GET\";\nmsg.url = msg.appid.mgmt_url + \"/cloud_directory/Users/\" + msg.appid.id;\nmsg.headers = msg.appid.headers;\nnode.warn({\"APP ID Get User To Delete\": msg})\nreturn msg;",
            "y": 160,
            "x": 600,
            "z": "9791a478.8db8f8",
            "type": "function",
            "id": "8416becc.ffc55"
        },
        {
            "tls": "",
            "wires": [
                [
                    "4d2890f7.3198a"
                ]
            ],
            "name": "APPID MGMT",
            "url": "",
            "ret": "obj",
            "id": "b2015582.3bfbe8",
            "y": 160,
            "x": 800,
            "z": "9791a478.8db8f8",
            "type": "http request",
            "method": "use"
        },
        {
            "checkall": "false",
            "z": "9791a478.8db8f8",
            "name": "200?",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "200"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "957e0ad5.19e238"
                ],
                [
                    "317e43aa.0b92dc"
                ]
            ],
            "propertyType": "msg",
            "y": 160,
            "x": 950,
            "property": "statusCode",
            "type": "switch",
            "id": "4d2890f7.3198a"
        },
        {
            "wires": [
                [
                    "a1a1ecf4.4c93c"
                ]
            ],
            "name": "AppID Delete User",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.appid.user = msg.payload;\ndelete msg.method;\ndelete msg.url;\ndelete msg.responseUrl;\ndelete msg.headers;\ndelete msg.statusCode;\nmsg.payload = {};\nmsg.method = \"DELETE\";\nmsg.url = msg.appid.mgmt_url + \"/cloud_directory/Users/\" + msg.appid.id;\nmsg.headers = msg.appid.headers\nnode.warn({\"APP ID Delete User\": msg})\nreturn msg;",
            "y": 140,
            "x": 1150,
            "z": "9791a478.8db8f8",
            "type": "function",
            "id": "957e0ad5.19e238"
        },
        {
            "tls": "",
            "wires": [
                [
                    "8fd82bbd.458fe8"
                ]
            ],
            "name": "APPID MGMT",
            "url": "",
            "ret": "txt",
            "id": "a1a1ecf4.4c93c",
            "y": 140,
            "x": 1380,
            "z": "9791a478.8db8f8",
            "type": "http request",
            "method": "use"
        },
        {
            "checkall": "true",
            "z": "9791a478.8db8f8",
            "name": "204?",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "204"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "404"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 3,
            "wires": [
                [
                    "6a38926f.37894c"
                ],
                [
                    "6a38926f.37894c"
                ],
                [
                    "317e43aa.0b92dc"
                ]
            ],
            "propertyType": "msg",
            "y": 140,
            "x": 1550,
            "property": "statusCode",
            "type": "switch",
            "id": "8fd82bbd.458fe8"
        },
        {
            "wires": [
                [
                    "1cc053ad.3cac6c",
                    "e659294b.0af3d8"
                ]
            ],
            "name": "AppID Delete User Cleanup",
            "outputs": 1,
            "noerr": 0,
            "func": "node.warn({\"APP ID User Deleted\": msg})\ndelete msg.method;\ndelete msg.url;\ndelete msg.responseUrl;\ndelete msg.headers;\ndelete msg.statusCode;\nmsg.payload = {};\nreturn msg",
            "y": 120,
            "x": 1780,
            "z": "9791a478.8db8f8",
            "type": "function",
            "id": "6a38926f.37894c"
        },
        {
            "wires": [
                [
                    "14b60d65.d43573"
                ]
            ],
            "name": "AppID Error",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nif(msg.payload.schemas) {\n    msg.errors.push({\n        \"code\": 412,\n        \"message\": {\n            \"code\": msg.payload.status,\n            \"description\": msg.payload.detail,\n            \"service\": \"appid\"\n        }\n    });\n} else {\n    msg.payload.service = \"appid\";\n    msg.errors.push({\n        \"code\": msg.statusCode,\n        \"message\": msg.payload\n    });\n}\nmsg.payload = {};\nif (msg.hasOwnProperty(\"req\")) {\n    return msg;\n} else {\n    node.warn({\"AppID Delete User Error\": msg.errors[0]})\n}",
            "y": 220,
            "x": 1750,
            "z": "9791a478.8db8f8",
            "type": "function",
            "id": "317e43aa.0b92dc"
        },
        {
            "wires": [
                [
                    "d065780b.078158"
                ]
            ],
            "name": "",
            "y": 380,
            "x": 1570,
            "z": "1dff07f1.603c08",
            "type": "subflow:9791a478.8db8f8",
            "id": "cd63132a.22867"
        },
        {
            "wires": [
                []
            ],
            "name": "",
            "y": 140,
            "x": 2050,
            "z": "9791a478.8db8f8",
            "type": "subflow:16e7afc8.9866e",
            "id": "e659294b.0af3d8"
        },
        {
            "wires": [
                [
                    "86fcedb.068ad1"
                ]
            ],
            "name": "provider_link",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.records.provider_link = {\n    \"doc_type\": \"provider_link\",\n    \"status\": \"active\",\n    \"provider_id\": \"\",\n    \"consumer_id\": \"\"\n}\nreturn msg;",
            "y": 580,
            "x": 690,
            "z": "df6d98dd.00d378",
            "type": "function",
            "id": "d75b2252.f82da"
        },
        {
            "checkall": "true",
            "z": "a17d8665.50cb88",
            "name": "Reason",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "Setup"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "Technical Support"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "Another Issue"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 4,
            "wires": [
                [
                    "3c679d5e.106a62"
                ],
                [
                    "6aa306d8.afc768"
                ],
                [
                    "d5884c06.42b66"
                ],
                [
                    "eae3a578.634778"
                ]
            ],
            "propertyType": "msg",
            "y": 120,
            "x": 1720,
            "property": "inputs.reason",
            "type": "switch",
            "id": "fecc8b70.269468"
        },
        {
            "wires": [
                [
                    "5d9fcfb4.b94d9"
                ]
            ],
            "name": "",
            "y": 120,
            "x": 2190,
            "z": "a17d8665.50cb88",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "f862bbff.3874b8"
        },
        {
            "wires": [
                [
                    "f862bbff.3874b8"
                ]
            ],
            "name": "Paired Technical Support",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"linked_user_ids\") && msg.linked_user_ids.length > 0) {\n    var linked_user_ids = msg.linked_user_ids.map(a => a.user);\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"support_users\",\n        \"selector\": {\n            \"$and\": [\n                {\"doc_type\": \"user\"},\n                {\"status\": \"active\"},\n                {\"_id\": {\"$in\": linked_user_ids}},\n                {\"sub_roles\": {\n                    \"$or\": [{\"$elemMatch\": { \"$eq\": \"Technical Support\" }}]\n                    }\n                }]\n        }\n    };\n} else {\n    var linked_user_ids = [];\n    delete msg.cloudant;\n}\nreturn msg;",
            "y": 120,
            "x": 1930,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "6aa306d8.afc768"
        },
        {
            "wires": [
                [
                    "f862bbff.3874b8"
                ]
            ],
            "name": "Paired Application Field Sales",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"linked_user_ids\") && msg.linked_user_ids.length > 0) {\n    var linked_user_ids = msg.linked_user_ids.map(a => a.user);\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"support_users\",\n        \"selector\": {\n            \"$and\": [\n                {\"doc_type\": \"user\"},\n                {\"status\": \"active\"},\n                {\"_id\": {\"$in\": linked_user_ids}},\n                {\"sub_roles\": {\n                    \"$or\": [{\"$elemMatch\": { \"$eq\": \"Applications\" }},\n                            {\"$elemMatch\": { \"$eq\": \"Field Sales\" }},\n                            {\"$elemMatch\": { \"$eq\": \"Sales Manager\" }}]\n                    }\n                }]\n        }\n    };\n} else {\n    var linked_user_ids = [];\n    delete msg.cloudant;\n}\nreturn msg;",
            "y": 80,
            "x": 1950,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "3c679d5e.106a62"
        },
        {
            "wires": [
                [
                    "f862bbff.3874b8"
                ]
            ],
            "name": "Paired Customer Service",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"linked_user_ids\") && msg.linked_user_ids.length > 0) {\n    var linked_user_ids = msg.linked_user_ids.map(a => a.user);\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"support_users\",\n        \"selector\": {\n            \"$and\": [\n                {\"doc_type\": \"user\"},\n                {\"status\": \"active\"},\n                {\"_id\": {\"$in\": linked_user_ids}},\n                {\"sub_roles\": {\n                    \"$or\": [{\"$elemMatch\": { \"$eq\": \"Customer Service\" }}]\n                    }\n                }]\n        }\n    };\n} else {\n    var linked_user_ids = [];\n    delete msg.cloudant;\n}\nreturn msg;",
            "y": 200,
            "x": 1930,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "eae3a578.634778"
        },
        {
            "wires": [
                [
                    "f862bbff.3874b8"
                ]
            ],
            "name": "Paired Lens Rep Service",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"linked_user_ids\") && msg.linked_user_ids.length > 0) {\n    var linked_user_ids = msg.linked_user_ids.map(a => a.user);\n    msg.cloudant = {\n        \"request\": \"/stellaris_documents/_find\",\n        \"method\": \"POST\",\n        \"return_obj\": \"docs\",\n        \"object\": \"support_users\",\n        \"selector\": {\n            \"$and\": [\n                {\"doc_type\": \"user\"},\n                {\"status\": \"active\"},\n                {\"_id\": {\"$in\": linked_user_ids}},\n                {\"sub_roles\": {\n                    \"$or\": [{\"$elemMatch\": { \"$eq\": \"Lens Rep\" }}]\n                    }\n                }]\n        }\n    };\n} else {\n    var linked_user_ids = [];\n    delete msg.cloudant;\n}\nreturn msg;",
            "y": 160,
            "x": 1930,
            "z": "a17d8665.50cb88",
            "type": "function",
            "id": "d5884c06.42b66"
        },
        {
            "repeat": "",
            "y": 100,
            "name": "APP ID Users",
            "crontab": "",
            "id": "5b190553.9b57ec",
            "topic": "",
            "payloadType": "date",
            "wires": [
                [
                    "c94de47d.6ad298"
                ]
            ],
            "onceDelay": 0.1,
            "x": 110,
            "z": "92b74b12.836b78",
            "type": "inject",
            "payload": "",
            "once": false
        },
        {
            "wires": [
                [
                    "96909685.696eb8"
                ]
            ],
            "name": "",
            "y": 100,
            "x": 270,
            "z": "92b74b12.836b78",
            "type": "subflow:16e7afc8.9866e",
            "id": "c94de47d.6ad298"
        },
        {
            "wires": [
                [
                    "9e0759f.8c95ca8"
                ],
                [
                    "7dab04eb.e9847c"
                ],
                [
                    "ad030d05.9dc4d"
                ]
            ],
            "name": "Cloudant vs APP ID",
            "outputs": 3,
            "outputLabels": [
                "Update APP ID",
                "Create",
                "Update Cloudant"
            ],
            "noerr": 0,
            "func": "msg.api = {\n    debug: true\n}\nvar appid = global.get(\"APPID\").users;\nvar cloudant = global.get(\"CLOUDANT\").users;\nmsg.appid_update = [];\nvar update = null;\nmsg.appid_create = [];\nvar create = null;\nmsg.cloudant_update = [];\nvar c_update = null;\nvar appid_fields = [\"last_name\", \"first_name\", \"email\", \"mobile_phone\", \"voice_phone\", \"role\"]; //\"password\", \"sub_roles\" \ncloudant.c_ids.forEach(function(id,idx){\n    if(cloudant.records[idx].email !== \"\") {\n        var appid_u_idx = appid.c_ids.indexOf(id)\n        if(appid_u_idx === -1) { appid_u_idx = appid.emails.indexOf(cloudant.emails[idx])}\n        if(appid_u_idx >= 0) {\n            //node.warn(\"cloudant_u_idx: \" + idx)\n            //node.warn(\"appid_u_idx: \" + appid_u_idx)\n            var u_a = appid.records[appid_u_idx];\n            var u_c = cloudant.records[idx];\n            var updates = { };\n            var c_updates = { };\n            Object.keys(u_c).forEach(function(field){\n                if(appid_fields.indexOf(field) >= 0 || field === \"_id\"){\n                    if(Array.isArray(u_c[field])) {\n                        var equal = true;\n                        if(u_a[field]) {\n                            u_c[field].forEach(function(elm){\n                               equal = equal && (u_a[field].indexOf(elm) >= 0);\n                            })\n                            if(!equal) { updates[field] = u_c[field] }\n                        } else {\n                            updates[field] = u_c[field];\n                        }\n                    } else {\n                        if(field === \"_id\") {\n                            if(u_a.c_id !== u_c[field] && u_c[field] !== \"\") { updates.c_id = u_c[field] }\n                        } else {\n                            if(u_a[field] !== u_c[field] && u_c[field] !== \"\") { updates[field] = u_c[field] }\n                        }\n                    }\n                }\n            });\n            if(Object.keys(updates).length > 0) {\n                updates.c_id = u_c._id;\n                updates.idp_id = u_a.idp_id;\n                updates.c_idx = idx;\n                updates.a_idx = appid_u_idx;\n                msg.appid_update.push(updates);\n            }\n            if(!u_c.idp_id || u_c.idp_id === \"\") {\n                c_updates.c_id = u_c._id;\n                c_updates.idp_id = u_a.idp_id;\n                c_updates.c_idx = idx;\n                c_updates.a_idx = appid_u_idx;\n                c_updates.record = u_c;\n                c_updates.record.idp_id = u_a.idp_id;\n                msg.cloudant_update.push(c_updates);\n            }\n        } else {\n            var creates = { };\n            creates.id = cloudant.records[idx]._id;\n            creates.idx = idx;\n            creates.record = cloudant.records[idx];\n            msg.appid_create.push(creates);\n        }\n    }\n});\nvar cloudant = global.get(\"VCAP_CLOUDANT\");\nmsg.cloudant = {\n    \"db_table\": \"stellaris_documents\",\n    \"server\": \"https://\" + cloudant.credentials.host,\n    \"headers\": {\n        \"Authorization\": \"Basic \" + Buffer.from(cloudant.credentials.username + ':' + cloudant.credentials.password).toString('base64')\n    }\n};\nnode.warn(msg)\nif(msg.appid_create.length >= 0) {\n    create = msg;\n    create.records = {\n        \"doc_type\": \"user\", \n        \"object\": \"user\"\n    };\n    create.inputs = {\n        \"body\": {}\n    }\n}\nif(msg.appid_update.length >= 0) {\n    update = msg;\n    update.records = {\n        \"doc_type\": \"user\", \n        \"object\": \"user\"\n    };\n    update.inputs = {\n        \"body\": {}\n    }\n}\nif(msg.cloudant_update.length >= 0) {\n    c_update = msg;\n    c_update.records = {\n        \"doc_type\": \"user\", \n        \"object\": \"user\"\n    };\n    c_update.inputs = {\n        \"body\": {}\n    }\n}\nreturn [update, create, c_update];",
            "y": 100,
            "x": 460,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "96909685.696eb8"
        },
        {
            "wires": [
                [
                    "75d68f55.1dc85",
                    "25e4b999.4eba86"
                ]
            ],
            "name": "Update APP ID",
            "outputs": 1,
            "noerr": 0,
            "func": "var cloudant = global.get(\"CLOUDANT\").users.records;\nif(msg.appid_update.length > 0) {\n    user = msg.appid_update.pop();\n    msg.c_idx = user.c_idx;\n    msg.a_idx = user.a_idx;\n    delete user.c_idx;\n    delete user.a_idx;\n    msg.records.id = user.c_id;\n    //delete user.c_id;\n    msg.inputs.body = user;\n    msg.appid = {\n        \"id\": user.idp_id,\n    };\n    delete user.idp_id;\n    msg.appid.updates = user;\n    msg.user = [cloudant[msg.c_idx]]\n    //node.warn(msg)\n    return msg;\n}",
            "y": 80,
            "x": 700,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "9e0759f.8c95ca8"
        },
        {
            "wires": [
                []
            ],
            "name": "",
            "y": 80,
            "x": 950,
            "z": "92b74b12.836b78",
            "type": "subflow:67ed0408.e2437c",
            "id": "75d68f55.1dc85"
        },
        {
            "wires": [
                [
                    "cc7bdb50.999458",
                    "8308b450.ee63e8"
                ]
            ],
            "name": "Create APP ID",
            "outputs": 1,
            "noerr": 0,
            "func": "var cloudant = global.get(\"CLOUDANT\").users.records;\nif(msg.appid_create.length > 0) {\n    user = msg.appid_create.pop();\n    msg.records.user = user.record;\n    if(msg.records.user.password === \"\") { msg.records.user.password = \"Not.1Pwd\"}\n    /*if(msg.records.user.hasOwnProperty(\"password\")){\n        var password_regex = new RegExp(global.get(\"REGEXP\").password,\"g\");\n        if(typeof msg.records.user.password !== 'string' || (!password_regex.test(msg.records.user.password))) {\n            msg.records.user.password = (msg.records.user.password + \".Bl123456\").substring(0,8);\n        }\n    }*/\n    node.warn(msg)\n    return msg;\n}",
            "y": 180,
            "x": 700,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "7dab04eb.e9847c"
        },
        {
            "wires": [
                [
                    "65c55d25.526784"
                ]
            ],
            "name": "",
            "y": 180,
            "x": 950,
            "z": "92b74b12.836b78",
            "type": "subflow:12505187.8b5d0e",
            "id": "cc7bdb50.999458"
        },
        {
            "wires": [
                [
                    "af869e06.6928"
                ]
            ],
            "name": "User idp_id",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.appid.hasOwnProperty(\"user\") && msg.appid.user.hasOwnProperty(\"id\")) {\n    msg.records[msg.records.object].idp_id = msg.records.idp_id;\n}\nreturn msg;",
            "y": 180,
            "x": 1130,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "65c55d25.526784"
        },
        {
            "wires": [
                [
                    "ba926487.28b428"
                ]
            ],
            "name": "Setup Cloudant Insert",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.url = msg.cloudant.server + \"/\" + msg.cloudant.db_table;\nmsg.headers = msg.cloudant.headers;\nmsg.cloudant.body = msg.records[msg.records.object]\nmsg.payload = msg.cloudant.body;\n//node.warn({\"cloudant Insert\": msg})\nreturn msg;",
            "y": 180,
            "x": 1320,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "af869e06.6928"
        },
        {
            "tls": "",
            "wires": [
                [
                    "dc5c964.efa1b68"
                ]
            ],
            "name": "POST Request",
            "url": "",
            "ret": "obj",
            "id": "bc207eed.0b91",
            "y": 180,
            "x": 1740,
            "z": "92b74b12.836b78",
            "type": "http request",
            "method": "POST"
        },
        {
            "wires": [
                []
            ],
            "name": "Check and Warn",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.payload.hasOwnProperty(\"ok\") && msg.payload.ok && msg.payload.hasOwnProperty(\"id\")) { \n    node.warn({\"Cloudant Link Created\": msg})\n} else {\n    node.warn({\"FAILED to Create to Update Cloudant\": msg})\n}",
            "y": 200,
            "x": 2070,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "6a3e2cf3.c74d94"
        },
        {
            "wires": [
                [
                    "3a28752.8a4e28a"
                ]
            ],
            "name": "Cloudant Query Limit Retry",
            "outputs": 1,
            "outputLabels": [
                "retry"
            ],
            "noerr": 0,
            "func": "msg.payload = msg.cloudant.body;\nmsg.headers = msg.cloudant.headers;",
            "y": 160,
            "x": 2100,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "2d681fe.3cde1e"
        },
        {
            "wires": [
                [
                    "bc207eed.0b91"
                ]
            ],
            "nbRateUnits": "1",
            "name": "Rate Limit 20msg/sec",
            "randomLast": "5",
            "timeoutUnits": "seconds",
            "drop": false,
            "randomUnits": "seconds",
            "rate": "20",
            "timeout": "5",
            "y": 180,
            "x": 1540,
            "randomFirst": "1",
            "z": "92b74b12.836b78",
            "type": "delay",
            "id": "ba926487.28b428",
            "rateUnits": "second",
            "pauseType": "rate"
        },
        {
            "wires": [
                [
                    "ba926487.28b428"
                ]
            ],
            "name": "Cloudant Update in",
            "links": [
                "3a28752.8a4e28a"
            ],
            "y": 240,
            "x": 1400,
            "z": "92b74b12.836b78",
            "type": "link in",
            "id": "3330835f.8d9c4c"
        },
        {
            "wires": [],
            "name": "Cloudant Update out",
            "links": [
                "3330835f.8d9c4c"
            ],
            "y": 160,
            "x": 2275,
            "z": "92b74b12.836b78",
            "type": "link out",
            "id": "3a28752.8a4e28a"
        },
        {
            "checkall": "true",
            "z": "92b74b12.836b78",
            "name": "429",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "429"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "2d681fe.3cde1e"
                ],
                [
                    "6a3e2cf3.c74d94"
                ]
            ],
            "propertyType": "msg",
            "y": 180,
            "x": 1890,
            "property": "statusCode",
            "type": "switch",
            "id": "dc5c964.efa1b68"
        },
        {
            "wires": [
                [
                    "af869e06.6928",
                    "6ad636a6.d56bf8"
                ]
            ],
            "name": "Update Cloudant idp_id",
            "outputs": 1,
            "noerr": 0,
            "func": "var cloudant = global.get(\"CLOUDANT\").users.records;\nif(msg.cloudant_update.length > 0) {\n    user = msg.cloudant_update.pop();\n    msg.records.user = user.record;\n    node.warn(msg)\n    return msg;\n}",
            "y": 280,
            "x": 730,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "ad030d05.9dc4d"
        },
        {
            "checkall": "false",
            "z": "68197f61.7975",
            "name": "doc_type",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "user"
                },
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "device"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "451fd57.ddc742c"
                ],
                [
                    "5767abd4.2b63a4"
                ]
            ],
            "propertyType": "msg",
            "y": 240,
            "x": 1040,
            "property": "records.doc_type",
            "type": "switch",
            "id": "3bb8e474.ba6abc"
        },
        {
            "wires": [
                [
                    "f5704060.0564c"
                ]
            ],
            "name": "",
            "y": 220,
            "x": 1210,
            "z": "68197f61.7975",
            "type": "subflow:12505187.8b5d0e",
            "id": "451fd57.ddc742c"
        },
        {
            "wires": [
                [
                    "f5704060.0564c"
                ]
            ],
            "name": "",
            "y": 260,
            "x": 1210,
            "z": "68197f61.7975",
            "type": "subflow:3cbceae5.45c156",
            "id": "5767abd4.2b63a4"
        },
        {
            "wires": [
                [
                    "25a03c33.80a984"
                ]
            ],
            "name": "",
            "y": 200,
            "x": 3150,
            "z": "e0cd8199.1ad77",
            "type": "subflow:67ed0408.e2437c",
            "id": "9dd93110.befca"
        },
        {
            "wires": [
                [
                    "9dd93110.befca"
                ],
                [
                    "25a03c33.80a984"
                ]
            ],
            "name": "User _id",
            "outputs": 2,
            "outputLabels": [
                "update",
                "skip"
            ],
            "noerr": 0,
            "func": "if(msg.appid) {\n    if (msg.appid[msg.records.object] && msg.appid[msg.records.object].entitlements && msg.appid[msg.records.object].entitlements.length > 0) {\n        var bl_cloud = msg.appid[msg.records.object].entitlements[0].bl_cloud\n        if(!bl_cloud.c_id || bl_cloud.c_id === \"\") {\n            msg.appid.updates = {\n                \"c_id\": msg.records.id\n            }\n        }\n        node.warn({\"Update _id in APPID\": msg})\n        return [msg,null];\n    }\n}\nreturn [null,msg];",
            "y": 220,
            "x": 2960,
            "z": "e0cd8199.1ad77",
            "type": "function",
            "id": "2cddf891.d4a998"
        },
        {
            "wires": [
                [
                    "7a6a50ca.ffcde"
                ]
            ],
            "name": "",
            "y": 720,
            "x": 290,
            "z": "92b74b12.836b78",
            "type": "subflow:16e7afc8.9866e",
            "id": "78633f99.a1d35"
        },
        {
            "repeat": "",
            "y": 720,
            "name": "APP ID Devices",
            "crontab": "",
            "id": "67347cf9.c14434",
            "topic": "",
            "payloadType": "date",
            "wires": [
                [
                    "78633f99.a1d35"
                ]
            ],
            "onceDelay": 0.1,
            "x": 120,
            "z": "92b74b12.836b78",
            "type": "inject",
            "payload": "",
            "once": false
        },
        {
            "wires": [
                [
                    "296d6869.3d2868"
                ],
                [
                    "40c4a028.469d7"
                ],
                [
                    "b8ee31a2.d6ac2"
                ]
            ],
            "name": "Cloudant vs APP ID",
            "outputs": 3,
            "outputLabels": [
                "Update APP ID",
                "Create",
                "Update Cloudant"
            ],
            "noerr": 0,
            "func": "msg.api = {\n    debug: true\n}\nvar appid = global.get(\"APPID\").devices;\nvar cloudant = global.get(\"CLOUDANT\").devices;\nmsg.appid_update = [];\nvar update = null;\nmsg.appid_create = [];\nvar create = null;\nmsg.cloudant_update = [];\nvar c_update = null;\nvar appid_fields = [\"idp_id\",\"c_id\",\"email\",\"system_type\"];\ncloudant.c_ids.forEach(function(id,idx){\n    if(cloudant.records[idx]._id !== \"\") {\n        var appid_d_idx = appid.c_ids.indexOf(id)\n        if(appid_d_idx >= 0) {\n            var d_a = appid.records[appid_d_idx];\n            var d_c = cloudant.records[idx];\n            var updates = { };\n            var c_updates = { };\n            Object.keys(d_c).forEach(function(field){\n                if(appid_fields.indexOf(field) >= 0 || field === \"_id\"){\n                    if(Array.isArray(d_c[field])) {\n                        var equal = true;\n                        if(d_a[field]) {\n                            d_c[field].forEach(function(elm){\n                               equal = equal && (d_a[field].indexOf(elm) >= 0);\n                            })\n                            if(!equal) { updates[field] = d_c[field] }\n                        } else {\n                            updates[field] = d_c[field];\n                        }\n                    } else {\n                        if(field === \"_id\") {\n                            if(d_a.c_id !== d_c[field] && d_c[field] !== \"\") { updates.c_id = d_c[field] }\n                        } else {\n                            if(d_a[field] !== d_c[field] && d_c[field] !== \"\") { updates[field] = d_c[field] }\n                        }\n                    }\n                }\n            });\n            if(Object.keys(updates).length > 0) {\n                updates.c_id = d_c._id;\n                updates.idp_id = d_a.idp_id;\n                updates.c_idx = idx;\n                updates.a_idx = appid_d_idx;\n                msg.appid_update.push(updates);\n            }\n            if(!d_c.idp_id || d_c.idp_id === \"\" || !d_c.email) {\n                c_updates.c_id = d_c._id;\n                c_updates.idp_id = d_a.idp_id;\n                c_updates.c_idx = idx;\n                c_updates.a_idx = appid_d_idx;\n                c_updates.record = d_c;\n                c_updates.record.idp_id = d_a.idp_id;\n                c_updates.record.email = d_a.email;\n                msg.cloudant_update.push(c_updates);\n            }\n        } else {\n            var creates = { };\n            creates.id = cloudant.records[idx]._id;\n            creates.idx = idx;\n            creates.record = cloudant.records[idx];\n            msg.appid_create.push(creates);\n        }\n    }\n});\nvar cloudant = global.get(\"VCAP_CLOUDANT\");\nmsg.cloudant = {\n    \"db_table\": \"stellaris_documents\",\n    \"server\": \"https://\" + cloudant.credentials.host,\n    \"headers\": {\n        \"Authorization\": \"Basic \" + Buffer.from(cloudant.credentials.username + ':' + cloudant.credentials.password).toString('base64')\n    }\n};\nnode.warn(msg)\nif(msg.appid_create.length >= 0) {\n    create = msg;\n    create.records = {\n        \"doc_type\": \"device\", \n        \"object\": \"device\"\n    };\n    create.inputs = {\n        \"body\": {}\n    }\n}\nif(msg.appid_update.length >= 0) {\n    update = msg;\n    update.records = {\n        \"doc_type\": \"device\", \n        \"object\": \"device\"\n    };\n    update.inputs = {\n        \"body\": {}\n    }\n}\nif(msg.cloudant_update.length >= 0) {\n    c_update = msg;\n    c_update.records = {\n        \"doc_type\": \"device\", \n        \"object\": \"device\"\n    };\n    c_update.inputs = {\n        \"body\": {}\n    }\n}\nreturn [update, create, c_update];",
            "y": 720,
            "x": 470,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "7a6a50ca.ffcde"
        },
        {
            "wires": [
                [
                    "c1e66121.603b7",
                    "26cfad83.10e562"
                ]
            ],
            "name": "Update APP ID",
            "outputs": 1,
            "noerr": 0,
            "func": "var cloudant = global.get(\"CLOUDANT\").users.records;\nif(msg.appid_update.length > 0) {\n    user = msg.appid_update.pop();\n    msg.c_idx = user.c_idx;\n    msg.a_idx = user.a_idx;\n    delete user.c_idx;\n    delete user.a_idx;\n    msg.records.id = user.c_id;\n    //delete user.c_id;\n    msg.inputs.body = user;\n    msg.appid = {\n        \"id\": user.idp_id,\n    };\n    delete user.idp_id;\n    msg.appid.updates = user;\n    msg.user = [cloudant[msg.c_idx]]\n    //node.warn(msg)\n    return msg;\n}",
            "y": 700,
            "x": 720,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "296d6869.3d2868"
        },
        {
            "wires": [
                [
                    "f8106a50.4a9638",
                    "27163815.04e0a8"
                ]
            ],
            "name": "Create APP ID",
            "outputs": 1,
            "noerr": 0,
            "func": "var genPwd = global.get(\"genpwd\");\nvar cloudant = global.get(\"CLOUDANT\").devices.records;\nif(msg.appid_create.length > 0) {\n    device = msg.appid_create.pop();\n    msg.records.device = device.record;\n    if(!msg.records.password || msg.records.device.password === \"\") {\n        msg.records.password = genPwd.generate(global.get(\"PWD_GEN\"));\n        msg.records.device.password = msg.records.password;\n    }\n    /*if(msg.records.device.hasOwnProperty(\"password\")){\n        var password_regex = new RegExp(global.get(\"REGEXP\").password,\"g\");\n        if(typeof msg.records.device.password !== 'string' || (!password_regex.test(msg.records.device.password))) {\n            msg.records.device.password = (msg.records.device.password + \".Bl123456\").substring(0,8);\n        }\n    }*/\n    node.warn(msg)\n    return msg;\n}",
            "y": 800,
            "x": 720,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "40c4a028.469d7"
        },
        {
            "wires": [
                [
                    "271684f7.646f7c",
                    "a967331c.b112"
                ]
            ],
            "name": "Update Cloudant idp_id",
            "outputs": 1,
            "noerr": 0,
            "func": "var cloudant = global.get(\"CLOUDANT\").devices.records;\nif(msg.cloudant_update.length > 0) {\n    device = msg.cloudant_update.pop();\n    msg.records.device = device.record;\n    node.warn(msg)\n    return msg;\n}",
            "y": 900,
            "x": 750,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "b8ee31a2.d6ac2"
        },
        {
            "wires": [
                [
                    "3bed7796.a42fe8"
                ]
            ],
            "nbRateUnits": "1",
            "name": "Rate Limit 20msg/sec",
            "randomLast": "5",
            "timeoutUnits": "seconds",
            "drop": false,
            "randomUnits": "seconds",
            "rate": "20",
            "timeout": "5",
            "y": 800,
            "x": 1580,
            "randomFirst": "1",
            "z": "92b74b12.836b78",
            "type": "delay",
            "id": "51720b16.1f9954",
            "rateUnits": "second",
            "pauseType": "rate"
        },
        {
            "tls": "",
            "wires": [
                [
                    "408b1367.2b750c"
                ]
            ],
            "name": "POST Request",
            "url": "",
            "ret": "obj",
            "id": "3bed7796.a42fe8",
            "y": 800,
            "x": 1780,
            "z": "92b74b12.836b78",
            "type": "http request",
            "method": "POST"
        },
        {
            "wires": [
                [
                    "51720b16.1f9954"
                ]
            ],
            "name": "Cloudant Update in",
            "links": [
                "2314eb4f.de3e04"
            ],
            "y": 860,
            "x": 1420,
            "z": "92b74b12.836b78",
            "type": "link in",
            "id": "c8501d0a.e5d3c"
        },
        {
            "checkall": "true",
            "z": "92b74b12.836b78",
            "name": "429",
            "repair": false,
            "rules": [
                {
                    "vt": "str",
                    "t": "eq",
                    "v": "429"
                },
                {
                    "t": "else"
                }
            ],
            "outputs": 2,
            "wires": [
                [
                    "6ccabdc8.b724f4"
                ],
                [
                    "e85ebd88.55ab7"
                ]
            ],
            "propertyType": "msg",
            "y": 800,
            "x": 1930,
            "property": "statusCode",
            "type": "switch",
            "id": "408b1367.2b750c"
        },
        {
            "wires": [
                [
                    "2314eb4f.de3e04"
                ]
            ],
            "name": "Cloudant Query Limit Retry",
            "outputs": 1,
            "outputLabels": [
                "retry"
            ],
            "noerr": 0,
            "func": "msg.payload = msg.cloudant.body;\nmsg.headers = msg.cloudant.headers;",
            "y": 780,
            "x": 2140,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "6ccabdc8.b724f4"
        },
        {
            "wires": [
                []
            ],
            "name": "Check and Warn",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.payload.hasOwnProperty(\"ok\") && msg.payload.ok && msg.payload.hasOwnProperty(\"id\")) { \n    node.warn({\"Cloudant Link Created\": msg})\n} else {\n    node.warn({\"FAILED to Create to Update Cloudant\": msg})\n}",
            "y": 820,
            "x": 2110,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "e85ebd88.55ab7"
        },
        {
            "wires": [],
            "name": "Cloudant Update out",
            "links": [
                "c8501d0a.e5d3c"
            ],
            "y": 780,
            "x": 2315,
            "z": "92b74b12.836b78",
            "type": "link out",
            "id": "2314eb4f.de3e04"
        },
        {
            "wires": [
                []
            ],
            "name": "",
            "y": 700,
            "x": 980,
            "z": "92b74b12.836b78",
            "type": "subflow:11fa1bee.eb6984",
            "id": "26cfad83.10e562"
        },
        {
            "wires": [
                [
                    "fcdc6788.a96a38"
                ]
            ],
            "name": "",
            "y": 800,
            "x": 970,
            "z": "92b74b12.836b78",
            "type": "subflow:3cbceae5.45c156",
            "id": "27163815.04e0a8"
        },
        {
            "wires": [
                [
                    "51720b16.1f9954"
                ]
            ],
            "name": "Setup Cloudant Insert",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.url = msg.cloudant.server + \"/\" + msg.cloudant.db_table;\nmsg.headers = msg.cloudant.headers;\nmsg.cloudant.body = msg.records[msg.records.object]\nmsg.payload = msg.cloudant.body;\n//node.warn({\"cloudant Insert\": msg})\nreturn msg;",
            "y": 800,
            "x": 1360,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "271684f7.646f7c"
        },
        {
            "wires": [
                [
                    "271684f7.646f7c"
                ]
            ],
            "name": "Device idp_id",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.appid.hasOwnProperty(\"device\") && msg.appid.device.hasOwnProperty(\"id\")) {\n    msg.records[msg.records.object].idp_id = msg.records.idp_id;\n    msg.records[msg.records.object].password = msg.records.password;\n}\nreturn msg;",
            "y": 800,
            "x": 1160,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "fcdc6788.a96a38"
        },
        {
            "wires": [
                [
                    "727cae6a.f8bd9"
                ]
            ],
            "name": "",
            "y": 1160,
            "x": 290,
            "z": "92b74b12.836b78",
            "type": "subflow:16e7afc8.9866e",
            "id": "2918ce69.71ace2"
        },
        {
            "repeat": "",
            "y": 1160,
            "name": "APP ID Devices",
            "crontab": "",
            "id": "6e51de9c.8c5c8",
            "topic": "",
            "payloadType": "date",
            "wires": [
                [
                    "2918ce69.71ace2"
                ]
            ],
            "onceDelay": 0.1,
            "x": 120,
            "z": "92b74b12.836b78",
            "type": "inject",
            "payload": "",
            "once": false
        },
        {
            "wires": [
                [
                    "f771aa48.27be58"
                ]
            ],
            "name": "APP ID vs Cloudant",
            "outputs": 1,
            "outputLabels": [
                "Update APP ID"
            ],
            "noerr": 0,
            "func": "msg.api = {\n    debug: true\n}\nvar appid = global.get(\"APPID\").devices;\nvar cloudant = global.get(\"CLOUDANT\").devices;\nmsg.appid_delete = [];\nappid.c_ids.forEach(function(id,idx){\n    if(cloudant.c_ids.indexOf(id) < 0) {\n            msg.appid_delete.push(appid.idp_ids[idx]);\n    }\n})\nnode.warn(msg);\nif(msg.appid_delete.length >= 0) {\n    a_delete = msg;\n}\nreturn [a_delete];",
            "y": 1160,
            "x": 480,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "727cae6a.f8bd9"
        },
        {
            "wires": [
                [
                    "1ab84080.35e18",
                    "e3a495c8.16ecd8"
                ]
            ],
            "name": "Delete APP ID",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.appid_delete.length > 0) {\n    user = msg.appid_delete.pop();\n    msg.appid.id = user\n    node.warn(user)\n    return msg;\n}",
            "y": 1160,
            "x": 740,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "f771aa48.27be58"
        },
        {
            "wires": [
                [
                    "3441d3ba.93abbc"
                ]
            ],
            "nbRateUnits": "5",
            "name": "",
            "randomLast": "5",
            "timeoutUnits": "seconds",
            "drop": true,
            "randomUnits": "seconds",
            "rate": "1",
            "timeout": "5",
            "y": 180,
            "x": 180,
            "randomFirst": "1",
            "z": "16e7afc8.9866e",
            "type": "delay",
            "id": "609f1982.3171a8",
            "rateUnits": "second",
            "pauseType": "rate"
        },
        {
            "wires": [
                [
                    "b68f6560.aad2b8"
                ]
            ],
            "name": "Setup APP ID Delete",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.method = \"DELETE\";\nmsg.url = msg.appid.mgmt_url + \"/cloud_directory/Users/\" + msg.appid.id;\nmsg.headers = msg.appid.headers;\nreturn msg;",
            "y": 1160,
            "x": 1360,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "79cd2c2f.4d0864"
        },
        {
            "wires": [
                [
                    "79cd2c2f.4d0864"
                ]
            ],
            "name": "",
            "y": 1160,
            "x": 1160,
            "z": "92b74b12.836b78",
            "type": "subflow:ab306e30.d0cc3",
            "id": "edb0de38.b1ce4"
        },
        {
            "wires": [
                [
                    "edb0de38.b1ce4"
                ]
            ],
            "name": "AppID Get Token",
            "outputs": 1,
            "outputLabels": [
                "skip"
            ],
            "noerr": 0,
            "func": "if (msg.appid.hasOwnProperty(\"id\")) {\n    if(!msg.iam) { msg.iam = {} }\n    msg.iam.type = \"appid\";\n    return msg\n}",
            "y": 1160,
            "x": 970,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "1ab84080.35e18"
        },
        {
            "tls": "",
            "wires": [
                [
                    "4201d651.b99128"
                ]
            ],
            "name": "APPID MGMT",
            "url": "",
            "ret": "txt",
            "id": "b68f6560.aad2b8",
            "y": 1160,
            "x": 1560,
            "z": "92b74b12.836b78",
            "type": "http request",
            "method": "use"
        },
        {
            "wires": [
                []
            ],
            "name": "AppID User Deleted",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.statusCode === 204 || msg.statusCode === 404 ){\n    node.warn(\"APP ID User Deleted: \" + msg.appid.id);\n} else {\n    node.warn(\"WARNING: Problem Deleting APP ID User: \" + msg.appid.id);\n}\n    ",
            "y": 1160,
            "x": 1780,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "4201d651.b99128"
        },
        {
            "wires": [
                [
                    "b8ee31a2.d6ac2"
                ]
            ],
            "nbRateUnits": "3",
            "name": "",
            "randomLast": "5",
            "timeoutUnits": "seconds",
            "drop": true,
            "randomUnits": "seconds",
            "rate": "1",
            "timeout": "2",
            "y": 940,
            "x": 740,
            "randomFirst": "1",
            "z": "92b74b12.836b78",
            "type": "delay",
            "id": "a967331c.b112",
            "rateUnits": "second",
            "pauseType": "delay"
        },
        {
            "wires": [
                [
                    "40c4a028.469d7"
                ]
            ],
            "nbRateUnits": "3",
            "name": "",
            "randomLast": "5",
            "timeoutUnits": "seconds",
            "drop": true,
            "randomUnits": "seconds",
            "rate": "1",
            "timeout": "2",
            "y": 840,
            "x": 720,
            "randomFirst": "1",
            "z": "92b74b12.836b78",
            "type": "delay",
            "id": "f8106a50.4a9638",
            "rateUnits": "second",
            "pauseType": "delay"
        },
        {
            "wires": [
                [
                    "296d6869.3d2868"
                ]
            ],
            "nbRateUnits": "3",
            "name": "",
            "randomLast": "5",
            "timeoutUnits": "seconds",
            "drop": true,
            "randomUnits": "seconds",
            "rate": "1",
            "timeout": "2",
            "y": 740,
            "x": 720,
            "randomFirst": "1",
            "z": "92b74b12.836b78",
            "type": "delay",
            "id": "c1e66121.603b7",
            "rateUnits": "second",
            "pauseType": "delay"
        },
        {
            "wires": [
                [
                    "ad030d05.9dc4d"
                ]
            ],
            "nbRateUnits": "3",
            "name": "",
            "randomLast": "5",
            "timeoutUnits": "seconds",
            "drop": true,
            "randomUnits": "seconds",
            "rate": "1",
            "timeout": "2",
            "y": 320,
            "x": 740,
            "randomFirst": "1",
            "z": "92b74b12.836b78",
            "type": "delay",
            "id": "6ad636a6.d56bf8",
            "rateUnits": "second",
            "pauseType": "delay"
        },
        {
            "wires": [
                [
                    "7dab04eb.e9847c"
                ]
            ],
            "nbRateUnits": "3",
            "name": "",
            "randomLast": "5",
            "timeoutUnits": "seconds",
            "drop": true,
            "randomUnits": "seconds",
            "rate": "1",
            "timeout": "2",
            "y": 220,
            "x": 700.6666870117188,
            "randomFirst": "1",
            "z": "92b74b12.836b78",
            "type": "delay",
            "id": "8308b450.ee63e8",
            "rateUnits": "second",
            "pauseType": "delay"
        },
        {
            "wires": [
                [
                    "9e0759f.8c95ca8"
                ]
            ],
            "nbRateUnits": "3",
            "name": "",
            "randomLast": "5",
            "timeoutUnits": "seconds",
            "drop": true,
            "randomUnits": "seconds",
            "rate": "1",
            "timeout": "2",
            "y": 120,
            "x": 700,
            "randomFirst": "1",
            "z": "92b74b12.836b78",
            "type": "delay",
            "id": "25e4b999.4eba86",
            "rateUnits": "second",
            "pauseType": "delay"
        },
        {
            "wires": [
                [
                    "2ae62aa7.76b926"
                ]
            ],
            "name": "Create Link Content",
            "outputs": 1,
            "noerr": 0,
            "func": "var dapp_user = msg[msg.records.object]\nmsg.content = dapp_user\nreturn msg;",
            "y": 900,
            "x": 2360,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "f8d88d89.52923"
        },
        {
            "wires": [
                [
                    "be00f51e.4286d8"
                ]
            ],
            "name": "Create Link Content",
            "outputs": 1,
            "noerr": 0,
            "func": "var dapp_user = msg[msg.records.object]\nmsg.content = dapp_user\nreturn msg;",
            "y": 1020,
            "x": 1980,
            "z": "429bd64.63fc828",
            "type": "function",
            "id": "164ffc81.9542f3"
        },
        {
            "wires": [
                [
                    "f771aa48.27be58"
                ]
            ],
            "nbRateUnits": "3",
            "name": "",
            "randomLast": "5",
            "timeoutUnits": "seconds",
            "drop": true,
            "randomUnits": "seconds",
            "rate": "1",
            "timeout": "2",
            "y": 1200,
            "x": 740,
            "randomFirst": "1",
            "z": "92b74b12.836b78",
            "type": "delay",
            "id": "e3a495c8.16ecd8",
            "rateUnits": "second",
            "pauseType": "delay"
        },
        {
            "repeat": "",
            "y": 400,
            "name": "Delete Empty EULA Users",
            "crontab": "",
            "id": "e97a6c55.0cecc",
            "topic": "",
            "payloadType": "date",
            "wires": [
                [
                    "9cbe7c78.b28d1"
                ]
            ],
            "onceDelay": 0.1,
            "x": 150,
            "z": "92b74b12.836b78",
            "type": "inject",
            "payload": "",
            "once": false
        },
        {
            "wires": [
                [
                    "4a497893.8b66e8"
                ]
            ],
            "name": "Get Cloudant Users",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.api){msg.api = {}}\nmsg.start_time = Date.now();\nflow.set(\"appid\",false);\nflow.set(\"users\",false);\nflow.set(\"devices\",false);\nif(!msg.iam) {msg.iam = {}}\nmsg.iam.type = \"appid\";\nmsg.iam.mgmt = false;\nmsg.cloudant = {\n    \"request\": \"/stellaris_documents/_find\",\n    \"method\": \"POST\",\n    \"return_obj\": \"docs\",\n    \"object\": \"users\",\n    \"selector\": {\n        \"$and\": [\n        \t{ \"doc_type\": { \"$in\": [\"user\"] } },\n        \t{ \"eula_accept_status\": \"not accepted\" },\n        \t{ \"eula_create_date\": { \"$lt\": (Date.now() - 86400000) } },\n        \t{ \"eula_accept_date\": 0 },\n        \t{ \"idp_id\": { \"$exists\": false } }\n        \t]\n    },\n    \"fields\":  [\"_id\", \"_rev\"],\n    \"sort\": [{\"email:string\":\"asc\"}]\n}\nreturn msg;",
            "y": 400,
            "x": 370,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "9cbe7c78.b28d1"
        },
        {
            "wires": [
                [
                    "149f9d85.bd4462"
                ]
            ],
            "name": "",
            "y": 400,
            "x": 570,
            "z": "92b74b12.836b78",
            "type": "subflow:d35dd8d5.3b2a88",
            "id": "4a497893.8b66e8"
        },
        {
            "wires": [
                [
                    "6e8ab9a2.394bc8"
                ]
            ],
            "name": "Get Cloudant Users Cleanup",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.users && msg.users.length >0 ){\n    msg.users.forEach(function(user){\n        user[\"_deleted\"] =  true;\n    })\n    msg.payload.docs = msg.users;\n    msg.headers = msg.cloudant.headers;\n    msg.url = msg.cloudant.server + \"/stellaris_documents/_bulk_docs\";\n    node.warn(msg)\n    return msg;\n}",
            "y": 400,
            "x": 800,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "149f9d85.bd4462"
        },
        {
            "tls": "",
            "wires": [
                [
                    "7443fd98.33ccd4"
                ]
            ],
            "name": "Bulk Delete",
            "url": "",
            "ret": "obj",
            "id": "6e8ab9a2.394bc8",
            "y": 400,
            "x": 1010,
            "z": "92b74b12.836b78",
            "type": "http request",
            "method": "POST"
        },
        {
            "wires": [
                []
            ],
            "name": "Bulk Update Returns",
            "outputs": 1,
            "noerr": 0,
            "func": "if (Array.isArray(msg.payload)) {\n    msg.bulk_update = msg.payload;\n    msg.deleted_ids = msg.payload.map(a => a.id);\n}\ndelete msg.method;\ndelete msg.url;\ndelete msg.responseUrl;\ndelete msg.headers;\ndelete msg.statusCode;\nnode.warn({\"WARNING: EULA User Bulk Deleted\": msg})\nreturn msg;",
            "y": 400,
            "x": 1200,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "7443fd98.33ccd4"
        },
        {
            "repeat": "",
            "y": 480,
            "name": "Cloudant vs AppID",
            "crontab": "",
            "id": "c1daf3ae.7aca9",
            "topic": "",
            "payloadType": "date",
            "wires": [
                [
                    "e0c97a1.8681488"
                ]
            ],
            "onceDelay": 0.1,
            "x": 130,
            "z": "92b74b12.836b78",
            "type": "inject",
            "payload": "",
            "once": false
        },
        {
            "wires": [
                [
                    "98c50352.40653"
                ]
            ],
            "name": "Get Cloudant Users",
            "outputs": 1,
            "noerr": 0,
            "func": "var cloudant = global.get(\"CLOUDANT\").users;\nvar appid = global.get(\"APPID\").users;\nmsg.cloudant_missing = [];\nmsg.appid_missing = [];\ncloudant.idp_ids.forEach(function(idp_id,c_idx) {\n    var a_idx = appid.idp_ids.indexOf(idp_id);\n    if( a_idx < 0) {\n        msg.cloudant_missing.push(cloudant.records[c_idx])\n    }\n})\nappid.c_ids.forEach(function(c_id,a_idx) {\n    var c_idx = cloudant.c_ids.indexOf(c_id);\n    if( c_idx < 0) {\n        msg.appid_missing.push(appid.records[a_idx])\n    }\n})\n// find duplicates\nmsg.cloudant_dup = [];\ncloudant.idp_ids.forEach(function(idp_id,c_idx){\n    var dup_idx = cloudant.idp_ids.indexOf(idp_id,c_idx+1)\n    if(dup_idx >= 0) {\n        msg.cloudant_dup.push(cloudant.records[c_idx]);\n        msg.cloudant_dup.push(cloudant.records[dup_idx]);\n    }\n})\nmsg.appid_dup = [];\nappid.c_ids.forEach(function(c_id,a_idx){\n    var dup_idx = appid.c_ids.indexOf(c_id,a_idx+1)\n    if(dup_idx >= 0) {\n        msg.appid_dup.push(appid.records[c_idx]);\n        msg.appid_dup.push(appid.records[dup_idx]);\n    }\n})\nnode.warn({\"Cloudant vs AppID\": msg});\nif(msg.appid_missing.length > 0) {\n    return msg;\n}",
            "y": 480,
            "x": 350,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "e0c97a1.8681488"
        },
        {
            "wires": [
                []
            ],
            "name": "",
            "y": 480,
            "x": 770,
            "z": "92b74b12.836b78",
            "type": "subflow:9791a478.8db8f8",
            "id": "20c938ed.aaac68"
        },
        {
            "wires": [
                [
                    "cfe7f6.2abdd808",
                    "20c938ed.aaac68"
                ]
            ],
            "name": "Delete APP ID",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.appid_missing.length > 0) {\n    if(!msg.appid) {msg.appid = {} }\n    msg.appid.id = msg.appid_missing.pop().idp_id;\n    node.warn({\"Deleting AppID user\": msg})\n    return msg;\n}",
            "y": 480,
            "x": 560,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "98c50352.40653"
        },
        {
            "wires": [
                [
                    "98c50352.40653"
                ]
            ],
            "nbRateUnits": "3",
            "name": "",
            "randomLast": "5",
            "timeoutUnits": "seconds",
            "drop": true,
            "randomUnits": "seconds",
            "rate": "1",
            "timeout": "2",
            "y": 520,
            "x": 560.6666870117188,
            "randomFirst": "1",
            "z": "92b74b12.836b78",
            "type": "delay",
            "id": "cfe7f6.2abdd808",
            "rateUnits": "second",
            "pauseType": "delay"
        },
        {
            "repeat": "",
            "y": 580,
            "name": "Check Cloudant Users",
            "crontab": "",
            "id": "31c97bd0.51ccf4",
            "topic": "",
            "payloadType": "date",
            "wires": [
                [
                    "4e5eaec7.d952c"
                ]
            ],
            "onceDelay": 0.1,
            "x": 140,
            "z": "92b74b12.836b78",
            "type": "inject",
            "payload": "",
            "once": false
        },
        {
            "wires": [
                []
            ],
            "name": "Get Cloudant Users",
            "outputs": 1,
            "noerr": 0,
            "func": "var cloudant = global.get(\"CLOUDANT\").users;\nmsg.problems = {};\nmsg.total_users = cloudant.records.length;\ncloudant.records.forEach(function(user,idx){\n    user.bad = {};\n    var  model_keys = Object.keys(msg.records.user);\n    var user_keys = Object.keys(user);\n    model_keys.forEach(function(key){\n        if(user.hasOwnProperty(key)) {\n            switch (key) {\n                case \"status\":\n                    if(user[key] === \"\") { user.bad[key] = \"EMPTY NOT ALLOWED\" }\n                    break;\n                case \"role\":\n                    if(user[key] === \"\") { user.bad[key] = \"EMPTY NOT ALLOWED\" }\n                    if(user[key] !== \"\" && [\"Surgeon\",\"Sales\",\"Service\",\"R&D\",\"Data Analyst\"].indexOf(user[key]) < 0 ) { user.bad[key] = \"VALUE NOT SUPPORTED\" }\n                    break;\n                case \"sub_roles\":\n                    if(!Array.isArray(user[key])) { user.bad[key] = \"MUST BE AN ARRAY\" }\n                    if(Array.isArray(user[key]) && user[key].length === 0 && user.role !== \"Surgeon\") { user.bad[key] = \"MUST BE AN ARRAY OF 1 VALUE MIN\" }\n                    break;\n                case \"uid\":\n                    break;\n                case \"first_name\":\n                    if(user[key] === \"\") { user.bad[key] = \"EMPTY NOT ALLOWED\" }\n                    break;\n                case \"last_name\":\n                    if(user[key] === \"\") { user.bad[key] = \"EMPTY NOT ALLOWED\" }\n                    break;\n                case \"mobile_number\":\n                    if(user[key] === \"\") { user.bad[key] = \"EMPTY NOT ALLOWED\" }\n                    break;\n                case \"email\":\n                    if(user[key] === \"\") { user.bad[key] = \"EMPTY NOT ALLOWED\" }\n                    break;\n                case \"gets_change_email\":\n                    if(user[key] === \"\") { user.bad[key] = \"EMPTY NOT ALLOWED\" }\n                    if(typeof user[key] !== \"boolean\") { user.bad[key] = \"MUST BE BOOLEAN\" }\n                    break;\n                case \"bart_sart\":\n                    if(user[key] === \"\") { user.bad[key] = \"EMPTY NOT ALLOWED\" }\n                    if(user[key] !== \"\" && [\"bart\",\"sart\"].indexOf(user[key]) < 0 ) { user.bad[key] = \"VALUE NOT SUPPORTED\" }\n                    break;\n                case \"business_unit\":\n                    if(user[key] === \"\") { user.bad[key] = \"EMPTY NOT ALLOWED\" }\n                    break;\n                case \"sales_area\":\n                    if(user[key] === \"\" && (user.bart_sart === \"bart\" || user.bart_sart === \"\")) { user.bad[key] = \"EMPTY NOT ALLOWED for BART\" }\n                    break;\n                case \"sales_region\":\n                    if(user[key] === \"\" && (user.bart_sart === \"bart\" || user.bart_sart === \"\")) { user.bad[key] = \"EMPTY NOT ALLOWED for BART\" }\n                    break;\n                case \"sales_territory\":\n                    if(user[key] === \"\" && (user.bart_sart === \"bart\" || user.bart_sart === \"\")) { user.bad[key] = \"EMPTY NOT ALLOWED for BART\" }\n                    break;\n                case \"service_area\":\n                    if(user[key] === \"\" && (user.bart_sart === \"sart\" || user.bart_sart === \"\")) { user.bad[key] = \"EMPTY NOT ALLOWED for SART\" }\n                    break;\n                case \"service_region\":\n                    if(user[key] === \"\" && (user.bart_sart === \"sart\" || user.bart_sart === \"\")) { user.bad[key] = \"EMPTY NOT ALLOWED for SART\" }\n                    break;\n                case \"service_territory\":\n                    if(user[key] === \"\" && (user.bart_sart === \"sart\" || user.bart_sart === \"\")) { user.bad[key] = \"EMPTY NOT ALLOWED for SART\" }\n                    break;\n                case \"created_by\":\n                    if(user[key] === \"\") { user.bad[key] = \"EMPTY NOT ALLOWED\" }\n                    break;\n                case \"eula_create_date\":\n                    if(user[key] === \"\") { user.bad[key] = \"EMPTY NOT ALLOWED\" }\n                    if(user[key] === 0) { user.bad[key] = \"0 NOT ALLOWED\" }\n                    break;\n                case \"eula_accept_status\":\n                    if(user[key] === \"\") { user.bad[key] = \"EMPTY NOT ALLOWED\" }\n                    break;\n                case \"eula_accept_date\":\n                    if(user[key] === \"\") { user.bad[key] = \"EMPTY NOT ALLOWED\" }\n                    if(user[key] === 0) { user.bad[key] = \"0 NOT ALLOWED\" }\n                    break;\n                case \"remote_access_allowed\":\n                    if(user[key] === \"\") { user.bad[key] = \"EMPTY NOT ALLOWED\" }\n                    if(typeof user[key] !== \"boolean\") { user.bad[key] = \"MUST BE BOOLEAN\" }\n                    break;\n                case \"ipd_id\":\n                    if(user[key] === \"\") { user.bad[key] = \"EMPTY NOT ALLOWED\" }\n                    break;\n            }\n        } else {\n            user.bad[key] = \"MISSING\";\n        }\n    })\n    user_keys.forEach(function(key){\n        if(model_keys.indexOf(key) < 0 && [\"_id\",\"_rev\",\"voice_phone\",\"bad\"].indexOf(key) < 0){\n            user.bad[key] = \"FIELD NOT IN MODEL\"\n        }\n    })\n    var bad_keys = Object.keys(user.bad);\n    if(bad_keys.length > 0) {\n        if(!msg.bad_users) { msg.bad_users = [] }\n        msg.bad_users.push(user);\n        bad_keys.forEach(function(key){\n            if(!msg.problems[key]) { msg.problems[key] = [] }\n            msg.problems[key].push(user)\n        })\n    } else {\n        if(!msg.good_users) { msg.good_users = [] }\n        msg.good_users.push(user);\n    }\n})\nnode.warn({\"Bad Users\":msg})",
            "y": 580,
            "x": 730,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "d723c97.f209b38"
        },
        {
            "wires": [
                [
                    "d723c97.f209b38"
                ]
            ],
            "name": "",
            "y": 580,
            "x": 530,
            "z": "92b74b12.836b78",
            "type": "subflow:df6d98dd.00d378",
            "id": "91e60436.08bbc8"
        },
        {
            "wires": [
                [
                    "91e60436.08bbc8"
                ]
            ],
            "name": "Get User Model",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.records = {\n    \"models\": [\"user\"]\n}\nreturn msg;",
            "y": 580,
            "x": 340,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "4e5eaec7.d952c"
        },
        {
            "repeat": "",
            "y": 1000,
            "name": "Cloudant vs AppID",
            "crontab": "",
            "id": "ad9c9a29.83de58",
            "topic": "",
            "payloadType": "date",
            "wires": [
                [
                    "c4cef156.e681b"
                ]
            ],
            "onceDelay": 0.1,
            "x": 130,
            "z": "92b74b12.836b78",
            "type": "inject",
            "payload": "",
            "once": false
        },
        {
            "wires": [
                [
                    "8bc2dff6.1f88e"
                ]
            ],
            "name": "Get Cloudant Devices",
            "outputs": 1,
            "noerr": 0,
            "func": "var cloudant = global.get(\"CLOUDANT\").devices;\nvar appid = global.get(\"APPID\").devices;\nmsg.cloudant_missing = [];\nmsg.appid_missing = [];\ncloudant.idp_ids.forEach(function(idp_id,c_idx) {\n    var a_idx = appid.idp_ids.indexOf(idp_id);\n    if( a_idx < 0) {\n        msg.cloudant_missing.push(cloudant.records[c_idx])\n    }\n})\nappid.c_ids.forEach(function(c_id,a_idx) {\n    var c_idx = cloudant.c_ids.indexOf(c_id);\n    if( c_idx < 0) {\n        msg.appid_missing.push(appid.records[a_idx])\n    }\n})\n// find duplicates\nmsg.cloudant_dup = [];\ncloudant.idp_ids.forEach(function(idp_id,c_idx){\n    var dup_idx = cloudant.idp_ids.indexOf(idp_id,c_idx+1)\n    if(dup_idx >= 0) {\n        msg.cloudant_dup.push(cloudant.records[c_idx]);\n        msg.cloudant_dup.push(cloudant.records[dup_idx]);\n    }\n})\nmsg.appid_dup = [];\nappid.c_ids.forEach(function(c_id,a_idx){\n    var dup_idx = appid.c_ids.indexOf(c_id,a_idx+1)\n    if(dup_idx >= 0) {\n        msg.appid_dup.push(appid.records[c_idx]);\n        msg.appid_dup.push(appid.records[dup_idx]);\n    }\n})\nnode.warn({\"Cloudant vs AppID\": msg});\nif(msg.appid_missing.length > 0) {\n    return msg;\n}",
            "y": 1000,
            "x": 360,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "c4cef156.e681b"
        },
        {
            "wires": [
                []
            ],
            "name": "",
            "y": 1000,
            "x": 810,
            "z": "92b74b12.836b78",
            "type": "subflow:9791a478.8db8f8",
            "id": "7ff4fe96.8526b"
        },
        {
            "wires": [
                [
                    "f638be04.2791f",
                    "7ff4fe96.8526b"
                ]
            ],
            "name": "Delete APP ID",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.appid_missing.length > 0) {\n    if(!msg.appid) {msg.appid = {} }\n    msg.appid.id = msg.appid_missing.pop().idp_id;\n    node.warn({\"Deleting AppID user\": msg})\n    return msg;\n}",
            "y": 1000,
            "x": 600,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "8bc2dff6.1f88e"
        },
        {
            "wires": [
                [
                    "8bc2dff6.1f88e"
                ]
            ],
            "nbRateUnits": "3",
            "name": "",
            "randomLast": "5",
            "timeoutUnits": "seconds",
            "drop": true,
            "randomUnits": "seconds",
            "rate": "1",
            "timeout": "2",
            "y": 1040,
            "x": 600.6666870117188,
            "randomFirst": "1",
            "z": "92b74b12.836b78",
            "type": "delay",
            "id": "f638be04.2791f",
            "rateUnits": "second",
            "pauseType": "delay"
        },
        {
            "wires": [
                [
                    "4de32139.9a97"
                ]
            ],
            "name": "",
            "y": 2280,
            "x": 490,
            "z": "1dff07f1.603c08",
            "type": "subflow:3962857e.44abba",
            "id": "4419957b.11d7fc"
        },
        {
            "wires": [
                [
                    "337f46aa.6006ea"
                ]
            ],
            "name": "User Info AppID",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"User Info AppID\"\n    });\nmsg.records = {\n    \"doc_type\": \"user\",\n    \"object\": \"user\",\n    \"format\": \"JSON\",\n    \"returns\": [\"user\"],\n    \"id\": msg.req.params.userID\n};\nvar appid_users = global.get(\"APPID\").users\nmsg.user = [appid_users.records[appid_users.c_ids.indexOf(msg.records.id)]]\nreturn msg;",
            "y": 2280,
            "x": 680,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "4de32139.9a97"
        },
        {
            "wires": [
                [
                    "1be0df5b.e90391"
                ]
            ],
            "name": "",
            "url": "/users/user/:userID/appid",
            "upload": false,
            "id": "3210fa78.a284b6",
            "swaggerDoc": "",
            "y": 2280,
            "x": 140,
            "z": "1dff07f1.603c08",
            "type": "http in",
            "method": "get"
        },
        {
            "wires": [],
            "name": "",
            "y": 2260,
            "x": 1050,
            "z": "1dff07f1.603c08",
            "type": "subflow:bc6ff87.05a2908",
            "id": "2282ccc2.7ea4a4"
        },
        {
            "info": "Checks and returns user AppID info if it exists",
            "wires": [],
            "name": "*[ ] User Info AppID",
            "y": 2240,
            "x": 110,
            "z": "1dff07f1.603c08",
            "type": "comment",
            "id": "5bc4d822.7c9658"
        },
        {
            "wires": [],
            "name": "",
            "y": 2300,
            "x": 1240,
            "z": "1dff07f1.603c08",
            "type": "subflow:2638fa4d.cb43e6",
            "id": "71319811.7e2ee8"
        },
        {
            "wires": [
                [
                    "71319811.7e2ee8"
                ]
            ],
            "name": "User Not Found",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 400,\n    \"message\": \"User with id: \" + msg.records.id + \" was not found.\",\n})\nreturn msg;",
            "y": 2300,
            "x": 1060,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "16872e79.ce6f22"
        },
        {
            "wires": [
                [
                    "2282ccc2.7ea4a4"
                ],
                [
                    "16872e79.ce6f22"
                ]
            ],
            "name": "User Found?",
            "outputs": 2,
            "outputLabels": [
                "found",
                "not found"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"user\") && msg.user.length > 0) {\n    return [msg,null];\n}\nreturn [null,msg];",
            "y": 2280,
            "x": 850,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "337f46aa.6006ea"
        },
        {
            "wires": [
                [
                    "4419957b.11d7fc"
                ]
            ],
            "name": "Enc",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.force_encryption = true;\nreturn msg;",
            "y": 2280,
            "x": 330,
            "z": "1dff07f1.603c08",
            "type": "function",
            "id": "1be0df5b.e90391"
        },
        {
            "wires": [
                [
                    "3ff0e8c.7279e18"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID/KORE/modify_plan_codes",
            "upload": false,
            "id": "640ac807.e12c78",
            "swaggerDoc": "",
            "y": 1220,
            "x": 230,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "dc53ae32.cc78b"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID/KORE/device_status",
            "upload": false,
            "id": "998c7add.6524b8",
            "swaggerDoc": "",
            "y": 900,
            "x": 210,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "ad4d16d7.a27ac8"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID/KORE/modify_device_custom_info",
            "upload": false,
            "id": "ee94c615.a6d3a8",
            "swaggerDoc": "",
            "y": 560,
            "x": 260,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "cc6048c0.ed4cf8"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID/KORE/reactivate",
            "upload": false,
            "id": "6e258c55.f99a64",
            "swaggerDoc": "",
            "y": 380,
            "x": 200,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "6f3005b7.1b698c"
                ]
            ],
            "name": "",
            "url": "/devices/device/:deviceID/KORE/activate_to_state",
            "upload": false,
            "id": "6aeae83f.6dd918",
            "swaggerDoc": "",
            "y": 200,
            "x": 220,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "cc6048c0.ed4cf8"
                ]
            ],
            "name": "",
            "url": "/sims/sim/reactivate",
            "upload": false,
            "id": "aee4d49f.d7f7c8",
            "swaggerDoc": "",
            "y": 420,
            "x": 130,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "ad4d16d7.a27ac8"
                ]
            ],
            "name": "",
            "url": "/sims/sim/modify_device_custom_info",
            "upload": false,
            "id": "e0ae0bf7.2d9ae8",
            "swaggerDoc": "",
            "y": 600,
            "x": 190,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "c393c069.a7c09"
                ]
            ],
            "name": "",
            "url": "/sims/sim/deactivate",
            "upload": false,
            "id": "efc596bb.b6d6f8",
            "swaggerDoc": "",
            "y": 740,
            "x": 130,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "dc53ae32.cc78b"
                ]
            ],
            "name": "",
            "url": "/sims/sim/status",
            "upload": false,
            "id": "3b1ea62d.032d9a",
            "swaggerDoc": "",
            "y": 940,
            "x": 120,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "b5c4a534.d50fa8"
                ]
            ],
            "name": "",
            "url": "/sims/plan_codes",
            "upload": false,
            "id": "620136a4.0c9928",
            "swaggerDoc": "",
            "y": 1080,
            "x": 120,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "3ff0e8c.7279e18"
                ]
            ],
            "name": "",
            "url": "/sims/sim/modify_plan_codes",
            "upload": false,
            "id": "4ee95eec.50386",
            "swaggerDoc": "",
            "y": 1260,
            "x": 160,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "6f3005b7.1b698c"
                ]
            ],
            "name": "",
            "url": "/sims/sim/activate_to_state",
            "upload": false,
            "id": "d2ae0e69.be647",
            "swaggerDoc": "",
            "y": 240,
            "x": 150,
            "z": "c1ec6ee7.981a18",
            "type": "http in",
            "method": "post"
        },
        {
            "info": "",
            "wires": [],
            "name": "APP ID Setup",
            "y": 1240,
            "x": 90,
            "z": "92b74b12.836b78",
            "type": "comment",
            "id": "bca0653e.bd7688"
        },
        {
            "repeat": "",
            "y": 1280,
            "name": "APP ID DIsable Password RegEx",
            "crontab": "",
            "id": "fa6e48a2.f91f88",
            "topic": "",
            "payloadType": "date",
            "wires": [
                [
                    "de624c1.fb6b2b"
                ]
            ],
            "onceDelay": 0.1,
            "x": 170,
            "z": "92b74b12.836b78",
            "type": "inject",
            "payload": "",
            "once": false
        },
        {
            "wires": [
                [
                    "1d4142b9.be075d"
                ]
            ],
            "name": "Get Mgmt Token",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.iam = {\n    \"type\": \"appid\",\n    \"mgmt\": true\n};\nreturn msg;",
            "y": 1280,
            "x": 400,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "de624c1.fb6b2b"
        },
        {
            "wires": [
                [
                    "9dfb927c.4d7f6"
                ]
            ],
            "name": "",
            "y": 1280,
            "x": 580,
            "z": "92b74b12.836b78",
            "type": "subflow:ab306e30.d0cc3",
            "id": "1d4142b9.be075d"
        },
        {
            "wires": [
                [
                    "260feefd.04db32"
                ]
            ],
            "name": "Disable Password RegEx",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.payload = {\n    \"regex\": \".*[A-Za-z0-9].*\",\n    \"error_message\": \"The password must contain at least 1 alphabetical character or a number\"\n};\nmsg.appid.mgmt_url = global.get(\"VCAP_APPID\").credentials.appidServiceEndpoint + \"/management/v4/\" + global.get(\"VCAP_APPID\").credentials.tenantId + \"/\";\nmsg.appid.headers = { \"Authorization\": msg.appid.authorization }\nmsg.method = \"PUT\";\nmsg.url = msg.appid.mgmt_url + \"config/cloud_directory/password_regex\";\nmsg.headers = msg.appid.headers;\nnode.warn(msg)\nreturn msg;",
            "y": 1280,
            "x": 790,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "9dfb927c.4d7f6"
        },
        {
            "tls": "",
            "wires": [
                [
                    "f1c1e4c6.2cab28"
                ]
            ],
            "name": "APPID MGMT",
            "url": "",
            "ret": "obj",
            "id": "260feefd.04db32",
            "y": 1280,
            "x": 1000,
            "z": "92b74b12.836b78",
            "type": "http request",
            "method": "use"
        },
        {
            "wires": [
                []
            ],
            "name": "Request Results",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.statusCode === 200) {\n    node.warn({\"APP ID Password RegEx successfully updated\": msg});\n} else {\n    node.warn({\"APP ID FAILED to update Password RegEx\": msg});\n}",
            "y": 1280,
            "x": 1180,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "f1c1e4c6.2cab28"
        },
        {
            "repeat": "",
            "y": 1320,
            "name": "APP ID Enable Password RegEx",
            "crontab": "",
            "id": "efc52a.dca0bad8",
            "topic": "",
            "payloadType": "date",
            "wires": [
                [
                    "96cd6020.d9e9e"
                ]
            ],
            "onceDelay": 0.1,
            "x": 170,
            "z": "92b74b12.836b78",
            "type": "inject",
            "payload": "",
            "once": false
        },
        {
            "wires": [
                [
                    "d7569e83.118ad"
                ]
            ],
            "name": "Get Mgmt Token",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.iam = {\n    \"type\": \"appid\",\n    \"mgmt\": true\n};\nreturn msg;",
            "y": 1320,
            "x": 400,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "96cd6020.d9e9e"
        },
        {
            "wires": [
                [
                    "5d21703a.183b5"
                ]
            ],
            "name": "",
            "y": 1320,
            "x": 580,
            "z": "92b74b12.836b78",
            "type": "subflow:ab306e30.d0cc3",
            "id": "d7569e83.118ad"
        },
        {
            "wires": [
                [
                    "cc4ebe8c.a5db7"
                ]
            ],
            "name": "Enable Password RegEx",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.payload = {\n    \"regex\": \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[#$.^+=!*()@%&]).{8,20}$\", //global.get(\"REGEXP\").password,\n    \"error_message\": \"The password must contain at least 1 lower case and upper case character a number and one of these symbols [#$.^+=!*()@%&]\"\n};\nmsg.appid.mgmt_url = global.get(\"VCAP_APPID\").credentials.appidServiceEndpoint + \"/management/v4/\" + global.get(\"VCAP_APPID\").credentials.tenantId + \"/\";\nmsg.appid.headers = { \"Authorization\": msg.appid.authorization }\nmsg.method = \"PUT\";\nmsg.url = msg.appid.mgmt_url + \"config/cloud_directory/password_regex\";\nmsg.headers = msg.appid.headers;\nreturn msg;\n\n/*{\n    \"regex\": \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[#$.^+=!*()@%&]).{8,20}$\",\n    \"error_message\": \"The password must contain at least 1 lower case and upper case character a number and one of these symbols [#$.^+=!*()@%&]\"\n}*/",
            "y": 1320,
            "x": 790,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "5d21703a.183b5"
        },
        {
            "tls": "",
            "wires": [
                [
                    "e7e9a6ed.245808"
                ]
            ],
            "name": "APPID MGMT",
            "url": "",
            "ret": "obj",
            "id": "cc4ebe8c.a5db7",
            "y": 1320,
            "x": 1000,
            "z": "92b74b12.836b78",
            "type": "http request",
            "method": "use"
        },
        {
            "wires": [
                []
            ],
            "name": "Request Results",
            "outputs": 1,
            "noerr": 0,
            "func": "if (msg.statusCode === 200) {\n    node.warn({\"APP ID Password RegEx successfully updated\": msg});\n} else {\n    node.warn({\"APP ID FAILED to update Password RegEx\": msg});\n}",
            "y": 1320,
            "x": 1180,
            "z": "92b74b12.836b78",
            "type": "function",
            "id": "e7e9a6ed.245808"
        },
        {
            "info": "",
            "wires": [],
            "name": "DashDB",
            "y": 40,
            "x": 80,
            "z": "8c1ef78e.3b4798",
            "type": "comment",
            "id": "85fdf298.da17f"
        },
        {
            "wires": [
                [
                    "a51d7394.95aa3"
                ]
            ],
            "name": "",
            "y": 100,
            "x": 450,
            "z": "8c1ef78e.3b4798",
            "type": "subflow:3962857e.44abba",
            "id": "343fcbd6.c73474"
        },
        {
            "wires": [
                [
                    "10197903.66fa77"
                ]
            ],
            "name": "DashDB Case Audit",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"DashDB Case Audit\"\n    });\nmsg.records = {\n    \"returns\": [\"case_audit\"]\n};\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": [\"filter_options\"]};\nmsg.filters = {\n    \"required\": [],\n    \"allowed\": [\"CASE_NO\", \"DOC_ID\", \"FILE_NAME\", \"CASE_START_TIME_range_begin\", \"CASE_START_TIME_range_end\", \"JOB_STATUS\"]};\nmsg.dashdb = {\n    \"select\": \"SELECT * FROM REPORT_DB.CASE_AUDIT\",\n    \"sort\": \"ORDER BY CASE_START_TIME DESC\",\n    \"limit\": 100,\n    \"object\": \"case_audit\"\n}\nreturn msg;",
            "y": 100,
            "x": 660,
            "z": "8c1ef78e.3b4798",
            "type": "function",
            "id": "a51d7394.95aa3"
        },
        {
            "wires": [
                [
                    "f49e05a2.6a60d8"
                ]
            ],
            "name": "",
            "y": 220,
            "x": 900,
            "z": "8c1ef78e.3b4798",
            "type": "subflow:71afa3f9.81defc",
            "id": "10197903.66fa77"
        },
        {
            "wires": [
                [
                    "82f0b93.2ad0148"
                ]
            ],
            "name": "",
            "y": 220,
            "x": 1060,
            "z": "8c1ef78e.3b4798",
            "type": "subflow:5b840ccd.bdbfc4",
            "id": "f49e05a2.6a60d8"
        },
        {
            "wires": [],
            "name": "",
            "y": 220,
            "x": 1230,
            "z": "8c1ef78e.3b4798",
            "type": "subflow:bc6ff87.05a2908",
            "id": "82f0b93.2ad0148"
        },
        {
            "wires": [
                [
                    "18604523.83434b"
                ]
            ],
            "name": "",
            "url": "/dashdb/cases",
            "upload": false,
            "id": "d3e91b02.31fc58",
            "swaggerDoc": "",
            "y": 140,
            "x": 110,
            "z": "8c1ef78e.3b4798",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "9337e8b1.ea6eb8"
                ]
            ],
            "name": "",
            "y": 140,
            "x": 450,
            "z": "8c1ef78e.3b4798",
            "type": "subflow:3962857e.44abba",
            "id": "18604523.83434b"
        },
        {
            "wires": [
                [
                    "10197903.66fa77"
                ]
            ],
            "name": "DashDB Cases",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"DashDB Cases\"\n    });\nmsg.records = {\n    \"returns\": [\"cases\"]\n};\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": [\"filter_options\"]};\nmsg.filters = {\n    \"required\": [],\n    \"allowed\": [\"CASE_ID\",\"USER_ID\",\"FACILITY_ID\",\"MACHINE_ID\",\"LOCATION_ID\",\"VERSION_ID\",\"CASE_NO\",\"LOG_ID\",\"CASE_TYPE\",\"SYSTEM_SN\",\"SYSTEM_TYPE\",\"FLAG\",\"CATEGORY1\",\"CATEGORY2\",\"CASE_STATUS\",\"CREATED_BY\",\"START_TIME_range_begin\",\"START_TIME_range_end\"]};\nmsg.dashdb = {\n    \"select\": \"SELECT * FROM REPORT_DB.CASE\",\n    \"sort\": \"ORDER BY START_TIME DESC\",\n    \"limit\": 100,\n    \"object\": \"cases\"\n}\nreturn msg;",
            "y": 140,
            "x": 640,
            "z": "8c1ef78e.3b4798",
            "type": "function",
            "id": "9337e8b1.ea6eb8"
        },
        {
            "wires": [
                [
                    "10197903.66fa77"
                ]
            ],
            "name": "DashDB Phase Events",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"DashDB Phase Events\"\n    });\nmsg.records = {\n    \"returns\": [\"phase_events\"]\n};\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": [\"filter_options\"]};\nmsg.filters = {\n    \"required\": [],\n    \"allowed\": [\"PHASE_ID\",\"CASE_ID\",\"EVENT_ID\",\"EVENT_NAME\",\"SYSTEM_SN\",\"FACILITY_NAME\",\"SURGEON_NAME\",\"ROOM_NAME\",\"CASE_NUMBER\",\"TECHNIQUE\",\"MODE\",\"MODE_TYPE\",\"NEEDLE\",\"GRADE\",\"UNUSED1\",\"UNUSED2\",\"SUBMODE_ID\",\"US_SUBMODE\",\"PHASE_DATETIME_range_begin\",\"PHASE_DATETIME_range_end\"]};\n\nmsg.dashdb = {\n    \"select\": \"SELECT * FROM REPORT_DB.PHASE_EVENT\",\n    \"sort\": \"ORDER BY PHASE_DATETIME DESC\",\n    \"limit\": 100,\n    \"object\": \"phase_events\"\n}\nreturn msg;",
            "y": 180,
            "x": 660,
            "z": "8c1ef78e.3b4798",
            "type": "function",
            "id": "1801d191.d2d90e"
        },
        {
            "wires": [
                [
                    "1801d191.d2d90e"
                ]
            ],
            "name": "",
            "y": 180,
            "x": 450,
            "z": "8c1ef78e.3b4798",
            "type": "subflow:3962857e.44abba",
            "id": "c2e6d6ad.b542c8"
        },
        {
            "wires": [
                [
                    "c2e6d6ad.b542c8"
                ]
            ],
            "name": "",
            "url": "/dashdb/phase_events",
            "upload": false,
            "id": "8e3096aa.21c908",
            "swaggerDoc": "",
            "y": 180,
            "x": 140,
            "z": "8c1ef78e.3b4798",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "10197903.66fa77"
                ]
            ],
            "name": "DashDB Users",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"DashDB Users\"\n    });\nmsg.records = {\n    \"returns\": [\"users\"]\n};\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": [\"filter_options\"]};\nmsg.filters = {\n    \"required\": [],\n    \"allowed\": [\"USER_ID\",\"UID\",\"STATUS\",\"CREATED_BY\",\"MODIFIED_BY\",\"CREATED_DATETIME_range_begin\",\"CREATED_DATETIME_range_end\"]};\n\nmsg.dashdb = {\n    \"select\": \"SELECT * FROM REPORT_DB.USER_MASTER\",\n    \"sort\": \"ORDER BY CREATED_DATETIME DESC\",\n    \"limit\": 100,\n    \"object\": \"users\"\n}\nreturn msg;",
            "y": 260,
            "x": 640,
            "z": "8c1ef78e.3b4798",
            "type": "function",
            "id": "296dbddb.a4a782"
        },
        {
            "wires": [
                [
                    "296dbddb.a4a782"
                ]
            ],
            "name": "",
            "y": 260,
            "x": 450,
            "z": "8c1ef78e.3b4798",
            "type": "subflow:3962857e.44abba",
            "id": "d9d949bf.2c0cd8"
        },
        {
            "wires": [
                [
                    "d9d949bf.2c0cd8"
                ]
            ],
            "name": "",
            "url": "/dashdb/users",
            "upload": false,
            "id": "88d59ef1.39505",
            "swaggerDoc": "",
            "y": 260,
            "x": 110,
            "z": "8c1ef78e.3b4798",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "10197903.66fa77"
                ]
            ],
            "name": "DashDB Case Facts",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"DashDB Case Facts\"\n    });\nmsg.records = {\n    \"returns\": [\"case_facts\"]\n};\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": [\"filter_options\"]};\nmsg.filters = {\n    \"required\": [],\n    \"allowed\": [\"CASE_FACT_ID\",\"CASE_ID\",\"USER_ID\",\"PHASE_EVENT_ID\",\"CASE_NO\",\"MODE\",\"SUBMODE\",\"FACILITY\",\"FACILITY_ID\",\"MACHINE\",\"MACHINE_ID\",\"CASE_TYPE\",\"CASE_LABEL\",\"CREATED_BY\"]};\n\nmsg.dashdb = {\n    \"select\": \"SELECT * FROM REPORT_DB.CASE_FACT\",\n    \"sort\": \"ORDER BY EVENT_DATETIME DESC\",\n    \"limit\": 100,\n    \"object\": \"case_facts\"\n}\nreturn msg;",
            "y": 220,
            "x": 660,
            "z": "8c1ef78e.3b4798",
            "type": "function",
            "id": "3d68c754.570218"
        },
        {
            "wires": [
                [
                    "3d68c754.570218"
                ]
            ],
            "name": "",
            "y": 220,
            "x": 450,
            "z": "8c1ef78e.3b4798",
            "type": "subflow:3962857e.44abba",
            "id": "389615af.ee0b1a"
        },
        {
            "wires": [
                [
                    "389615af.ee0b1a"
                ]
            ],
            "name": "",
            "url": "/dashdb/case_facts",
            "upload": false,
            "id": "11be3429.700a0c",
            "swaggerDoc": "",
            "y": 220,
            "x": 130,
            "z": "8c1ef78e.3b4798",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "10197903.66fa77"
                ]
            ],
            "name": "DashDB Facilities",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"DashDB Facilities\"\n    });\nmsg.records = {\n    \"returns\": [\"facilities\"]\n};\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": [\"filter_options\"]};\nmsg.filters = {\n    \"required\": [],\n    \"allowed\": [\"FACILITY_ID\",\"FACILITY_ACCOUNT_ID\",\"FACILITY_NAME\",\"FACILITY_ADDRESS\",\"CREATED_BY\",\"MODIFIED_BY\",\"CREATED_DATETIME_range_begin\",\"CREATED_DATETIME_range_end\"]};\n\nmsg.dashdb = {\n    \"select\": \"SELECT * FROM REPORT_DB.FACILITY_MASTER\",\n    \"sort\": \"ORDER BY CREATED_DATETIME DESC\",\n    \"limit\": 100,\n    \"object\": \"facilities\"\n}\nreturn msg;",
            "y": 300,
            "x": 650,
            "z": "8c1ef78e.3b4798",
            "type": "function",
            "id": "e8f34b1.5ddabb8"
        },
        {
            "wires": [
                [
                    "e8f34b1.5ddabb8"
                ]
            ],
            "name": "",
            "y": 300,
            "x": 450,
            "z": "8c1ef78e.3b4798",
            "type": "subflow:3962857e.44abba",
            "id": "329fc9a3.16bc46"
        },
        {
            "wires": [
                [
                    "329fc9a3.16bc46"
                ]
            ],
            "name": "",
            "url": "/dashdb/facilities",
            "upload": false,
            "id": "8b75456f.3fd7a8",
            "swaggerDoc": "",
            "y": 300,
            "x": 120,
            "z": "8c1ef78e.3b4798",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "10197903.66fa77"
                ]
            ],
            "name": "DashDB Machines",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"DashDB Machines\"\n    });\nmsg.records = {\n    \"returns\": [\"machines\"]\n};\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": [\"filter_options\"]};\nmsg.filters = {\n    \"required\": [],\n    \"allowed\": [\"MACHINE_ID\",\"SYSTEM_SN\",\"SYSTEM_TYPE\",\"CREATED_BY\",\"MODIFIED_BY\",\"CREATED_DATETIME_range_begin\",\"CREATED_DATETIME_range_end\"]};\n\nmsg.dashdb = {\n    \"select\": \"SELECT * FROM REPORT_DB.MACHINE_MASTER\",\n    \"sort\": \"ORDER BY SYSTEM_SN DESC\",\n    \"limit\": 100,\n    \"object\": \"machines\"\n}\nreturn msg;",
            "y": 340,
            "x": 650,
            "z": "8c1ef78e.3b4798",
            "type": "function",
            "id": "bf91760d.37baa8"
        },
        {
            "wires": [
                [
                    "bf91760d.37baa8"
                ]
            ],
            "name": "",
            "y": 340,
            "x": 450,
            "z": "8c1ef78e.3b4798",
            "type": "subflow:3962857e.44abba",
            "id": "5a94863.9519678"
        },
        {
            "wires": [
                [
                    "5a94863.9519678"
                ]
            ],
            "name": "",
            "url": "/dashdb/machines",
            "upload": false,
            "id": "460d51f9.2457c",
            "swaggerDoc": "",
            "y": 340,
            "x": 130,
            "z": "8c1ef78e.3b4798",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "343fcbd6.c73474"
                ]
            ],
            "name": "",
            "url": "/dashdb/case_audit",
            "upload": false,
            "id": "24426e48.147232",
            "swaggerDoc": "",
            "y": 100,
            "x": 130,
            "z": "8c1ef78e.3b4798",
            "type": "http in",
            "method": "post"
        },
        {
            "info": "",
            "wires": [],
            "name": "Delete inactive devices in APP ID",
            "y": 1120,
            "x": 150,
            "z": "92b74b12.836b78",
            "type": "comment",
            "id": "8e087da9.ec6ef"
        },
        {
            "wires": [
                [
                    "10197903.66fa77"
                ]
            ],
            "name": "DashDB Locations",
            "outputs": 1,
            "noerr": 0,
            "func": "msg.api = Object.assign(msg.api,\n    {\n        \"name\": \"DashDB Locations\"\n    });\nmsg.records = {\n    \"returns\": [\"locations\"]\n};\nmsg.inputs = {\n    \"required\": [],\n    \"allowed\": [\"filter_options\"]};\nmsg.filters = {\n    \"required\": [],\n    \"allowed\": [\"LOCATION_ID\",\"CARRIER\",\"CELLID\",\"LOCATION_AREA_CODE\",\"MOBILE_COUNTRY_CODE\",\"MOBILE_NETWORK_CODE\",\"GPS_LAT\",\"GPS_LONG\",\"STREET_ADDRESS\",\"CITY\"]};\n\nmsg.dashdb = {\n    \"select\": \"SELECT * FROM REPORT_DB.LOCATION_MASTER\",\n    \"sort\": \"ORDER BY CITY DESC\",\n    \"limit\": 100,\n    \"object\": \"locations\"\n}\nreturn msg;",
            "y": 380,
            "x": 650,
            "z": "8c1ef78e.3b4798",
            "type": "function",
            "id": "ff6d23a8.e555f"
        },
        {
            "wires": [
                [
                    "ff6d23a8.e555f"
                ]
            ],
            "name": "",
            "y": 380,
            "x": 450,
            "z": "8c1ef78e.3b4798",
            "type": "subflow:3962857e.44abba",
            "id": "ec7fe3e0.16806"
        },
        {
            "wires": [
                [
                    "ec7fe3e0.16806"
                ]
            ],
            "name": "",
            "url": "/dashdb/locations",
            "upload": false,
            "id": "9d2457e7.22fd68",
            "swaggerDoc": "",
            "y": 380,
            "x": 120,
            "z": "8c1ef78e.3b4798",
            "type": "http in",
            "method": "post"
        },
        {
            "wires": [
                [
                    "547b5bc9.3f8334"
                ],
                [
                    "45b0ab31.18db54"
                ]
            ],
            "name": "EDHR Sims",
            "outputs": 2,
            "outputLabels": [
                "sims present",
                "no sims"
            ],
            "noerr": 0,
            "func": "msg.records.sim_present = [];\nmsg.sims = [];\nvar edhr = msg.edhr[0];\nif (edhr.hasOwnProperty(\"modlist\")){\n    if (edhr.modlist.hasOwnProperty(\"sim1_iccid\") && edhr.modlist.sim1_iccid.present === \"PRESENT\"){ msg.records.sim_present.push(edhr.modlist.sim1_iccid.SN) }\n    if (edhr.modlist.hasOwnProperty(\"sim2_iccid\") && edhr.modlist.sim2_iccid.present === \"PRESENT\"){ msg.records.sim_present.push(edhr.modlist.sim2_iccid.SN) }\n}\nif (msg.records.sim_present.length > 0) {\n    msg.sim_provider = {\n        \"req_type\": \"status\",\n        \"sim_iccid\": msg.records.sim_present.pop(),\n        \"object\": \"sim\"\n    }\n    return [msg,null];\n}\nmsg.records.returns.splice(msg.records.returns.indexOf(\"sims\"), 1)\nreturn [null,msg];",
            "y": 280,
            "x": 2370,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "fcbe3ce0.afe1e"
        },
        {
            "wires": [
                [
                    "1a89e870.280498"
                ],
                [
                    "9cef31e9.a7408"
                ]
            ],
            "name": "Set Custom Info",
            "outputs": 2,
            "outputLabels": [
                "sim active",
                "sim not active"
            ],
            "noerr": 0,
            "func": "if (msg.hasOwnProperty(\"sim\") && msg.sim.length > 0  && msg.sim[0].status === \"Deactivated\") {\n    return[null,msg]\n} else {\n    msg.sim_provider.body = {\n        \"deviceNumber\": msg.sim_provider.sim_iccid,\n        \"customField1\": msg.device[0].system_type,\n        \"customField2\": msg.device[0]._id,\n        \"customField3\": \"\",\n        \"customField4\": \"\",\n        \"customField5\": \"\",\n        \"customField6\": \"\"\n    }\n    msg.sim_provider.req_type = \"update_info\"\n    return [msg,null];\n}",
            "y": 260,
            "x": 2700,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "64799739.52d7e8"
        },
        {
            "wires": [
                [
                    "1fb16923.bc9157"
                ]
            ],
            "name": "Deactivate Sim",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.inputs.field_birth) {\n    delete msg.sim_provider.req_type;\n} else {\n    msg.sim_provider.req_type = \"deactivate\";\n}\nreturn msg;",
            "y": 240,
            "x": 3040,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "c34852a.da908b"
        },
        {
            "wires": [
                [
                    "45b0ab31.18db54"
                ],
                [
                    "df0facf9.de32f"
                ]
            ],
            "name": "Next Sim",
            "outputs": 2,
            "outputLabels": [
                "done",
                "loop"
            ],
            "noerr": 0,
            "func": "if (msg.records.sim_present.length > 0) {\n    msg.sim_provider.sim_iccid = msg.records.sim_present.pop()\n    msg.kore = {\n        \"request\": \"queryDevice\",\n        \"return_obj\": \"d\",\n        \"object\": \"sim\",\n        \"body\": { \"deviceNumber\": msg.sim_provider.sim_iccid }\n    }\n    msg.sims.push(msg.sim[0]);\n    return [null,msg];\n}\nmsg.sims.push(msg.sim[0]);\nmsg.records.delete = [\"__type\", \"requestStatus\", \"MSISDNOrMDN\", \"currentDataPlan\", \"currentSMSPlan\", \"futureDataPlan\", \"futureSMSPlan\", \"dailyDataThreshold\", \"dailySMSThreshold\", \"monthlyDataThreshold\", \"monthlySMSThreshold\", \"customField4\", \"customField5\", \"customField6\", \"lstHistoryOverLastYear\", \"lstFeatures\", \"staticIP\", \"voiceDispatchNumber\", \"mostRecentLocateId\", \"previousLocateId\", \"mostRecentLocateDate\", \"mostRecentLatitude\", \"mostRecentLongitude\", \"mostRecentAddress\", \"previousLocateDate\", \"previousLatitude\", \"previousLongitude\", \"previousAddress\", \"lstExtFeatures\"];\nreturn [msg,null];",
            "y": 260,
            "x": 3360,
            "z": "c13a158d.882c9",
            "type": "function",
            "id": "9cef31e9.a7408"
        },
        {
            "wires": [
                [
                    "64799739.52d7e8"
                ]
            ],
            "name": "",
            "y": 260,
            "x": 2530,
            "z": "c13a158d.882c9",
            "type": "subflow:80a169dd.f18e78",
            "id": "547b5bc9.3f8334"
        },
        {
            "wires": [
                [
                    "c34852a.da908b"
                ]
            ],
            "name": "",
            "y": 240,
            "x": 2870,
            "z": "c13a158d.882c9",
            "type": "subflow:80a169dd.f18e78",
            "id": "1a89e870.280498"
        },
        {
            "wires": [
                [
                    "9cef31e9.a7408"
                ]
            ],
            "name": "",
            "y": 240,
            "x": 3210,
            "z": "c13a158d.882c9",
            "type": "subflow:80a169dd.f18e78",
            "id": "1fb16923.bc9157"
        },
        {
            "wires": [
                [
                    "f795cb6f.150988"
                ]
            ],
            "name": "Missing Credentials",
            "outputs": 1,
            "noerr": 0,
            "func": "if(!msg.hasOwnProperty(\"errors\")){msg.errors = []}\nmsg.errors.push({\n    \"code\": 401,\n    \"message\": {\n        \"code\": \"missing_credentials\",\n        \"description\":\"Unauthorized - Setup is missing credential file linked to system\"\n    }\n})\nreturn msg;",
            "y": 140,
            "x": 1010,
            "z": "3962857e.44abba",
            "type": "function",
            "id": "ed1d24e.f4bc6d8"
        },
        {
            "wires": [
                [
                    "b8d8f269.e59ea"
                ]
            ],
            "name": "KORE Sim",
            "outputs": 1,
            "noerr": 0,
            "func": "if(msg.sim_provider.details) {\n    msg.sim_provider.delete = [\"__type\", \"requestStatus\", \"staticIP\", \"voiceDispatchNumber\", \"mostRecentLocateId\", \"previousLocateId\", \"mostRecentLocateDate\", \"mostRecentLatitude\", \"mostRecentLongitude\", \"mostRecentAddress\", \"previousLocateDate\", \"previousLatitude\", \"previousLongitude\", \"previousAddress\", \"lstExtFeatures\"]\n} else {\n    msg.sim_provider.delete = [\"__type\", \"requestStatus\", \"MSISDNOrMDN\", \"IMSIOrMIN\", \"currentDataPlan\", \"currentSMSPlan\", \"futureDataPlan\", \"futureSMSPlan\", \"dailyDataThreshold\", \"dailySMSThreshold\", \"monthlyDataThreshold\", \"monthlySMSThreshold\", \"customField1\", \"customField2\", \"customField3\", \"customField4\", \"customField5\", \"customField6\", \"lstHistoryOverLastYear\", \"lstFeatures\", \"staticIP\", \"voiceDispatchNumber\", \"mostRecentLocateId\", \"previousLocateId\", \"mostRecentLocateDate\", \"mostRecentLatitude\", \"mostRecentLongitude\", \"mostRecentAddress\", \"previousLocateDate\", \"previousLatitude\", \"previousLongitude\", \"previousAddress\", \"lstExtFeatures\", \"costCenter\"];\n}\nreturn msg;",
            "y": 340,
            "x": 1910,
            "z": "80a169dd.f18e78",
            "type": "function",
            "id": "b32e3a8f.3bed18"
        },
        {
            "wires": [
                [
                    "761ba67.0445c58"
                ]
            ],
            "name": "",
            "y": 740,
            "x": 1630,
            "z": "c1ec6ee7.981a18",
            "type": "subflow:80a169dd.f18e78",
            "id": "a0a5577b.8dd158"
        },
        {
            "wires": [
                [
                    "dce52df7.73922"
                ]
            ],
            "name": "",
            "x": 70,
            "y": 40,
            "scope": [
                "b5f8e84c.b5b468"
            ],
            "z": "5dbd57cc.fc9bb8",
            "type": "catch",
            "id": "4d35c5c1.9be15c"
        },
        {
            "wires": [
                []
            ],
            "name": "Email Error",
            "outputs": 1,
            "noerr": 0,
            "func": "node.error(\"ERROR: Email send FAILED\")\nnode.warn({\"EMAIL ERROR\": msg})\nreturn msg;",
            "y": 40,
            "x": 210,
            "z": "5dbd57cc.fc9bb8",
            "type": "function",
            "id": "dce52df7.73922"
        }
    ]
}