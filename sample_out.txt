Program Start! 9/5/2019 4:08:19 PM
 
Parsing File: C:\Cloud_Backup\US_Dev\NRC_Backup\nodered_Stellaris-Flow-10.1_flow_2019-09-05 14-08-59_NEW.txt
 

***********************************************************************************************************
Processing Item: (1)     get /crypto_key       Tab: System     ID: 80de317f.7ca5f     Wires: 9bd877f1.986f88
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 9bd877f1.986f88       Wires: a37abe75.f5eab
  
---------- Node Type: ->function<-   ->Crypto Key<-      ID: a37abe75.f5eab       Wires: 26c89df2.e75ce2
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Crypto Key",
        "encrypt": false
    });
msg.records = {
    "format": "array",
    "returns": ["key"]
};
msg.key = global.get("CRYPTO_KEYS").com.payload
node.warn({"Crypto Key": msg})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 26c89df2.e75ce2       Wires: <end>

***********************************************************************************************************
Processing Item: (2)     post /dapp/pairing/pair/provider_consumer       Tab: Data App     ID: 52af7c99.8c4914     Wires: 2b35f87.3d49308
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 2b35f87.3d49308       Wires: bb375fa7.d25c1
  
---------- Node Type: ->function<-   ->Pair Provider and Consumer<-      ID: bb375fa7.d25c1       Wires: a78e3781.cc1708
           outputs: 1
           noerr: 0
===Function Start===

msg.api = Object.assign(msg.api,
    {
        "name": "Pair Provider and Consumer"
    });
msg.records = {
    "delete": ["_rev", "doc_type","status"],
    "doc_type": "provider_link",
    "object": "provider_link",
    "format": "JSON",
    "returns": ["content"],
    "models": ["provider_link"]
};
msg.inputs = {
    "required": ["provider_id","consumer_id"],
    "provider_id":msg.payload.provider_id,
    "consumer_id":msg.payload.consumer_id
    
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "users",
    "selector": {
        "$and": [   {"doc_type": "user"},
                    {"status": "active"},
                    {"_id": {"$in": [msg.inputs.provider_id, msg.inputs.consumer_id]}}
                ]
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: a78e3781.cc1708       Wires: 5beccb71.602304
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 5beccb71.602304       Wires: b321feb5.c030d
  
---------- Node Type: ->function<-   ->Povider  & Consmer Exists<-      ID: b321feb5.c030d       Wires: 4860fb68.bc9274,bf58f76e.dd4bb8,1095583a.c81a88
           outputs: 3
           outputLabels: ["yes","no device","no user"]
           noerr: 0
===Function Start===
if(msg.users && msg.users.length > 0) {
    user_ids = msg.users.map(a => a._id)
    var provider = user_ids.indexOf(msg.inputs.provider_id)
    node.warn(provider)
    var consumer = user_ids.indexOf(msg.inputs.consumer_id)
    node.warn(consumer)
    if (provider < 0 && msg.users[provider].role !== "Surgeon" ) { return [null,msg,null]; }
    if (consumer < 0) { return [null,null,msg]; }
} else {
    return [null,msg,null];
}
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "provider_link",
    "selector": {
        "$and": [   {"doc_type": "provider_link"},
                    {"provider_id": msg.inputs.provider_id},//{_id": msg.inputs.provider_id},
                    {"consumer_id": msg.inputs.consumer_id} //{_id": msg.inputs.provider_id},
                ]
    }
};
return [msg,null,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 4860fb68.bc9274       Wires: 10713b80.691655
  
---------- Node Type: ->function<-   ->Provider Not Found<-      ID: bf58f76e.dd4bb8       Wires: fc0dabdf.071678
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Provider user: " + msg.inputs.provider_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Consumer Not Found<-      ID: 1095583a.c81a88       Wires: fc0dabdf.071678
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Consumern user: " + msg.inputs.consumer_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Link Exists<-      ID: 10713b80.691655       Wires: 6f94f387.cfd60c,16222a54.4ad966,5006bbc9.875c24
           outputs: 3
           outputLabels: ["no","yes active","yes inactive"]
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("provider_link") || msg.provider_link.length === 0){
    msg.records.id = "";
    return [msg,null,null];
}
if (msg.provider_link[0].status === "inactive") {
    msg.inputs.provider_link = msg.provider_link[0]._id;
    msg.records.id = msg.provider_link[0]._id;
    delete msg.provider_link;
    msg.inputs.body = { "status": "active" }
    return [null,null,msg];
} else {
    return [null,msg,null];
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: fc0dabdf.071678       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: 6f94f387.cfd60c       Wires: 16222a54.4ad966
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 16222a54.4ad966       Wires: f8d88d89.52923
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: 5006bbc9.875c24       Wires: 16222a54.4ad966
  
---------- Node Type: ->function<-   ->Create Link Content<-      ID: f8d88d89.52923       Wires: 2ae62aa7.76b926
           outputs: 1
           noerr: 0
===Function Start===
var dapp_user = msg[msg.records.object]
msg.content = dapp_user
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 2ae62aa7.76b926       Wires: <end>

***********************************************************************************************************
Processing Item: (3)     post /dapp/pairing/unpair/provider_consumer       Tab: Data App     ID: 16109ee.b3e1b61     Wires: ae33d23f.bc37b
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: ae33d23f.bc37b       Wires: 701b6e58.67937
  
---------- Node Type: ->function<-   ->Unpair Provider and Consumer<-      ID: 701b6e58.67937       Wires: ac573156.095cc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Unpair Provider and Consumer"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "provider_link",
    "object": "provider_link",
    "format": "JSON",
    "returns": ["content"],
};
msg.inputs = {
    "required": ["provider_id", "consumer_id"],
    "provider_id": msg.payload.provider_id,
    "consumer_id": msg.payload.consumer_id
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "provider_link",
    "selector": {
        "$and": [   {"doc_type": "provider_link"},
                    {"provider_id": msg.inputs.provider_id},
                    {"consumer_id": msg.inputs.consumer_id}
                ]
    }
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: ac573156.095cc       Wires: 25c04843.2cc518
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 25c04843.2cc518       Wires: 7ba6c216.3d934c
  
---------- Node Type: ->function<-   ->Link exists<-      ID: 7ba6c216.3d934c       Wires: 1995407f.ffd5c,9e96db2a.b84e78,4b243f5c.dd857
           outputs: 3
           outputLabels: ["yes","no",""]
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("provider_link") || msg.provider_link.length === 0){
    return [null,msg,null]
}
if(msg.hasOwnProperty("provider_link") && msg.provider_link[0].status === "inactive"){
    return [null,null,msg]
}
msg.inputs.provider_link = msg.provider_link[0]._id;
msg.records.id = msg.provider_link[0]._id;
delete msg.provider_link;
msg.inputs.body = { "status": "inactive" };
return [msg,null,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: 1995407f.ffd5c       Wires: 981913cd.2e3b2
  
---------- Node Type: ->function<-   ->Link Not Found<-      ID: 9e96db2a.b84e78       Wires: c07af3dc.e58bc
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active Link between Provider: " + msg.inputs.provider_id + " and Consumer: " + msg.inputs.consumer_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Link Already Inactive<-      ID: 4b243f5c.dd857       Wires: 981913cd.2e3b2
           outputs: 1
           noerr: 0
===Function Start===
if(msg.records.returns) {
    msg.records.returns.push("message");
}
else {
    msg.records.returns = ["message"];
}
msg.message = "Link between Provider: " + msg.inputs.provider_id + " and Consumer: " + msg.inputs.consumer_id + " was already delinked.";
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 981913cd.2e3b2       Wires: 164ffc81.9542f3
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: c07af3dc.e58bc       Wires: <end>
  
---------- Node Type: ->function<-   ->Create Link Content<-      ID: 164ffc81.9542f3       Wires: be00f51e.4286d8
           outputs: 1
           noerr: 0
===Function Start===
var dapp_user = msg[msg.records.object]
msg.content = dapp_user
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: be00f51e.4286d8       Wires: <end>

***********************************************************************************************************
Processing Item: (4)     get /dapp/system/user_profile_urls       Tab: Data App     ID: 6849de07.4be1     Wires: 851918ee.31a918
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 851918ee.31a918       Wires: 79d34d4a.fa6a34
  
---------- Node Type: ->function<-   ->User Profile URLs (dapp)<-      ID: 79d34d4a.fa6a34       Wires: c152c927.89e088
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "User Profile URLs (dapp)",
        "info": false
    });
msg.records = {
    "object": "payload",
    "returns": ["payload"]
};
msg.payload = {
    "content":{
    "create_user_page": "www.google.com",
    "forgot_password_page": "www.google.com",
    "user_profile_page": "www.google.com"
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->http response<-   -><-      ID: c152c927.89e088       Wires: <end>
           headers: {}
           statusCode: 
  

***********************************************************************************************************
Processing Item: (5)     get /dapp/users/user/:userID       Tab: Data App     ID: e30f497b.7b4468     Wires: 601d3844.78ecc8
  
---------- Node Type: ->function<-   ->Enc<-      ID: 601d3844.78ecc8       Wires: f12b7dba.103b3
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: f12b7dba.103b3       Wires: 974c4af0.275628
  
---------- Node Type: ->function<-   ->User Info (dapp)<-      ID: 974c4af0.275628       Wires: 9db8f4e2.b26ef8
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "User Info (dapp)",
        "info": false
    });
msg.records = {
    "delete": ["_rev", "password", "doc_type", "status"],
    "doc_type": "user",
    "object": "user",
    "format": "JSON",
    "returns": ["content"],
    "id": msg.req.params.userID
};
msg.inputs = {
    "user_id": msg.req.params.userID
};
msg.filters = {};
msg.filters.params = {};
msg.cloudant = {
    "request": "/stellaris_documents/" + msg.records.id,
    "method": "GET",
    "return_obj": "",
    "object": "user"
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 9db8f4e2.b26ef8       Wires: 661b9b3a.d9a684
  
---------- Node Type: ->function<-   ->User Found?<-      ID: 661b9b3a.d9a684       Wires: 978b733b.68056,4a3043d8.7f824c
           outputs: 2
           outputLabels: ["found","not found"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("user") && msg.user.length > 0 && msg.user[0].hasOwnProperty("doc_type") && msg.user[0].doc_type === "user") {
    return [msg,null];
}
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 978b733b.68056       Wires: 67333aa2.9ea5d4
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: 4a3043d8.7f824c       Wires: b134446d.0ec158
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User with id: " + msg.inputs.user_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Create User Content<-      ID: 67333aa2.9ea5d4       Wires: 10e08e36.953912
           outputs: 1
           noerr: 0
===Function Start===
var dapp_user = msg[msg.records.object]
msg.content = dapp_user
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: b134446d.0ec158       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 10e08e36.953912       Wires: <end>

***********************************************************************************************************
Processing Item: (6)     get /dapp/users/user/:userID/consumers       Tab: Data App     ID: a7a55c7.6bdd3a     Wires: 43efb967.640608
  
---------- Node Type: ->function<-   ->Enc<-      ID: 43efb967.640608       Wires: 83a830c2.15ab
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 83a830c2.15ab       Wires: af9d0519.cd4e88
  
---------- Node Type: ->function<-   ->User Consumers<-      ID: af9d0519.cd4e88       Wires: 9179657b.0713b8
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "User Consumers"
    });
msg.records = {
    "delete": ["_rev", "doc_type","status","password"],
    "doc_type": "user",
    "format": "array",
    "object": "users",
    "returns": ["content"]
};
msg.inputs = {
    "user_id": msg.req.params.userID
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_types",
    "selector": {
        "$or": [{"$and": [{"doc_type": "user"},{"status": "active"},{"_id": msg.inputs.user_id}]},
                {"$and": [{"doc_type": "provider_link"},{"status": "active"},{"provider_id": msg.inputs.user_id}]}]
    }
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 9179657b.0713b8       Wires: edf86da6.4a2cb
  
---------- Node Type: ->function<-   ->Paired Comsumer Ids<-      ID: edf86da6.4a2cb       Wires: 1da746c3.2f3979,32d8be6e.52e7e2,a7ce1edb.62206
           outputs: 3
           outputLabels: ["yes paired","no paired","no device"]
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("users") || msg.users.length === 0){
    return [null,null,msg];
}
if(!msg.hasOwnProperty("provider_links") || msg.provider_links.length === 0){
    msg.users = [];
    return [null,msg,null]
}
msg.paired_user_ids = msg.provider_links.map(a => a.consumer_id);
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "users",
    "selector": {
        "$and": [{"doc_type": "user"},{"status": "active"},{"_id":  { "$in": msg.paired_user_ids }}]
    },
    "sort": [{ "last_name:string": "asc"},{ "first_name:string": "asc"}],
};
if(msg.req.query.hasOwnProperty("limit") || msg.req.query.hasOwnProperty("offset")){
    if(msg.req.query.hasOwnProperty("limit")){msg.cloudant.limit = parseInt(msg.req.query.limit)}
    if(msg.req.query.hasOwnProperty("offset")){msg.cloudant.skip = parseInt(msg.req.query.offset)}
}
return [msg,null,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 1da746c3.2f3979       Wires: 64396a28.d0d394
  
---------- Node Type: ->function<-   ->Create Users Content<-      ID: 32d8be6e.52e7e2       Wires: d7edca4f.8d4438
           outputs: 1
           noerr: 0
===Function Start===
var offset = 0;
var next = 0;
var available = 0;
if(msg.paired_user_ids) { available = msg.paired_user_ids.length }
if(msg.cloudant.hasOwnProperty("skip")) {
    offset = (msg.cloudant.skip || 0);
    next = offset + (msg[msg.records.object].length);
}
msg.content = {
    "consumers": msg[msg.records.object],
    "pagination": {
        "available": available,
        "count": msg[msg.records.object].length,
        "offset": offset,
        "next": next
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: a7ce1edb.62206       Wires: 3fd78df9.015a42
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active user with id: " + msg.inputs.user_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 64396a28.d0d394       Wires: 32d8be6e.52e7e2
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: d7edca4f.8d4438       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 3fd78df9.015a42       Wires: <end>

***********************************************************************************************************
Processing Item: (7)     get /dapp/users/user/:userID/providers       Tab: Data App     ID: 15d08ab8.403e05     Wires: 6c86ab14.d87224
  
---------- Node Type: ->function<-   ->Enc<-      ID: 6c86ab14.d87224       Wires: c3575b75.ef2418
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: c3575b75.ef2418       Wires: 6b4fa77a.b57c68
  
---------- Node Type: ->function<-   ->User Providers<-      ID: 6b4fa77a.b57c68       Wires: 280a4100.fdc7ee
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "User Providers"
    });
msg.records = {
    "delete": ["_rev", "doc_type","status","password"],
    "doc_type": "user",
    "format": "array",
    "object": "users",
    "returns": ["content"]
};
msg.inputs = {
    "user_id": msg.req.params.userID
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_types",
    "selector": {
        "$or": [{"$and": [{"doc_type": "user"},{"status": "active"},{"_id": msg.inputs.user_id}]},
                {"$and": [{"doc_type": "provider_link"},{"status": "active"},{"consumer_id": msg.inputs.user_id}]}]
    }
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 280a4100.fdc7ee       Wires: 6f4cf458.a31a1c
  
---------- Node Type: ->function<-   ->Paired Provider Ids<-      ID: 6f4cf458.a31a1c       Wires: 2e8c2ad4.66ec36,fbfbcdbc.46365,b56ec96.20cef38
           outputs: 3
           outputLabels: ["yes paired","no paired","no device"]
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("users") || msg.users.length === 0){
    return [null,null,msg];
}
if(!msg.hasOwnProperty("provider_links") || msg.provider_links.length === 0){
    msg.users = [];
    return [null,msg,null]
}
msg.paired_user_ids = msg.provider_links.map(a => a.provider_id);
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "users",
    "selector": {
        "$and": [{"doc_type": "user"},{"status": "active"},{"_id":  { "$in": msg.paired_user_ids }}]
    },
    "sort": [{ "last_name:string": "asc"},{ "first_name:string": "asc"}]
};
if(msg.req.query.hasOwnProperty("limit") || msg.req.query.hasOwnProperty("offset")){
    if(msg.req.query.hasOwnProperty("limit")){msg.cloudant.limit = parseInt(msg.req.query.limit)}
    if(msg.req.query.hasOwnProperty("offset")){msg.cloudant.skip = parseInt(msg.req.query.offset)}
}
return [msg,null,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 2e8c2ad4.66ec36       Wires: 5c663b5a.3a5df4
  
---------- Node Type: ->function<-   ->Create Providers Content<-      ID: fbfbcdbc.46365       Wires: 735ea94c.fcff08
           outputs: 1
           noerr: 0
===Function Start===
var offset = 0;
var next = 0;
var available = 0;
if(msg.paired_user_ids) { available = msg.paired_user_ids.length }
if(msg.cloudant.hasOwnProperty("skip")) {
    offset = (msg.cloudant.skip || 0);
    next = offset + (msg[msg.records.object].length);
}
msg.content = {
    "providers": msg[msg.records.object],
    "pagination": {
        "available": available,
        "count": msg[msg.records.object].length,
        "offset": offset,
        "next": next
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: b56ec96.20cef38       Wires: 8900d65d.b1e5e8
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active user with id: " + msg.inputs.user_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 5c663b5a.3a5df4       Wires: fbfbcdbc.46365
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 735ea94c.fcff08       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 8900d65d.b1e5e8       Wires: <end>

***********************************************************************************************************
Processing Item: (8)     get /dapp/users/user/:userId/filters       Tab: Data App     ID: 3cd91299.d1526e     Wires: c20930c2.43e12
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: c20930c2.43e12       Wires: d9039779.388578
  
---------- Node Type: ->function<-   ->User Filters<-      ID: d9039779.388578       Wires: 218421ba.042dce
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "User Filters",
        "info": false
    });
msg.records = {
    "doc_type": "dapp_user",
    "format": "JSON",
    "object": "dapp_user",
    "returns": ["content"],
    "models": ["dapp_user"],
    "id": msg.req.params.userId,
    "error_on_exist": false
};
msg.cloudant = {
    "request": "/stellaris_documents/" + msg.records.id,
    "method": "GET",
    "return_obj": "",
    "object": "user"
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 218421ba.042dce       Wires: 97f21f53.5f8b4
  
---------- Node Type: ->function<-   ->User Found?<-      ID: 97f21f53.5f8b4       Wires: 4b49db43.18de04,7d89a2ff.e27dec
           outputs: 2
           outputLabels: ["found","not found"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("user") && msg.user.length > 0 && msg.user[0].hasOwnProperty("doc_type") && msg.user[0].doc_type === "user") {
    
    return [msg,null];
}
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: 4b49db43.18de04       Wires: 168d2b95.567664
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: 7d89a2ff.e27dec       Wires: 43001c48.386374
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": {
        "error": {
        "code": 400,
        "message": "User with id: " + msg.records.id + " was not found."
        }
    }
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Create Filters Content<-      ID: 168d2b95.567664       Wires: 4139bc7b.c8c164
           outputs: 1
           noerr: 0
===Function Start===
var dapp_user = msg[msg.records.object][0];
var utcSeconds = dapp_user.filters.date/1000;
var date = new Date(0);
date.setUTCSeconds(utcSeconds);
var year = date.getFullYear();
var month = ("0" + (date.getMonth()+1))
var day = ("0" + date.getUTCDate())
dapp_user.filters.date = year + "-" + month.substring(month.length-2) + "-" + day.substring(day.length-2);
if(dapp_user.filters.facility_id) {
    dapp_user.filters.facility_id= dapp_user.filters.facility_id.toString();
}
if(dapp_user.filters.machine_id) {
    dapp_user.filters.machine_id = dapp_user.filters.machine_id.toString();
}
msg.content = [dapp_user.filters]
msg.content[0].user_id = dapp_user._id
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 43001c48.386374       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 4139bc7b.c8c164       Wires: <end>

***********************************************************************************************************
Processing Item: (9)     get /dapp/users/user/:userId/settings       Tab: Data App     ID: 2f28790c.953f86     Wires: 74be17dd.ff9028
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 74be17dd.ff9028       Wires: edc7b4f6.7c7e28
  
---------- Node Type: ->function<-   ->User Settings<-      ID: edc7b4f6.7c7e28       Wires: 1432fdb2.3cb952
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "User Settings",
        "info": false
    });
msg.records = {
    "doc_type": "dapp_user",
    "format": "JSON",
    "object": "dapp_user",
    "returns": ["content"],
    "models": ["dapp_user"],
    "id": msg.req.params.userId,
    "error_on_exist": false
};
msg.cloudant = {
    "request": "/stellaris_documents/" + msg.records.id,
    "method": "GET",
    "return_obj": "",
    "object": "user"
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 1432fdb2.3cb952       Wires: 543212a0.0c75dc
  
---------- Node Type: ->function<-   ->User Found?<-      ID: 543212a0.0c75dc       Wires: a3197ce3.635e3,10006853.509438
           outputs: 2
           outputLabels: ["found","not found"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("user") && msg.user.length > 0 && msg.user[0].hasOwnProperty("doc_type") && msg.user[0].doc_type === "user") {
    
    return [msg,null];
}
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: a3197ce3.635e3       Wires: 7022df11.737f5
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: 10006853.509438       Wires: b8224f3.2919cb
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": {
        "error": {
        "code": 400,
        "message": "User with id: " + msg.records.id + " was not found."
        }
    }
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Create Settings Content<-      ID: 7022df11.737f5       Wires: 32b21a69.465416
           outputs: 1
           noerr: 0
===Function Start===
var dapp_user = msg[msg.records.object][0]
msg.content = [dapp_user.settings]
msg.content[0].user_id = dapp_user._id
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: b8224f3.2919cb       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 32b21a69.465416       Wires: <end>

***********************************************************************************************************
Processing Item: (10)     post /dapp/users/user_query       Tab: Data App     ID: a6dca1b4.61f1     Wires: aec2e944.65c2e8
  
---------- Node Type: ->function<-   ->Enc<-      ID: aec2e944.65c2e8       Wires: 4476740f.ed6f8c
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 4476740f.ed6f8c       Wires: 639230cd.efc4d
  
---------- Node Type: ->function<-   ->Users Query (dapp)<-      ID: 639230cd.efc4d       Wires: 207c962f.5cbeda
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Users Query (dapp)",
        "info": false
    });
msg.records = {
    "delete": ["_rev","doc_type","status","password"],
    "doc_type": "user",
    "format": "array",
    "object": "users",
    "sort": [{"last_name:string": "asc"}],
    "returns": ["content"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["_id","role","sub_roles","uid","first_name","last_name","last_name_partial","mobile_phone","email","gets_change_email","bart_sart","business_unit","sales_area","sales_region","sales_territory","service_area","service_region","service_territory","created_by","remote_access_allowed"]};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "bookmark_type": "payload",
    "pagination": true,
    "bookmark_use": false
}
msg.filters.params = {
    "doc_type": msg.records.doc_type,
    "status": "active"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 207c962f.5cbeda       Wires: 25470ff8.bf28c
  
---------- Node Type: ->subflow<-   ->Cloudant Setup 2.0<-      ID: 25470ff8.bf28c       Wires: 12051fc9.8cd7a
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 12051fc9.8cd7a       Wires: ccb0488e.4a4858
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: ccb0488e.4a4858       Wires: c95b98a7.478388
  
---------- Node Type: ->function<-   ->Create Users Content<-      ID: c95b98a7.478388       Wires: 3afa4234.b1696e
           outputs: 1
           noerr: 0
===Function Start===
var dapp_user = msg[msg.records.object]
msg.content = dapp_user
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 3afa4234.b1696e       Wires: <end>

***********************************************************************************************************
Processing Item: (11)     post /dashdb/case_audit       Tab: DashDB     ID: 24426e48.147232     Wires: 343fcbd6.c73474
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 343fcbd6.c73474       Wires: a51d7394.95aa3
  
---------- Node Type: ->function<-   ->DashDB Case Audit<-      ID: a51d7394.95aa3       Wires: 10197903.66fa77
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "DashDB Case Audit"
    });
msg.records = {
    "returns": ["case_audit"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["CASE_NO", "DOC_ID", "FILE_NAME", "CASE_START_TIME_range_begin", "CASE_START_TIME_range_end", "JOB_STATUS"]};
msg.dashdb = {
    "select": "SELECT * FROM REPORT_DB.CASE_AUDIT",
    "sort": "ORDER BY CASE_START_TIME DESC",
    "limit": 100,
    "object": "case_audit"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 10197903.66fa77       Wires: f49e05a2.6a60d8
  
---------- Node Type: ->subflow<-   ->DashDB SQL<-      ID: f49e05a2.6a60d8       Wires: 82f0b93.2ad0148
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 82f0b93.2ad0148       Wires: <end>

***********************************************************************************************************
Processing Item: (12)     post /dashdb/case_facts       Tab: DashDB     ID: 11be3429.700a0c     Wires: 389615af.ee0b1a
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 389615af.ee0b1a       Wires: 3d68c754.570218
  
---------- Node Type: ->function<-   ->DashDB Case Facts<-      ID: 3d68c754.570218       Wires: 10197903.66fa77
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "DashDB Case Facts"
    });
msg.records = {
    "returns": ["case_facts"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["CASE_FACT_ID","CASE_ID","USER_ID","PHASE_EVENT_ID","CASE_NO","MODE","SUBMODE","FACILITY","FACILITY_ID","MACHINE","MACHINE_ID","CASE_TYPE","CASE_LABEL","CREATED_BY"]};

msg.dashdb = {
    "select": "SELECT * FROM REPORT_DB.CASE_FACT",
    "sort": "ORDER BY EVENT_DATETIME DESC",
    "limit": 100,
    "object": "case_facts"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 10197903.66fa77       Wires: f49e05a2.6a60d8
  
---------- Node Type: ->subflow<-   ->DashDB SQL<-      ID: f49e05a2.6a60d8       Wires: 82f0b93.2ad0148
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 82f0b93.2ad0148       Wires: <end>

***********************************************************************************************************
Processing Item: (13)     post /dashdb/cases       Tab: DashDB     ID: d3e91b02.31fc58     Wires: 18604523.83434b
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 18604523.83434b       Wires: 9337e8b1.ea6eb8
  
---------- Node Type: ->function<-   ->DashDB Cases<-      ID: 9337e8b1.ea6eb8       Wires: 10197903.66fa77
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "DashDB Cases"
    });
msg.records = {
    "returns": ["cases"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["CASE_ID","USER_ID","FACILITY_ID","MACHINE_ID","LOCATION_ID","VERSION_ID","CASE_NO","LOG_ID","CASE_TYPE","SYSTEM_SN","SYSTEM_TYPE","FLAG","CATEGORY1","CATEGORY2","CASE_STATUS","CREATED_BY","START_TIME_range_begin","START_TIME_range_end"]};
msg.dashdb = {
    "select": "SELECT * FROM REPORT_DB.CASE",
    "sort": "ORDER BY START_TIME DESC",
    "limit": 100,
    "object": "cases"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 10197903.66fa77       Wires: f49e05a2.6a60d8
  
---------- Node Type: ->subflow<-   ->DashDB SQL<-      ID: f49e05a2.6a60d8       Wires: 82f0b93.2ad0148
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 82f0b93.2ad0148       Wires: <end>

***********************************************************************************************************
Processing Item: (14)     post /dashdb/facilities       Tab: DashDB     ID: 8b75456f.3fd7a8     Wires: 329fc9a3.16bc46
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 329fc9a3.16bc46       Wires: e8f34b1.5ddabb8
  
---------- Node Type: ->function<-   ->DashDB Facilities<-      ID: e8f34b1.5ddabb8       Wires: 10197903.66fa77
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "DashDB Facilities"
    });
msg.records = {
    "returns": ["facilities"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["FACILITY_ID","FACILITY_ACCOUNT_ID","FACILITY_NAME","FACILITY_ADDRESS","CREATED_BY","MODIFIED_BY","CREATED_DATETIME_range_begin","CREATED_DATETIME_range_end"]};

msg.dashdb = {
    "select": "SELECT * FROM REPORT_DB.FACILITY_MASTER",
    "sort": "ORDER BY CREATED_DATETIME DESC",
    "limit": 100,
    "object": "facilities"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 10197903.66fa77       Wires: f49e05a2.6a60d8
  
---------- Node Type: ->subflow<-   ->DashDB SQL<-      ID: f49e05a2.6a60d8       Wires: 82f0b93.2ad0148
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 82f0b93.2ad0148       Wires: <end>

***********************************************************************************************************
Processing Item: (15)     post /dashdb/locations       Tab: DashDB     ID: 9d2457e7.22fd68     Wires: ec7fe3e0.16806
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: ec7fe3e0.16806       Wires: ff6d23a8.e555f
  
---------- Node Type: ->function<-   ->DashDB Locations<-      ID: ff6d23a8.e555f       Wires: 10197903.66fa77
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "DashDB Locations"
    });
msg.records = {
    "returns": ["locations"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["LOCATION_ID","CARRIER","CELLID","LOCATION_AREA_CODE","MOBILE_COUNTRY_CODE","MOBILE_NETWORK_CODE","GPS_LAT","GPS_LONG","STREET_ADDRESS","CITY"]};

msg.dashdb = {
    "select": "SELECT * FROM REPORT_DB.LOCATION_MASTER",
    "sort": "ORDER BY CITY DESC",
    "limit": 100,
    "object": "locations"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 10197903.66fa77       Wires: f49e05a2.6a60d8
  
---------- Node Type: ->subflow<-   ->DashDB SQL<-      ID: f49e05a2.6a60d8       Wires: 82f0b93.2ad0148
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 82f0b93.2ad0148       Wires: <end>

***********************************************************************************************************
Processing Item: (16)     post /dashdb/machines       Tab: DashDB     ID: 460d51f9.2457c     Wires: 5a94863.9519678
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 5a94863.9519678       Wires: bf91760d.37baa8
  
---------- Node Type: ->function<-   ->DashDB Machines<-      ID: bf91760d.37baa8       Wires: 10197903.66fa77
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "DashDB Machines"
    });
msg.records = {
    "returns": ["machines"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["MACHINE_ID","SYSTEM_SN","SYSTEM_TYPE","CREATED_BY","MODIFIED_BY","CREATED_DATETIME_range_begin","CREATED_DATETIME_range_end"]};

msg.dashdb = {
    "select": "SELECT * FROM REPORT_DB.MACHINE_MASTER",
    "sort": "ORDER BY SYSTEM_SN DESC",
    "limit": 100,
    "object": "machines"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 10197903.66fa77       Wires: f49e05a2.6a60d8
  
---------- Node Type: ->subflow<-   ->DashDB SQL<-      ID: f49e05a2.6a60d8       Wires: 82f0b93.2ad0148
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 82f0b93.2ad0148       Wires: <end>

***********************************************************************************************************
Processing Item: (17)     post /dashdb/phase_events       Tab: DashDB     ID: 8e3096aa.21c908     Wires: c2e6d6ad.b542c8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: c2e6d6ad.b542c8       Wires: 1801d191.d2d90e
  
---------- Node Type: ->function<-   ->DashDB Phase Events<-      ID: 1801d191.d2d90e       Wires: 10197903.66fa77
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "DashDB Phase Events"
    });
msg.records = {
    "returns": ["phase_events"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["PHASE_ID","CASE_ID","EVENT_ID","EVENT_NAME","SYSTEM_SN","FACILITY_NAME","SURGEON_NAME","ROOM_NAME","CASE_NUMBER","TECHNIQUE","MODE","MODE_TYPE","NEEDLE","GRADE","UNUSED1","UNUSED2","SUBMODE_ID","US_SUBMODE","PHASE_DATETIME_range_begin","PHASE_DATETIME_range_end"]};

msg.dashdb = {
    "select": "SELECT * FROM REPORT_DB.PHASE_EVENT",
    "sort": "ORDER BY PHASE_DATETIME DESC",
    "limit": 100,
    "object": "phase_events"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 10197903.66fa77       Wires: f49e05a2.6a60d8
  
---------- Node Type: ->subflow<-   ->DashDB SQL<-      ID: f49e05a2.6a60d8       Wires: 82f0b93.2ad0148
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 82f0b93.2ad0148       Wires: <end>

***********************************************************************************************************
Processing Item: (18)     post /dashdb/users       Tab: DashDB     ID: 88d59ef1.39505     Wires: d9d949bf.2c0cd8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: d9d949bf.2c0cd8       Wires: 296dbddb.a4a782
  
---------- Node Type: ->function<-   ->DashDB Users<-      ID: 296dbddb.a4a782       Wires: 10197903.66fa77
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "DashDB Users"
    });
msg.records = {
    "returns": ["users"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["USER_ID","UID","STATUS","CREATED_BY","MODIFIED_BY","CREATED_DATETIME_range_begin","CREATED_DATETIME_range_end"]};

msg.dashdb = {
    "select": "SELECT * FROM REPORT_DB.USER_MASTER",
    "sort": "ORDER BY CREATED_DATETIME DESC",
    "limit": 100,
    "object": "users"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 10197903.66fa77       Wires: f49e05a2.6a60d8
  
---------- Node Type: ->subflow<-   ->DashDB SQL<-      ID: f49e05a2.6a60d8       Wires: 82f0b93.2ad0148
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 82f0b93.2ad0148       Wires: <end>

***********************************************************************************************************
Processing Item: (19)     post /decrypt       Tab: System     ID: 233a5ea7.405a92     Wires: d42463d1.45793
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: d42463d1.45793       Wires: c7fbecda.c7d7a
  
---------- Node Type: ->function<-   ->Decrypt<-      ID: c7fbecda.c7d7a       Wires: 286a5787.9f91c8
           outputs: 1
           noerr: 0
===Function Start===
if(msg.payload.ciphertext){ 
    var cryptojs = global.get('cryptojs');
    msg.encrypt = {
        "key": global.get("CRYPTO_KEYS").com.payload
    };
    node.warn("D-encrypted_string: "+ msg.payload.ciphertext);
    msg.decrypt = cryptojs.AES.decrypt(msg.payload.ciphertext, msg.encrypt.key);
    node.warn("D-decrypt: "+ msg.decrypt);
    msg.decrypt_string = msg.decrypt.toString(cryptojs.enc.Utf8);
    node.warn("D-decrypt_string: "+ msg.decrypt_string);
    try {
        msg.decrypt_json = JSON.parse(msg.decrypt_string);
        node.warn({"D-decrypt_json": msg.decrypt_json});
        msg.payload = msg.decrypt_json;
    }
    catch(error) {
        msg.payload = msg.decrypt;
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->http response<-   -><-      ID: 286a5787.9f91c8       Wires: <end>
           headers: {}
           statusCode: 
  

***********************************************************************************************************
Processing Item: (20)     post /devices       Tab: Devices     ID: b3443c46.9f8e1     Wires: 43985337.bfdbfc
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 43985337.bfdbfc       Wires: 28717099.edb24
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 28717099.edb24       Wires: 74272503.f6446c
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    msg.v1 = true;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Device New<-      ID: 74272503.f6446c       Wires: 6f85db50.5efd64
           outputs: 1
           noerr: 0
===Function Start===
var genPwd = global.get("genpwd");
msg.api = Object.assign(msg.api,
    {
        "name": "Device New"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "device", //"user", "device", "settings_file", ...
    "object": "device",
    "format": "JSON",
    "models": ["device"],
    "returns": ["device"],
    "return_code": 201,
    "password": genPwd.generate(global.get("PWD_GEN"))
};
msg.inputs = {
    "allowed": ["status", "business_unit", "sales_area", "sales_region", "sales_territory", "service_area", "service_region", "service_territory", "customer_id", "facility_id", "facility_name", "facility_address", "sales_status", "status_date", "get_me_help_allowed", "placed_by", "birth_date"],
    "required": ["id", "system_type"]
};
if(msg.payload.hasOwnProperty("id")) {
    msg.records.id = msg.payload.id;
    msg.inputs.device_id = msg.payload.id;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 6f85db50.5efd64       Wires: 4e07670a.ba2538
           outputs: 1
           noerr: 0
===Function Start===
if(msg.v1){
    delete msg.records.returns;
    delete msg.api.info;
    delete msg.api.starts;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 4e07670a.ba2538       Wires: 865e8269.a0baa
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: 865e8269.a0baa       Wires: fb3cad03.2c30a
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: fb3cad03.2c30a       Wires: 880a03ea.a0a8d
  
---------- Node Type: ->function<-   ->add clientId & authToken<-      ID: 880a03ea.a0a8d       Wires: 4fca716f.e6562
           outputs: 1
           noerr: 0
===Function Start===
msg.device[0].mqtt_clientId = msg.device[0]._id;
msg.device[0].mqtt_authToken = msg.records.password;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 4fca716f.e6562       Wires: <end>

***********************************************************************************************************
Processing Item: (21)     get /devices/device/:deviceID       Tab: Devices     ID: abdb4835.b62b48     Wires: f0870c4b.e5e78
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: f0870c4b.e5e78       Wires: fc4d821a.6eaef
  
---------- Node Type: ->function<-   ->Device Info<-      ID: fc4d821a.6eaef       Wires: cd21da35.fcb318
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Info"
    });
msg.records = {
    "delete": ["_rev", "password", "doc_type", "status"],
    "object": "device",
    "format": "JSON",
    "returns": ["device", "edhr"]
};
msg.inputs = {
    "device_id": msg.req.params.deviceID
};
msg.cloudant = {
    "request": "/stellaris_documents/" + msg.inputs.device_id,
    "method": "GET",
    "return_obj": ""
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: cd21da35.fcb318       Wires: d2d90a8b.f2aa78
  
---------- Node Type: ->function<-   ->EDHR Info<-      ID: d2d90a8b.f2aa78       Wires: d62553c7.c1f2d,462cf092.5a01d
           outputs: 2
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("device") || !msg.device[0].hasOwnProperty("_id")) {
    return [null,msg];
}
msg.cloudant = {
    "request": "/stellaris_logs/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "edhr",
    "selector": {
        "$and": [{"system_sn": msg.inputs.device_id},
                 {"doc_type": "edhr"}]
    },
    "fields": ["_id", "system_sn", "system_type", "timestamp", "geo_location", "modlist", "software_options"],
    "sort": [{"timestamp:number": "desc"}],
    "limit": 1
};
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: d62553c7.c1f2d       Wires: e82e23f3.b5e2e
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: 462cf092.5a01d       Wires: 99d23d5.28567c
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active device with id: " + msg.inputs.device_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Empty EDHR<-      ID: e82e23f3.b5e2e       Wires: d94cab78.361dd8
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("edhr") && Array.isArray(msg.edhr) && msg.edhr.length === 0) {
    msg.edhr[0] = {}
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 99d23d5.28567c       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: d94cab78.361dd8       Wires: 27ce8ddc.b00b62
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 27ce8ddc.b00b62       Wires: <end>

***********************************************************************************************************
Processing Item: (22)     post /devices/device/:deviceID/KORE/activate_to_state       Tab: Sim     ID: 6aeae83f.6dd918     Wires: 6f3005b7.1b698c
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 6f3005b7.1b698c       Wires: 72d4978b.b46228
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 72d4978b.b46228       Wires: d87752cb.f9983
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    if(msg.payload.hasOwnProperty("toState")){
        msg.payload.status = msg.payload.toState;
        msg.req.body.status = msg.req.body.toState;
        delete msg.payload.toState;
        delete msg.req.body.toState;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Activate to State<-      ID: d87752cb.f9983       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Activate To State"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["message", "sim"]
};
msg.inputs = {
    "required": ["sim_iccid", "EAPCode", "status"],
    "values": {
        "status": ["Test", "Active"]
    }
};
msg.sim_provider = {
    "req_type": "activate_to_state",
    "body": msg.payload
};
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "SIM Card " + msg.payload.sim_iccid + " was successfully activated to " + msg.payload.status + "."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (23)     post /devices/device/:deviceID/KORE/device_status       Tab: Sim     ID: 998c7add.6524b8     Wires: dc53ae32.cc78b
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: dc53ae32.cc78b       Wires: 95e1bc30.a8423
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 95e1bc30.a8423       Wires: 24b7e3ce.e41b4c
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Status<-      ID: 24b7e3ce.e41b4c       Wires: 6d0d2e62.f103f
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Status"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["sim"]
};
msg.inputs = {
    "allowed": [],
    "required": ["sim_iccid"]
};
msg.sim_provider = {
    "req_type": "status",
    "body": msg.payload
};
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
if(msg.payload.details && msg.payload.details) { msg.sim_provider.details = true }
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 6d0d2e62.f103f       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
if(msg.v1){
    delete msg.records.returns;
    delete msg.api.info;
    delete msg.api.stats;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (24)     post /devices/device/:deviceID/KORE/modify_device_custom_info       Tab: Sim     ID: ee94c615.a6d3a8     Wires: ad4d16d7.a27ac8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: ad4d16d7.a27ac8       Wires: 7aef97a2.b2b238
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 7aef97a2.b2b238       Wires: 231352bf.6eeb3e
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Update Custom Info<-      ID: 231352bf.6eeb3e       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Update Custom Info"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["message", "sim"]
};
msg.inputs = {
    "required": ["sim_iccid"],
    "allowed": ["customField1", "customField2", "customField3", "customField4", "customField5", "customField6"]
};
msg.sim_provider = {
    "req_type": "update_info",
    "body": msg.payload
};
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "Sim Card " + msg.payload.sim_iccid + " custom information was successfully updated."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (25)     post /devices/device/:deviceID/KORE/modify_plan_codes       Tab: Sim     ID: 640ac807.e12c78     Wires: 3ff0e8c.7279e18
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 3ff0e8c.7279e18       Wires: 85a02a72.2d6718
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 85a02a72.2d6718       Wires: be86f9ca.2f2238
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    if(msg.payload.hasOwnProperty("planCode")){
        msg.payload.plan_code = msg.payload.planCode;
        msg.req.body.plan_code = msg.req.body.planCode;
        delete msg.payload.planCode;
        delete msg.req.body.planCode;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Update Plan Code<-      ID: be86f9ca.2f2238       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Modify Plan Code"
    });
msg.records = {
    "object": "sim",
    "returns": ["message","sim"]
};
msg.inputs = {
    "required": ["sim_iccid", "plan_code"]
};
msg.sim_provider = {
    "req_type": "update_plan_code",
    "body": msg.payload
}
if (msg.payload.plan_code && typeof msg.payload.plan_code !== "string") {
    if (msg.payload.plan_code.code) {
        msg.sim_provider.body.plan_code = msg.payload.plan_code.code;
    } else {
        delete msg.payload.plan_code;
        delete msg.sim_provider.plan_code
    }
}
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "SIM Card " +  msg.sim_provider.sim_iccid + " was successfully updated to use plan code " + msg.sim_provider.body.plan_code + "."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (26)     post /devices/device/:deviceID/KORE/reactivate       Tab: Sim     ID: 6e258c55.f99a64     Wires: cc6048c0.ed4cf8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: cc6048c0.ed4cf8       Wires: 2cd1ac5e.1793e4
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 2cd1ac5e.1793e4       Wires: c682ec6e.e63d3
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Reactivate<-      ID: c682ec6e.e63d3       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Reactivate"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["message", "sim"]
};
msg.inputs = {
    "required": ["sim_iccid"]
};
msg.sim_provider = {
    "req_type": "reactivate",
    "body": msg.payload
}
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "SIM Card " + msg.payload.sim_iccid + " was successfully reactivated."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (27)     put /devices/device/:deviceID/change_password       Tab: Devices     ID: 48c27508.d3388c     Wires: d9d0d059.14d15
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: d9d0d059.14d15       Wires: 273cfd40.497202
  
---------- Node Type: ->function<-   ->Device Change Password<-      ID: 273cfd40.497202       Wires: 3bab4bb6.9fa674
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Change Password"
    });
msg.records = {
    "delete": ["_rev", "doc_type","status","password"],
    "doc_type": "device",
    "object": "device",
    "format": "JSON",
    "returns": ["device"],
    "id": msg.req.params.deviceID
};
msg.inputs = {
    "allowed": ["password"],
    "required": [],
    "device_id": msg.req.params.deviceID
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 3bab4bb6.9fa674       Wires: 756f1ced.204254
  
---------- Node Type: ->function<-   ->Generate Password<-      ID: 756f1ced.204254       Wires: 80dedd39.11ed
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.inputs.password) {
    var genPwd = global.get("genpwd");
    msg.records.password = genPwd.generate(global.get("PWD_GEN"))
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: 80dedd39.11ed       Wires: 9a9cd844.3789c8
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 9a9cd844.3789c8       Wires: 6f074921.907c28
  
---------- Node Type: ->function<-   ->add clientId & authToken<-      ID: 6f074921.907c28       Wires: 6dd17aef.b913a4
           outputs: 1
           noerr: 0
===Function Start===
msg.device[0].mqtt_clientId = msg.device[0]._id;
msg.device[0].mqtt_authToken = msg.records.password;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 6dd17aef.b913a4       Wires: <end>

***********************************************************************************************************
Processing Item: (28)     post /devices/device/:deviceID/config_file       Tab: Devices     ID: 3b106f0f.72393     Wires: 5761c4cd.302f7c
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 5761c4cd.302f7c       Wires: b09379db.d13d38
  
---------- Node Type: ->function<-   ->Config File Send<-      ID: b09379db.d13d38       Wires: 2e8cb193.ce71ee
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Config File Send"
    });
msg.records = {
    "format": "JSON",
    "returns": ["message"]
};
msg.inputs = {
    "required": ["file_name", "user_id"],
    "allowed": [],
    "attach_num": 1,
    "user_id": msg.payload.user_id,
    "device_id": msg.req.params.deviceID
};
msg.email = {
    //"template_type": "config_file", //Disabled because we can send either an email or an attachment currently
    "fields":{
        "device_id": msg.inputs.device_id
    },
    "files": []
};
if (msg.req.files && msg.req.files.length > 0) {
    msg.email.files.push(msg.req.files[0])
} else if (msg.payload.file && msg.payload.file !== "") {
    msg.email.files.push({
        "fieldname": "file",
        "originalname": msg.payload.file_name,
        "encoding":"7bit",
        "mimetype": "text/csv",
        "buffer": Buffer.from(msg.payload.file, 'ascii')
    });
}
if (msg.inputs.user_id && msg.inputs.user_id !== "") {
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "doc_type",
        "selector": {
            "$or": [
                {"$and": [{"doc_type": "device"}, {"_id": msg.inputs.device_id}]},
                {"$and": [{"doc_type": "user"}, {"_id": msg.inputs.user_id}]},
                ]
        }
    };
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 2e8cb193.ce71ee       Wires: 4da1536.864adac
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 4da1536.864adac       Wires: c6fcf1ee.03f4d
  
---------- Node Type: ->function<-   ->User & Device Found?<-      ID: c6fcf1ee.03f4d       Wires: 2283c1b2.9cf50e,b8bfac69.cec45,98f4dd17.dcb3d
           outputs: 3
           outputLabels: ["found","not user found","no device found"]
           noerr: 0
===Function Start===
if (msg.user && msg.user.length > 0 && msg.user[0].doc_type && msg.user[0].doc_type === "user") {
    var user = msg.user[0];
    msg.message = "Configuration File for " + msg.inputs.device_id + " has been emailed to " + user.email
    if(msg.device && msg.device.length > 0 && msg.device[0].doc_type && msg.device[0].doc_type === "device") {
        var device = msg.device[0];
        msg.email.to = user.email;
        msg.email.topic = device._id + " - Configuration File";
        msg.email.return = true;
        msg.email.fields = Object.assign(msg.email.fields, {
            "first_name": user.fist_name,
            "last_name": user.last_name,
            "device_id": device._id,
            "system_type": device.system_type,
        });
        return [msg,null,null];
    } else { return [null,null,msg] }
} else { return [null,msg,null] }
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Email 2.2<-      ID: 2283c1b2.9cf50e       Wires: d733c2c8.29fd2
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: b8bfac69.cec45       Wires: 88a63d46.58735
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User with id: " + msg.inputs.user_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: 98f4dd17.dcb3d       Wires: 88a63d46.58735
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active device with id: " + msg.inputs.device_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: d733c2c8.29fd2       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 88a63d46.58735       Wires: <end>

***********************************************************************************************************
Processing Item: (29)     put /devices/device/:deviceID/expire_remconn       Tab: Tickets     ID: 93554a1b.195518     Wires: 725e686.462fd98
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 725e686.462fd98       Wires: 38a79a81.3d4e76
  
---------- Node Type: ->function<-   ->Device Expire RemConn<-      ID: 38a79a81.3d4e76       Wires: 8377fb1e.c743c8
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Expire RemConn"
    });
msg.records = {
    "delete": ["_rev"],
    "doc_type": "help_ticket",
    "object": "help_ticket",
    "format": "JSON",
    "returns": ["help_ticket"]
};
msg.inputs = {
    "device_id": msg.req.params.deviceID
};
msg.cloudant = {
    "request": "/stellaris_documents/" + msg.inputs.device_id,
    "method": "GET",
    "return_obj": "",
    "object": "device"
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 8377fb1e.c743c8       Wires: cf67a4b4.8a7358
  
---------- Node Type: ->function<-   ->Device Found<-      ID: cf67a4b4.8a7358       Wires: 77a06453.a257fc,52554231.a6839c
           outputs: 2
           outputLabels: ["yes found","no found"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("device") && msg.device.length > 0 && msg.device[0].doc_type === "device") {
    msg.cloudant = {
        "request": "/help_tickets/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "ticket_list",
        "selector": {
            "system_sn": msg.inputs.device_id,
            "reason": "RemConn",
            "ticket_status": "New"        
        },
    	"sort": [{"start_time:number": "desc"}]
    };
    return [msg,null];
} else {
    return [null,msg]
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 77a06453.a257fc       Wires: 4fc569de.d37ce8
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: 52554231.a6839c       Wires: db808349.0ea59
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "The device record for " + msg.inputs.device_id + " was not found."
});
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Ticket Found?<-      ID: 4fc569de.d37ce8       Wires: 3e59d903.da99c6,af5673d4.9e85b
           outputs: 2
           outputLabels: ["no","yes"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("ticket_list") || msg.ticket_list.length === 0) {
    if (!msg.hasOwnProperty("help_ticket")) {msg.help_ticket = []}
    return [msg,null];
}
var ticket = msg.ticket_list.pop();
var time = Date.now();
msg.inputs.body = {
    "ticket_status": "Expired",
    "close_time": time,
    "ticket_notes": new Date(time).toLocaleString() + " - " + msg.inputs.device_id + " - Rebooted!   /  Remote session expired."
};
msg.records.id = ticket._id;
delete msg.cloudant.id;
delete msg.cloudant.object;
node.warn({"pop ticket": msg});
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: db808349.0ea59       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 3e59d903.da99c6       Wires: 6f928faa.3a42e
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: af5673d4.9e85b       Wires: 5331778e.bd6318
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 6f928faa.3a42e       Wires: <end>
  
---------- Node Type: ->link out<-   ->Expire RemConn Loop out<-      ID: 5331778e.bd6318       Wires: <end>
           links: ["d8fbd789.fe3c88"]
  

***********************************************************************************************************
Processing Item: (30)     post /devices/device/:deviceID/getMeHelp       Tab: Tickets     ID: 26f9b12a.24edae     Wires: 2decf932.f86e36
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 2decf932.f86e36       Wires: 7209a37.a818b5c
  
---------- Node Type: ->function<-   ->Device Get Me Help<-      ID: 7209a37.a818b5c       Wires: 524c7d4e.14cb74
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Get Me Help"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "help_ticket",
    "object": "help_ticket",
    "format": "JSON",
    "returns": ["message","help_ticket"],
    "models": ["help_ticket"],
    "return_code": 201
};
msg.inputs = {
    "required": ["system_type", "cell_tower_info", "reason", "contact_name", "contact_number", "machine_state"],
    "allowed": ["doctor_id", "surgeon_settings_file_id", "surgeon_settings_name"],
    "values": {
        "reason": ["Setup", "Order Packs", "Another Issue", "Technical Support"]
    },
    "device_id": msg.req.params.deviceID,
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_type",
    "selector": {
        "$or": [{"$and": [{"doc_type": "device"},{"status": "active"},{"_id": msg.inputs.device_id}]},
                {"$and": [{"doc_type": "machine_link"},{"status": "active"},{"device": msg.inputs.device_id}]}
               ]
    }
};
if (msg.req.body.hasOwnProperty("doctor_id") && msg.req.body.doctor_id !== "") {
    msg.inputs.user_id = msg.req.body.doctor_id;
    msg.cloudant.selector["$or"].push( {"$and": [{"doc_type": "user"},{"status": "active"},{"_id": msg.inputs.user_id}]})
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 524c7d4e.14cb74       Wires: c3e1544.2852da8
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: c3e1544.2852da8       Wires: c26da446.803ea8
  
---------- Node Type: ->function<-   ->ID Found<-      ID: c26da446.803ea8       Wires: c3b78aea.e6b008,afee6342.5e629,49c8012b.5bf5b
           outputs: 3
           outputLabels: ["yes all","no device","no user"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("device") || msg.device.length === 0 || msg.device[0].doc_type !== "device") {
    return [null,msg,null]
}
if (msg.inputs.hasOwnProperty("user_id") && msg.inputs.user_id !== "") {
    if(!msg.hasOwnProperty("user") || msg.user.length === 0 || msg.user[0].doc_type !== "user") {
        return [null,null,msg]
    }
}
return [msg,null,null];
===Function   End===
  
  
---------- Node Type: ->switch<-   ->Reason<-      ID: c3b78aea.e6b008       Wires: 8af5db10.5366e8,4c2e2a57.658fc4,15c724d0.a828fb,a528e2e.be8642
           checkall: true
           repair: false
           rules: [{"vt":"str","t":"eq","v":"Setup"},{"vt":"str","t":"eq","v":"Technical Support"},{"vt":"str","t":"eq","v":"Another Issue"},{"t":"else"}]
           outputs: 4
           propertyType: msg
           property: inputs.body.reason
  
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: afee6342.5e629       Wires: 6488c519.92f40c
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "The device record for " + msg.inputs.device_id + " was not found."
});
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: 49c8012b.5bf5b       Wires: 6488c519.92f40c
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "The user record for " + msg.inputs.user_id + " was not found."
});
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Paired Application Field Sales<-      ID: 8af5db10.5366e8       Wires: eba1bc79.4683c
           outputs: 1
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("machine_link") && msg.machine_link.length > 0) {
    var linked_user_ids = msg.machine_link.map(a => a.user);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "support_users",
        "selector": {
            "$and": [
                {"doc_type": "user"},
                {"status": "active"},
                {"_id": {"$in": linked_user_ids}},
                {"sub_roles": {
                    "$or": [{"$elemMatch": { "$eq": "Applications" }},
                            {"$elemMatch": { "$eq": "Field Sales" }},
                            {"$elemMatch": { "$eq": "Sales Manager" }}]
                    }
                }]
        }
    };
} else {
    var linked_user_ids = [];
    delete msg.cloudant;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Paired Technical Support<-      ID: 4c2e2a57.658fc4       Wires: eba1bc79.4683c
           outputs: 1
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("machine_link") && msg.machine_link.length > 0) {
    var linked_user_ids = msg.machine_link.map(a => a.user);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "support_users",
        "selector": {
            "$and": [
                {"doc_type": "user"},
                {"status": "active"},
                {"_id": {"$in": linked_user_ids}},
                {"sub_roles": {
                    "$or": [{"$elemMatch": { "$eq": "Technical Support" }}]
                    }
                }]
        }
    };
} else {
    var linked_user_ids = [];
    delete msg.cloudant;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Paired Lens Rep Service<-      ID: 15c724d0.a828fb       Wires: eba1bc79.4683c
           outputs: 1
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("machine_link") && msg.machine_link.length > 0) {
    var linked_user_ids = msg.machine_link.map(a => a.user);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "support_users",
        "selector": {
            "$and": [
                {"doc_type": "user"},
                {"status": "active"},
                {"_id": {"$in": linked_user_ids}},
                {"sub_roles": {
                    "$or": [{"$elemMatch": { "$eq": "Lens Rep" }}]
                    }
                }]
        }
    };
} else {
    var linked_user_ids = [];
    delete msg.cloudant;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Paired Customer Service<-      ID: a528e2e.be8642       Wires: eba1bc79.4683c
           outputs: 1
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("machine_link") && msg.machine_link.length > 0) {
    var linked_user_ids = msg.machine_link.map(a => a.user);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "support_users",
        "selector": {
            "$and": [
                {"doc_type": "user"},
                {"status": "active"},
                {"_id": {"$in": linked_user_ids}},
                {"sub_roles": {
                    "$or": [{"$elemMatch": { "$eq": "Customer Service" }}]
                    }
                }]
        }
    };
} else {
    var linked_user_ids = [];
    delete msg.cloudant;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 6488c519.92f40c       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: eba1bc79.4683c       Wires: 9610dac3.83e198
  
---------- Node Type: ->subflow<-   ->Google Location 2.0<-      ID: 9610dac3.83e198       Wires: d6b9a65f.f06158
  
---------- Node Type: ->subflow<-   ->Support Users 2.1<-      ID: d6b9a65f.f06158       Wires: b734a9d1.b331c8
  
---------- Node Type: ->function<-   ->Create Ticket<-      ID: b734a9d1.b331c8       Wires: bf2baa36.afc668
           outputs: 1
           noerr: 0
===Function Start===
var support_user_ids = msg.support_users.map(a => a._id)
msg.inputs.body = Object.assign(msg.inputs.body, {
    "system_sn": msg.device[0]._id,
    "system_type": msg.device[0].system_type,
    "assigned_id": support_user_ids,
    
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: bf2baa36.afc668       Wires: 4988d27a.99200c,7a7665d2.fb81dc
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 4988d27a.99200c       Wires: 7d0072df.c800bc
  
---------- Node Type: ->function<-   ->EMAIL & SMS<-      ID: 7a7665d2.fb81dc       Wires: a04840d5.e19e6,97de7ab6.1754f8
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("support_users") && msg.support_users.length > 0){
    msg.email = {
        "to": msg.support_users.map(a => a.email),
        "operation": "created"
    };
    msg.sms = {
        "to": msg.support_users.map(a => a.mobile_phone),
        "to_voice": msg.support_users.map(a => a.voice_phone),
        "operation": "updated"
    }
} else {
    //do nothing
    msg.email = {};
    msg.sms = {};
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 7d0072df.c800bc       Wires: <end>
  
---------- Node Type: ->function<-   ->Email Setup<-      ID: a04840d5.e19e6       Wires: 6b45b347.5123fc
           outputs: 1
           noerr: 0
===Function Start===
var ticket = msg.help_ticket[0];
msg.email.template_type = "help_ticket";
var mod_string = "n/a";
var settings_string = "n/a";
var machine_errors = "n/a";
var posterior = ["BL15455", "BL15335"] // Stellaris PC Laser System - 7.5K, 5.0K
var combined = ["BL14455", "BL14335"] // Stellaris PC Combined System - 7.5K, 5.0K
var anterior = ["BL11145", "BL11115", "BL11125"] // Anterior System - HFM, VFM, AFM
if (ticket.hasOwnProperty("machine_state"))  {
    var edhr = ticket.machine_state;
    if (edhr.hasOwnProperty("modlist")) {
        var full_modlist = {
            "uic_info" : "UIC",
            "remote_info" : "Remote",
            "anterior_info" : "Anterior",
            "ivpole_info" : "IVPole",
            "footcan_info" : "FCIB",
            "footrx_info" : "FC Receiver",
            "footctrl_info" : "Foot Control",
            "foottx_info" : "FC Transmitter",
            "power_info" : "Power Supply",
            "fluidics_info" : "Fluidics",
            "compressor_info" : "Compressor",
            "posterior_info" : "Illumination",
            "glm_info" : "Laser",
            "lamp1_info" : "Lamp 1",
            "lamp2_info" : "Lamp 2",
            "mmc_info" : "MMC",
            "gateway_info" : "Gateway",
            "sim1_iccid" : "SIM 1",
            "sim2_iccid" : "SIM 2"
        };
        var system_modlist = full_modlist;
        if (posterior.indexOf(ticket.system_type.substring(0,7)) >= 0) {
            delete system_modlist.mmc_info;
            delete system_modlist.sim2_iccid;
        }
        if (combined.indexOf(ticket.system_type.substring(0,7)) >= 0) {
            delete system_modlist.mmc_info;
            delete system_modlist.sim2_iccid;
            delete system_modlist.laser;
        }
        if (anterior.indexOf(ticket.system_type.substring(0,7)) >= 0) {
            delete system_modlist.mmc_info;
            delete system_modlist.sim2_iccid;
            delete system_modlist.laser;
            delete system_modlist.footcan_info;
            delete system_modlist.lamp1_info;
            delete system_modlist.lamp2_info;
        }
        // Non E models that do not have gateway enabled in software should not have it
        if (ticket.system_type.length === 7 && edhr.software_options && edhr.software_options.gateway_enabled && edhr.software_options.gateway_enabled === "disabled") {
            delete system_modlist.gateway_info
            delete system_modlist.sim1_iccid;
        }
        var mod_list = [];
        var name_list = [];
        for(var propertyName in edhr.modlist) {
            var module_text = "";
            if (system_modlist.hasOwnProperty(propertyName) || edhr.modlist[propertyName].present === "PRESENT") {
                module_text =  system_modlist[propertyName]; // add module Name
                if (edhr.modlist[propertyName].present === "PRESENT") {
                    module_text += ", " + edhr.modlist[propertyName].SN; // add SN
                } else {
                    module_text += ", " + edhr.modlist[propertyName].present; // add MISSING
                }
            }
            // Add SW and HW if it has a name and a SW version
            if (edhr.modlist[propertyName].present === "PRESENT"  && edhr.modlist[propertyName].SW_version !== "") {
                module_text += ", SW v" + edhr.modlist[propertyName].SW_version + ", HW v" + edhr.modlist[propertyName].HW_version; // add SW, HW
            }
            if (module_text !== "" ) {
                mod_list.push(module_text);
                name_list.push(propertyName);
            } // print if not empty
        }
        if (mod_list.length > 0) { // Sort and Join if array not empty
            var order_list = new Array(mod_list.length);
            var idx = 0;
            for(var propertyName in full_modlist) {
                var i = name_list.indexOf(propertyName);
                if (i >= 0) {
                    order_list[idx] = mod_list[i];
                    ++idx;
                }
            }
            mod_string = order_list.join("\n<br />\n")
        } 
    }
    if (edhr.hasOwnProperty("software_options")) {
        // Software Option Names
        var software_list = {
            "vitesse_enabled" : "Vitesse",
            "gateway_enabled" : "Gateway"
        };
        var settings_string = "";
        for(var propertyName in edhr.software_options) {
            settings_string += software_list[propertyName] + ": " + edhr.software_options[propertyName] + "\n<br />\n";
        }
    }
    if (edhr.hasOwnProperty("errors")) {
        var machine_errors = JSON.stringify(edhr.errors)
    }
}
msg.email.topic = "[" + ticket.ticket_status + "] Get Me Help Ticket " + ticket._id;
msg.email.fields = {
    "operation": msg.email.operation,
    "ticket_id": ticket._id,
    "system_type": ticket.system_type,
    "device_id": ticket.system_sn,
    "reason": ticket.reason,
    "start_time": Date(ticket.start_time),
    "user_id": ticket.doctor_id,
    "contact_name": ticket.contact_name,
    "contact_number": ticket.contact_number,
    "address": ticket.address,
    "system_config": mod_string,
    "software_options": settings_string,
    "machine_errors": machine_errors
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->SMS Setup<-      ID: 97de7ab6.1754f8       Wires: 2a4e720f.02b92e
           outputs: 1
           noerr: 0
===Function Start===
var ticket = msg.help_ticket[0];
msg.sms.template_type = "help_ticket";
msg.sms.fields = {
    "ticket_status": ticket.ticket_status,
    "system_type": ticket.system_type,
    "device_id": ticket.system_sn,
    "reason": ticket.reason,
    "start_time": Date(ticket.start_time),
    "contact_name": ticket.contact_name,
    "contact_number": ticket.contact_number
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Email 2.2<-      ID: 6b45b347.5123fc       Wires: <end>
  
---------- Node Type: ->subflow<-   ->SMS 2.2<-      ID: 2a4e720f.02b92e       Wires: <end>

***********************************************************************************************************
Processing Item: (31)     get /devices/device/:deviceID/help       Tab: Devices     ID: cc93554d.279138     Wires: ec1fc6ba.b78038
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: ec1fc6ba.b78038       Wires: 2b9f4642.62eada
  
---------- Node Type: ->function<-   ->Device Help Allowed<-      ID: 2b9f4642.62eada       Wires: 3968ed8d.c17272
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Help Allowed"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status", "system_type", "business_unit", "sales_area", "sales_region", "sales_territory", "service_area", "service_region", "service_territory", "facility_name", "facility_address", "sales_status", "status_date", "customer_id", "facility_id", "placed_by", "birth_date","edhr_birth_record_id"],
    "doc_type": "device",
    "object": "device",
    "format": "JSON",
    "returns": ["device"],
    "id": msg.req.params.deviceID
};
msg.cloudant = {
    "request": "/stellaris_documents/" + msg.req.params.deviceID,
    "method": "GET",
    "return_obj": ""
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 3968ed8d.c17272       Wires: 6300f0e4.c7701
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 6300f0e4.c7701       Wires: 973d8b53.713388
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 973d8b53.713388       Wires: <end>

***********************************************************************************************************
Processing Item: (32)     post /devices/device/:deviceID/initRemConn       Tab: Tickets     ID: c38cc044.96e36     Wires: 5283662a.eb1968
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 5283662a.eb1968       Wires: 5d03988e.7e7bc8
  
---------- Node Type: ->function<-   ->Device Init Rem Conn<-      ID: 5d03988e.7e7bc8       Wires: 3dddfca0.690f34
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Init Rem Conn"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "help_ticket",
    "object": "help_ticket",
    "format": "JSON",
    "returns": ["message","help_ticket"],
    "models": ["help_ticket"],
    "return_code": 201
};
msg.inputs = {
    "required": ["device_ip"],
    "allowed": ["doctor_id", "cell_tower_info", "contact_number", "machine_state"],
    "device_id": msg.req.params.deviceID
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_type",
    "selector": {
        "$or": [{"$and": [{"doc_type": "device"},{"status": "active"},{"_id": msg.inputs.device_id}]},
                {"$and": [{"doc_type": "machine_link"},{"status": "active"},{"device": msg.inputs.device_id}]}]
    }
};
if (msg.req.body.hasOwnProperty("doctor_id") && msg.req.body.doctor_id !== "") {
    msg.cloudant.selector["$or"].push({"$and": [{"doc_type": "user"},{"status": "active"},{"_id": msg.req.body.doctor_id}]})
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 3dddfca0.690f34       Wires: b8846f2c.1175d
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: b8846f2c.1175d       Wires: a4f8ed8.7cdac1
  
---------- Node Type: ->function<-   ->Device Found<-      ID: a4f8ed8.7cdac1       Wires: fc46be67.b4961,98ea0bb4.0ebdf8
           outputs: 2
           outputLabels: ["yes found","no found"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("device") && msg.device.length > 0 && msg.device[0].doc_type === "device") {
    msg.inputs.body.system_sn = msg.inputs.device_id;
    msg.inputs.body.system_type = msg.device[0].system_type;
    msg.inputs.body.reason = "RemConn";
    if (msg.hasOwnProperty("user") && msg.user.length > 0) {
        msg.inputs.body.contact_name = msg.user[0].first_name + " " + msg.user[0].last_name
    }
    if (msg.hasOwnProperty("machine_link") && msg.machine_link.length > 0) {
        var linked_user_ids = msg.machine_link.map(a => a.user);
        msg.cloudant = {
            "request": "/stellaris_documents/_find",
            "method": "POST",
            "return_obj": "docs",
            "object": "support_users",
            "selector": {
                "$and": [
                    {"doc_type": "user"},
                    {"status": "active"},
                    {"_id": {"$in": linked_user_ids}},
                    //{"role": "Service"},
                    {"sub_roles": {
                        "$or": [{"$elemMatch": { "$eq": "Applications" }},
                                {"$elemMatch": { "$eq": "Field Sales" }},
                                {"$elemMatch": { "$eq": "Technical Support" }}]
                        }
                    }]
            }
        }
    } else {
        var linked_user_ids = [];
        delete msg.cloudant;
    }
    return [msg,null];
} else {
    return [null,msg]
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: fc46be67.b4961       Wires: d8325fdb.9cb34
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: 98ea0bb4.0ebdf8       Wires: 72e300f7.c5072
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "The device record for " + msg.inputs.device_id + " was not found."
});
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Google Location 2.0<-      ID: d8325fdb.9cb34       Wires: 4bd68bac.e89c74
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 72e300f7.c5072       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Support Users 2.1<-      ID: 4bd68bac.e89c74       Wires: e3c619dc.89ed38
  
---------- Node Type: ->function<-   ->Add Support Person<-      ID: e3c619dc.89ed38       Wires: ce9a1759.9a9cc8
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("support_users") && msg.support_users.length > 0){
    msg.inputs.body.assigned_id = msg.support_users.map(a => a._id);
} else {
    msg.inputs.body.assigned_id = [];
}
return msg;  
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: ce9a1759.9a9cc8       Wires: 7fe55e1f.27f52
  
---------- Node Type: ->function<-   ->Email Setup<-      ID: 7fe55e1f.27f52       Wires: e4a8dcfe.671d1,d6aa4528.4adaa8
           outputs: 1
           noerr: 0
===Function Start===
var device = msg.device[0];
var ticket = msg.help_ticket[0];
var users_email = msg.support_users.map(a => a.email).join(",")
msg.message = device.system_type + " " + device._id + " has had Remote Connect enabled. Ticket # "+ ticket._id + " created at " + Date(ticket.timestamp) + " has been escalated. Connect to KORE VPN and point VNC Client to " + ticket.device_ip + " to initiate Remote Connect."
if (!msg.hasOwnProperty("email")) { msg.email = {} }
msg.email.fields = 
{
    "ticket_id": ticket._id,
    "system_type": device.system_type,
    "device_id": device._id,
    "start_time": Date(ticket.start_time),
    "device_ip": ticket.device_ip,
};
msg.email.topic = "Remote Connect enabled: " + ticket._id ;
msg.email.to = users_email;

msg.email.template_type = "rem_conn"
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: e4a8dcfe.671d1       Wires: 3d9b1954.c4a866
  
---------- Node Type: ->subflow<-   ->Email 2.2<-      ID: d6aa4528.4adaa8       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 3d9b1954.c4a866       Wires: <end>

***********************************************************************************************************
Processing Item: (33)     post /devices/device/:deviceID/logs/cases_query       Tab: Devices     ID: 83a1dd9a.28cb6     Wires: adeec21.295e54
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: adeec21.295e54       Wires: 6b9cb50d.ed09ec
  
---------- Node Type: ->function<-   ->Device Query Cases<-      ID: 6b9cb50d.ed09ec       Wires: 653b6772.a90c08
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Query Cases"
    });
msg.records = {
    //"delete": ["_rev", "doc_type"],
    "doc_type": "case", //"user", "device", "settings_file", ...
    "format": "array", //"JSON", "Complex JSON"
    "object": "cases",
    "returns": ["cases_count","cases"],
    "fields": [ "_id",
                "log_id",
                "system_sn",
                "system_type",
                "location",
                "geo_location",
                "address",
                "user_id",
                "settings_file_name",
                "start_time",
                "stop_time"
               ],
    "sort": [{"stop_time:number": "desc"}]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options", "return_users"]
};
msg.filters = {
    "allowed": ["stop_time_range_begin" , "stop_time_range_end" , "user_id"],
    "required": []
};
msg.cloudant = {
    "request": "/stellaris_logs/_find",
    "method": "POST",
    "return_obj": "docs",
    "bookmark_type": "payload", //"payload", "parameter"
    "pagination": true
};
msg.filters.params = {
    "system_sn": msg.req.params.deviceID,
    "doc_type": "case"
};
if(msg.req.body.hasOwnProperty("return_users") && msg.req.body.return_users === true) {
    msg.records.returns.push("users");
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 653b6772.a90c08       Wires: 1185d464.9784cc
  
---------- Node Type: ->subflow<-   ->Cloudant Setup 2.0<-      ID: 1185d464.9784cc       Wires: 9bee9e05.bdbc5
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 9bee9e05.bdbc5       Wires: 2f460015.d3ce5
  
---------- Node Type: ->function<-   ->Case Count<-      ID: 2f460015.d3ce5       Wires: dfb8c8a7.7fd8c8
           outputs: 1
           noerr: 0
===Function Start===
msg.cloudant.pagination = false;
msg.cloudant.fields = ["user_id"];
msg.cloudant.object = "user_ids";
delete msg.cloudant.sort;
delete msg.cloudant.limit;
delete msg.cloudant.skip;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: dfb8c8a7.7fd8c8       Wires: 20d29d22.c2b2f2
  
---------- Node Type: ->function<-   ->Distinct user_id List<-      ID: 20d29d22.c2b2f2       Wires: 213570ca.bd8e4,479f4979.b437c8
           outputs: 2
           noerr: 0
===Function Start===
msg.cases_count = msg.user_ids.length;
if(msg.hasOwnProperty("cases") && msg.cases.length > 0){
    var unique_user_ids = [];
    if(msg.hasOwnProperty("user_ids") && msg.user_ids.length > 0) {
        msg.user_ids = msg.user_ids.map(a => a.user_id);
            msg.user_ids.forEach(function(id){
                if(unique_user_ids.indexOf(id) < 0 && (id !== null) && (id !== "")){
                    unique_user_ids.push(id);
                }
        });
        if(unique_user_ids.length > 0){
            msg.cloudant.request = "/stellaris_documents/_find";
            msg.cloudant.method = "POST";
            msg.cloudant.selector = { "_id":  { "$in": unique_user_ids  }};
            msg.cloudant.fields = ["_id", "first_name", "last_name"];
            msg.cloudant.sort= [];
            msg.cloudant.object = "users";
            msg.cloudant.pagination = false;
            msg.cloudant.bookmark_use = false;
            msg.cloudant.bookmark_save = false;
            return [msg, null];
        }
    }
}
msg.users = [];
msg.api.path = 2;
return [null, msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 213570ca.bd8e4       Wires: 479f4979.b437c8
  
---------- Node Type: ->function<-   ->Add User Name<-      ID: 479f4979.b437c8       Wires: e84aa179.d71ac
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("cases") && msg.cases.length > 0){
    msg.user_ids = msg.users.map(a => a._id);
    msg.cases.forEach(function(record){
        var user_index = msg.user_ids.indexOf(record.user_id);
        var first_name = "";
        var last_name = "";
        if(user_index >= 0){
            first_name = msg.users[user_index].first_name;
            last_name = msg.users[user_index].last_name;
        }
        record.first_name = first_name;
        record.last_name = last_name;
    });
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: e84aa179.d71ac       Wires: <end>

***********************************************************************************************************
Processing Item: (34)     get /devices/device/:deviceID/logs/edhr       Tab: Devices     ID: d076e27b.08b44     Wires: ad824aa7.b8df68
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: ad824aa7.b8df68       Wires: cdb0e8ba.fab598
  
---------- Node Type: ->function<-   ->Device EDHRs<-      ID: cdb0e8ba.fab598       Wires: 3d70ed41.3ef232
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device EDHRs"
    });
msg.records = {
    "delete": ["_rev", "password", "doc_type", "status"],
    "doc_type": "edhr",
    "format": "array",
    "object": "edhrs",
    "fields": ["_id", "system_sn", "system_type", "timestamp", "geo_location", "modlist", "software_options"],
    "sort": [{"timestamp:number": "desc"}],
    "returns": ["edhrs"]
};
msg.inputs = {
    "required": [],
    "allowed": []
};
msg.filters = {
    "allowed": [],
    "required": []
};
msg.cloudant = {
    "request": "/stellaris_logs/_find",
    "method": "POST",
    "return_obj": "docs",
    "bookmark_type": "payload",
    "pagination": true
};
msg.filters.params = {
    "system_sn": msg.req.params.deviceID,
    "doc_type": "edhr"
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 3d70ed41.3ef232       Wires: da446430.465b28
  
---------- Node Type: ->subflow<-   ->Cloudant Setup 2.0<-      ID: da446430.465b28       Wires: 9d25c8f6.8767b8
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 9d25c8f6.8767b8       Wires: 362a67a3.030188
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 362a67a3.030188       Wires: <end>

***********************************************************************************************************
Processing Item: (35)     get /devices/device/:deviceID/logs/machine_life       Tab: Devices     ID: 98bb2284.b6a32     Wires: 4e0b9f9c.f23d6
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 4e0b9f9c.f23d6       Wires: c31a1810.6ae3a8
  
---------- Node Type: ->function<-   ->Device Machine Lifes<-      ID: c31a1810.6ae3a8       Wires: 12834e2e.2fa082
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Machine Lifes"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "machine_life",
    "format": "array",
    "object": "machine_lifes",
    "returns": ["machine_lifes"],
};
msg.inputs = {};
msg.filters = {};
msg.cloudant = {
    "request": "/stellaris_logs/_find",
    "method": "POST",
    "return_obj": "docs",
    "bookmark_type": "payload", //"payload", "parameter"
    "pagination": true,
    "bookmark_use": false,
    "selector": {
        "doc_type": "machine_life",
        "system_sn": msg.req.params.deviceID
    },
    "fields": [
        "_id",
        "status",
        "system_sn",
        "function_accumulator",
        "power_on_time_stamp",
        "prev_power_off_time_stamp"
           ],
    "sort": [{"power_on_time_stamp:number": "desc"}]
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Setup 2.0<-      ID: 12834e2e.2fa082       Wires: 44caf25f.165efc
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 44caf25f.165efc       Wires: 2858c3cb.b105ec
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 2858c3cb.b105ec       Wires: <end>

***********************************************************************************************************
Processing Item: (36)     get /devices/device/:deviceID/maintenance       Tab: Devices     ID: 51ac4809.4cea98     Wires: 3e3e2224.0c5eae
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 3e3e2224.0c5eae       Wires: 1e7df28d.5f119d
  
---------- Node Type: ->function<-   ->Device Maintenance Files<-      ID: 1e7df28d.5f119d       Wires: 22a26830.d90308
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Maintenance Files"
    });
msg.records = {
    "delete": ["_rev","doc_type", "status"],
    "format": "array",
    "object": "settings_files",
    "returns": ["settings_files"]
};
msg.inputs = {
    "device_id": msg.req.params.deviceID
};
msg.filters = {};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_types",
    "selector": {
        "$or": [
            {"$and": [{"doc_type": "machine_link"},{"status": "active"},{"device": msg.inputs.device_id}]},
            {"$and": [{"doc_type": "device"},{"status": "active"},{"_id": msg.inputs.device_id}]}
            ]
    }
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 22a26830.d90308       Wires: 4bdf6281.10ab5c
  
---------- Node Type: ->function<-   ->Unique Surgeon Users<-      ID: 4bdf6281.10ab5c       Wires: fb6ec3dc.c771f,fc11ab63.470a38,60a33077.686ee
           outputs: 3
           outputLabels: ["","","no device"]
           noerr: 0
===Function Start===
msg.unique_user_ids = []
if (msg.hasOwnProperty("devices") && msg.devices.length >0 && msg.devices[0]._id === msg.inputs.device_id) {
    if(msg.hasOwnProperty("machine_links") && msg.machine_links.length > 0) {
        var user_ids = msg.machine_links.map(a => a.user);
        user_ids.forEach(function(id){
            if(msg.unique_user_ids.indexOf(id) < 0 && (id !== null) && (id !== "")){
                msg.unique_user_ids.push(id);
            }
        })
        msg.cloudant = {
            "request": "/stellaris_documents/_find",
            "method": "POST",
            "return_obj": "docs",
            "object": "users",
            "fields": ["_id","role"],
            "selector": {
                "doc_type": "user",
                "status": "active",
                "role": "Surgeon",
                "_id": {"$in": msg.unique_user_ids}
            }
        };
        return [msg, null,null];
    } else {
        msg.settings_files = [];
        msg.api.path = 2;
        return [null, msg,null];
    }
}
return [null,null,msg]
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: fb6ec3dc.c771f       Wires: b691428f.d32be
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: fc11ab63.470a38       Wires: <end>
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: 60a33077.686ee       Wires: 2bb9e170.65b55e
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active device with id: " + msg.inputs.device_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Settings_files by Device and Surgeon<-      ID: b691428f.d32be       Wires: 8c4d8834.9f3658,fc11ab63.470a38
           outputs: 2
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("users") && msg.users.length > 0){
    var user_ids = msg.users.map(a => a._id);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "settings_files",
        "fields": ["_id","updating_timestamp","file_name","updating_system","user_id","objectDB_id","file_id"],
        "selector": {
            "doc_type": "settings_file",
            "status": "active",
            "user_id": {"$in": user_ids}
        }
    };
    if(msg.req.query.hasOwnProperty("limit")){msg.cloudant.limit = parseInt(msg.req.query.limit)}
    if(msg.req.query.hasOwnProperty("offset")){msg.cloudant.skip = parseInt(msg.req.query.offset)}
    return [msg, null];
} else {
    msg.settings_files = [];
    msg.api.path = 3;
    return [null, msg];
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 2bb9e170.65b55e       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 8c4d8834.9f3658       Wires: fc11ab63.470a38

***********************************************************************************************************
Processing Item: (37)     post /devices/device/:deviceID/tickets_query       Tab: Devices     ID: ee549912.b7f8f8     Wires: 7d48b133.23bdb
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 7d48b133.23bdb       Wires: 3a3e94b2.488a4c
  
---------- Node Type: ->function<-   ->Device Query Tickets<-      ID: 3a3e94b2.488a4c       Wires: 1811562c.c85b9a
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Query Tickets"
    });
msg.records = {
    "doc_type": "help_ticket",
    "format": "array",
    "object": "help_tickets",
    "returns": ["help_tickets"],
    "fields": [ "_id",
                "system_sn",
                "system_type",
                "doctor_id",
                "cell_tower_info",
                "geo_location",
                "start_time",
                "close_time",
                "ticket_status",
                "reason",
                "contact_name",
                "contact_number",
                "assigned_id",
                "responder_id",
                "surgeon_settings_file_id",
                "surgeon_settings_name",
                "device_ip"
               ],
    "sort": [{"start_time:number": "desc"}]
};
if(msg.req.body.hasOwnProperty("return_assigned_users") && msg.req.body.return_assigned_users === true) {
    msg.records.returns.push("assigned_users");
}
msg.inputs = {
    "required": [],
    "allowed": ["filter_options", "return_assigned_users"]
};
msg.filters = {
    "allowed": ["start_time_range_begin" , "start_time_range_end" , "assigned_id" , "ticket_status" , "reason"],
    "required": []
};
msg.cloudant = {
    "request": "/help_tickets/_find",
    "method": "POST",
    "return_obj": "docs",
    "bookmark_type": "payload",
    "pagination": true,
    "bookmark_use": true
};
msg.filters.params = {
    "system_sn": msg.req.params.deviceID
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 1811562c.c85b9a       Wires: 49417ace.763364
  
---------- Node Type: ->subflow<-   ->Cloudant Setup 2.0<-      ID: 49417ace.763364       Wires: 9bc70e9b.67173
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 9bc70e9b.67173       Wires: ff934ee3.307fd
  
---------- Node Type: ->function<-   ->assigned_users Query<-      ID: ff934ee3.307fd       Wires: 41004440.3be51c,c623d4fb.0a4738
           outputs: 2
           noerr: 0
===Function Start===
//node.warn({"assigned_id Query": "Find Unique", "unique_assigned_ids": unique_assigned_ids});
if(msg.help_tickets.length > 0 && msg.inputs.body.hasOwnProperty("return_assigned_users") && msg.inputs.body.return_assigned_users === true){
    msg.cloudant.request = "/help_tickets/_find";
    msg.cloudant.method = "POST";
    msg.cloudant.selector.$and.push({"assigned_id": { "$ne": [] }});
    msg.cloudant.fields = ["assigned_id"];
    if(msg.cloudant.hasOwnProperty("sort")) {delete msg.cloudant.sort}
    if(msg.cloudant.hasOwnProperty("limit")) {delete msg.cloudant.limit}
    if(msg.cloudant.hasOwnProperty("skip")) {delete msg.cloudant.skip}
    msg.cloudant.object = "assigned_id";
    msg.cloudant.pagination = false;
    msg.cloudant.bookmark_use = false;
    msg.cloudant.bookmark_save = false;
    return [msg, null];
}
msg.assigned_users = [];
msg.api.path = 2;
return [null, msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 41004440.3be51c       Wires: fba912f6.de0bf
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: c623d4fb.0a4738       Wires: <end>
  
---------- Node Type: ->function<-   ->Distinct List<-      ID: fba912f6.de0bf       Wires: a872711c.5669e,c623d4fb.0a4738
           outputs: 2
           noerr: 0
===Function Start===
if(msg.help_tickets.length > 0 && msg.inputs.body.hasOwnProperty("return_assigned_users") && msg.inputs.body.return_assigned_users === true){
    var unique_assigned_ids = [];
    if(msg.assigned_id.length > 0) {
        msg.assigned_id.forEach(function(record) {
            record.assigned_id.forEach(function(id){
                if(unique_assigned_ids.indexOf(id) < 0){
                    unique_assigned_ids.push(id);
                }
            });
        });
    }
    msg.help_tickets.forEach(function(record){
        if(record.hasOwnProperty("assigned_id")){
            record.assigned_id.forEach(function(id){
                if(unique_assigned_ids.indexOf(id) < 0){
                    unique_assigned_ids.push(id);
                }
            });
        }
    });
    msg.assigned_id = unique_assigned_ids;
    if(unique_assigned_ids.length > 0){
        msg.cloudant.request = "/stellaris_documents/_find";
        msg.cloudant.method = "POST";
        msg.cloudant.selector = { "_id":  { "$in": msg.assigned_id  }};
        msg.cloudant.fields = ["_id", "first_name", "last_name"];
        msg.cloudant.sort= [{ "last_name:string": "asc"}];
        msg.cloudant.object = "assigned_users";
        msg.cloudant.pagination = false;
        msg.cloudant.bookmark_use = false;
        msg.cloudant.bookmark_save = false;
        return [msg, null];
    }
    msg.assigned_users = [];
}
msg.api.path = 3;
return [null, msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: a872711c.5669e       Wires: c623d4fb.0a4738

***********************************************************************************************************
Processing Item: (38)     get /devices/device/:deviceID/users       Tab: Devices     ID: d40f7c31.814cb     Wires: 4f9e1739.3ceb98
  
---------- Node Type: ->function<-   ->Enc<-      ID: 4f9e1739.3ceb98       Wires: d8827839.727638
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: d8827839.727638       Wires: 2657e692.db45da
  
---------- Node Type: ->function<-   ->Device Users<-      ID: 2657e692.db45da       Wires: 46328c96.587d34
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Users"
    });
msg.records = {
    "delete": ["_rev", "doc_type","status","password"],
    "doc_type": "users",
    "format": "array",
    "object": "users",
    "returns": ["users"]
};
msg.inputs = {
    "device_id": msg.req.params.deviceID
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_types",
    "selector": {
        "$or": [{"$and": [{"doc_type": "device"},{"status": "active"},{"_id": msg.inputs.device_id}]},
                {"$and": [{"doc_type": "machine_link"},{"status": "active"},{"device": msg.inputs.device_id}]}]
    }
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 46328c96.587d34       Wires: 9b7473f5.0e646
  
---------- Node Type: ->function<-   ->Paired User Ids<-      ID: 9b7473f5.0e646       Wires: e710b701.e50df8,29eb87f5.122698,d66b9503.38cc28
           outputs: 3
           outputLabels: ["yes paired","no paired","no device"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("devices") || msg.devices.length === 0) {
    return [null,null,msg];
}
if (msg.hasOwnProperty("machine_links") && msg.machine_links.length > 0) {
    msg.paired_user_ids = msg.machine_links.map(a => a.user);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "selector": {
            "$and": [{"doc_type": "user"},{"status": "active"},{"_id":  { "$in": msg.paired_user_ids }}]
        },
        "sort": [{ "last_name:string": "asc"}],
        "object": "users"
    };
    if(msg.req.query.hasOwnProperty("limit") || msg.req.query.hasOwnProperty("offset")){
        if(msg.req.query.hasOwnProperty("limit")){msg.cloudant.limit = parseInt(msg.req.query.limit)}
        if(msg.req.query.hasOwnProperty("offset")){msg.cloudant.skip = parseInt(msg.req.query.offset)}
    }
    return [msg,null,null];
}
msg.users = [];
msg.api.path = 2;
return [null,msg,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: e710b701.e50df8       Wires: 80e18637.e25728
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 29eb87f5.122698       Wires: <end>
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: d66b9503.38cc28       Wires: 8f8127ce.9e2878
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active device with id: " + msg.inputs.device_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 80e18637.e25728       Wires: 29eb87f5.122698
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 8f8127ce.9e2878       Wires: <end>

***********************************************************************************************************
Processing Item: (39)     get /devices/device/:deviceID/users/role/:role       Tab: Devices     ID: da8f01e9.05b3e     Wires: 11e5486f.2c6b08
  
---------- Node Type: ->function<-   ->Enc<-      ID: 11e5486f.2c6b08       Wires: e6a4d1f.c44fb3
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: e6a4d1f.c44fb3       Wires: d7ddbf7b.cd38f
  
---------- Node Type: ->function<-   ->Device Users<-      ID: d7ddbf7b.cd38f       Wires: f89a1dc6.bd65e
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Users by Role"
    });
msg.records = {
    "delete": ["_rev", "doc_type","status","password"],
    "doc_type": "users",
    "format": "array",
    "object": "users",
    "returns": ["users"],
};
msg.inputs = {
    "device_id": msg.req.params.deviceID,
    "role": msg.req.params.role
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_types",
    "selector": {
        "$or": [{"$and": [{"doc_type": "device"},{"status": "active"},{"_id": msg.inputs.device_id}]},
                {"$and": [{"doc_type": "machine_link"},{"status": "active"},{"device": msg.inputs.device_id}]}]
    }
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: f89a1dc6.bd65e       Wires: dc666e86.cb48d
  
---------- Node Type: ->function<-   ->Paired User Ids<-      ID: dc666e86.cb48d       Wires: d7221038.0502,4817e69c.dc4b78,56bf3276.2d53dc
           outputs: 3
           outputLabels: ["yes paired","no paired","no device"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("devices") || msg.devices.length === 0) {
    return [null,null,msg];
}
if (msg.hasOwnProperty("machine_links") && msg.machine_links.length > 0) {
    msg.paired_user_ids = msg.machine_links.map(a => a.user);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "selector": { "$and": [
            {"_id":  { "$in": msg.paired_user_ids  }},
            {"role": msg.inputs.role}
            ]},
        "sort": [{ "last_name:string": "asc"}],
        "object": "users"
    };
    if(msg.req.query.hasOwnProperty("limit") || msg.req.query.hasOwnProperty("offset")){
        if(msg.req.query.hasOwnProperty("limit")){msg.cloudant.limit = parseInt(msg.req.query.limit)}
        if(msg.req.query.hasOwnProperty("offset")){msg.cloudant.skip = parseInt(msg.req.query.offset)}
    }
    return [msg,null,null];
}
msg.users = [];
msg.api.path = 2;
return [null,msg,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: d7221038.0502       Wires: d01cec89.0a404
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 4817e69c.dc4b78       Wires: <end>
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: 56bf3276.2d53dc       Wires: bc61e160.7a68e
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active device with id: " + msg.inputs.device_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: d01cec89.0a404       Wires: 4817e69c.dc4b78
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: bc61e160.7a68e       Wires: <end>

***********************************************************************************************************
Processing Item: (40)     post /devices/device/KORE/activate_to_state       Tab: Sim     ID: c437bfe6.4eb7b     Wires: 6f3005b7.1b698c
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 6f3005b7.1b698c       Wires: 72d4978b.b46228
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 72d4978b.b46228       Wires: d87752cb.f9983
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    if(msg.payload.hasOwnProperty("toState")){
        msg.payload.status = msg.payload.toState;
        msg.req.body.status = msg.req.body.toState;
        delete msg.payload.toState;
        delete msg.req.body.toState;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Activate to State<-      ID: d87752cb.f9983       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Activate To State"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["message", "sim"]
};
msg.inputs = {
    "required": ["sim_iccid", "EAPCode", "status"],
    "values": {
        "status": ["Test", "Active"]
    }
};
msg.sim_provider = {
    "req_type": "activate_to_state",
    "body": msg.payload
};
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "SIM Card " + msg.payload.sim_iccid + " was successfully activated to " + msg.payload.status + "."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (41)     post /devices/device/KORE/deactivate       Tab: Sim     ID: f7f360f6.6436e8     Wires: c393c069.a7c09
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: c393c069.a7c09       Wires: 3a473fea.3e376
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 3a473fea.3e376       Wires: d68a7ab.71f5488
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    if(msg.payload.hasOwnProperty("flagScrap")){
        delete msg.payload.flagScrap;
        delete msg.req.body.flagScrap;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Deactivate<-      ID: d68a7ab.71f5488       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Deactivate"
    });
msg.records = {
    "object": "sim",
    "returns": ["message","sim"]
};
msg.inputs = {
    "required": ["sim_iccid"]
};
msg.sim_provider = {
    "req_type": "deactivate",
    "body": msg.payload
};
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "SIM Card " +  msg.payload.sim_iccid + " was successfully deactivated."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (42)     post /devices/device/KORE/device_status       Tab: Sim     ID: 71d39268.77f7ec     Wires: dc53ae32.cc78b
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: dc53ae32.cc78b       Wires: 95e1bc30.a8423
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 95e1bc30.a8423       Wires: 24b7e3ce.e41b4c
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Status<-      ID: 24b7e3ce.e41b4c       Wires: 6d0d2e62.f103f
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Status"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["sim"]
};
msg.inputs = {
    "allowed": [],
    "required": ["sim_iccid"]
};
msg.sim_provider = {
    "req_type": "status",
    "body": msg.payload
};
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
if(msg.payload.details && msg.payload.details) { msg.sim_provider.details = true }
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 6d0d2e62.f103f       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
if(msg.v1){
    delete msg.records.returns;
    delete msg.api.info;
    delete msg.api.stats;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (43)     post /devices/device/KORE/modify_device_custom_info       Tab: Sim     ID: 62d9b8dd.115968     Wires: ad4d16d7.a27ac8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: ad4d16d7.a27ac8       Wires: 7aef97a2.b2b238
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 7aef97a2.b2b238       Wires: 231352bf.6eeb3e
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Update Custom Info<-      ID: 231352bf.6eeb3e       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Update Custom Info"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["message", "sim"]
};
msg.inputs = {
    "required": ["sim_iccid"],
    "allowed": ["customField1", "customField2", "customField3", "customField4", "customField5", "customField6"]
};
msg.sim_provider = {
    "req_type": "update_info",
    "body": msg.payload
};
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "Sim Card " + msg.payload.sim_iccid + " custom information was successfully updated."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (44)     post /devices/device/KORE/modify_plan_codes       Tab: Sim     ID: a0735513.b59128     Wires: 3ff0e8c.7279e18
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 3ff0e8c.7279e18       Wires: 85a02a72.2d6718
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 85a02a72.2d6718       Wires: be86f9ca.2f2238
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    if(msg.payload.hasOwnProperty("planCode")){
        msg.payload.plan_code = msg.payload.planCode;
        msg.req.body.plan_code = msg.req.body.planCode;
        delete msg.payload.planCode;
        delete msg.req.body.planCode;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Update Plan Code<-      ID: be86f9ca.2f2238       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Modify Plan Code"
    });
msg.records = {
    "object": "sim",
    "returns": ["message","sim"]
};
msg.inputs = {
    "required": ["sim_iccid", "plan_code"]
};
msg.sim_provider = {
    "req_type": "update_plan_code",
    "body": msg.payload
}
if (msg.payload.plan_code && typeof msg.payload.plan_code !== "string") {
    if (msg.payload.plan_code.code) {
        msg.sim_provider.body.plan_code = msg.payload.plan_code.code;
    } else {
        delete msg.payload.plan_code;
        delete msg.sim_provider.plan_code
    }
}
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "SIM Card " +  msg.sim_provider.sim_iccid + " was successfully updated to use plan code " + msg.sim_provider.body.plan_code + "."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (45)     post /devices/device/KORE/plan_codes       Tab: Sim     ID: a5c84bb.37d00b8     Wires: b5c4a534.d50fa8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: b5c4a534.d50fa8       Wires: 27ab0656.d57e7a
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 27ab0656.d57e7a       Wires: 95572347.dd40a
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Plan Codes<-      ID: 95572347.dd40a       Wires: a0a5577b.8dd158
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Plan Codes"
    });
msg.records = {
    "object": "plan_codes",
    "returns": ["plan_codes"]
};
msg.sim_provider = {
    "req_type": "plan_codes"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

********************************************************************************************