Program Start! 9/5/2019 2:58:34 PM
 
Parsing File: C:\Cloud_Backup\US_Dev\NRC_Backup\nodered_Stellaris-Flow-10.1_flow_2019-09-05 14-08-59_NEW.txt
 

***********************************************************************************************************
Processing Item: (1)     get /crypto_key       Tab: System     ID: 80de317f.7ca5f     Wires: 9bd877f1.986f88
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 9bd877f1.986f88       Wires: a37abe75.f5eab
  
---------- Node Type: ->function<-   ->Crypto Key<-      ID: a37abe75.f5eab       Wires: 26c89df2.e75ce2
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Crypto Key",
        "encrypt": false
    });
msg.records = {
    "format": "array",
    "returns": ["key"]
};
msg.key = global.get("CRYPTO_KEYS").com.payload
node.warn({"Crypto Key": msg})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 26c89df2.e75ce2       Wires: <end>

***********************************************************************************************************
Processing Item: (2)     post /dapp/pairing/pair/provider_consumer       Tab: Data App     ID: 52af7c99.8c4914     Wires: 2b35f87.3d49308
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 2b35f87.3d49308       Wires: bb375fa7.d25c1
  
---------- Node Type: ->function<-   ->Pair Provider and Consumer<-      ID: bb375fa7.d25c1       Wires: a78e3781.cc1708
           outputs: 1
           noerr: 0
===Function Start===

msg.api = Object.assign(msg.api,
    {
        "name": "Pair Provider and Consumer"
    });
msg.records = {
    "delete": ["_rev", "doc_type","status"],
    "doc_type": "provider_link",
    "object": "provider_link",
    "format": "JSON",
    "returns": ["content"],
    "models": ["provider_link"]
};
msg.inputs = {
    "required": ["provider_id","consumer_id"],
    "provider_id":msg.payload.provider_id,
    "consumer_id":msg.payload.consumer_id
    
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "users",
    "selector": {
        "$and": [   {"doc_type": "user"},
                    {"status": "active"},
                    {"_id": {"$in": [msg.inputs.provider_id, msg.inputs.consumer_id]}}
                ]
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: a78e3781.cc1708       Wires: 5beccb71.602304
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 5beccb71.602304       Wires: b321feb5.c030d
  
---------- Node Type: ->function<-   ->Povider  & Consmer Exists<-      ID: b321feb5.c030d       Wires: 4860fb68.bc9274,bf58f76e.dd4bb8,1095583a.c81a88
           outputs: 3
           outputLabels: ["yes","no device","no user"]
           noerr: 0
===Function Start===
if(msg.users && msg.users.length > 0) {
    user_ids = msg.users.map(a => a._id)
    var provider = user_ids.indexOf(msg.inputs.provider_id)
    node.warn(provider)
    var consumer = user_ids.indexOf(msg.inputs.consumer_id)
    node.warn(consumer)
    if (provider < 0 && msg.users[provider].role !== "Surgeon" ) { return [null,msg,null]; }
    if (consumer < 0) { return [null,null,msg]; }
} else {
    return [null,msg,null];
}
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "provider_link",
    "selector": {
        "$and": [   {"doc_type": "provider_link"},
                    {"provider_id": msg.inputs.provider_id},//{_id": msg.inputs.provider_id},
                    {"consumer_id": msg.inputs.consumer_id} //{_id": msg.inputs.provider_id},
                ]
    }
};
return [msg,null,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 4860fb68.bc9274       Wires: 10713b80.691655
  
---------- Node Type: ->function<-   ->Provider Not Found<-      ID: bf58f76e.dd4bb8       Wires: fc0dabdf.071678
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Provider user: " + msg.inputs.provider_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Consumer Not Found<-      ID: 1095583a.c81a88       Wires: fc0dabdf.071678
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Consumern user: " + msg.inputs.consumer_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Link Exists<-      ID: 10713b80.691655       Wires: 6f94f387.cfd60c,16222a54.4ad966,5006bbc9.875c24
           outputs: 3
           outputLabels: ["no","yes active","yes inactive"]
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("provider_link") || msg.provider_link.length === 0){
    msg.records.id = "";
    return [msg,null,null];
}
if (msg.provider_link[0].status === "inactive") {
    msg.inputs.provider_link = msg.provider_link[0]._id;
    msg.records.id = msg.provider_link[0]._id;
    delete msg.provider_link;
    msg.inputs.body = { "status": "active" }
    return [null,null,msg];
} else {
    return [null,msg,null];
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: fc0dabdf.071678       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: 6f94f387.cfd60c       Wires: 16222a54.4ad966
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 16222a54.4ad966       Wires: f8d88d89.52923
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: 5006bbc9.875c24       Wires: 16222a54.4ad966
  
---------- Node Type: ->function<-   ->Create Link Content<-      ID: f8d88d89.52923       Wires: 2ae62aa7.76b926
           outputs: 1
           noerr: 0
===Function Start===
var dapp_user = msg[msg.records.object]
msg.content = dapp_user
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 2ae62aa7.76b926       Wires: <end>

***********************************************************************************************************
Processing Item: (3)     post /dapp/pairing/unpair/provider_consumer       Tab: Data App     ID: 16109ee.b3e1b61     Wires: ae33d23f.bc37b
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: ae33d23f.bc37b       Wires: 701b6e58.67937
  
---------- Node Type: ->function<-   ->Unpair Provider and Consumer<-      ID: 701b6e58.67937       Wires: ac573156.095cc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Unpair Provider and Consumer"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "provider_link",
    "object": "provider_link",
    "format": "JSON",
    "returns": ["content"],
};
msg.inputs = {
    "required": ["provider_id", "consumer_id"],
    "provider_id": msg.payload.provider_id,
    "consumer_id": msg.payload.consumer_id
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "provider_link",
    "selector": {
        "$and": [   {"doc_type": "provider_link"},
                    {"provider_id": msg.inputs.provider_id},
                    {"consumer_id": msg.inputs.consumer_id}
                ]
    }
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: ac573156.095cc       Wires: 25c04843.2cc518
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 25c04843.2cc518       Wires: 7ba6c216.3d934c
  
---------- Node Type: ->function<-   ->Link exists<-      ID: 7ba6c216.3d934c       Wires: 1995407f.ffd5c,9e96db2a.b84e78,4b243f5c.dd857
           outputs: 3
           outputLabels: ["yes","no",""]
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("provider_link") || msg.provider_link.length === 0){
    return [null,msg,null]
}
if(msg.hasOwnProperty("provider_link") && msg.provider_link[0].status === "inactive"){
    return [null,null,msg]
}
msg.inputs.provider_link = msg.provider_link[0]._id;
msg.records.id = msg.provider_link[0]._id;
delete msg.provider_link;
msg.inputs.body = { "status": "inactive" };
return [msg,null,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: 1995407f.ffd5c       Wires: 981913cd.2e3b2
  
---------- Node Type: ->function<-   ->Link Not Found<-      ID: 9e96db2a.b84e78       Wires: c07af3dc.e58bc
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active Link between Provider: " + msg.inputs.provider_id + " and Consumer: " + msg.inputs.consumer_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Link Already Inactive<-      ID: 4b243f5c.dd857       Wires: 981913cd.2e3b2
           outputs: 1
           noerr: 0
===Function Start===
if(msg.records.returns) {
    msg.records.returns.push("message");
}
else {
    msg.records.returns = ["message"];
}
msg.message = "Link between Provider: " + msg.inputs.provider_id + " and Consumer: " + msg.inputs.consumer_id + " was already delinked.";
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 981913cd.2e3b2       Wires: 164ffc81.9542f3
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: c07af3dc.e58bc       Wires: <end>
  
---------- Node Type: ->function<-   ->Create Link Content<-      ID: 164ffc81.9542f3       Wires: be00f51e.4286d8
           outputs: 1
           noerr: 0
===Function Start===
var dapp_user = msg[msg.records.object]
msg.content = dapp_user
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: be00f51e.4286d8       Wires: <end>

***********************************************************************************************************
Processing Item: (4)     get /dapp/system/user_profile_urls       Tab: Data App     ID: 6849de07.4be1     Wires: 851918ee.31a918
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 851918ee.31a918       Wires: 79d34d4a.fa6a34
  
---------- Node Type: ->function<-   ->User Profile URLs (dapp)<-      ID: 79d34d4a.fa6a34       Wires: c152c927.89e088
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "User Profile URLs (dapp)",
        "info": false
    });
msg.records = {
    "object": "payload",
    "returns": ["payload"]
};
msg.payload = {
    "content":{
    "create_user_page": "www.google.com",
    "forgot_password_page": "www.google.com",
    "user_profile_page": "www.google.com"
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->http response<-   -><-      ID: c152c927.89e088       Wires: <end>
           headers: {}
           statusCode: 
  

***********************************************************************************************************
Processing Item: (5)     get /dapp/users/user/:userID       Tab: Data App     ID: e30f497b.7b4468     Wires: 601d3844.78ecc8
  
---------- Node Type: ->function<-   ->Enc<-      ID: 601d3844.78ecc8       Wires: f12b7dba.103b3
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: f12b7dba.103b3       Wires: 974c4af0.275628
  
---------- Node Type: ->function<-   ->User Info (dapp)<-      ID: 974c4af0.275628       Wires: 9db8f4e2.b26ef8
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "User Info (dapp)",
        "info": false
    });
msg.records = {
    "delete": ["_rev", "password", "doc_type", "status"],
    "doc_type": "user",
    "object": "user",
    "format": "JSON",
    "returns": ["content"],
    "id": msg.req.params.userID
};
msg.inputs = {
    "user_id": msg.req.params.userID
};
msg.filters = {};
msg.filters.params = {};
msg.cloudant = {
    "request": "/stellaris_documents/" + msg.records.id,
    "method": "GET",
    "return_obj": "",
    "object": "user"
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 9db8f4e2.b26ef8       Wires: 661b9b3a.d9a684
  
---------- Node Type: ->function<-   ->User Found?<-      ID: 661b9b3a.d9a684       Wires: 978b733b.68056,4a3043d8.7f824c
           outputs: 2
           outputLabels: ["found","not found"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("user") && msg.user.length > 0 && msg.user[0].hasOwnProperty("doc_type") && msg.user[0].doc_type === "user") {
    return [msg,null];
}
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 978b733b.68056       Wires: 67333aa2.9ea5d4
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: 4a3043d8.7f824c       Wires: b134446d.0ec158
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User with id: " + msg.inputs.user_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Create User Content<-      ID: 67333aa2.9ea5d4       Wires: 10e08e36.953912
           outputs: 1
           noerr: 0
===Function Start===
var dapp_user = msg[msg.records.object]
msg.content = dapp_user
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: b134446d.0ec158       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 10e08e36.953912       Wires: <end>

***********************************************************************************************************
Processing Item: (6)     get /dapp/users/user/:userID/consumers       Tab: Data App     ID: a7a55c7.6bdd3a     Wires: 43efb967.640608
  
---------- Node Type: ->function<-   ->Enc<-      ID: 43efb967.640608       Wires: 83a830c2.15ab
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 83a830c2.15ab       Wires: af9d0519.cd4e88
  
---------- Node Type: ->function<-   ->User Consumers<-      ID: af9d0519.cd4e88       Wires: 9179657b.0713b8
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "User Consumers"
    });
msg.records = {
    "delete": ["_rev", "doc_type","status","password"],
    "doc_type": "user",
    "format": "array",
    "object": "users",
    "returns": ["content"]
};
msg.inputs = {
    "user_id": msg.req.params.userID
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_types",
    "selector": {
        "$or": [{"$and": [{"doc_type": "user"},{"status": "active"},{"_id": msg.inputs.user_id}]},
                {"$and": [{"doc_type": "provider_link"},{"status": "active"},{"provider_id": msg.inputs.user_id}]}]
    }
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 9179657b.0713b8       Wires: edf86da6.4a2cb
  
---------- Node Type: ->function<-   ->Paired Comsumer Ids<-      ID: edf86da6.4a2cb       Wires: 1da746c3.2f3979,32d8be6e.52e7e2,a7ce1edb.62206
           outputs: 3
           outputLabels: ["yes paired","no paired","no device"]
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("users") || msg.users.length === 0){
    return [null,null,msg];
}
if(!msg.hasOwnProperty("provider_links") || msg.provider_links.length === 0){
    msg.users = [];
    return [null,msg,null]
}
msg.paired_user_ids = msg.provider_links.map(a => a.consumer_id);
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "users",
    "selector": {
        "$and": [{"doc_type": "user"},{"status": "active"},{"_id":  { "$in": msg.paired_user_ids }}]
    },
    "sort": [{ "last_name:string": "asc"},{ "first_name:string": "asc"}],
};
if(msg.req.query.hasOwnProperty("limit") || msg.req.query.hasOwnProperty("offset")){
    if(msg.req.query.hasOwnProperty("limit")){msg.cloudant.limit = parseInt(msg.req.query.limit)}
    if(msg.req.query.hasOwnProperty("offset")){msg.cloudant.skip = parseInt(msg.req.query.offset)}
}
return [msg,null,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 1da746c3.2f3979       Wires: 64396a28.d0d394
  
---------- Node Type: ->function<-   ->Create Users Content<-      ID: 32d8be6e.52e7e2       Wires: d7edca4f.8d4438
           outputs: 1
           noerr: 0
===Function Start===
var offset = 0;
var next = 0;
var available = 0;
if(msg.paired_user_ids) { available = msg.paired_user_ids.length }
if(msg.cloudant.hasOwnProperty("skip")) {
    offset = (msg.cloudant.skip || 0);
    next = offset + (msg[msg.records.object].length);
}
msg.content = {
    "consumers": msg[msg.records.object],
    "pagination": {
        "available": available,
        "count": msg[msg.records.object].length,
        "offset": offset,
        "next": next
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: a7ce1edb.62206       Wires: 3fd78df9.015a42
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active user with id: " + msg.inputs.user_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 64396a28.d0d394       Wires: 32d8be6e.52e7e2
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: d7edca4f.8d4438       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 3fd78df9.015a42       Wires: <end>

***********************************************************************************************************
Processing Item: (7)     get /dapp/users/user/:userID/providers       Tab: Data App     ID: 15d08ab8.403e05     Wires: 6c86ab14.d87224
  
---------- Node Type: ->function<-   ->Enc<-      ID: 6c86ab14.d87224       Wires: c3575b75.ef2418
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: c3575b75.ef2418       Wires: 6b4fa77a.b57c68
  
---------- Node Type: ->function<-   ->User Providers<-      ID: 6b4fa77a.b57c68       Wires: 280a4100.fdc7ee
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "User Providers"
    });
msg.records = {
    "delete": ["_rev", "doc_type","status","password"],
    "doc_type": "user",
    "format": "array",
    "object": "users",
    "returns": ["content"]
};
msg.inputs = {
    "user_id": msg.req.params.userID
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_types",
    "selector": {
        "$or": [{"$and": [{"doc_type": "user"},{"status": "active"},{"_id": msg.inputs.user_id}]},
                {"$and": [{"doc_type": "provider_link"},{"status": "active"},{"consumer_id": msg.inputs.user_id}]}]
    }
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 280a4100.fdc7ee       Wires: 6f4cf458.a31a1c
  
---------- Node Type: ->function<-   ->Paired Provider Ids<-      ID: 6f4cf458.a31a1c       Wires: 2e8c2ad4.66ec36,fbfbcdbc.46365,b56ec96.20cef38
           outputs: 3
           outputLabels: ["yes paired","no paired","no device"]
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("users") || msg.users.length === 0){
    return [null,null,msg];
}
if(!msg.hasOwnProperty("provider_links") || msg.provider_links.length === 0){
    msg.users = [];
    return [null,msg,null]
}
msg.paired_user_ids = msg.provider_links.map(a => a.provider_id);
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "users",
    "selector": {
        "$and": [{"doc_type": "user"},{"status": "active"},{"_id":  { "$in": msg.paired_user_ids }}]
    },
    "sort": [{ "last_name:string": "asc"},{ "first_name:string": "asc"}]
};
if(msg.req.query.hasOwnProperty("limit") || msg.req.query.hasOwnProperty("offset")){
    if(msg.req.query.hasOwnProperty("limit")){msg.cloudant.limit = parseInt(msg.req.query.limit)}
    if(msg.req.query.hasOwnProperty("offset")){msg.cloudant.skip = parseInt(msg.req.query.offset)}
}
return [msg,null,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 2e8c2ad4.66ec36       Wires: 5c663b5a.3a5df4
  
---------- Node Type: ->function<-   ->Create Providers Content<-      ID: fbfbcdbc.46365       Wires: 735ea94c.fcff08
           outputs: 1
           noerr: 0
===Function Start===
var offset = 0;
var next = 0;
var available = 0;
if(msg.paired_user_ids) { available = msg.paired_user_ids.length }
if(msg.cloudant.hasOwnProperty("skip")) {
    offset = (msg.cloudant.skip || 0);
    next = offset + (msg[msg.records.object].length);
}
msg.content = {
    "providers": msg[msg.records.object],
    "pagination": {
        "available": available,
        "count": msg[msg.records.object].length,
        "offset": offset,
        "next": next
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: b56ec96.20cef38       Wires: 8900d65d.b1e5e8
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active user with id: " + msg.inputs.user_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 5c663b5a.3a5df4       Wires: fbfbcdbc.46365
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 735ea94c.fcff08       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 8900d65d.b1e5e8       Wires: <end>

***********************************************************************************************************
Processing Item: (8)     get /dapp/users/user/:userId/filters       Tab: Data App     ID: 3cd91299.d1526e     Wires: c20930c2.43e12
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: c20930c2.43e12       Wires: d9039779.388578
  
---------- Node Type: ->function<-   ->User Filters<-      ID: d9039779.388578       Wires: 218421ba.042dce
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "User Filters",
        "info": false
    });
msg.records = {
    "doc_type": "dapp_user",
    "format": "JSON",
    "object": "dapp_user",
    "returns": ["content"],
    "models": ["dapp_user"],
    "id": msg.req.params.userId,
    "error_on_exist": false
};
msg.cloudant = {
    "request": "/stellaris_documents/" + msg.records.id,
    "method": "GET",
    "return_obj": "",
    "object": "user"
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 218421ba.042dce       Wires: 97f21f53.5f8b4
  
---------- Node Type: ->function<-   ->User Found?<-      ID: 97f21f53.5f8b4       Wires: 4b49db43.18de04,7d89a2ff.e27dec
           outputs: 2
           outputLabels: ["found","not found"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("user") && msg.user.length > 0 && msg.user[0].hasOwnProperty("doc_type") && msg.user[0].doc_type === "user") {
    
    return [msg,null];
}
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: 4b49db43.18de04       Wires: 168d2b95.567664
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: 7d89a2ff.e27dec       Wires: 43001c48.386374
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": {
        "error": {
        "code": 400,
        "message": "User with id: " + msg.records.id + " was not found."
        }
    }
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Create Filters Content<-      ID: 168d2b95.567664       Wires: 4139bc7b.c8c164
           outputs: 1
           noerr: 0
===Function Start===
var dapp_user = msg[msg.records.object][0];
var utcSeconds = dapp_user.filters.date/1000;
var date = new Date(0);
date.setUTCSeconds(utcSeconds);
var year = date.getFullYear();
var month = ("0" + (date.getMonth()+1))
var day = ("0" + date.getUTCDate())
dapp_user.filters.date = year + "-" + month.substring(month.length-2) + "-" + day.substring(day.length-2);
if(dapp_user.filters.facility_id) {
    dapp_user.filters.facility_id= dapp_user.filters.facility_id.toString();
}
if(dapp_user.filters.machine_id) {
    dapp_user.filters.machine_id = dapp_user.filters.machine_id.toString();
}
msg.content = [dapp_user.filters]
msg.content[0].user_id = dapp_user._id
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 43001c48.386374       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 4139bc7b.c8c164       Wires: <end>

***********************************************************************************************************
Processing Item: (9)     get /dapp/users/user/:userId/settings       Tab: Data App     ID: 2f28790c.953f86     Wires: 74be17dd.ff9028
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 74be17dd.ff9028       Wires: edc7b4f6.7c7e28
  
---------- Node Type: ->function<-   ->User Settings<-      ID: edc7b4f6.7c7e28       Wires: 1432fdb2.3cb952
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "User Settings",
        "info": false
    });
msg.records = {
    "doc_type": "dapp_user",
    "format": "JSON",
    "object": "dapp_user",
    "returns": ["content"],
    "models": ["dapp_user"],
    "id": msg.req.params.userId,
    "error_on_exist": false
};
msg.cloudant = {
    "request": "/stellaris_documents/" + msg.records.id,
    "method": "GET",
    "return_obj": "",
    "object": "user"
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 1432fdb2.3cb952       Wires: 543212a0.0c75dc
  
---------- Node Type: ->function<-   ->User Found?<-      ID: 543212a0.0c75dc       Wires: a3197ce3.635e3,10006853.509438
           outputs: 2
           outputLabels: ["found","not found"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("user") && msg.user.length > 0 && msg.user[0].hasOwnProperty("doc_type") && msg.user[0].doc_type === "user") {
    
    return [msg,null];
}
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: a3197ce3.635e3       Wires: 7022df11.737f5
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: 10006853.509438       Wires: b8224f3.2919cb
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": {
        "error": {
        "code": 400,
        "message": "User with id: " + msg.records.id + " was not found."
        }
    }
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Create Settings Content<-      ID: 7022df11.737f5       Wires: 32b21a69.465416
           outputs: 1
           noerr: 0
===Function Start===
var dapp_user = msg[msg.records.object][0]
msg.content = [dapp_user.settings]
msg.content[0].user_id = dapp_user._id
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: b8224f3.2919cb       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 32b21a69.465416       Wires: <end>

***********************************************************************************************************
Processing Item: (10)     post /dapp/users/user_query       Tab: Data App     ID: a6dca1b4.61f1     Wires: aec2e944.65c2e8
  
---------- Node Type: ->function<-   ->Enc<-      ID: aec2e944.65c2e8       Wires: 4476740f.ed6f8c
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 4476740f.ed6f8c       Wires: 639230cd.efc4d
  
---------- Node Type: ->function<-   ->Users Query (dapp)<-      ID: 639230cd.efc4d       Wires: 207c962f.5cbeda
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Users Query (dapp)",
        "info": false
    });
msg.records = {
    "delete": ["_rev","doc_type","status","password"],
    "doc_type": "user",
    "format": "array",
    "object": "users",
    "sort": [{"last_name:string": "asc"}],
    "returns": ["content"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["_id","role","sub_roles","uid","first_name","last_name","last_name_partial","mobile_phone","email","gets_change_email","bart_sart","business_unit","sales_area","sales_region","sales_territory","service_area","service_region","service_territory","created_by","remote_access_allowed"]};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "bookmark_type": "payload",
    "pagination": true,
    "bookmark_use": false
}
msg.filters.params = {
    "doc_type": msg.records.doc_type,
    "status": "active"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 207c962f.5cbeda       Wires: 25470ff8.bf28c
  
---------- Node Type: ->subflow<-   ->Cloudant Setup 2.0<-      ID: 25470ff8.bf28c       Wires: 12051fc9.8cd7a
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 12051fc9.8cd7a       Wires: ccb0488e.4a4858
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: ccb0488e.4a4858       Wires: c95b98a7.478388
  
---------- Node Type: ->function<-   ->Create Users Content<-      ID: c95b98a7.478388       Wires: 3afa4234.b1696e
           outputs: 1
           noerr: 0
===Function Start===
var dapp_user = msg[msg.records.object]
msg.content = dapp_user
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 3afa4234.b1696e       Wires: <end>

***********************************************************************************************************
Processing Item: (11)     post /dashdb/case_audit       Tab: DashDB     ID: 24426e48.147232     Wires: 343fcbd6.c73474
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 343fcbd6.c73474       Wires: a51d7394.95aa3
  
---------- Node Type: ->function<-   ->DashDB Case Audit<-      ID: a51d7394.95aa3       Wires: 10197903.66fa77
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "DashDB Case Audit"
    });
msg.records = {
    "returns": ["case_audit"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["CASE_NO", "DOC_ID", "FILE_NAME", "CASE_START_TIME_range_begin", "CASE_START_TIME_range_end", "JOB_STATUS"]};
msg.dashdb = {
    "select": "SELECT * FROM REPORT_DB.CASE_AUDIT",
    "sort": "ORDER BY CASE_START_TIME DESC",
    "limit": 100,
    "object": "case_audit"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 10197903.66fa77       Wires: f49e05a2.6a60d8
  
---------- Node Type: ->subflow<-   ->DashDB SQL<-      ID: f49e05a2.6a60d8       Wires: 82f0b93.2ad0148
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 82f0b93.2ad0148       Wires: <end>

***********************************************************************************************************
Processing Item: (12)     post /dashdb/case_facts       Tab: DashDB     ID: 11be3429.700a0c     Wires: 389615af.ee0b1a
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 389615af.ee0b1a       Wires: 3d68c754.570218
  
---------- Node Type: ->function<-   ->DashDB Case Facts<-      ID: 3d68c754.570218       Wires: 10197903.66fa77
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "DashDB Case Facts"
    });
msg.records = {
    "returns": ["case_facts"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["CASE_FACT_ID","CASE_ID","USER_ID","PHASE_EVENT_ID","CASE_NO","MODE","SUBMODE","FACILITY","FACILITY_ID","MACHINE","MACHINE_ID","CASE_TYPE","CASE_LABEL","CREATED_BY"]};

msg.dashdb = {
    "select": "SELECT * FROM REPORT_DB.CASE_FACT",
    "sort": "ORDER BY EVENT_DATETIME DESC",
    "limit": 100,
    "object": "case_facts"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 10197903.66fa77       Wires: f49e05a2.6a60d8
  
---------- Node Type: ->subflow<-   ->DashDB SQL<-      ID: f49e05a2.6a60d8       Wires: 82f0b93.2ad0148
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 82f0b93.2ad0148       Wires: <end>

***********************************************************************************************************
Processing Item: (13)     post /dashdb/cases       Tab: DashDB     ID: d3e91b02.31fc58     Wires: 18604523.83434b
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 18604523.83434b       Wires: 9337e8b1.ea6eb8
  
---------- Node Type: ->function<-   ->DashDB Cases<-      ID: 9337e8b1.ea6eb8       Wires: 10197903.66fa77
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "DashDB Cases"
    });
msg.records = {
    "returns": ["cases"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["CASE_ID","USER_ID","FACILITY_ID","MACHINE_ID","LOCATION_ID","VERSION_ID","CASE_NO","LOG_ID","CASE_TYPE","SYSTEM_SN","SYSTEM_TYPE","FLAG","CATEGORY1","CATEGORY2","CASE_STATUS","CREATED_BY","START_TIME_range_begin","START_TIME_range_end"]};
msg.dashdb = {
    "select": "SELECT * FROM REPORT_DB.CASE",
    "sort": "ORDER BY START_TIME DESC",
    "limit": 100,
    "object": "cases"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 10197903.66fa77       Wires: f49e05a2.6a60d8
  
---------- Node Type: ->subflow<-   ->DashDB SQL<-      ID: f49e05a2.6a60d8       Wires: 82f0b93.2ad0148
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 82f0b93.2ad0148       Wires: <end>

***********************************************************************************************************
Processing Item: (14)     post /dashdb/facilities       Tab: DashDB     ID: 8b75456f.3fd7a8     Wires: 329fc9a3.16bc46
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 329fc9a3.16bc46       Wires: e8f34b1.5ddabb8
  
---------- Node Type: ->function<-   ->DashDB Facilities<-      ID: e8f34b1.5ddabb8       Wires: 10197903.66fa77
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "DashDB Facilities"
    });
msg.records = {
    "returns": ["facilities"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["FACILITY_ID","FACILITY_ACCOUNT_ID","FACILITY_NAME","FACILITY_ADDRESS","CREATED_BY","MODIFIED_BY","CREATED_DATETIME_range_begin","CREATED_DATETIME_range_end"]};

msg.dashdb = {
    "select": "SELECT * FROM REPORT_DB.FACILITY_MASTER",
    "sort": "ORDER BY CREATED_DATETIME DESC",
    "limit": 100,
    "object": "facilities"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 10197903.66fa77       Wires: f49e05a2.6a60d8
  
---------- Node Type: ->subflow<-   ->DashDB SQL<-      ID: f49e05a2.6a60d8       Wires: 82f0b93.2ad0148
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 82f0b93.2ad0148       Wires: <end>

***********************************************************************************************************
Processing Item: (15)     post /dashdb/locations       Tab: DashDB     ID: 9d2457e7.22fd68     Wires: ec7fe3e0.16806
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: ec7fe3e0.16806       Wires: ff6d23a8.e555f
  
---------- Node Type: ->function<-   ->DashDB Locations<-      ID: ff6d23a8.e555f       Wires: 10197903.66fa77
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "DashDB Locations"
    });
msg.records = {
    "returns": ["locations"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["LOCATION_ID","CARRIER","CELLID","LOCATION_AREA_CODE","MOBILE_COUNTRY_CODE","MOBILE_NETWORK_CODE","GPS_LAT","GPS_LONG","STREET_ADDRESS","CITY"]};

msg.dashdb = {
    "select": "SELECT * FROM REPORT_DB.LOCATION_MASTER",
    "sort": "ORDER BY CITY DESC",
    "limit": 100,
    "object": "locations"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 10197903.66fa77       Wires: f49e05a2.6a60d8
  
---------- Node Type: ->subflow<-   ->DashDB SQL<-      ID: f49e05a2.6a60d8       Wires: 82f0b93.2ad0148
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 82f0b93.2ad0148       Wires: <end>

***********************************************************************************************************
Processing Item: (16)     post /dashdb/machines       Tab: DashDB     ID: 460d51f9.2457c     Wires: 5a94863.9519678
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 5a94863.9519678       Wires: bf91760d.37baa8
  
---------- Node Type: ->function<-   ->DashDB Machines<-      ID: bf91760d.37baa8       Wires: 10197903.66fa77
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "DashDB Machines"
    });
msg.records = {
    "returns": ["machines"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["MACHINE_ID","SYSTEM_SN","SYSTEM_TYPE","CREATED_BY","MODIFIED_BY","CREATED_DATETIME_range_begin","CREATED_DATETIME_range_end"]};

msg.dashdb = {
    "select": "SELECT * FROM REPORT_DB.MACHINE_MASTER",
    "sort": "ORDER BY SYSTEM_SN DESC",
    "limit": 100,
    "object": "machines"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 10197903.66fa77       Wires: f49e05a2.6a60d8
  
---------- Node Type: ->subflow<-   ->DashDB SQL<-      ID: f49e05a2.6a60d8       Wires: 82f0b93.2ad0148
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 82f0b93.2ad0148       Wires: <end>

***********************************************************************************************************
Processing Item: (17)     post /dashdb/phase_events       Tab: DashDB     ID: 8e3096aa.21c908     Wires: c2e6d6ad.b542c8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: c2e6d6ad.b542c8       Wires: 1801d191.d2d90e
  
---------- Node Type: ->function<-   ->DashDB Phase Events<-      ID: 1801d191.d2d90e       Wires: 10197903.66fa77
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "DashDB Phase Events"
    });
msg.records = {
    "returns": ["phase_events"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["PHASE_ID","CASE_ID","EVENT_ID","EVENT_NAME","SYSTEM_SN","FACILITY_NAME","SURGEON_NAME","ROOM_NAME","CASE_NUMBER","TECHNIQUE","MODE","MODE_TYPE","NEEDLE","GRADE","UNUSED1","UNUSED2","SUBMODE_ID","US_SUBMODE","PHASE_DATETIME_range_begin","PHASE_DATETIME_range_end"]};

msg.dashdb = {
    "select": "SELECT * FROM REPORT_DB.PHASE_EVENT",
    "sort": "ORDER BY PHASE_DATETIME DESC",
    "limit": 100,
    "object": "phase_events"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 10197903.66fa77       Wires: f49e05a2.6a60d8
  
---------- Node Type: ->subflow<-   ->DashDB SQL<-      ID: f49e05a2.6a60d8       Wires: 82f0b93.2ad0148
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 82f0b93.2ad0148       Wires: <end>

***********************************************************************************************************
Processing Item: (18)     post /dashdb/users       Tab: DashDB     ID: 88d59ef1.39505     Wires: d9d949bf.2c0cd8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: d9d949bf.2c0cd8       Wires: 296dbddb.a4a782
  
---------- Node Type: ->function<-   ->DashDB Users<-      ID: 296dbddb.a4a782       Wires: 10197903.66fa77
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "DashDB Users"
    });
msg.records = {
    "returns": ["users"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["USER_ID","UID","STATUS","CREATED_BY","MODIFIED_BY","CREATED_DATETIME_range_begin","CREATED_DATETIME_range_end"]};

msg.dashdb = {
    "select": "SELECT * FROM REPORT_DB.USER_MASTER",
    "sort": "ORDER BY CREATED_DATETIME DESC",
    "limit": 100,
    "object": "users"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 10197903.66fa77       Wires: f49e05a2.6a60d8
  
---------- Node Type: ->subflow<-   ->DashDB SQL<-      ID: f49e05a2.6a60d8       Wires: 82f0b93.2ad0148
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 82f0b93.2ad0148       Wires: <end>

***********************************************************************************************************
Processing Item: (19)     post /decrypt       Tab: System     ID: 233a5ea7.405a92     Wires: d42463d1.45793
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: d42463d1.45793       Wires: c7fbecda.c7d7a
  
---------- Node Type: ->function<-   ->Decrypt<-      ID: c7fbecda.c7d7a       Wires: 286a5787.9f91c8
           outputs: 1
           noerr: 0
===Function Start===
if(msg.payload.ciphertext){ 
    var cryptojs = global.get('cryptojs');
    msg.encrypt = {
        "key": global.get("CRYPTO_KEYS").com.payload
    };
    node.warn("D-encrypted_string: "+ msg.payload.ciphertext);
    msg.decrypt = cryptojs.AES.decrypt(msg.payload.ciphertext, msg.encrypt.key);
    node.warn("D-decrypt: "+ msg.decrypt);
    msg.decrypt_string = msg.decrypt.toString(cryptojs.enc.Utf8);
    node.warn("D-decrypt_string: "+ msg.decrypt_string);
    try {
        msg.decrypt_json = JSON.parse(msg.decrypt_string);
        node.warn({"D-decrypt_json": msg.decrypt_json});
        msg.payload = msg.decrypt_json;
    }
    catch(error) {
        msg.payload = msg.decrypt;
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->http response<-   -><-      ID: 286a5787.9f91c8       Wires: <end>
           headers: {}
           statusCode: 
  

***********************************************************************************************************
Processing Item: (20)     post /devices       Tab: Devices     ID: b3443c46.9f8e1     Wires: 43985337.bfdbfc
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 43985337.bfdbfc       Wires: 28717099.edb24
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 28717099.edb24       Wires: 74272503.f6446c
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    msg.v1 = true;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Device New<-      ID: 74272503.f6446c       Wires: 6f85db50.5efd64
           outputs: 1
           noerr: 0
===Function Start===
var genPwd = global.get("genpwd");
msg.api = Object.assign(msg.api,
    {
        "name": "Device New"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "device", //"user", "device", "settings_file", ...
    "object": "device",
    "format": "JSON",
    "models": ["device"],
    "returns": ["device"],
    "return_code": 201,
    "password": genPwd.generate(global.get("PWD_GEN"))
};
msg.inputs = {
    "allowed": ["status", "business_unit", "sales_area", "sales_region", "sales_territory", "service_area", "service_region", "service_territory", "customer_id", "facility_id", "facility_name", "facility_address", "sales_status", "status_date", "get_me_help_allowed", "placed_by", "birth_date"],
    "required": ["id", "system_type"]
};
if(msg.payload.hasOwnProperty("id")) {
    msg.records.id = msg.payload.id;
    msg.inputs.device_id = msg.payload.id;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 6f85db50.5efd64       Wires: 4e07670a.ba2538
           outputs: 1
           noerr: 0
===Function Start===
if(msg.v1){
    delete msg.records.returns;
    delete msg.api.info;
    delete msg.api.starts;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 4e07670a.ba2538       Wires: 865e8269.a0baa
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: 865e8269.a0baa       Wires: fb3cad03.2c30a
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: fb3cad03.2c30a       Wires: 880a03ea.a0a8d
  
---------- Node Type: ->function<-   ->add clientId & authToken<-      ID: 880a03ea.a0a8d       Wires: 4fca716f.e6562
           outputs: 1
           noerr: 0
===Function Start===
msg.device[0].mqtt_clientId = msg.device[0]._id;
msg.device[0].mqtt_authToken = msg.records.password;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 4fca716f.e6562       Wires: <end>

***********************************************************************************************************
Processing Item: (21)     get /devices/device/:deviceID       Tab: Devices     ID: abdb4835.b62b48     Wires: f0870c4b.e5e78
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: f0870c4b.e5e78       Wires: fc4d821a.6eaef
  
---------- Node Type: ->function<-   ->Device Info<-      ID: fc4d821a.6eaef       Wires: cd21da35.fcb318
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Info"
    });
msg.records = {
    "delete": ["_rev", "password", "doc_type", "status"],
    "object": "device",
    "format": "JSON",
    "returns": ["device", "edhr"]
};
msg.inputs = {
    "device_id": msg.req.params.deviceID
};
msg.cloudant = {
    "request": "/stellaris_documents/" + msg.inputs.device_id,
    "method": "GET",
    "return_obj": ""
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: cd21da35.fcb318       Wires: d2d90a8b.f2aa78
  
---------- Node Type: ->function<-   ->EDHR Info<-      ID: d2d90a8b.f2aa78       Wires: d62553c7.c1f2d,462cf092.5a01d
           outputs: 2
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("device") || !msg.device[0].hasOwnProperty("_id")) {
    return [null,msg];
}
msg.cloudant = {
    "request": "/stellaris_logs/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "edhr",
    "selector": {
        "$and": [{"system_sn": msg.inputs.device_id},
                 {"doc_type": "edhr"}]
    },
    "fields": ["_id", "system_sn", "system_type", "timestamp", "geo_location", "modlist", "software_options"],
    "sort": [{"timestamp:number": "desc"}],
    "limit": 1
};
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: d62553c7.c1f2d       Wires: e82e23f3.b5e2e
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: 462cf092.5a01d       Wires: 99d23d5.28567c
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active device with id: " + msg.inputs.device_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Empty EDHR<-      ID: e82e23f3.b5e2e       Wires: d94cab78.361dd8
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("edhr") && Array.isArray(msg.edhr) && msg.edhr.length === 0) {
    msg.edhr[0] = {}
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 99d23d5.28567c       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: d94cab78.361dd8       Wires: 27ce8ddc.b00b62
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 27ce8ddc.b00b62       Wires: <end>

***********************************************************************************************************
Processing Item: (22)     post /devices/device/:deviceID/KORE/activate_to_state       Tab: Sim     ID: 6aeae83f.6dd918     Wires: 6f3005b7.1b698c
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 6f3005b7.1b698c       Wires: 72d4978b.b46228
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 72d4978b.b46228       Wires: d87752cb.f9983
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    if(msg.payload.hasOwnProperty("toState")){
        msg.payload.status = msg.payload.toState;
        msg.req.body.status = msg.req.body.toState;
        delete msg.payload.toState;
        delete msg.req.body.toState;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Activate to State<-      ID: d87752cb.f9983       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Activate To State"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["message", "sim"]
};
msg.inputs = {
    "required": ["sim_iccid", "EAPCode", "status"],
    "values": {
        "status": ["Test", "Active"]
    }
};
msg.sim_provider = {
    "req_type": "activate_to_state",
    "body": msg.payload
};
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "SIM Card " + msg.payload.sim_iccid + " was successfully activated to " + msg.payload.status + "."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (23)     post /devices/device/:deviceID/KORE/device_status       Tab: Sim     ID: 998c7add.6524b8     Wires: dc53ae32.cc78b
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: dc53ae32.cc78b       Wires: 95e1bc30.a8423
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 95e1bc30.a8423       Wires: 24b7e3ce.e41b4c
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Status<-      ID: 24b7e3ce.e41b4c       Wires: 6d0d2e62.f103f
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Status"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["sim"]
};
msg.inputs = {
    "allowed": [],
    "required": ["sim_iccid"]
};
msg.sim_provider = {
    "req_type": "status",
    "body": msg.payload
};
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
if(msg.payload.details && msg.payload.details) { msg.sim_provider.details = true }
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 6d0d2e62.f103f       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
if(msg.v1){
    delete msg.records.returns;
    delete msg.api.info;
    delete msg.api.stats;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (24)     post /devices/device/:deviceID/KORE/modify_device_custom_info       Tab: Sim     ID: ee94c615.a6d3a8     Wires: ad4d16d7.a27ac8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: ad4d16d7.a27ac8       Wires: 7aef97a2.b2b238
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 7aef97a2.b2b238       Wires: 231352bf.6eeb3e
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Update Custom Info<-      ID: 231352bf.6eeb3e       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Update Custom Info"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["message", "sim"]
};
msg.inputs = {
    "required": ["sim_iccid"],
    "allowed": ["customField1", "customField2", "customField3", "customField4", "customField5", "customField6"]
};
msg.sim_provider = {
    "req_type": "update_info",
    "body": msg.payload
};
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "Sim Card " + msg.payload.sim_iccid + " custom information was successfully updated."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (25)     post /devices/device/:deviceID/KORE/modify_plan_codes       Tab: Sim     ID: 640ac807.e12c78     Wires: 3ff0e8c.7279e18
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 3ff0e8c.7279e18       Wires: 85a02a72.2d6718
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 85a02a72.2d6718       Wires: be86f9ca.2f2238
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    if(msg.payload.hasOwnProperty("planCode")){
        msg.payload.plan_code = msg.payload.planCode;
        msg.req.body.plan_code = msg.req.body.planCode;
        delete msg.payload.planCode;
        delete msg.req.body.planCode;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Update Plan Code<-      ID: be86f9ca.2f2238       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Modify Plan Code"
    });
msg.records = {
    "object": "sim",
    "returns": ["message","sim"]
};
msg.inputs = {
    "required": ["sim_iccid", "plan_code"]
};
msg.sim_provider = {
    "req_type": "update_plan_code",
    "body": msg.payload
}
if (msg.payload.plan_code && typeof msg.payload.plan_code !== "string") {
    if (msg.payload.plan_code.code) {
        msg.sim_provider.body.plan_code = msg.payload.plan_code.code;
    } else {
        delete msg.payload.plan_code;
        delete msg.sim_provider.plan_code
    }
}
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "SIM Card " +  msg.sim_provider.sim_iccid + " was successfully updated to use plan code " + msg.sim_provider.body.plan_code + "."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (26)     post /devices/device/:deviceID/KORE/reactivate       Tab: Sim     ID: 6e258c55.f99a64     Wires: cc6048c0.ed4cf8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: cc6048c0.ed4cf8       Wires: 2cd1ac5e.1793e4
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 2cd1ac5e.1793e4       Wires: c682ec6e.e63d3
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Reactivate<-      ID: c682ec6e.e63d3       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Reactivate"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["message", "sim"]
};
msg.inputs = {
    "required": ["sim_iccid"]
};
msg.sim_provider = {
    "req_type": "reactivate",
    "body": msg.payload
}
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "SIM Card " + msg.payload.sim_iccid + " was successfully reactivated."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (27)     put /devices/device/:deviceID/change_password       Tab: Devices     ID: 48c27508.d3388c     Wires: d9d0d059.14d15
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: d9d0d059.14d15       Wires: 273cfd40.497202
  
---------- Node Type: ->function<-   ->Device Change Password<-      ID: 273cfd40.497202       Wires: 3bab4bb6.9fa674
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Change Password"
    });
msg.records = {
    "delete": ["_rev", "doc_type","status","password"],
    "doc_type": "device",
    "object": "device",
    "format": "JSON",
    "returns": ["device"],
    "id": msg.req.params.deviceID
};
msg.inputs = {
    "allowed": ["password"],
    "required": [],
    "device_id": msg.req.params.deviceID
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 3bab4bb6.9fa674       Wires: 756f1ced.204254
  
---------- Node Type: ->function<-   ->Generate Password<-      ID: 756f1ced.204254       Wires: 80dedd39.11ed
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.inputs.password) {
    var genPwd = global.get("genpwd");
    msg.records.password = genPwd.generate(global.get("PWD_GEN"))
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: 80dedd39.11ed       Wires: 9a9cd844.3789c8
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 9a9cd844.3789c8       Wires: 6f074921.907c28
  
---------- Node Type: ->function<-   ->add clientId & authToken<-      ID: 6f074921.907c28       Wires: 6dd17aef.b913a4
           outputs: 1
           noerr: 0
===Function Start===
msg.device[0].mqtt_clientId = msg.device[0]._id;
msg.device[0].mqtt_authToken = msg.records.password;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 6dd17aef.b913a4       Wires: <end>

***********************************************************************************************************
Processing Item: (28)     post /devices/device/:deviceID/config_file       Tab: Devices     ID: 3b106f0f.72393     Wires: 5761c4cd.302f7c
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 5761c4cd.302f7c       Wires: b09379db.d13d38
  
---------- Node Type: ->function<-   ->Config File Send<-      ID: b09379db.d13d38       Wires: 2e8cb193.ce71ee
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Config File Send"
    });
msg.records = {
    "format": "JSON",
    "returns": ["message"]
};
msg.inputs = {
    "required": ["file_name", "user_id"],
    "allowed": [],
    "attach_num": 1,
    "user_id": msg.payload.user_id,
    "device_id": msg.req.params.deviceID
};
msg.email = {
    //"template_type": "config_file", //Disabled because we can send either an email or an attachment currently
    "fields":{
        "device_id": msg.inputs.device_id
    },
    "files": []
};
if (msg.req.files && msg.req.files.length > 0) {
    msg.email.files.push(msg.req.files[0])
} else if (msg.payload.file && msg.payload.file !== "") {
    msg.email.files.push({
        "fieldname": "file",
        "originalname": msg.payload.file_name,
        "encoding":"7bit",
        "mimetype": "text/csv",
        "buffer": Buffer.from(msg.payload.file, 'ascii')
    });
}
if (msg.inputs.user_id && msg.inputs.user_id !== "") {
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "doc_type",
        "selector": {
            "$or": [
                {"$and": [{"doc_type": "device"}, {"_id": msg.inputs.device_id}]},
                {"$and": [{"doc_type": "user"}, {"_id": msg.inputs.user_id}]},
                ]
        }
    };
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 2e8cb193.ce71ee       Wires: 4da1536.864adac
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 4da1536.864adac       Wires: c6fcf1ee.03f4d
  
---------- Node Type: ->function<-   ->User & Device Found?<-      ID: c6fcf1ee.03f4d       Wires: 2283c1b2.9cf50e,b8bfac69.cec45,98f4dd17.dcb3d
           outputs: 3
           outputLabels: ["found","not user found","no device found"]
           noerr: 0
===Function Start===
if (msg.user && msg.user.length > 0 && msg.user[0].doc_type && msg.user[0].doc_type === "user") {
    var user = msg.user[0];
    msg.message = "Configuration File for " + msg.inputs.device_id + " has been emailed to " + user.email
    if(msg.device && msg.device.length > 0 && msg.device[0].doc_type && msg.device[0].doc_type === "device") {
        var device = msg.device[0];
        msg.email.to = user.email;
        msg.email.topic = device._id + " - Configuration File";
        msg.email.return = true;
        msg.email.fields = Object.assign(msg.email.fields, {
            "first_name": user.fist_name,
            "last_name": user.last_name,
            "device_id": device._id,
            "system_type": device.system_type,
        });
        return [msg,null,null];
    } else { return [null,null,msg] }
} else { return [null,msg,null] }
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Email 2.2<-      ID: 2283c1b2.9cf50e       Wires: d733c2c8.29fd2
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: b8bfac69.cec45       Wires: 88a63d46.58735
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User with id: " + msg.inputs.user_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: 98f4dd17.dcb3d       Wires: 88a63d46.58735
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active device with id: " + msg.inputs.device_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: d733c2c8.29fd2       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 88a63d46.58735       Wires: <end>

***********************************************************************************************************
Processing Item: (29)     put /devices/device/:deviceID/expire_remconn       Tab: Tickets     ID: 93554a1b.195518     Wires: 725e686.462fd98
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 725e686.462fd98       Wires: 38a79a81.3d4e76
  
---------- Node Type: ->function<-   ->Device Expire RemConn<-      ID: 38a79a81.3d4e76       Wires: 8377fb1e.c743c8
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Expire RemConn"
    });
msg.records = {
    "delete": ["_rev"],
    "doc_type": "help_ticket",
    "object": "help_ticket",
    "format": "JSON",
    "returns": ["help_ticket"]
};
msg.inputs = {
    "device_id": msg.req.params.deviceID
};
msg.cloudant = {
    "request": "/stellaris_documents/" + msg.inputs.device_id,
    "method": "GET",
    "return_obj": "",
    "object": "device"
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 8377fb1e.c743c8       Wires: cf67a4b4.8a7358
  
---------- Node Type: ->function<-   ->Device Found<-      ID: cf67a4b4.8a7358       Wires: 77a06453.a257fc,52554231.a6839c
           outputs: 2
           outputLabels: ["yes found","no found"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("device") && msg.device.length > 0 && msg.device[0].doc_type === "device") {
    msg.cloudant = {
        "request": "/help_tickets/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "ticket_list",
        "selector": {
            "system_sn": msg.inputs.device_id,
            "reason": "RemConn",
            "ticket_status": "New"        
        },
    	"sort": [{"start_time:number": "desc"}]
    };
    return [msg,null];
} else {
    return [null,msg]
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 77a06453.a257fc       Wires: 4fc569de.d37ce8
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: 52554231.a6839c       Wires: db808349.0ea59
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "The device record for " + msg.inputs.device_id + " was not found."
});
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Ticket Found?<-      ID: 4fc569de.d37ce8       Wires: 3e59d903.da99c6,af5673d4.9e85b
           outputs: 2
           outputLabels: ["no","yes"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("ticket_list") || msg.ticket_list.length === 0) {
    if (!msg.hasOwnProperty("help_ticket")) {msg.help_ticket = []}
    return [msg,null];
}
var ticket = msg.ticket_list.pop();
var time = Date.now();
msg.inputs.body = {
    "ticket_status": "Expired",
    "close_time": time,
    "ticket_notes": new Date(time).toLocaleString() + " - " + msg.inputs.device_id + " - Rebooted!   /  Remote session expired."
};
msg.records.id = ticket._id;
delete msg.cloudant.id;
delete msg.cloudant.object;
node.warn({"pop ticket": msg});
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: db808349.0ea59       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 3e59d903.da99c6       Wires: 6f928faa.3a42e
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: af5673d4.9e85b       Wires: 5331778e.bd6318
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 6f928faa.3a42e       Wires: <end>
  
---------- Node Type: ->link out<-   ->Expire RemConn Loop out<-      ID: 5331778e.bd6318       Wires: <end>
           links: ["d8fbd789.fe3c88"]
  

***********************************************************************************************************
Processing Item: (30)     post /devices/device/:deviceID/getMeHelp       Tab: Tickets     ID: 26f9b12a.24edae     Wires: 2decf932.f86e36
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 2decf932.f86e36       Wires: 7209a37.a818b5c
  
---------- Node Type: ->function<-   ->Device Get Me Help<-      ID: 7209a37.a818b5c       Wires: 524c7d4e.14cb74
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Get Me Help"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "help_ticket",
    "object": "help_ticket",
    "format": "JSON",
    "returns": ["message","help_ticket"],
    "models": ["help_ticket"],
    "return_code": 201
};
msg.inputs = {
    "required": ["system_type", "cell_tower_info", "reason", "contact_name", "contact_number", "machine_state"],
    "allowed": ["doctor_id", "surgeon_settings_file_id", "surgeon_settings_name"],
    "values": {
        "reason": ["Setup", "Order Packs", "Another Issue", "Technical Support"]
    },
    "device_id": msg.req.params.deviceID,
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_type",
    "selector": {
        "$or": [{"$and": [{"doc_type": "device"},{"status": "active"},{"_id": msg.inputs.device_id}]},
                {"$and": [{"doc_type": "machine_link"},{"status": "active"},{"device": msg.inputs.device_id}]}
               ]
    }
};
if (msg.req.body.hasOwnProperty("doctor_id") && msg.req.body.doctor_id !== "") {
    msg.inputs.user_id = msg.req.body.doctor_id;
    msg.cloudant.selector["$or"].push( {"$and": [{"doc_type": "user"},{"status": "active"},{"_id": msg.inputs.user_id}]})
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 524c7d4e.14cb74       Wires: c3e1544.2852da8
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: c3e1544.2852da8       Wires: c26da446.803ea8
  
---------- Node Type: ->function<-   ->ID Found<-      ID: c26da446.803ea8       Wires: c3b78aea.e6b008,afee6342.5e629,49c8012b.5bf5b
           outputs: 3
           outputLabels: ["yes all","no device","no user"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("device") || msg.device.length === 0 || msg.device[0].doc_type !== "device") {
    return [null,msg,null]
}
if (msg.inputs.hasOwnProperty("user_id") && msg.inputs.user_id !== "") {
    if(!msg.hasOwnProperty("user") || msg.user.length === 0 || msg.user[0].doc_type !== "user") {
        return [null,null,msg]
    }
}
return [msg,null,null];
===Function   End===
  
  
---------- Node Type: ->switch<-   ->Reason<-      ID: c3b78aea.e6b008       Wires: 8af5db10.5366e8,4c2e2a57.658fc4,15c724d0.a828fb,a528e2e.be8642
           checkall: true
           repair: false
           rules: [{"vt":"str","t":"eq","v":"Setup"},{"vt":"str","t":"eq","v":"Technical Support"},{"vt":"str","t":"eq","v":"Another Issue"},{"t":"else"}]
           outputs: 4
           propertyType: msg
           property: inputs.body.reason
  
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: afee6342.5e629       Wires: 6488c519.92f40c
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "The device record for " + msg.inputs.device_id + " was not found."
});
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: 49c8012b.5bf5b       Wires: 6488c519.92f40c
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "The user record for " + msg.inputs.user_id + " was not found."
});
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Paired Application Field Sales<-      ID: 8af5db10.5366e8       Wires: eba1bc79.4683c
           outputs: 1
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("machine_link") && msg.machine_link.length > 0) {
    var linked_user_ids = msg.machine_link.map(a => a.user);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "support_users",
        "selector": {
            "$and": [
                {"doc_type": "user"},
                {"status": "active"},
                {"_id": {"$in": linked_user_ids}},
                {"sub_roles": {
                    "$or": [{"$elemMatch": { "$eq": "Applications" }},
                            {"$elemMatch": { "$eq": "Field Sales" }},
                            {"$elemMatch": { "$eq": "Sales Manager" }}]
                    }
                }]
        }
    };
} else {
    var linked_user_ids = [];
    delete msg.cloudant;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Paired Technical Support<-      ID: 4c2e2a57.658fc4       Wires: eba1bc79.4683c
           outputs: 1
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("machine_link") && msg.machine_link.length > 0) {
    var linked_user_ids = msg.machine_link.map(a => a.user);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "support_users",
        "selector": {
            "$and": [
                {"doc_type": "user"},
                {"status": "active"},
                {"_id": {"$in": linked_user_ids}},
                {"sub_roles": {
                    "$or": [{"$elemMatch": { "$eq": "Technical Support" }}]
                    }
                }]
        }
    };
} else {
    var linked_user_ids = [];
    delete msg.cloudant;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Paired Lens Rep Service<-      ID: 15c724d0.a828fb       Wires: eba1bc79.4683c
           outputs: 1
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("machine_link") && msg.machine_link.length > 0) {
    var linked_user_ids = msg.machine_link.map(a => a.user);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "support_users",
        "selector": {
            "$and": [
                {"doc_type": "user"},
                {"status": "active"},
                {"_id": {"$in": linked_user_ids}},
                {"sub_roles": {
                    "$or": [{"$elemMatch": { "$eq": "Lens Rep" }}]
                    }
                }]
        }
    };
} else {
    var linked_user_ids = [];
    delete msg.cloudant;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Paired Customer Service<-      ID: a528e2e.be8642       Wires: eba1bc79.4683c
           outputs: 1
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("machine_link") && msg.machine_link.length > 0) {
    var linked_user_ids = msg.machine_link.map(a => a.user);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "support_users",
        "selector": {
            "$and": [
                {"doc_type": "user"},
                {"status": "active"},
                {"_id": {"$in": linked_user_ids}},
                {"sub_roles": {
                    "$or": [{"$elemMatch": { "$eq": "Customer Service" }}]
                    }
                }]
        }
    };
} else {
    var linked_user_ids = [];
    delete msg.cloudant;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 6488c519.92f40c       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: eba1bc79.4683c       Wires: 9610dac3.83e198
  
---------- Node Type: ->subflow<-   ->Google Location 2.0<-      ID: 9610dac3.83e198       Wires: d6b9a65f.f06158
  
---------- Node Type: ->subflow<-   ->Support Users 2.1<-      ID: d6b9a65f.f06158       Wires: b734a9d1.b331c8
  
---------- Node Type: ->function<-   ->Create Ticket<-      ID: b734a9d1.b331c8       Wires: bf2baa36.afc668
           outputs: 1
           noerr: 0
===Function Start===
var support_user_ids = msg.support_users.map(a => a._id)
msg.inputs.body = Object.assign(msg.inputs.body, {
    "system_sn": msg.device[0]._id,
    "system_type": msg.device[0].system_type,
    "assigned_id": support_user_ids,
    
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: bf2baa36.afc668       Wires: 4988d27a.99200c,7a7665d2.fb81dc
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 4988d27a.99200c       Wires: 7d0072df.c800bc
  
---------- Node Type: ->function<-   ->EMAIL & SMS<-      ID: 7a7665d2.fb81dc       Wires: a04840d5.e19e6,97de7ab6.1754f8
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("support_users") && msg.support_users.length > 0){
    msg.email = {
        "to": msg.support_users.map(a => a.email),
        "operation": "created"
    };
    msg.sms = {
        "to": msg.support_users.map(a => a.mobile_phone),
        "to_voice": msg.support_users.map(a => a.voice_phone),
        "operation": "updated"
    }
} else {
    //do nothing
    msg.email = {};
    msg.sms = {};
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 7d0072df.c800bc       Wires: <end>
  
---------- Node Type: ->function<-   ->Email Setup<-      ID: a04840d5.e19e6       Wires: 6b45b347.5123fc
           outputs: 1
           noerr: 0
===Function Start===
var ticket = msg.help_ticket[0];
msg.email.template_type = "help_ticket";
var mod_string = "n/a";
var settings_string = "n/a";
var machine_errors = "n/a";
var posterior = ["BL15455", "BL15335"] // Stellaris PC Laser System - 7.5K, 5.0K
var combined = ["BL14455", "BL14335"] // Stellaris PC Combined System - 7.5K, 5.0K
var anterior = ["BL11145", "BL11115", "BL11125"] // Anterior System - HFM, VFM, AFM
if (ticket.hasOwnProperty("machine_state"))  {
    var edhr = ticket.machine_state;
    if (edhr.hasOwnProperty("modlist")) {
        var full_modlist = {
            "uic_info" : "UIC",
            "remote_info" : "Remote",
            "anterior_info" : "Anterior",
            "ivpole_info" : "IVPole",
            "footcan_info" : "FCIB",
            "footrx_info" : "FC Receiver",
            "footctrl_info" : "Foot Control",
            "foottx_info" : "FC Transmitter",
            "power_info" : "Power Supply",
            "fluidics_info" : "Fluidics",
            "compressor_info" : "Compressor",
            "posterior_info" : "Illumination",
            "glm_info" : "Laser",
            "lamp1_info" : "Lamp 1",
            "lamp2_info" : "Lamp 2",
            "mmc_info" : "MMC",
            "gateway_info" : "Gateway",
            "sim1_iccid" : "SIM 1",
            "sim2_iccid" : "SIM 2"
        };
        var system_modlist = full_modlist;
        if (posterior.indexOf(ticket.system_type.substring(0,7)) >= 0) {
            delete system_modlist.mmc_info;
            delete system_modlist.sim2_iccid;
        }
        if (combined.indexOf(ticket.system_type.substring(0,7)) >= 0) {
            delete system_modlist.mmc_info;
            delete system_modlist.sim2_iccid;
            delete system_modlist.laser;
        }
        if (anterior.indexOf(ticket.system_type.substring(0,7)) >= 0) {
            delete system_modlist.mmc_info;
            delete system_modlist.sim2_iccid;
            delete system_modlist.laser;
            delete system_modlist.footcan_info;
            delete system_modlist.lamp1_info;
            delete system_modlist.lamp2_info;
        }
        // Non E models that do not have gateway enabled in software should not have it
        if (ticket.system_type.length === 7 && edhr.software_options && edhr.software_options.gateway_enabled && edhr.software_options.gateway_enabled === "disabled") {
            delete system_modlist.gateway_info
            delete system_modlist.sim1_iccid;
        }
        var mod_list = [];
        var name_list = [];
        for(var propertyName in edhr.modlist) {
            var module_text = "";
            if (system_modlist.hasOwnProperty(propertyName) || edhr.modlist[propertyName].present === "PRESENT") {
                module_text =  system_modlist[propertyName]; // add module Name
                if (edhr.modlist[propertyName].present === "PRESENT") {
                    module_text += ", " + edhr.modlist[propertyName].SN; // add SN
                } else {
                    module_text += ", " + edhr.modlist[propertyName].present; // add MISSING
                }
            }
            // Add SW and HW if it has a name and a SW version
            if (edhr.modlist[propertyName].present === "PRESENT"  && edhr.modlist[propertyName].SW_version !== "") {
                module_text += ", SW v" + edhr.modlist[propertyName].SW_version + ", HW v" + edhr.modlist[propertyName].HW_version; // add SW, HW
            }
            if (module_text !== "" ) {
                mod_list.push(module_text);
                name_list.push(propertyName);
            } // print if not empty
        }
        if (mod_list.length > 0) { // Sort and Join if array not empty
            var order_list = new Array(mod_list.length);
            var idx = 0;
            for(var propertyName in full_modlist) {
                var i = name_list.indexOf(propertyName);
                if (i >= 0) {
                    order_list[idx] = mod_list[i];
                    ++idx;
                }
            }
            mod_string = order_list.join("\n<br />\n")
        } 
    }
    if (edhr.hasOwnProperty("software_options")) {
        // Software Option Names
        var software_list = {
            "vitesse_enabled" : "Vitesse",
            "gateway_enabled" : "Gateway"
        };
        var settings_string = "";
        for(var propertyName in edhr.software_options) {
            settings_string += software_list[propertyName] + ": " + edhr.software_options[propertyName] + "\n<br />\n";
        }
    }
    if (edhr.hasOwnProperty("errors")) {
        var machine_errors = JSON.stringify(edhr.errors)
    }
}
msg.email.topic = "[" + ticket.ticket_status + "] Get Me Help Ticket " + ticket._id;
msg.email.fields = {
    "operation": msg.email.operation,
    "ticket_id": ticket._id,
    "system_type": ticket.system_type,
    "device_id": ticket.system_sn,
    "reason": ticket.reason,
    "start_time": Date(ticket.start_time),
    "user_id": ticket.doctor_id,
    "contact_name": ticket.contact_name,
    "contact_number": ticket.contact_number,
    "address": ticket.address,
    "system_config": mod_string,
    "software_options": settings_string,
    "machine_errors": machine_errors
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->SMS Setup<-      ID: 97de7ab6.1754f8       Wires: 2a4e720f.02b92e
           outputs: 1
           noerr: 0
===Function Start===
var ticket = msg.help_ticket[0];
msg.sms.template_type = "help_ticket";
msg.sms.fields = {
    "ticket_status": ticket.ticket_status,
    "system_type": ticket.system_type,
    "device_id": ticket.system_sn,
    "reason": ticket.reason,
    "start_time": Date(ticket.start_time),
    "contact_name": ticket.contact_name,
    "contact_number": ticket.contact_number
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Email 2.2<-      ID: 6b45b347.5123fc       Wires: <end>
  
---------- Node Type: ->subflow<-   ->SMS 2.2<-      ID: 2a4e720f.02b92e       Wires: <end>

***********************************************************************************************************
Processing Item: (31)     get /devices/device/:deviceID/help       Tab: Devices     ID: cc93554d.279138     Wires: ec1fc6ba.b78038
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: ec1fc6ba.b78038       Wires: 2b9f4642.62eada
  
---------- Node Type: ->function<-   ->Device Help Allowed<-      ID: 2b9f4642.62eada       Wires: 3968ed8d.c17272
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Help Allowed"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status", "system_type", "business_unit", "sales_area", "sales_region", "sales_territory", "service_area", "service_region", "service_territory", "facility_name", "facility_address", "sales_status", "status_date", "customer_id", "facility_id", "placed_by", "birth_date","edhr_birth_record_id"],
    "doc_type": "device",
    "object": "device",
    "format": "JSON",
    "returns": ["device"],
    "id": msg.req.params.deviceID
};
msg.cloudant = {
    "request": "/stellaris_documents/" + msg.req.params.deviceID,
    "method": "GET",
    "return_obj": ""
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 3968ed8d.c17272       Wires: 6300f0e4.c7701
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 6300f0e4.c7701       Wires: 973d8b53.713388
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 973d8b53.713388       Wires: <end>

***********************************************************************************************************
Processing Item: (32)     post /devices/device/:deviceID/initRemConn       Tab: Tickets     ID: c38cc044.96e36     Wires: 5283662a.eb1968
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 5283662a.eb1968       Wires: 5d03988e.7e7bc8
  
---------- Node Type: ->function<-   ->Device Init Rem Conn<-      ID: 5d03988e.7e7bc8       Wires: 3dddfca0.690f34
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Init Rem Conn"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "help_ticket",
    "object": "help_ticket",
    "format": "JSON",
    "returns": ["message","help_ticket"],
    "models": ["help_ticket"],
    "return_code": 201
};
msg.inputs = {
    "required": ["device_ip"],
    "allowed": ["doctor_id", "cell_tower_info", "contact_number", "machine_state"],
    "device_id": msg.req.params.deviceID
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_type",
    "selector": {
        "$or": [{"$and": [{"doc_type": "device"},{"status": "active"},{"_id": msg.inputs.device_id}]},
                {"$and": [{"doc_type": "machine_link"},{"status": "active"},{"device": msg.inputs.device_id}]}]
    }
};
if (msg.req.body.hasOwnProperty("doctor_id") && msg.req.body.doctor_id !== "") {
    msg.cloudant.selector["$or"].push({"$and": [{"doc_type": "user"},{"status": "active"},{"_id": msg.req.body.doctor_id}]})
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 3dddfca0.690f34       Wires: b8846f2c.1175d
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: b8846f2c.1175d       Wires: a4f8ed8.7cdac1
  
---------- Node Type: ->function<-   ->Device Found<-      ID: a4f8ed8.7cdac1       Wires: fc46be67.b4961,98ea0bb4.0ebdf8
           outputs: 2
           outputLabels: ["yes found","no found"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("device") && msg.device.length > 0 && msg.device[0].doc_type === "device") {
    msg.inputs.body.system_sn = msg.inputs.device_id;
    msg.inputs.body.system_type = msg.device[0].system_type;
    msg.inputs.body.reason = "RemConn";
    if (msg.hasOwnProperty("user") && msg.user.length > 0) {
        msg.inputs.body.contact_name = msg.user[0].first_name + " " + msg.user[0].last_name
    }
    if (msg.hasOwnProperty("machine_link") && msg.machine_link.length > 0) {
        var linked_user_ids = msg.machine_link.map(a => a.user);
        msg.cloudant = {
            "request": "/stellaris_documents/_find",
            "method": "POST",
            "return_obj": "docs",
            "object": "support_users",
            "selector": {
                "$and": [
                    {"doc_type": "user"},
                    {"status": "active"},
                    {"_id": {"$in": linked_user_ids}},
                    //{"role": "Service"},
                    {"sub_roles": {
                        "$or": [{"$elemMatch": { "$eq": "Applications" }},
                                {"$elemMatch": { "$eq": "Field Sales" }},
                                {"$elemMatch": { "$eq": "Technical Support" }}]
                        }
                    }]
            }
        }
    } else {
        var linked_user_ids = [];
        delete msg.cloudant;
    }
    return [msg,null];
} else {
    return [null,msg]
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: fc46be67.b4961       Wires: d8325fdb.9cb34
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: 98ea0bb4.0ebdf8       Wires: 72e300f7.c5072
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "The device record for " + msg.inputs.device_id + " was not found."
});
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Google Location 2.0<-      ID: d8325fdb.9cb34       Wires: 4bd68bac.e89c74
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 72e300f7.c5072       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Support Users 2.1<-      ID: 4bd68bac.e89c74       Wires: e3c619dc.89ed38
  
---------- Node Type: ->function<-   ->Add Support Person<-      ID: e3c619dc.89ed38       Wires: ce9a1759.9a9cc8
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("support_users") && msg.support_users.length > 0){
    msg.inputs.body.assigned_id = msg.support_users.map(a => a._id);
} else {
    msg.inputs.body.assigned_id = [];
}
return msg;  
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: ce9a1759.9a9cc8       Wires: 7fe55e1f.27f52
  
---------- Node Type: ->function<-   ->Email Setup<-      ID: 7fe55e1f.27f52       Wires: e4a8dcfe.671d1,d6aa4528.4adaa8
           outputs: 1
           noerr: 0
===Function Start===
var device = msg.device[0];
var ticket = msg.help_ticket[0];
var users_email = msg.support_users.map(a => a.email).join(",")
msg.message = device.system_type + " " + device._id + " has had Remote Connect enabled. Ticket # "+ ticket._id + " created at " + Date(ticket.timestamp) + " has been escalated. Connect to KORE VPN and point VNC Client to " + ticket.device_ip + " to initiate Remote Connect."
if (!msg.hasOwnProperty("email")) { msg.email = {} }
msg.email.fields = 
{
    "ticket_id": ticket._id,
    "system_type": device.system_type,
    "device_id": device._id,
    "start_time": Date(ticket.start_time),
    "device_ip": ticket.device_ip,
};
msg.email.topic = "Remote Connect enabled: " + ticket._id ;
msg.email.to = users_email;

msg.email.template_type = "rem_conn"
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: e4a8dcfe.671d1       Wires: 3d9b1954.c4a866
  
---------- Node Type: ->subflow<-   ->Email 2.2<-      ID: d6aa4528.4adaa8       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 3d9b1954.c4a866       Wires: <end>

***********************************************************************************************************
Processing Item: (33)     post /devices/device/:deviceID/logs/cases_query       Tab: Devices     ID: 83a1dd9a.28cb6     Wires: adeec21.295e54
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: adeec21.295e54       Wires: 6b9cb50d.ed09ec
  
---------- Node Type: ->function<-   ->Device Query Cases<-      ID: 6b9cb50d.ed09ec       Wires: 653b6772.a90c08
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Query Cases"
    });
msg.records = {
    //"delete": ["_rev", "doc_type"],
    "doc_type": "case", //"user", "device", "settings_file", ...
    "format": "array", //"JSON", "Complex JSON"
    "object": "cases",
    "returns": ["cases_count","cases"],
    "fields": [ "_id",
                "log_id",
                "system_sn",
                "system_type",
                "location",
                "geo_location",
                "address",
                "user_id",
                "settings_file_name",
                "start_time",
                "stop_time"
               ],
    "sort": [{"stop_time:number": "desc"}]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options", "return_users"]
};
msg.filters = {
    "allowed": ["stop_time_range_begin" , "stop_time_range_end" , "user_id"],
    "required": []
};
msg.cloudant = {
    "request": "/stellaris_logs/_find",
    "method": "POST",
    "return_obj": "docs",
    "bookmark_type": "payload", //"payload", "parameter"
    "pagination": true
};
msg.filters.params = {
    "system_sn": msg.req.params.deviceID,
    "doc_type": "case"
};
if(msg.req.body.hasOwnProperty("return_users") && msg.req.body.return_users === true) {
    msg.records.returns.push("users");
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 653b6772.a90c08       Wires: 1185d464.9784cc
  
---------- Node Type: ->subflow<-   ->Cloudant Setup 2.0<-      ID: 1185d464.9784cc       Wires: 9bee9e05.bdbc5
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 9bee9e05.bdbc5       Wires: 2f460015.d3ce5
  
---------- Node Type: ->function<-   ->Case Count<-      ID: 2f460015.d3ce5       Wires: dfb8c8a7.7fd8c8
           outputs: 1
           noerr: 0
===Function Start===
msg.cloudant.pagination = false;
msg.cloudant.fields = ["user_id"];
msg.cloudant.object = "user_ids";
delete msg.cloudant.sort;
delete msg.cloudant.limit;
delete msg.cloudant.skip;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: dfb8c8a7.7fd8c8       Wires: 20d29d22.c2b2f2
  
---------- Node Type: ->function<-   ->Distinct user_id List<-      ID: 20d29d22.c2b2f2       Wires: 213570ca.bd8e4,479f4979.b437c8
           outputs: 2
           noerr: 0
===Function Start===
msg.cases_count = msg.user_ids.length;
if(msg.hasOwnProperty("cases") && msg.cases.length > 0){
    var unique_user_ids = [];
    if(msg.hasOwnProperty("user_ids") && msg.user_ids.length > 0) {
        msg.user_ids = msg.user_ids.map(a => a.user_id);
            msg.user_ids.forEach(function(id){
                if(unique_user_ids.indexOf(id) < 0 && (id !== null) && (id !== "")){
                    unique_user_ids.push(id);
                }
        });
        if(unique_user_ids.length > 0){
            msg.cloudant.request = "/stellaris_documents/_find";
            msg.cloudant.method = "POST";
            msg.cloudant.selector = { "_id":  { "$in": unique_user_ids  }};
            msg.cloudant.fields = ["_id", "first_name", "last_name"];
            msg.cloudant.sort= [];
            msg.cloudant.object = "users";
            msg.cloudant.pagination = false;
            msg.cloudant.bookmark_use = false;
            msg.cloudant.bookmark_save = false;
            return [msg, null];
        }
    }
}
msg.users = [];
msg.api.path = 2;
return [null, msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 213570ca.bd8e4       Wires: 479f4979.b437c8
  
---------- Node Type: ->function<-   ->Add User Name<-      ID: 479f4979.b437c8       Wires: e84aa179.d71ac
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("cases") && msg.cases.length > 0){
    msg.user_ids = msg.users.map(a => a._id);
    msg.cases.forEach(function(record){
        var user_index = msg.user_ids.indexOf(record.user_id);
        var first_name = "";
        var last_name = "";
        if(user_index >= 0){
            first_name = msg.users[user_index].first_name;
            last_name = msg.users[user_index].last_name;
        }
        record.first_name = first_name;
        record.last_name = last_name;
    });
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: e84aa179.d71ac       Wires: <end>

***********************************************************************************************************
Processing Item: (34)     get /devices/device/:deviceID/logs/edhr       Tab: Devices     ID: d076e27b.08b44     Wires: ad824aa7.b8df68
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: ad824aa7.b8df68       Wires: cdb0e8ba.fab598
  
---------- Node Type: ->function<-   ->Device EDHRs<-      ID: cdb0e8ba.fab598       Wires: 3d70ed41.3ef232
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device EDHRs"
    });
msg.records = {
    "delete": ["_rev", "password", "doc_type", "status"],
    "doc_type": "edhr",
    "format": "array",
    "object": "edhrs",
    "fields": ["_id", "system_sn", "system_type", "timestamp", "geo_location", "modlist", "software_options"],
    "sort": [{"timestamp:number": "desc"}],
    "returns": ["edhrs"]
};
msg.inputs = {
    "required": [],
    "allowed": []
};
msg.filters = {
    "allowed": [],
    "required": []
};
msg.cloudant = {
    "request": "/stellaris_logs/_find",
    "method": "POST",
    "return_obj": "docs",
    "bookmark_type": "payload",
    "pagination": true
};
msg.filters.params = {
    "system_sn": msg.req.params.deviceID,
    "doc_type": "edhr"
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 3d70ed41.3ef232       Wires: da446430.465b28
  
---------- Node Type: ->subflow<-   ->Cloudant Setup 2.0<-      ID: da446430.465b28       Wires: 9d25c8f6.8767b8
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 9d25c8f6.8767b8       Wires: 362a67a3.030188
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 362a67a3.030188       Wires: <end>

***********************************************************************************************************
Processing Item: (35)     get /devices/device/:deviceID/logs/machine_life       Tab: Devices     ID: 98bb2284.b6a32     Wires: 4e0b9f9c.f23d6
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 4e0b9f9c.f23d6       Wires: c31a1810.6ae3a8
  
---------- Node Type: ->function<-   ->Device Machine Lifes<-      ID: c31a1810.6ae3a8       Wires: 12834e2e.2fa082
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Machine Lifes"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "machine_life",
    "format": "array",
    "object": "machine_lifes",
    "returns": ["machine_lifes"],
};
msg.inputs = {};
msg.filters = {};
msg.cloudant = {
    "request": "/stellaris_logs/_find",
    "method": "POST",
    "return_obj": "docs",
    "bookmark_type": "payload", //"payload", "parameter"
    "pagination": true,
    "bookmark_use": false,
    "selector": {
        "doc_type": "machine_life",
        "system_sn": msg.req.params.deviceID
    },
    "fields": [
        "_id",
        "status",
        "system_sn",
        "function_accumulator",
        "power_on_time_stamp",
        "prev_power_off_time_stamp"
           ],
    "sort": [{"power_on_time_stamp:number": "desc"}]
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Setup 2.0<-      ID: 12834e2e.2fa082       Wires: 44caf25f.165efc
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 44caf25f.165efc       Wires: 2858c3cb.b105ec
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 2858c3cb.b105ec       Wires: <end>

***********************************************************************************************************
Processing Item: (36)     get /devices/device/:deviceID/maintenance       Tab: Devices     ID: 51ac4809.4cea98     Wires: 3e3e2224.0c5eae
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 3e3e2224.0c5eae       Wires: 1e7df28d.5f119d
  
---------- Node Type: ->function<-   ->Device Maintenance Files<-      ID: 1e7df28d.5f119d       Wires: 22a26830.d90308
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Maintenance Files"
    });
msg.records = {
    "delete": ["_rev","doc_type", "status"],
    "format": "array",
    "object": "settings_files",
    "returns": ["settings_files"]
};
msg.inputs = {
    "device_id": msg.req.params.deviceID
};
msg.filters = {};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_types",
    "selector": {
        "$or": [
            {"$and": [{"doc_type": "machine_link"},{"status": "active"},{"device": msg.inputs.device_id}]},
            {"$and": [{"doc_type": "device"},{"status": "active"},{"_id": msg.inputs.device_id}]}
            ]
    }
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 22a26830.d90308       Wires: 4bdf6281.10ab5c
  
---------- Node Type: ->function<-   ->Unique Surgeon Users<-      ID: 4bdf6281.10ab5c       Wires: fb6ec3dc.c771f,fc11ab63.470a38,60a33077.686ee
           outputs: 3
           outputLabels: ["","","no device"]
           noerr: 0
===Function Start===
msg.unique_user_ids = []
if (msg.hasOwnProperty("devices") && msg.devices.length >0 && msg.devices[0]._id === msg.inputs.device_id) {
    if(msg.hasOwnProperty("machine_links") && msg.machine_links.length > 0) {
        var user_ids = msg.machine_links.map(a => a.user);
        user_ids.forEach(function(id){
            if(msg.unique_user_ids.indexOf(id) < 0 && (id !== null) && (id !== "")){
                msg.unique_user_ids.push(id);
            }
        })
        msg.cloudant = {
            "request": "/stellaris_documents/_find",
            "method": "POST",
            "return_obj": "docs",
            "object": "users",
            "fields": ["_id","role"],
            "selector": {
                "doc_type": "user",
                "status": "active",
                "role": "Surgeon",
                "_id": {"$in": msg.unique_user_ids}
            }
        };
        return [msg, null,null];
    } else {
        msg.settings_files = [];
        msg.api.path = 2;
        return [null, msg,null];
    }
}
return [null,null,msg]
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: fb6ec3dc.c771f       Wires: b691428f.d32be
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: fc11ab63.470a38       Wires: <end>
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: 60a33077.686ee       Wires: 2bb9e170.65b55e
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active device with id: " + msg.inputs.device_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Settings_files by Device and Surgeon<-      ID: b691428f.d32be       Wires: 8c4d8834.9f3658,fc11ab63.470a38
           outputs: 2
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("users") && msg.users.length > 0){
    var user_ids = msg.users.map(a => a._id);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "settings_files",
        "fields": ["_id","updating_timestamp","file_name","updating_system","user_id","objectDB_id","file_id"],
        "selector": {
            "doc_type": "settings_file",
            "status": "active",
            "user_id": {"$in": user_ids}
        }
    };
    if(msg.req.query.hasOwnProperty("limit")){msg.cloudant.limit = parseInt(msg.req.query.limit)}
    if(msg.req.query.hasOwnProperty("offset")){msg.cloudant.skip = parseInt(msg.req.query.offset)}
    return [msg, null];
} else {
    msg.settings_files = [];
    msg.api.path = 3;
    return [null, msg];
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 2bb9e170.65b55e       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 8c4d8834.9f3658       Wires: fc11ab63.470a38

***********************************************************************************************************
Processing Item: (37)     post /devices/device/:deviceID/tickets_query       Tab: Devices     ID: ee549912.b7f8f8     Wires: 7d48b133.23bdb
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 7d48b133.23bdb       Wires: 3a3e94b2.488a4c
  
---------- Node Type: ->function<-   ->Device Query Tickets<-      ID: 3a3e94b2.488a4c       Wires: 1811562c.c85b9a
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Query Tickets"
    });
msg.records = {
    "doc_type": "help_ticket",
    "format": "array",
    "object": "help_tickets",
    "returns": ["help_tickets"],
    "fields": [ "_id",
                "system_sn",
                "system_type",
                "doctor_id",
                "cell_tower_info",
                "geo_location",
                "start_time",
                "close_time",
                "ticket_status",
                "reason",
                "contact_name",
                "contact_number",
                "assigned_id",
                "responder_id",
                "surgeon_settings_file_id",
                "surgeon_settings_name",
                "device_ip"
               ],
    "sort": [{"start_time:number": "desc"}]
};
if(msg.req.body.hasOwnProperty("return_assigned_users") && msg.req.body.return_assigned_users === true) {
    msg.records.returns.push("assigned_users");
}
msg.inputs = {
    "required": [],
    "allowed": ["filter_options", "return_assigned_users"]
};
msg.filters = {
    "allowed": ["start_time_range_begin" , "start_time_range_end" , "assigned_id" , "ticket_status" , "reason"],
    "required": []
};
msg.cloudant = {
    "request": "/help_tickets/_find",
    "method": "POST",
    "return_obj": "docs",
    "bookmark_type": "payload",
    "pagination": true,
    "bookmark_use": true
};
msg.filters.params = {
    "system_sn": msg.req.params.deviceID
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 1811562c.c85b9a       Wires: 49417ace.763364
  
---------- Node Type: ->subflow<-   ->Cloudant Setup 2.0<-      ID: 49417ace.763364       Wires: 9bc70e9b.67173
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 9bc70e9b.67173       Wires: ff934ee3.307fd
  
---------- Node Type: ->function<-   ->assigned_users Query<-      ID: ff934ee3.307fd       Wires: 41004440.3be51c,c623d4fb.0a4738
           outputs: 2
           noerr: 0
===Function Start===
//node.warn({"assigned_id Query": "Find Unique", "unique_assigned_ids": unique_assigned_ids});
if(msg.help_tickets.length > 0 && msg.inputs.body.hasOwnProperty("return_assigned_users") && msg.inputs.body.return_assigned_users === true){
    msg.cloudant.request = "/help_tickets/_find";
    msg.cloudant.method = "POST";
    msg.cloudant.selector.$and.push({"assigned_id": { "$ne": [] }});
    msg.cloudant.fields = ["assigned_id"];
    if(msg.cloudant.hasOwnProperty("sort")) {delete msg.cloudant.sort}
    if(msg.cloudant.hasOwnProperty("limit")) {delete msg.cloudant.limit}
    if(msg.cloudant.hasOwnProperty("skip")) {delete msg.cloudant.skip}
    msg.cloudant.object = "assigned_id";
    msg.cloudant.pagination = false;
    msg.cloudant.bookmark_use = false;
    msg.cloudant.bookmark_save = false;
    return [msg, null];
}
msg.assigned_users = [];
msg.api.path = 2;
return [null, msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 41004440.3be51c       Wires: fba912f6.de0bf
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: c623d4fb.0a4738       Wires: <end>
  
---------- Node Type: ->function<-   ->Distinct List<-      ID: fba912f6.de0bf       Wires: a872711c.5669e,c623d4fb.0a4738
           outputs: 2
           noerr: 0
===Function Start===
if(msg.help_tickets.length > 0 && msg.inputs.body.hasOwnProperty("return_assigned_users") && msg.inputs.body.return_assigned_users === true){
    var unique_assigned_ids = [];
    if(msg.assigned_id.length > 0) {
        msg.assigned_id.forEach(function(record) {
            record.assigned_id.forEach(function(id){
                if(unique_assigned_ids.indexOf(id) < 0){
                    unique_assigned_ids.push(id);
                }
            });
        });
    }
    msg.help_tickets.forEach(function(record){
        if(record.hasOwnProperty("assigned_id")){
            record.assigned_id.forEach(function(id){
                if(unique_assigned_ids.indexOf(id) < 0){
                    unique_assigned_ids.push(id);
                }
            });
        }
    });
    msg.assigned_id = unique_assigned_ids;
    if(unique_assigned_ids.length > 0){
        msg.cloudant.request = "/stellaris_documents/_find";
        msg.cloudant.method = "POST";
        msg.cloudant.selector = { "_id":  { "$in": msg.assigned_id  }};
        msg.cloudant.fields = ["_id", "first_name", "last_name"];
        msg.cloudant.sort= [{ "last_name:string": "asc"}];
        msg.cloudant.object = "assigned_users";
        msg.cloudant.pagination = false;
        msg.cloudant.bookmark_use = false;
        msg.cloudant.bookmark_save = false;
        return [msg, null];
    }
    msg.assigned_users = [];
}
msg.api.path = 3;
return [null, msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: a872711c.5669e       Wires: c623d4fb.0a4738

***********************************************************************************************************
Processing Item: (38)     get /devices/device/:deviceID/users       Tab: Devices     ID: d40f7c31.814cb     Wires: 4f9e1739.3ceb98
  
---------- Node Type: ->function<-   ->Enc<-      ID: 4f9e1739.3ceb98       Wires: d8827839.727638
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: d8827839.727638       Wires: 2657e692.db45da
  
---------- Node Type: ->function<-   ->Device Users<-      ID: 2657e692.db45da       Wires: 46328c96.587d34
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Users"
    });
msg.records = {
    "delete": ["_rev", "doc_type","status","password"],
    "doc_type": "users",
    "format": "array",
    "object": "users",
    "returns": ["users"]
};
msg.inputs = {
    "device_id": msg.req.params.deviceID
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_types",
    "selector": {
        "$or": [{"$and": [{"doc_type": "device"},{"status": "active"},{"_id": msg.inputs.device_id}]},
                {"$and": [{"doc_type": "machine_link"},{"status": "active"},{"device": msg.inputs.device_id}]}]
    }
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 46328c96.587d34       Wires: 9b7473f5.0e646
  
---------- Node Type: ->function<-   ->Paired User Ids<-      ID: 9b7473f5.0e646       Wires: e710b701.e50df8,29eb87f5.122698,d66b9503.38cc28
           outputs: 3
           outputLabels: ["yes paired","no paired","no device"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("devices") || msg.devices.length === 0) {
    return [null,null,msg];
}
if (msg.hasOwnProperty("machine_links") && msg.machine_links.length > 0) {
    msg.paired_user_ids = msg.machine_links.map(a => a.user);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "selector": {
            "$and": [{"doc_type": "user"},{"status": "active"},{"_id":  { "$in": msg.paired_user_ids }}]
        },
        "sort": [{ "last_name:string": "asc"}],
        "object": "users"
    };
    if(msg.req.query.hasOwnProperty("limit") || msg.req.query.hasOwnProperty("offset")){
        if(msg.req.query.hasOwnProperty("limit")){msg.cloudant.limit = parseInt(msg.req.query.limit)}
        if(msg.req.query.hasOwnProperty("offset")){msg.cloudant.skip = parseInt(msg.req.query.offset)}
    }
    return [msg,null,null];
}
msg.users = [];
msg.api.path = 2;
return [null,msg,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: e710b701.e50df8       Wires: 80e18637.e25728
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 29eb87f5.122698       Wires: <end>
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: d66b9503.38cc28       Wires: 8f8127ce.9e2878
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active device with id: " + msg.inputs.device_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 80e18637.e25728       Wires: 29eb87f5.122698
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 8f8127ce.9e2878       Wires: <end>

***********************************************************************************************************
Processing Item: (39)     get /devices/device/:deviceID/users/role/:role       Tab: Devices     ID: da8f01e9.05b3e     Wires: 11e5486f.2c6b08
  
---------- Node Type: ->function<-   ->Enc<-      ID: 11e5486f.2c6b08       Wires: e6a4d1f.c44fb3
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: e6a4d1f.c44fb3       Wires: d7ddbf7b.cd38f
  
---------- Node Type: ->function<-   ->Device Users<-      ID: d7ddbf7b.cd38f       Wires: f89a1dc6.bd65e
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Device Users by Role"
    });
msg.records = {
    "delete": ["_rev", "doc_type","status","password"],
    "doc_type": "users",
    "format": "array",
    "object": "users",
    "returns": ["users"],
};
msg.inputs = {
    "device_id": msg.req.params.deviceID,
    "role": msg.req.params.role
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_types",
    "selector": {
        "$or": [{"$and": [{"doc_type": "device"},{"status": "active"},{"_id": msg.inputs.device_id}]},
                {"$and": [{"doc_type": "machine_link"},{"status": "active"},{"device": msg.inputs.device_id}]}]
    }
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: f89a1dc6.bd65e       Wires: dc666e86.cb48d
  
---------- Node Type: ->function<-   ->Paired User Ids<-      ID: dc666e86.cb48d       Wires: d7221038.0502,4817e69c.dc4b78,56bf3276.2d53dc
           outputs: 3
           outputLabels: ["yes paired","no paired","no device"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("devices") || msg.devices.length === 0) {
    return [null,null,msg];
}
if (msg.hasOwnProperty("machine_links") && msg.machine_links.length > 0) {
    msg.paired_user_ids = msg.machine_links.map(a => a.user);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "selector": { "$and": [
            {"_id":  { "$in": msg.paired_user_ids  }},
            {"role": msg.inputs.role}
            ]},
        "sort": [{ "last_name:string": "asc"}],
        "object": "users"
    };
    if(msg.req.query.hasOwnProperty("limit") || msg.req.query.hasOwnProperty("offset")){
        if(msg.req.query.hasOwnProperty("limit")){msg.cloudant.limit = parseInt(msg.req.query.limit)}
        if(msg.req.query.hasOwnProperty("offset")){msg.cloudant.skip = parseInt(msg.req.query.offset)}
    }
    return [msg,null,null];
}
msg.users = [];
msg.api.path = 2;
return [null,msg,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: d7221038.0502       Wires: d01cec89.0a404
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 4817e69c.dc4b78       Wires: <end>
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: 56bf3276.2d53dc       Wires: bc61e160.7a68e
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active device with id: " + msg.inputs.device_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: d01cec89.0a404       Wires: 4817e69c.dc4b78
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: bc61e160.7a68e       Wires: <end>

***********************************************************************************************************
Processing Item: (40)     post /devices/device/KORE/activate_to_state       Tab: Sim     ID: c437bfe6.4eb7b     Wires: 6f3005b7.1b698c
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 6f3005b7.1b698c       Wires: 72d4978b.b46228
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 72d4978b.b46228       Wires: d87752cb.f9983
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    if(msg.payload.hasOwnProperty("toState")){
        msg.payload.status = msg.payload.toState;
        msg.req.body.status = msg.req.body.toState;
        delete msg.payload.toState;
        delete msg.req.body.toState;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Activate to State<-      ID: d87752cb.f9983       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Activate To State"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["message", "sim"]
};
msg.inputs = {
    "required": ["sim_iccid", "EAPCode", "status"],
    "values": {
        "status": ["Test", "Active"]
    }
};
msg.sim_provider = {
    "req_type": "activate_to_state",
    "body": msg.payload
};
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "SIM Card " + msg.payload.sim_iccid + " was successfully activated to " + msg.payload.status + "."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (41)     post /devices/device/KORE/deactivate       Tab: Sim     ID: f7f360f6.6436e8     Wires: c393c069.a7c09
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: c393c069.a7c09       Wires: 3a473fea.3e376
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 3a473fea.3e376       Wires: d68a7ab.71f5488
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    if(msg.payload.hasOwnProperty("flagScrap")){
        delete msg.payload.flagScrap;
        delete msg.req.body.flagScrap;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Deactivate<-      ID: d68a7ab.71f5488       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Deactivate"
    });
msg.records = {
    "object": "sim",
    "returns": ["message","sim"]
};
msg.inputs = {
    "required": ["sim_iccid"]
};
msg.sim_provider = {
    "req_type": "deactivate",
    "body": msg.payload
};
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "SIM Card " +  msg.payload.sim_iccid + " was successfully deactivated."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (42)     post /devices/device/KORE/device_status       Tab: Sim     ID: 71d39268.77f7ec     Wires: dc53ae32.cc78b
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: dc53ae32.cc78b       Wires: 95e1bc30.a8423
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 95e1bc30.a8423       Wires: 24b7e3ce.e41b4c
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Status<-      ID: 24b7e3ce.e41b4c       Wires: 6d0d2e62.f103f
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Status"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["sim"]
};
msg.inputs = {
    "allowed": [],
    "required": ["sim_iccid"]
};
msg.sim_provider = {
    "req_type": "status",
    "body": msg.payload
};
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
if(msg.payload.details && msg.payload.details) { msg.sim_provider.details = true }
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 6d0d2e62.f103f       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
if(msg.v1){
    delete msg.records.returns;
    delete msg.api.info;
    delete msg.api.stats;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (43)     post /devices/device/KORE/modify_device_custom_info       Tab: Sim     ID: 62d9b8dd.115968     Wires: ad4d16d7.a27ac8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: ad4d16d7.a27ac8       Wires: 7aef97a2.b2b238
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 7aef97a2.b2b238       Wires: 231352bf.6eeb3e
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Update Custom Info<-      ID: 231352bf.6eeb3e       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Update Custom Info"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["message", "sim"]
};
msg.inputs = {
    "required": ["sim_iccid"],
    "allowed": ["customField1", "customField2", "customField3", "customField4", "customField5", "customField6"]
};
msg.sim_provider = {
    "req_type": "update_info",
    "body": msg.payload
};
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "Sim Card " + msg.payload.sim_iccid + " custom information was successfully updated."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (44)     post /devices/device/KORE/modify_plan_codes       Tab: Sim     ID: a0735513.b59128     Wires: 3ff0e8c.7279e18
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 3ff0e8c.7279e18       Wires: 85a02a72.2d6718
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 85a02a72.2d6718       Wires: be86f9ca.2f2238
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    if(msg.payload.hasOwnProperty("planCode")){
        msg.payload.plan_code = msg.payload.planCode;
        msg.req.body.plan_code = msg.req.body.planCode;
        delete msg.payload.planCode;
        delete msg.req.body.planCode;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Update Plan Code<-      ID: be86f9ca.2f2238       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Modify Plan Code"
    });
msg.records = {
    "object": "sim",
    "returns": ["message","sim"]
};
msg.inputs = {
    "required": ["sim_iccid", "plan_code"]
};
msg.sim_provider = {
    "req_type": "update_plan_code",
    "body": msg.payload
}
if (msg.payload.plan_code && typeof msg.payload.plan_code !== "string") {
    if (msg.payload.plan_code.code) {
        msg.sim_provider.body.plan_code = msg.payload.plan_code.code;
    } else {
        delete msg.payload.plan_code;
        delete msg.sim_provider.plan_code
    }
}
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "SIM Card " +  msg.sim_provider.sim_iccid + " was successfully updated to use plan code " + msg.sim_provider.body.plan_code + "."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (45)     post /devices/device/KORE/plan_codes       Tab: Sim     ID: a5c84bb.37d00b8     Wires: b5c4a534.d50fa8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: b5c4a534.d50fa8       Wires: 27ab0656.d57e7a
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 27ab0656.d57e7a       Wires: 95572347.dd40a
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Plan Codes<-      ID: 95572347.dd40a       Wires: a0a5577b.8dd158
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Plan Codes"
    });
msg.records = {
    "object": "plan_codes",
    "returns": ["plan_codes"]
};
msg.sim_provider = {
    "req_type": "plan_codes"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (46)     post /devices/device/KORE/reactivate       Tab: Sim     ID: f64cf819.f54698     Wires: cc6048c0.ed4cf8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: cc6048c0.ed4cf8       Wires: 2cd1ac5e.1793e4
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 2cd1ac5e.1793e4       Wires: c682ec6e.e63d3
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Reactivate<-      ID: c682ec6e.e63d3       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Reactivate"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["message", "sim"]
};
msg.inputs = {
    "required": ["sim_iccid"]
};
msg.sim_provider = {
    "req_type": "reactivate",
    "body": msg.payload
}
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "SIM Card " + msg.payload.sim_iccid + " was successfully reactivated."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (47)     get /devices/device/partial_deviceID/:partial_deviceID       Tab: Devices     ID: 51206c7c.5ce264     Wires: 4ef9d2fa.90724c
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 4ef9d2fa.90724c       Wires: 420bf8e3.2388a8
  
---------- Node Type: ->function<-   ->Devices Partial ID<-      ID: 420bf8e3.2388a8       Wires: 3552abc6.5a3964
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Devices Partial ID"
    });
msg.records = {
    "doc_type": "device",
    "format": "array",
    "object": "devices",
    "returns": ["devices"]
};
msg.inputs = {};
msg.filters = {
    "options": {}
};
msg.filters.values = {
    "doc_type": "device",
    "status": "active"
}
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "selector": {
        "$and": [{"doc_type": "device"},
                 {"status": "active"},
                 {"_id": { "$regex": msg.req.params.partial_deviceID }}]
    },
    "fields": ["_id", "system_type", "business_unit", "sales_area", "sales_region", "sales_territory", "service_area", "service_region", "service_territory", "customer_id", "facility_id", "facility_name", "facility_address", "sales_status", "status_date", "get_me_help_allowed", "placed_by", "birth_date"],
    "sort": [{"_id:string": "asc"}]
}
if(msg.req.query.hasOwnProperty("limit")) { msg.cloudant.limit = parseInt(msg.req.query.limit); }
if(msg.req.query.hasOwnProperty("offset")) { msg.cloudant.skip = parseInt(msg.req.query.offset); }
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 3552abc6.5a3964       Wires: 7c4b1e7a.ee495
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 7c4b1e7a.ee495       Wires: <end>

***********************************************************************************************************
Processing Item: (48)     post /devices/device_query       Tab: Devices     ID: 53bf960b.8841b8     Wires: 702ce90b.ef4698
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 702ce90b.ef4698       Wires: dba65925.b3b1f8
  
---------- Node Type: ->function<-   ->Devices Query<-      ID: dba65925.b3b1f8       Wires: c97fd359.cbbfc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Devices Query"
    });
msg.records = {
    "doc_type": "device",
    "format": "array",
    "object": "devices",
    "fields": ["_id", "system_type", "business_unit", "sales_area", "sales_region", "sales_territory", "service_area", "service_region", "service_territory", "customer_id", "facility_id", "facility_name", "facility_address", "sales_status", "status_date", "get_me_help_allowed", "placed_by", "birth_date", "idp_id"],
    "sort": [{"_id:string": "asc"}],
    "returns": ["devices"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["_id", "_id_partial", "_id_like", "facility_name", "system_type", "get_me_help_allowed", "sales_status", "status_date_range_begin", "status_date_range_end", "birth_date_range_begin", "birth_date_range_end", "business_unit", "sales_area", "sales_region", "sales_territory", "service_area", "service_region", "service_territory","idp_id"]};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "bookmark_type": "payload",
    "pagination": true,
    "bookmark_use": false
}
msg.filters.params = {
    "doc_type": msg.records.doc_type,
    "status": "active"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: c97fd359.cbbfc       Wires: 468b8e37.cfc9c
  
---------- Node Type: ->subflow<-   ->Cloudant Setup 2.0<-      ID: 468b8e37.cfc9c       Wires: 6815816d.2097
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 6815816d.2097       Wires: 1746f287.174b0d
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 1746f287.174b0d       Wires: <end>

***********************************************************************************************************
Processing Item: (49)     post /devices/device_query/region/:bart_sart/:business_unit/:area/:region/:territory       Tab: Devices     ID: b28eea96.003b78     Wires: 9e9a8543.2136d8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 9e9a8543.2136d8       Wires: c800309c.a7b85
  
---------- Node Type: ->function<-   ->Devices by Region<-      ID: c800309c.a7b85       Wires: 6600b63.2b7c748
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Devices by Region"
    });
msg.records = {
    "doc_type": "device",
    "format": "array",
    "object": "devices",
    "fields": ["_id", "system_type", "business_unit", "sales_area", "sales_region", "sales_territory", "service_area", "service_region", "service_territory", "customer_id", "facility_id", "facility_name", "facility_address", "sales_status", "status_date", "get_me_help_allowed", "placed_by", "birth_date"],
    "sort": [{"_id:string": "asc"}],
    "returns": ["devices"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["facility_name", "system_type", "get_me_help_allowed", "sales_status", "status_date_range_begin", "status_date_range_end", "birth_date_range_begin", "birth_date_range_end"]};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "bookmark_type": "payload",
    "pagination": true,
    "bookmark_use": false
}
msg.filters.params = {
    "doc_type": msg.records.doc_type,
    "status": "active"
}
if(msg.req.params.bart_sart === "bart"){
        var area = "sales_area";
        var region = "sales_region";
        var territory = "sales_territory";
}
else {
        var area = "service_area";
        var region = "service_region";
        var territory = "service_territory";
}
if(msg.req.params.business_unit.trim() != "ALL"){
    msg.filters.params.business_unit =  msg.req.params.business_unit
	if(msg.req.params.area.trim() != "ALL"){
	    msg.filters.params[area] = msg.req.params.area;
	    if(msg.req.params.region.trim() != "ALL"){
	        msg.filters.params[region] = msg.req.params.region;
	        if(msg.req.params.territory.trim() != "ALL"){
	            msg.filters.params[territory] = msg.req.params.territory;
	        }
	    }
	}
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 6600b63.2b7c748       Wires: 82ea1731.21f0a8
  
---------- Node Type: ->subflow<-   ->Cloudant Setup 2.0<-      ID: 82ea1731.21f0a8       Wires: be38e306.9877d
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: be38e306.9877d       Wires: afcb683f.2783b8
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: afcb683f.2783b8       Wires: <end>

***********************************************************************************************************
Processing Item: (50)     get /encrypt/:data       Tab: System     ID: cd1e004d.8897d     Wires: 981f5629.ed25f8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 981f5629.ed25f8       Wires: 89860ecf.bac86
  
---------- Node Type: ->function<-   ->Encrypt<-      ID: 89860ecf.bac86       Wires: 2cf230c5.f2f98
           outputs: 1
           noerr: 0
===Function Start===
var cryptojs = global.get('cryptojs');
msg.encrypt = {
    "key": global.get("CRYPTO_KEYS").com.payload
}
node.warn("key: "+ msg.encrypt.key)
msg.json_string = msg.req.params.data;
node.warn("E-json_string: "+ msg.json_string)
msg.encrypted = cryptojs.AES.encrypt(msg.json_string, msg.encrypt.key);
node.warn({"E-encrypted": msg.encrypted});
msg.encrypted_string = msg.encrypted.toString();
node.warn({"E-encrypted_string": msg.encrypted_string});
msg.payload = msg.encrypted_string;
return msg;
===Function   End===
  
  
---------- Node Type: ->http response<-   -><-      ID: 2cf230c5.f2f98       Wires: <end>
           headers: {}
           statusCode: 
  

***********************************************************************************************************
Processing Item: (51)     get /files/file/:file_id       Tab: Files     ID: b1cd7fa0.aa0ff8     Wires: 393e4eee.cc57e2
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 393e4eee.cc57e2       Wires: 61f7839a.67e86c
  
---------- Node Type: ->function<-   ->Settings File Info<-      ID: 61f7839a.67e86c       Wires: 3c1c7788.cd9538
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Settings File Info"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "settings_file",
    "object": "settings_file",
    "format": "JSON",
    "returns": ["settings_file"]
};
msg.inputs = {
    "file_id": msg.req.params.file_id
};
msg.filters = {};
msg.filters.params = {};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "settings_file",
    "selector": {
        "file_id": msg.inputs.file_id,
        "doc_type": "settings_file",
        "status": "active"
    },
    "sort": [{"updating_timestamp:number": "asc"}]
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 3c1c7788.cd9538       Wires: 3c9946e9.11561a
  
---------- Node Type: ->function<-   ->File Exist<-      ID: 3c9946e9.11561a       Wires: 83d350cf.1e6e,36c0c3d1.557abc
           outputs: 2
           outputLabels: ["yes","no"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("settings_file") || msg.settings_file.length === 0 || msg.settings_file[0].doc_type !== "settings_file") {
    return [null,msg]
}
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 83d350cf.1e6e       Wires: 28e890af.5d066
  
---------- Node Type: ->function<-   ->File Not Found<-      ID: 36c0c3d1.557abc       Wires: d6ed1de9.c2986
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active File " + msg.inputs.file_id + " doesn't exist",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 28e890af.5d066       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: d6ed1de9.c2986       Wires: <end>

***********************************************************************************************************
Processing Item: (52)     get /files/file/:file_id/download       Tab: Files     ID: 5232b9f.24173c8     Wires: 9e2d292d.0788d8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 9e2d292d.0788d8       Wires: c7e9071b.9ddcc8
  
---------- Node Type: ->function<-   ->Settings File Download<-      ID: c7e9071b.9ddcc8       Wires: 3cb8037b.a2fd9c
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Settings File Download"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "settings_file",
    "format": "JSON",
    "returns": ["file"]
};
msg.inputs = {
    "file_id": msg.req.params.file_id
};
msg.filters = {};
msg.filters.params = {};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "settings_file",
    "selector": {
        "file_id": msg.inputs.file_id,
        "doc_type": "settings_file",
        "status": "active"
    },
    "sort": [{"updating_timestamp:number": "asc"}]
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 3cb8037b.a2fd9c       Wires: be057315.791e7
  
---------- Node Type: ->function<-   ->File Exist<-      ID: be057315.791e7       Wires: 10841c1e.c6fe34,8af95a39.cc1db8
           outputs: 2
           outputLabels: ["yes","no"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("settings_file") || msg.settings_file.length === 0 || msg.settings_file[0].doc_type !== "settings_file" || msg.settings_file[0].objectDB_id === "") {
    return [null,msg]
}
msg.cos = {
    "method": "GET",
    "object": "file",
    "filename": msg.settings_file[0].objectDB_id,
    "container": "stellaris-settings"
}
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Object Storage 2.1<-      ID: 10841c1e.c6fe34       Wires: 737c91e3.9dee4
  
---------- Node Type: ->function<-   ->File Not Found<-      ID: 8af95a39.cc1db8       Wires: ab36f240.b3a58
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active File " + msg.inputs.file_id + " doesn't exist",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Attachment Header<-      ID: 737c91e3.9dee4       Wires: c101df63.e161e
           outputs: 1
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("headers")) { msg.headers = {} }
msg.headers["content-disposition"] = "attachment; filename=" + msg.settings_file[0].file_name;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: ab36f240.b3a58       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: c101df63.e161e       Wires: ccd38f05.bc594
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: ccd38f05.bc594       Wires: <end>

***********************************************************************************************************
Processing Item: (53)     post /files/file/settings/:file_id       Tab: Files     ID: 2b3172ba.aeaa4e     Wires: 7b3d1734.bde8f8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 7b3d1734.bde8f8       Wires: 11388bff.03f9d4
  
---------- Node Type: ->function<-   ->Settings File New<-      ID: 11388bff.03f9d4       Wires: 2dbaa227.50f91e
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Settings File New"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "settings_file",
    "object": "settings_file",
    "format": "JSON",
    "returns": ["message","settings_file"],
    "models": ["settings_file"]
};
msg.inputs = {
    "file_id": msg.req.params.file_id,
    "objectDB_id": msg.req.params.file_id + "_" + msg.payload.updating_timestamp,
    "required": ["file_name", "updating_system", "updating_timestamp", "user_id"],
    "allowed": [],
    "attach_num": 1
};
msg.cos = {
    "method": "PUT",
    "container": "stellaris-settings",
    "filename": msg.inputs.objectDB_id,
    "object": "message"
}
if (msg.req.hasOwnProperty("files")) {
    msg.cos.file = msg.req.files[0]
} else if (msg.req.body.hasOwnProperty("file")) {
    var cryptojs = global.get('cryptojs');
    msg.cos.file_string = cryptojs.enc.Utf8.stringify(cryptojs.enc.Base64.parse(msg.req.body.file));
    msg.cos.file = {
        "buffer": Buffer.from(msg.cos.file_string, 'utf8'),
        "mimetype": "text/plain"
    }
    delete msg.payload.file;
}
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "settings_file",
    "selector": {
        "file_id": msg.inputs.file_id,
        "doc_type": "settings_file",
        "status": "active"
    },
    "sort": [{"updating_timestamp:number": "asc"}]
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 2dbaa227.50f91e       Wires: c6fde4a7.09f7c8
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("v1") && msg.v1){
    delete msg.records.returns;
    msg.records.delete = ["_rev", "doc_type"];
    delete msg.api.info;
    delete msg.api.starts;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: c6fde4a7.09f7c8       Wires: 9fee4799.288e88
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 9fee4799.288e88       Wires: 8dce59a6.9f9ee8
  
---------- Node Type: ->function<-   ->File Exist<-      ID: 8dce59a6.9f9ee8       Wires: a1432bf7.1f2948,15a3f33e.b9c3ad
           outputs: 2
           outputLabels: ["no","yes"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("settings_file") || msg.settings_file.length === 0 || msg.settings_file[0].doc_type !== "settings_file") {
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "user",
        "selector": {
            "_id": msg.inputs.body.user_id,
            "doc_type": "user",
            "status": "active"
        }
    };
    return [msg,null];
}
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: a1432bf7.1f2948       Wires: c458e074.fbee
  
---------- Node Type: ->function<-   ->File Found<-      ID: 15a3f33e.b9c3ad       Wires: 57d0e6f5.67b918
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active File " + msg.inputs.file_id + " already exists",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->User Exist<-      ID: c458e074.fbee       Wires: 5c27e9aa.3e1648,2ba1b03b.10276
           outputs: 2
           outputLabels: ["yes","no"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("user") || msg.user.length === 0 || msg.user[0].doc_type !== "user") {
    return [null,msg]
}
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "filename_list",
    "selector": {
        "user_id": msg.inputs.body.user_id,
        "doc_type": "settings_file",
        "status": "active",
        "file_name": msg.inputs.body.file_name
    }
};
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Update<-      ID: 57d0e6f5.67b918       Wires: a061b3d1.5281a,2bf2afcb.87bdf
           outputs: 2
           outputLabels: ["error","v1"]
           noerr: 0
===Function Start===
if(msg.v1){
    delete msg.errors;
    msg.payload = msg.req.body;
    msg.payload.user_id = msg.req.params.doctor_id;
    return [null,msg];
}
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 5c27e9aa.3e1648       Wires: e71429fc.aebf28
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: 2ba1b03b.10276       Wires: a061b3d1.5281a
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User with id " + msg.inputs.body.user_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: a061b3d1.5281a       Wires: <end>
  
---------- Node Type: ->function<-   ->Settings File Update<-      ID: 2bf2afcb.87bdf       Wires: 4d823372.5cde6c
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Settings File Update"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "settings_file",
    "object": "settings_file",
    "format": "JSON",
    "returns": ["message","settings_file"],
    "models": ["settings_file"]
};
msg.inputs = {
    "file_id": msg.req.params.file_id,
    "objectDB_id": msg.req.params.file_id + "_" + msg.payload.updating_timestamp,
    "required": ["file_name", "updating_system", "updating_timestamp"], //user_id is not allowed. Can't be changed
    "allowed": [],
    "attach_num": 1
};
msg.message = "File_id: " + msg.inputs.file_id + " has been successfully updated.";
msg.cos = {
    "method": "PUT",
    "container": "stellaris-settings",
    "filename": msg.inputs.objectDB_id
}
if (msg.req.hasOwnProperty("files")) {
    msg.cos.file = msg.req.files[0]
} else if (msg.req.body.hasOwnProperty("file")) {
    var cryptojs = global.get('cryptojs');
    msg.cos.file = cryptojs.enc.Utf8.stringify(cryptojs.enc.Base64.parse(msg.req.body.file));
    delete msg.payload.file;
}
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "settings_file",
    "selector": {
        "file_id": msg.inputs.file_id,
        "doc_type": "settings_file",
        "status": "active"
    },
    "sort": [{"updating_timestamp:number": "asc"}]
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->File_name Exist<-      ID: e71429fc.aebf28       Wires: 4d8f7ca9.bd4c54,93187c7c.ddda1
           outputs: 2
           outputLabels: ["no","yes"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("filename_list") || msg.filename_list.length === 0 || msg.filename_list[0].doc_type !== "settings_file") {
    msg.inputs.body.file_id = msg.inputs.file_id;
    msg.inputs.body.objectDB_id = msg.inputs.objectDB_id;
    return [msg,null]
}
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 4d823372.5cde6c       Wires: 8df95eb8.f7ae3
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("v1") && msg.v1){
    delete msg.records.returns;
    msg.records.delete = ["_rev", "doc_type"];
    delete msg.api.info;
    delete msg.api.starts;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Object Storage 2.1<-      ID: 4d8f7ca9.bd4c54       Wires: 102b38b7.d949c7
  
---------- Node Type: ->function<-   ->File_name Found<-      ID: 93187c7c.ddda1       Wires: a061b3d1.5281a
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "File_name " + msg.inputs.body.file_name + " already exists for this user with id " + msg.inputs.body.user_id + ".",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 8df95eb8.f7ae3       Wires: b8c198d3.924768
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: 102b38b7.d949c7       Wires: 2e212846.440a88
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: b8c198d3.924768       Wires: adaaa8f8.136fd8
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 2e212846.440a88       Wires: 873725d1.a72bf8
  
---------- Node Type: ->function<-   ->File Exist<-      ID: adaaa8f8.136fd8       Wires: c1f5d569.f103a8,820cb737.c3d288
           outputs: 2
           outputLabels: ["yes","no"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("settings_file") || msg.settings_file.length === 0 || msg.settings_file[0].doc_type !== "settings_file") {
    return [null,msg]
}
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 873725d1.a72bf8       Wires: <end>
  
---------- Node Type: ->function<-   ->User Match<-      ID: c1f5d569.f103a8       Wires: 77e10d4a.554344,b67d4e6.df716b
           outputs: 2
           outputLabels: ["yes","no"]
           noerr: 0
===Function Start===
msg.inputs.file_user = msg.inputs.body.file_name.split('_').pop();
if (msg.settings_file[0].user_id !== msg.inputs.file_user) {
    return [null,msg]
}
msg.inputs.body.user_id = msg.settings_file[0].user_id;
msg.inputs.body.file_id = msg.settings_file[0].file_id;
msg.inputs.body.objectDB_id = msg.inputs.objectDB_id;
msg.records.old_file_id = msg.settings_file[0]._id;
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "filename_list",
    "selector": {
        "user_id": msg.inputs.body.user_id ,
        "doc_type": "settings_file",
        "status": "active",
        "file_name": msg.inputs.body.file_name,
        "_id": {"$ne": msg.records.old_file_id}
    }
};
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->function<-   ->File Not Found<-      ID: 820cb737.c3d288       Wires: 74596a0f.233c14
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active File " + msg.inputs.file_id + " doesn't exist",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 77e10d4a.554344       Wires: 1a72069e.a97329
  
---------- Node Type: ->function<-   ->User Do Not Match<-      ID: b67d4e6.df716b       Wires: 74596a0f.233c14
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User id " + msg.settings_file[0].user_id + " does not match the record or the file_name " + msg.inputs.body.file_name + ".",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 74596a0f.233c14       Wires: <end>
  
---------- Node Type: ->function<-   ->File_name Exist<-      ID: 1a72069e.a97329       Wires: 89dcb35f.a0052,d8ede6c6.8d9298
           outputs: 2
           outputLabels: ["no","yes"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("filename_list") || msg.filename_list.length === 0 || msg.filename_list[0].doc_type !== "settings_file") {
    return [msg,null]
}
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Object Storage 2.1<-      ID: 89dcb35f.a0052       Wires: ec6e1945.8e0a38
  
---------- Node Type: ->function<-   ->File_name Found<-      ID: d8ede6c6.8d9298       Wires: 74596a0f.233c14
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "File_name " + msg.inputs.body.file_name + " already exists for this user wth id " + msg.inputs.body.user_id + ".",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: ec6e1945.8e0a38       Wires: c1bfea7b.7d61a8,db5a3b27.f7e7e8
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: c1bfea7b.7d61a8       Wires: 2a8e726d.2d300e
  
---------- Node Type: ->function<-   ->Set Inactive<-      ID: db5a3b27.f7e7e8       Wires: 25739575.0f457a
           outputs: 1
           noerr: 0
===Function Start===
msg.records.id = msg.records.old_file_id;
msg.inputs.body = {"status": "inactive"}
delete msg.settings_file;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 2a8e726d.2d300e       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: 25739575.0f457a       Wires: <end>

***********************************************************************************************************
Processing Item: (54)     post /files/file/settings/update/:file_id       Tab: Files     ID: 87528dda.92cfb     Wires: fcc9a595.312b78
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: fcc9a595.312b78       Wires: 2bf2afcb.87bdf
  
---------- Node Type: ->function<-   ->Settings File Update<-      ID: 2bf2afcb.87bdf       Wires: 4d823372.5cde6c
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Settings File Update"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "settings_file",
    "object": "settings_file",
    "format": "JSON",
    "returns": ["message","settings_file"],
    "models": ["settings_file"]
};
msg.inputs = {
    "file_id": msg.req.params.file_id,
    "objectDB_id": msg.req.params.file_id + "_" + msg.payload.updating_timestamp,
    "required": ["file_name", "updating_system", "updating_timestamp"], //user_id is not allowed. Can't be changed
    "allowed": [],
    "attach_num": 1
};
msg.message = "File_id: " + msg.inputs.file_id + " has been successfully updated.";
msg.cos = {
    "method": "PUT",
    "container": "stellaris-settings",
    "filename": msg.inputs.objectDB_id
}
if (msg.req.hasOwnProperty("files")) {
    msg.cos.file = msg.req.files[0]
} else if (msg.req.body.hasOwnProperty("file")) {
    var cryptojs = global.get('cryptojs');
    msg.cos.file = cryptojs.enc.Utf8.stringify(cryptojs.enc.Base64.parse(msg.req.body.file));
    delete msg.payload.file;
}
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "settings_file",
    "selector": {
        "file_id": msg.inputs.file_id,
        "doc_type": "settings_file",
        "status": "active"
    },
    "sort": [{"updating_timestamp:number": "asc"}]
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 4d823372.5cde6c       Wires: 8df95eb8.f7ae3
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("v1") && msg.v1){
    delete msg.records.returns;
    msg.records.delete = ["_rev", "doc_type"];
    delete msg.api.info;
    delete msg.api.starts;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 8df95eb8.f7ae3       Wires: b8c198d3.924768
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: b8c198d3.924768       Wires: adaaa8f8.136fd8
  
---------- Node Type: ->function<-   ->File Exist<-      ID: adaaa8f8.136fd8       Wires: c1f5d569.f103a8,820cb737.c3d288
           outputs: 2
           outputLabels: ["yes","no"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("settings_file") || msg.settings_file.length === 0 || msg.settings_file[0].doc_type !== "settings_file") {
    return [null,msg]
}
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->function<-   ->User Match<-      ID: c1f5d569.f103a8       Wires: 77e10d4a.554344,b67d4e6.df716b
           outputs: 2
           outputLabels: ["yes","no"]
           noerr: 0
===Function Start===
msg.inputs.file_user = msg.inputs.body.file_name.split('_').pop();
if (msg.settings_file[0].user_id !== msg.inputs.file_user) {
    return [null,msg]
}
msg.inputs.body.user_id = msg.settings_file[0].user_id;
msg.inputs.body.file_id = msg.settings_file[0].file_id;
msg.inputs.body.objectDB_id = msg.inputs.objectDB_id;
msg.records.old_file_id = msg.settings_file[0]._id;
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "filename_list",
    "selector": {
        "user_id": msg.inputs.body.user_id ,
        "doc_type": "settings_file",
        "status": "active",
        "file_name": msg.inputs.body.file_name,
        "_id": {"$ne": msg.records.old_file_id}
    }
};
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->function<-   ->File Not Found<-      ID: 820cb737.c3d288       Wires: 74596a0f.233c14
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active File " + msg.inputs.file_id + " doesn't exist",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 77e10d4a.554344       Wires: 1a72069e.a97329
  
---------- Node Type: ->function<-   ->User Do Not Match<-      ID: b67d4e6.df716b       Wires: 74596a0f.233c14
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User id " + msg.settings_file[0].user_id + " does not match the record or the file_name " + msg.inputs.body.file_name + ".",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 74596a0f.233c14       Wires: <end>
  
---------- Node Type: ->function<-   ->File_name Exist<-      ID: 1a72069e.a97329       Wires: 89dcb35f.a0052,d8ede6c6.8d9298
           outputs: 2
           outputLabels: ["no","yes"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("filename_list") || msg.filename_list.length === 0 || msg.filename_list[0].doc_type !== "settings_file") {
    return [msg,null]
}
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Object Storage 2.1<-      ID: 89dcb35f.a0052       Wires: ec6e1945.8e0a38
  
---------- Node Type: ->function<-   ->File_name Found<-      ID: d8ede6c6.8d9298       Wires: 74596a0f.233c14
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "File_name " + msg.inputs.body.file_name + " already exists for this user wth id " + msg.inputs.body.user_id + ".",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: ec6e1945.8e0a38       Wires: c1bfea7b.7d61a8,db5a3b27.f7e7e8
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: c1bfea7b.7d61a8       Wires: 2a8e726d.2d300e
  
---------- Node Type: ->function<-   ->Set Inactive<-      ID: db5a3b27.f7e7e8       Wires: 25739575.0f457a
           outputs: 1
           noerr: 0
===Function Start===
msg.records.id = msg.records.old_file_id;
msg.inputs.body = {"status": "inactive"}
delete msg.settings_file;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 2a8e726d.2d300e       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: 25739575.0f457a       Wires: <end>

***********************************************************************************************************
Processing Item: (55)     get /images/:filename       Tab: System     ID: 691abd3f.b624b4     Wires: 986af045.2f9b5
  
---------- Node Type: ->function<-   ->Email Image<-      ID: 986af045.2f9b5       Wires: 96b475e9.662688
           outputs: 1
           noerr: 0
===Function Start===
msg.api = {
        "name": "Email Image",
        "version": global.get("API_VERSION")
    };
msg.cos = {
    "method": "GET",
    "filename": msg.req.params.filename,
    "container": "email-images"
}
if (msg.hasOwnProperty("req") && msg.req.hasOwnProperty("headers")) {
    if (msg.req.headers.hasOwnProperty("api_debug")) {
        msg.api.debug = (msg.req.headers.api_debug === "true");
    } else {
        msg.api.debug = false;
    }
    if (msg.req.headers.hasOwnProperty("apic")) {
        msg.api.apic = JSON.parse(msg.req.headers.apic)
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Object Storage 2.1<-      ID: 96b475e9.662688       Wires: 4634e03f.e740e
  
---------- Node Type: ->function<-   ->Set Content<-      ID: 4634e03f.e740e       Wires: ebfc8e3f.ff38c
           outputs: 1
           noerr: 0
===Function Start===
var ext = msg.cos.filename.split('.').pop();
msg.payload = msg.cos.return;
msg.headers = {
    "Content-Type": "image/" + ext
};
//node.warn({"image extension": ext});
return msg;
===Function   End===
  
  
---------- Node Type: ->http response<-   ->Return Image<-      ID: ebfc8e3f.ff38c       Wires: <end>
           headers: {}
           statusCode: 
  

***********************************************************************************************************
Processing Item: (56)     post /logs       Tab: Logs     ID: 4fda7ec5.191eb     Wires: 5969198a.623db8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 5969198a.623db8       Wires: 11e39807.b03018
  
---------- Node Type: ->function<-   ->Check String<-      ID: 11e39807.b03018       Wires: 442f624a.f0465c,8c571c39.404c4
           outputs: 2
           outputLabels: ["no str","yes str"]
           noerr: 0
===Function Start===
if (typeof msg.payload === "string") { return [null, msg] }
return [msg, null]; 

===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 442f624a.f0465c       Wires: d81d6328.63bd8,6e753d70.f649c4,df25c52.2380638
           outputs: 3
           outputLabels: ["case","edhr","machine_life"]
           noerr: 0
===Function Start===
msg.v1 = true;
if(msg.payload.hasOwnProperty("type")){
    if(msg.payload.type === "case") {
        //manipulate case inputs
        delete msg.payload.type
        return [msg,null,null];
    }
    if(msg.payload.type === "startup_log"){
        delete msg.payload.type
        msg.payload.modlist = msg.payload.edhr;
        delete msg.payload.edhr;
        msg.payload.function_accumulator = msg.payload.machine_life_data;
        delete msg.payload.machine_life_data;
        msg.payload.timestamp = new Date().getTime();
        msg.payload.power_on_time_stamp = msg.payload.power_on_event.timestamp
        delete msg.payload.power_on_event.timestamp;
        msg.payload.prev_power_off_time_stamp = msg.payload.power_off_event.timestamp
        delete msg.payload.power_off_event;
        if (msg.req.headers.birth === "true") {
            msg.payload.birth = true;
        } else {
            msg.payload.birth = false;
        }
        //split in edhr and machine_life
        return [null,msg,msg]
    }
}
===Function   End===
  
  
---------- Node Type: ->json<-   ->json Parser<-      ID: 8c571c39.404c4       Wires: 442f624a.f0465c
           pretty: false
           action: 
           property: payload
  
  
---------- Node Type: ->function<-   ->Log New Case<-      ID: d81d6328.63bd8       Wires: 9f83f910.a243f8
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Log Case New"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status", "case_log"],
    "doc_type": "case",
    "format": "JSON",
    "object": "case",
    "returns": ["case"],
    "models": ["case"],
    "return_code": 201
};
msg.inputs = {
    "required": ["log_id","system_sn","system_type","location", "start_time","stop_time","settings_file_name","case_log"], 
    "allowed": ["user_id","settings_file_id"]
};
if (msg.payload.hasOwnProperty("log_id")) { msg.records.log_id = msg.payload.log_id }
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Log EDHR New<-      ID: 6e753d70.f649c4       Wires: 4e5cfcf7.b5d204
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Log New EDHR",
        "path": 1,
        "paths": 3
    });
msg.records = {
    //"delete": ["_rev", "doc_type", "status", "modlist", "software_options", "geo_location"],
    "return_deletes": {
        "edhr": ["_rev", "doc_type"],
        "sims": ["__type", "requestStatus", "MSISDNOrMDN", "currentDataPlan", "currentSMSPlan", "futureDataPlan", "futureSMSPlan", "dailyDataThreshold", "dailySMSThreshold", "monthlyDataThreshold", "monthlySMSThreshold", "customField4", "customField5", "customField6", "lstHistoryOverLastYear", "lstFeatures", "staticIP", "voiceDispatchNumber", "mostRecentLocateId", "previousLocateId", "mostRecentLocateDate", "mostRecentLatitude", "mostRecentLongitude", "mostRecentAddress", "previousLocateDate", "previousLatitude", "previousLongitude", "previousAddress", "lstExtFeatures"]
    },
    "doc_type": "edhr",
    "format": "JSON",
    "object": "edhr",
    "returns": ["edhr","sims"],
    "return_formats": {
        "edhr":"JSON",
        "sims":"array"
    },
    "models": ["edhr"],
    "return_code": 201
};
msg.inputs = {
    "required": ["system_sn", "system_type", "modlist", "software_options", "timestamp"], 
    "allowed": ["location", "birth", "field_birth"],
    "types": {
        "timestamp": "number"
    }
};
if (msg.payload.hasOwnProperty("system_sn")) {
    msg.inputs.device_id = msg.payload.system_sn;
} else {
    msg.inputs.device_id = "";
}
if (msg.payload.birth) {
    msg.inputs.birth = (msg.payload.birth === true); //to make copy
    delete msg.payload.birth;
} else {
    msg.inputs.birth = false;
}
if (msg.payload.field_birth) {
    msg.inputs.field_birth = (msg.payload.field_birth === true); //to make copy
    delete msg.payload.field_birth;
} else {
    msg.inputs.field_birth = false;
}
msg.cloudant = {
    "request": "/stellaris_documents/" + msg.inputs.device_id,
    "method": "GET",
    "object": "device",
    "return_obj": ""
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Log Machine Life New<-      ID: df25c52.2380638       Wires: 4aca654c.0f624c
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Log New Machine Life"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status", "function_accumulator"],
    "doc_type": "machine_life",
    "format": "JSON",
    "object": "machine_life",
    "returns": ["machine_life"],
    "models": ["machine_life"],
    "return_code": 201
};
msg.inputs = {
    "required": ["system_sn", "function_accumulator", "power_on_time_stamp", "prev_power_off_time_stamp"], 
    "allowed": []
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 9f83f910.a243f8       Wires: dae23b4c.58a628
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 4e5cfcf7.b5d204       Wires: d3d9378b.b98a28
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 4aca654c.0f624c       Wires: 7970b698.d57dc8
           outputs: 1
           noerr: 0
===Function Start===
if(msg.v1) {
    delete msg.res // disable responding
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Google Location 2.0<-      ID: dae23b4c.58a628       Wires: 9904e65e.ae5fc8
  
---------- Node Type: ->subflow<-   ->Google Location 2.0<-      ID: d3d9378b.b98a28       Wires: c66fda46.2bbc38
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 7970b698.d57dc8       Wires: bccb7190.ed50a
  
---------- Node Type: ->function<-   ->Check Zip<-      ID: 9904e65e.ae5fc8       Wires: 7f117f38.e5dae,4047cc95.c465f4
           outputs: 2
           outputLabels: ["no zip","yes zip"]
           noerr: 0
===Function Start===
if( Array.isArray(msg.inputs.body.case_log)) {
    msg.payload = msg.inputs.body.case_log;
    return [null, msg];
}
if(!msg.inputs.body.case_log.includes("\r\n") && msg.inputs.body.case_log.includes("\n")) {
    msg.inputs.body.case_log = msg.inputs.body.case_log.replace(new RegExp("\n","g"), "\r\n")
}
return [msg, null]

===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: c66fda46.2bbc38       Wires: ff55fb19.447ac8
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: bccb7190.ed50a       Wires: 3db4fea3.8c93c2
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: 7f117f38.e5dae       Wires: 557964cc.4ccf3c
  
---------- Node Type: ->gzip<-   ->gzip<-      ID: 4047cc95.c465f4       Wires: 1709ce1d.cc3342
  
  
---------- Node Type: ->function<-   ->Device Found<-      ID: ff55fb19.447ac8       Wires: 1de150bb.6b7c4f,6e7bfc80.952a44
           outputs: 2
           outputLabels: ["yes","no"]
           noerr: 0
===Function Start===
delete msg.inputs.body.birth;
if (msg.inputs.body.hasOwnProperty("location")) { delete msg.inputs.body.location }
if (!msg.hasOwnProperty("device") || msg.device.length === 0 || msg.device[0].doc_type !== "device") {
    return [null,msg]
}
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 3db4fea3.8c93c2       Wires: b1728cc7.2155a
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 557964cc.4ccf3c       Wires: 9ed26faa.17224
  
---------- Node Type: ->function<-   ->Unzip<-      ID: 1709ce1d.cc3342       Wires: 7f117f38.e5dae
           outputs: 1
           noerr: 0
===Function Start===
msg.inputs.body.case_log = msg.payload;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: 1de150bb.6b7c4f       Wires: 76ea0f8f.2a839
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: 6e7bfc80.952a44       Wires: b832460e.4625b8
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Device with serial number: " + msg.inputs.device_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: b1728cc7.2155a       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 9ed26faa.17224       Wires: <end>
  
---------- Node Type: ->function<-   ->Birth EDHR<-      ID: 76ea0f8f.2a839       Wires: 31ae35e1.daf33a,ed6f43d3.45a1c,2c2f61c1.5814be,45b0ab31.18db54
           outputs: 2
           outputLabels: ["yes birth","no birth"]
           noerr: 0
===Function Start===
if (msg.inputs.birth) {
    return [msg,null]
} else {
    msg.cloudant = {
        "request": "/stellaris_logs/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "last_edhr",
        "selector": {
            "doc_type": "edhr",
            "system_sn": msg.inputs.device_id,
        },
        "sort": [{"timestamp:number": "desc"}],
        "limit": 2
    };
    msg.api.path = 2;
    msg.records.returns.splice(msg.records.returns.indexOf("sims"), 1)
    return [null,msg]
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: b832460e.4625b8       Wires: <end>
  
---------- Node Type: ->function<-   ->Birth Email<-      ID: 31ae35e1.daf33a       Wires: a7846b6a.8031c8
           outputs: 1
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("email")) { msg.email = {} }
var edhr = msg.edhr[0];
var device = msg.device[0];
var mod_string = "";

// Software Option Names
var software_list =
{
    "vitesse_enabled" : "Vitesse",
    "gateway_enabled" : "Gateway",
};

// All possible modules
var full_modlist =
{
    "uic_info" : "UIC",
    "remote_info" : "Remote",
    "anterior_info" : "Anterior",
    "ivpole_info" : "IVPole",
    "footcan_info" : "FCIB",
    "footrx_info" : "FC Receiver",
    "footctrl_info" : "Foot Control",
    "foottx_info" : "FC Transmitter",
    "power_info" : "Power Supply",
    "fluidics_info" : "Fluidics",
    "compressor_info" : "Compressor",
    "posterior_info" : "Illumination",
    "glm_info" : "Laser",
    "lamp1_info" : "Lamp 1",
    "lamp2_info" : "Lamp 2",
    "mmc_info" : "MMC",
    "gateway_info" : "Gateway",
    "sim1_iccid" : "SIM 1",
    "sim2_iccid" : "SIM 2"
};

// Stellaris PC Laser System - 7.5K
var BL15455 =
{
    "uic_info" : "UIC",
    "remote_info" : "Remote",
    "anterior_info" : "Anterior",
    "ivpole_info" : "IVPole",
    "footcan_info" : "FCIB",
    "footrx_info" : "FC Receiver",
    "footctrl_info" : "Foot Control",
    "foottx_info" : "FC Transmitter",
    "power_info" : "Power Supply",
    "fluidics_info" : "Fluidics",
    "compressor_info" : "Compressor",
    "posterior_info" : "Illumination",
    "glm_info" : "Laser",
    "lamp1_info" : "Lamp 1",
    "lamp2_info" : "Lamp 2",
    "gateway_info" : "Gateway",
    "sim1_iccid" : "SIM 1"
};

// Stellaris PC Laser System - 5.0K
var BL15335 = BL15455;

// Stellaris PC Combined System - 7.5K
var BL14455 =
{
    "uic_info" : "UIC",
    "remote_info" : "Remote",
    "anterior_info" : "Anterior",
    "ivpole_info" : "IVPole",
    "footcan_info" : "FCIB",
    "footrx_info" : "FC Receiver",
    "footctrl_info" : "Foot Control",
    "foottx_info" : "FC Transmitter",
    "power_info" : "Power Supply",
    "fluidics_info" : "Fluidics",
    "compressor_info" : "Compressor",
    "posterior_info" : "Illumination",
    "lamp1_info" : "Lamp 1",
    "lamp2_info" : "Lamp 2",
    "gateway_info" : "Gateway",
    "sim1_iccid" : "SIM 1"
};

// Stellaris PC Combined System - 5.0K
var BL14335 = BL14455;

// Anterior System - HFM
var BL11145 =
{
    "uic_info" : "UIC",
    "remote_info" : "Remote",
    "anterior_info" : "Anterior",
    "ivpole_info" : "IVPole",
    "footrx_info" : "FC Receiver",
    "footctrl_info" : "Foot Control",
    "foottx_info" : "FC Transmitter",
    "foot_ctrl_info" : "Foot Control",
    "power_info" : "Power Supply",
    "fluidics_info" : "Fluidics",
    "compressor_info" : "Compressor",
    "gateway_info" : "Gateway",
    "sim1_iccid" : "SIM 1"
};

// Anterior System - VFM
var BL11115 = BL11145;
    
// Anterior System - AFM
var BL11125 = BL11145;

var system_modlist;
if (msg.device.system_type == "BL15455")
    system_modlist = BL15455;
else if (msg.device.system_type == "BL15335")
    system_modlist = BL15335;
else if (msg.device.system_type == "BL14455")
    system_modlist = BL14455;
else if (msg.device.system_type == "BL14335")
    system_modlist = BL14335;
else if (msg.device.system_type == "BL11145")
    system_modlist = BL11145;
else if (msg.device.system_type == "BL11115")
    system_modlist = BL11115;
else if (msg.device.system_type == "BL11125")
    system_modlist = BL11125;
else
    system_modlist = BL15455;

if (edhr.software_options.gateway_enabled == "disabled")
{
    delete system_modlist.gateway_info;
    delete system_modlist.sim1_iccid;
}

for(var propertyName in edhr.modlist) 
{
    var itemPrinted = false;
    if (system_modlist.hasOwnProperty(propertyName))
    {
        mod_string += 
            full_modlist[propertyName] +
            ", " + edhr.modlist[propertyName].SN;
        if (edhr.modlist[propertyName].present != "PRESENT")
        {
            mod_string += ", " + edhr.modlist[propertyName].present;
        }
        itemPrinted = true;
    }
	// Unexpected and present
    else if (full_modlist.hasOwnProperty(propertyName) &&
			 edhr.modlist[propertyName].present == "PRESENT")
    {
        mod_string += 
            full_modlist[propertyName] +
            ", " + edhr.modlist[propertyName].SN;
        itemPrinted = true;
    }
	// SW & HW
    //expected or present with SW/HW
    if ((system_modlist.hasOwnProperty(propertyName) || 
         edhr.modlist[propertyName].present == "PRESENT") &&
        edhr.modlist[propertyName].SW_version !== "")
    {
        mod_string +=
            ", SW v" + edhr.modlist[propertyName].SW_version +
            ", HW v" + edhr.modlist[propertyName].HW_version;
        itemPrinted = true;
    }
    //expected or present without SW/HW
    else if (system_modlist.hasOwnProperty(propertyName) || 
             edhr.modlist[propertyName].present == "PRESENT")
    {
        // end the string
        // nothing to add here
        itemPrinted = true;
    }
    //expected but missing
    else if (system_modlist.hasOwnProperty(propertyName) &&
              edhr.modlist[propertyName].present !== "PRESENT")
    {
        mod_string += ", " + edhr.modlist[propertyName].present;
        itemPrinted = true;
    }
    // end the line
    if (itemPrinted === true)
    {
        mod_string += "\n<br />\n";
    }
}

var settings_string = "";

for(var propertyName in edhr.software_options) 
{
    settings_string += 
        software_list[propertyName] + 
        ": " + edhr.software_options[propertyName] + 
        "\n<br />\n";
}

msg.email.topic = "Machine Birth Certificate for " + device._id;
msg.email.to = global.get("BIRTH_EMAIL_DISTRIBUTION");
msg.email.template_type = "device_birth";
msg.email.fields = {
    "system_type": device.system_type,
    "system_sn": device._id,
    "system_birth_date":  new Date(edhr.timestamp),
    "system_config": mod_string,
    "software_options": settings_string,
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Update Device<-      ID: ed6f43d3.45a1c       Wires: 294a1eec.7dd4a2
           outputs: 1
           noerr: 0
===Function Start===
msg.inputs.edhr_body = Object.assign({}, msg.inputs.body);
msg.inputs.body =  msg.device[0];
msg.inputs.body.edhr_birth_record_id = msg.edhr[0]._id;
msg.records.object = "device";
msg.records.doc_type = "device";
msg.records.id =  msg.device[0]._id;
delete msg.cloudant.object;
delete msg.cloudant.doc_type;
delete msg.device;

return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 2c2f61c1.5814be       Wires: fea2f747.faca78
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 45b0ab31.18db54       Wires: 27759584.8e7e7a
           outputs: 1
           noerr: 0
===Function Start===
if(msg.v1){
    delete msg.records.returns;
    msg.records.delete = ["_id", "_rev", "status", "address"]
    delete msg.api.info;
    delete msg.api.stats;
    delete msg.records.return_code;
    msg.edhr[0].geo_location = msg.req.body.location;
    msg.records.object = "edhr"
    msg.records.doc_type = "edhr"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Email 2.2<-      ID: a7846b6a.8031c8       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: 294a1eec.7dd4a2       Wires: fcbe3ce0.afe1e
  
---------- Node Type: ->function<-   ->EDHR Changes<-      ID: fea2f747.faca78       Wires: face4fb3.a4bda,834ab15d.2f968
           outputs: 2
           outputLabels: ["yes last_edhr","no last_edhr"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("last_edhr") || msg.last_edhr.length < 2) {
    //no EDHR with no birth flag send error
    return [null,msg];
}
msg.last_edhr.splice(0,1); //remove the latest one of 2 retrieved
var new_modlist = msg.edhr[0].modlist;
var modlist = msg.last_edhr[0].modlist;
var new_software_options = msg.edhr[0].software_options;
var software_options = msg.last_edhr[0].software_options;
// Do not trigger a change email on these items changing
var no_trigger_modlist =
{
    "footrx_info" : "FC Receiver",
    "footctrl_info" : "Foot Control",
    "foottx_info" : "FC Transmitter",
    "mmc_info" : "MMC"
}
//compare
var mod_compare = objectsAreEqual(new_modlist, modlist);
var software_options_compare = objectsAreEqual(new_software_options, software_options);
if(mod_compare[0] !== true)
{
    mod_compare[0] = true;
    var diff = {};
    for (var prop in mod_compare[1])
    {
        if (!no_trigger_modlist.hasOwnProperty(prop))
        {
            diff[prop] = mod_compare[1][prop];
            mod_compare[0] = false;
        }
    }
    if (mod_compare[0] !== false)
    {
        mod_compare[1] = diff;
    }
}
if(!mod_compare[0] || !software_options_compare[0]) {
    //change exists log edhr and send edhr change email
    msg.diffs = {
        "module_diff" : mod_compare[1],
        "software_diff" : software_options_compare[1]
    };
    var propertyList = ["service_area","service_region","service_territory", "sales_area", "sales_region", "sales_territory"];
    var filter = {};
    var device = msg.device[0];
    Object.keys(device).forEach(function(propertyName){
        if(propertyList.indexOf(propertyName)>=0){
            if(device[propertyName] === ""){
                filter[propertyName] = "ALL"
            }
            else {
                filter[propertyName] = {"$or": [device[propertyName], "ALL"]}
            }
        }
    });
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "bookmark_type": "payload", //"payload", "parameter"
        "fields": ["email"],
        "object": "email_users",
        "selector": {
    		"$and": [
    			{"doc_type": "user"},
    			{"status": "active"},
    			{"gets_change_email": true},
    			{"business_unit": {"$or": [device.business_unit, "ALL"]}},
        		{ "$or": [
        			{"$and": [
        				{"bart_sart": "sart"},
        				{"service_area": filter.service_area},
        				{"service_region": filter.service_region},
        				{"service_territory": filter.service_territory}
        				]},
        			{"$and": [
        				{"bart_sart": "bart"},
        				{"sales_area": filter.sales_area},
        				{"sales_region": filter.sales_region},
        				{"sales_territory": filter.sales_territory}
        				]}
        			]}
        		]
    	}
    }
    return [msg,null];
} else {
    //no change log edhr do nothing
}

//function used to compare objects
function objectsAreEqual(a, b) {
  var diff = {};
  var equal = true;
  for (var prop in a) {
    if (a.hasOwnProperty(prop)) {
      if (b.hasOwnProperty(prop)) {
        if (typeof a[prop] === 'object') {
          if (!propertiesAreEqual(a[prop], b[prop])) {
            diff[prop] = b[prop];
            equal = false;
          }
        } else {
          if (a[prop] !== b[prop]) {
            diff[prop] = b[prop];
            equal = false;
          }
        }
      } else {
      	diff[prop] = "Item Missing";
        equal = false;
      }
    }
  }
  for (var propb in b) {
    if (!a.hasOwnProperty(propb)) {
      	diff[propb] = b[propb];
        equal = false;
      }
    }
  return [equal, diff];
}

//function used to compare properties (which may be objects or properties themselves)
function propertiesAreEqual(a, b) {
  var equal = true;
  for (var prop in a) {
    if (a.hasOwnProperty(prop)) {
      if (b.hasOwnProperty(prop)) {
        if (typeof a[prop] === 'object') {
          if (!propertiesAreEqual(a[prop], b[prop])) {
            equal = false;
          }
        } else {
          if (a[prop] !== b[prop]) {
            equal = false;
          }
        }
      } else {
        equal = false;
      }
    }
  }
  for (var propb in b) {
    if (!a.hasOwnProperty(propb)) {
       equal = false; 
    }
  }
  return equal;
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 27759584.8e7e7a       Wires: 9a2b83eb.4bddf
  
---------- Node Type: ->function<-   ->EDHR Sims<-      ID: fcbe3ce0.afe1e       Wires: 547b5bc9.3f8334,45b0ab31.18db54
           outputs: 2
           outputLabels: ["sims present","no sims"]
           noerr: 0
===Function Start===
msg.records.sim_present = [];
msg.sims = [];
var edhr = msg.edhr[0];
if (edhr.hasOwnProperty("modlist")){
    if (edhr.modlist.hasOwnProperty("sim1_iccid") && edhr.modlist.sim1_iccid.present === "PRESENT"){ msg.records.sim_present.push(edhr.modlist.sim1_iccid.SN) }
    if (edhr.modlist.hasOwnProperty("sim2_iccid") && edhr.modlist.sim2_iccid.present === "PRESENT"){ msg.records.sim_present.push(edhr.modlist.sim2_iccid.SN) }
}
if (msg.records.sim_present.length > 0) {
    msg.sim_provider = {
        "req_type": "status",
        "sim_iccid": msg.records.sim_present.pop(),
        "object": "sim"
    }
    return [msg,null];
}
msg.records.returns.splice(msg.records.returns.indexOf("sims"), 1)
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: face4fb3.a4bda       Wires: d41b7ed3.80e1e
  
---------- Node Type: ->function<-   ->Last EDHR Not Found<-      ID: 834ab15d.2f968       Wires: b832460e.4625b8
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "There are no EDHR records for " + msg.inputs.device_id + ". Please set birth flag if birthing.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 9a2b83eb.4bddf       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: 547b5bc9.3f8334       Wires: 64799739.52d7e8
  
---------- Node Type: ->function<-   ->Change Email<-      ID: d41b7ed3.80e1e       Wires: a7846b6a.8031c8
           outputs: 1
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("email")) { msg.email = {} }
var edhr = msg.edhr[0];
var device = msg.device[0];
msg.email.to = msg.email_users.map(a => a.email);

//set up email
var mod_string = "";
var mod_changes_string = "";
var mod_changed = false;
var mult_mod_changed = false;

// Software Option Names
var software_list =
{
    "vitesse_enabled" : "Vitesse",
    "gateway_enabled" : "Gateway",
};

// All possible modules
var full_modlist =
{
    "uic_info" : "UIC",
    "remote_info" : "Remote",
    "anterior_info" : "Anterior",
    "ivpole_info" : "IVPole",
    "footcan_info" : "FCIB",
    "footrx_info" : "FC Receiver",
    "footctrl_info" : "Foot Control",
    "foottx_info" : "FC Transmitter",
    "power_info" : "Power Supply",
    "fluidics_info" : "Fluidics",
    "compressor_info" : "Compressor",
    "posterior_info" : "Illumination",
    "glm_info" : "Laser",
    "lamp1_info" : "Lamp 1",
    "lamp2_info" : "Lamp 2",
    "mmc_info" : "MMC",
    "gateway_info" : "Gateway",
    "sim1_iccid" : "SIM 1",
    "sim2_iccid" : "SIM 2"
};

// Stellaris PC Laser System - 7.5K
var BL15455 =
{
    "uic_info" : "UIC",
    "remote_info" : "Remote",
    "anterior_info" : "Anterior",
    "ivpole_info" : "IVPole",
    "footcan_info" : "FCIB",
    "footrx_info" : "FC Receiver",
    "footctrl_info" : "Foot Control",
    "foottx_info" : "FC Transmitter",
    "power_info" : "Power Supply",
    "fluidics_info" : "Fluidics",
    "compressor_info" : "Compressor",
    "posterior_info" : "Illumination",
    "glm_info" : "Laser",
    "lamp1_info" : "Lamp 1",
    "lamp2_info" : "Lamp 2",
    "gateway_info" : "Gateway",
    "sim1_iccid" : "SIM 1"
};

// Stellaris PC Laser System - 5.0K
var BL15335 = BL15455;

// Stellaris PC Combined System - 7.5K
var BL14455 =
{
    "uic_info" : "UIC",
    "remote_info" : "Remote",
    "anterior_info" : "Anterior",
    "ivpole_info" : "IVPole",
    "footcan_info" : "FCIB",
    "footrx_info" : "FC Receiver",
    "footctrl_info" : "Foot Control",
    "foottx_info" : "FC Transmitter",
    "power_info" : "Power Supply",
    "fluidics_info" : "Fluidics",
    "compressor_info" : "Compressor",
    "posterior_info" : "Illumination",
    "lamp1_info" : "Lamp 1",
    "lamp2_info" : "Lamp 2",
    "gateway_info" : "Gateway",
    "sim1_iccid" : "SIM 1"
};

// Stellaris PC Combined System - 5.0K
var BL14335 = BL14455;

// Anterior System - HFM
var BL11145 =
{
    "uic_info" : "UIC",
    "remote_info" : "Remote",
    "anterior_info" : "Anterior",
    "ivpole_info" : "IVPole",
    "footcan_info" : "FCIB",
    "footrx_info" : "FC Receiver",
    "footctrl_info" : "Foot Control",
    "foottx_info" : "FC Transmitter",
    "power_info" : "Power Supply",
    "fluidics_info" : "Fluidics",
    "compressor_info" : "Compressor",
    "gateway_info" : "Gateway",
    "sim1_iccid" : "SIM 1"
};

// Anterior System - VFM
var BL11115 = BL11145;
    
// Anterior System - AFM
var BL11125 = BL11145;

var system_modlist;
if (device.system_type == "BL15455")
    system_modlist = BL15455;
else if (device.system_type == "BL15335")
    system_modlist = BL15335;
else if (device.system_type == "BL14455")
    system_modlist = BL14455;
else if (device.system_type == "BL14335")
    system_modlist = BL14335;
else if (device.system_type == "BL11145")
    system_modlist = BL11145;
else if (device.system_type == "BL11115")
    system_modlist = BL11115;
else if (device.system_type == "BL11125")
    system_modlist = BL11125;
else
    system_modlist = BL15455;

if (edhr.software_options.gateway_enabled == "disabled")
{
    delete system_modlist.gateway_info;
    delete system_modlist.sim1_iccid;
}

for(var propertyName in system_modlist) 
{
    if (system_modlist.hasOwnProperty(propertyName))
    {
        if (edhr.modlist.hasOwnProperty(propertyName))
        {
            mod_string += 
                full_modlist[propertyName];
            //expected and present
            if (edhr.modlist[propertyName].present == "PRESENT")
            {
                mod_string += ", " + edhr.modlist[propertyName].SN;
            }
            //expected but missing
            else
            {
                mod_string += ", " + edhr.modlist[propertyName].present;
            }
        }
        //expected but missing
        else
        {
            mod_string += full_modlist[propertyName] + ", MISSING";
        }
    }
	// Unexpected and present
    else if (full_modlist.hasOwnProperty(propertyName) &&
             edhr.modlist.hasOwnProperty(propertyName) &&
             edhr.modlist[propertyName].present == "PRESENT")
    {
        mod_string += 
            full_modlist[propertyName] +
            ", " + edhr.modlist[propertyName].SN;
    }
	// SW & HW
    //expected or present with SW/HW
    if (edhr.modlist.hasOwnProperty(propertyName) &&
        (system_modlist.hasOwnProperty(propertyName) || 
         edhr.modlist[propertyName].present == "PRESENT") &&
        edhr.modlist[propertyName].SW_version !== "")
    {
        mod_string +=
            ", SW v" + edhr.modlist[propertyName].SW_version +
            ", HW v" + edhr.modlist[propertyName].HW_version;
    }
    //expected or present without SW/HW
    else if (edhr.modlist.hasOwnProperty(propertyName) &&
             (system_modlist.hasOwnProperty(propertyName) || 
              edhr.modlist[propertyName].present == "PRESENT"))
    {
        // end the string
        // nothing to add here
    }
    // end the line
    mod_string += "\n<br />\n"; 
}
for(var propertyName in msg.diffs.module_diff) 
{
	if (full_modlist.hasOwnProperty(propertyName))
	{
		mod_changes_string += full_modlist[propertyName];
	}
	else
	{
		mod_changes_string += propertyName;
	}
	mod_changes_string += ":\n<br />\n" + "From: ";
    if (typeof msg.diffs.module_diff[propertyName] === 'object')
    {
		if (msg.diffs.module_diff[propertyName].present == "PRESENT")
		{
		    mod_changes_string +=
                msg.diffs.module_diff[propertyName].SN;
		}
		else
		{
			mod_changes_string += msg.diffs.module_diff[propertyName].present;
		}
		// Present with SW/HW
		if ((msg.diffs.module_diff[propertyName].present == "PRESENT") &&
			msg.diffs.module_diff[propertyName].SW_version !== "")
		{
			mod_changes_string +=
				", SW v" + msg.diffs.module_diff[propertyName].SW_version +
				", HW v" + msg.diffs.module_diff[propertyName].HW_version;
		}
		// Present without SW/HW
		else if (msg.diffs.module_diff[propertyName].present == "PRESENT")
		{
			// end the string
			// nothing to add here
		}
		// Missing
		else if (msg.diffs.module_diff[propertyName].present !== "PRESENT")
		{
			mod_string += ", " + msg.diffs.module_diff[propertyName].present;
		}
    }
    else
    {
    	mod_changes_string += msg.diffs.module_diff[propertyName];
    }
    if (edhr.modlist.hasOwnProperty(propertyName))
    {
        mod_changes_string += "\n<br />\n" + "To:&emsp; " +
        edhr.modlist[propertyName].SN;
		if (edhr.modlist[propertyName].present != "PRESENT")
		{
			mod_changes_string += ", " + edhr.modlist[propertyName].present;
		}
		// Present with SW/HW
		if ((edhr.modlist[propertyName].present == "PRESENT") &&
			edhr.modlist[propertyName].SW_version !== "")
		{
			mod_changes_string +=
				", SW v" + edhr.modlist[propertyName].SW_version +
				", HW v" + edhr.modlist[propertyName].HW_version;
		}
		// Present without SW/HW
		else if (edhr.modlist[propertyName].present == "PRESENT")
		{
			// end the string
			// nothing to add here
		}
		// Missing
		else if (edhr.modlist[propertyName].present !== "PRESENT")
		{
			mod_string += ", " + edhr.modlist[propertyName].present;
		}
    }
    else
    {
        mod_changes_string += "\n<br />\n" + "To:&emsp; Item Missing";
    }
    mod_changes_string += "\n<br />\n";
    if (mod_changed === true) mult_mod_changed = true;
    else mod_changed = true;
}
var mod_changed_text = "";
if (mod_changed)
{
    mod_changed_text += "The following module";
    if (mult_mod_changed) mod_changed_text += "s";
    mod_changed_text += " changed:" +
    "\n<br />\n" +
    mod_changes_string +
    "\n<br />\n";
}

var settings_string = "";
var settings_changes_string = "";
var settings_changed = false;
var mult_settings_changed = false;

for(var propertyName in edhr.software_options) 
{
    settings_string += 
        software_list[propertyName] + 
        ": " + edhr.software_options[propertyName] + 
        "\n<br />\n";
}

for(var propertyName in msg.diffs.software_diff) 
{
    settings_changes_string += software_list[propertyName] + ": From " +
        msg.diffs.software_diff[propertyName];
    if (edhr.software_options.hasOwnProperty(propertyName))
    {
        settings_changes_string += " to " +
        edhr.software_options[propertyName];
    }
    settings_changes_string += "\n<br />\n";
    if (settings_changed === true) mult_settings_changed = true;
    else settings_changed = true;
}
var settings_changed_text = "";
if (settings_changed)
{
    settings_changed_text += "The following setting";
    if (mult_settings_changed) settings_changed_text += "s";
    settings_changed_text += " changed:" +
    "\n<br />\n" +
    settings_changes_string +
    "\n<br />\n";
}
msg.email.topic = "Machine Change Certificate for " + device._id;
msg.email.template_type = "device_change";
msg.email.fields = {
    "system_type": device.system_type,
    "system_sn": device._id,
    "update_time_stamp":  new Date(edhr.timestamp),
    "mode_changes": mod_changed_text,
    "settings_changes": settings_changed_text,
    "system_config": mod_string,
    "software_options": settings_string,
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Set Custom Info<-      ID: 64799739.52d7e8       Wires: 1a89e870.280498,9cef31e9.a7408
           outputs: 2
           outputLabels: ["sim active","sim not active"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("sim") && msg.sim.length > 0  && msg.sim[0].status === "Deactivated") {
    return[null,msg]
} else {
    msg.sim_provider.body = {
        "deviceNumber": msg.sim_provider.sim_iccid,
        "customField1": msg.device[0].system_type,
        "customField2": msg.device[0]._id,
        "customField3": "",
        "customField4": "",
        "customField5": "",
        "customField6": ""
    }
    msg.sim_provider.req_type = "update_info"
    return [msg,null];
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: 1a89e870.280498       Wires: c34852a.da908b
  
---------- Node Type: ->function<-   ->Next Sim<-      ID: 9cef31e9.a7408       Wires: 45b0ab31.18db54,df0facf9.de32f
           outputs: 2
           outputLabels: ["done","loop"]
           noerr: 0
===Function Start===
if (msg.records.sim_present.length > 0) {
    msg.sim_provider.sim_iccid = msg.records.sim_present.pop()
    msg.kore = {
        "request": "queryDevice",
        "return_obj": "d",
        "object": "sim",
        "body": { "deviceNumber": msg.sim_provider.sim_iccid }
    }
    msg.sims.push(msg.sim[0]);
    return [null,msg];
}
msg.sims.push(msg.sim[0]);
msg.records.delete = ["__type", "requestStatus", "MSISDNOrMDN", "currentDataPlan", "currentSMSPlan", "futureDataPlan", "futureSMSPlan", "dailyDataThreshold", "dailySMSThreshold", "monthlyDataThreshold", "monthlySMSThreshold", "customField4", "customField5", "customField6", "lstHistoryOverLastYear", "lstFeatures", "staticIP", "voiceDispatchNumber", "mostRecentLocateId", "previousLocateId", "mostRecentLocateDate", "mostRecentLatitude", "mostRecentLongitude", "mostRecentAddress", "previousLocateDate", "previousLatitude", "previousLongitude", "previousAddress", "lstExtFeatures"];
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->function<-   ->Deactivate Sim<-      ID: c34852a.da908b       Wires: 1fb16923.bc9157
           outputs: 1
           noerr: 0
===Function Start===
if(msg.inputs.field_birth) {
    delete msg.sim_provider.req_type;
} else {
    msg.sim_provider.req_type = "deactivate";
}
return msg;
===Function   End===
  
  
---------- Node Type: ->link out<-   ->SIM Loop out<-      ID: df0facf9.de32f       Wires: <end>
           links: ["e6bae4eb.61e7f8"]
  
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: 1fb16923.bc9157       Wires: 9cef31e9.a7408

***********************************************************************************************************
Processing Item: (57)     post /logs/case       Tab: Logs     ID: 6756de94.bd551     Wires: 9256137b.9961d
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 9256137b.9961d       Wires: 936cde6b.71bbf
  
---------- Node Type: ->function<-   ->Check String<-      ID: 936cde6b.71bbf       Wires: d81d6328.63bd8,16e08fbd.a31d5
           outputs: 2
           outputLabels: ["no str","yes str"]
           noerr: 0
===Function Start===
if (typeof msg.payload === "string") { return [null, msg] }
return [msg, null]; 

===Function   End===
  
  
---------- Node Type: ->function<-   ->Log New Case<-      ID: d81d6328.63bd8       Wires: 9f83f910.a243f8
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Log Case New"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status", "case_log"],
    "doc_type": "case",
    "format": "JSON",
    "object": "case",
    "returns": ["case"],
    "models": ["case"],
    "return_code": 201
};
msg.inputs = {
    "required": ["log_id","system_sn","system_type","location", "start_time","stop_time","settings_file_name","case_log"], 
    "allowed": ["user_id","settings_file_id"]
};
if (msg.payload.hasOwnProperty("log_id")) { msg.records.log_id = msg.payload.log_id }
return msg;
===Function   End===
  
  
---------- Node Type: ->json<-   ->json Parser<-      ID: 16e08fbd.a31d5       Wires: d81d6328.63bd8
           pretty: false
           action: 
           property: payload
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 9f83f910.a243f8       Wires: dae23b4c.58a628
  
---------- Node Type: ->subflow<-   ->Google Location 2.0<-      ID: dae23b4c.58a628       Wires: 9904e65e.ae5fc8
  
---------- Node Type: ->function<-   ->Check Zip<-      ID: 9904e65e.ae5fc8       Wires: 7f117f38.e5dae,4047cc95.c465f4
           outputs: 2
           outputLabels: ["no zip","yes zip"]
           noerr: 0
===Function Start===
if( Array.isArray(msg.inputs.body.case_log)) {
    msg.payload = msg.inputs.body.case_log;
    return [null, msg];
}
if(!msg.inputs.body.case_log.includes("\r\n") && msg.inputs.body.case_log.includes("\n")) {
    msg.inputs.body.case_log = msg.inputs.body.case_log.replace(new RegExp("\n","g"), "\r\n")
}
return [msg, null]

===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: 7f117f38.e5dae       Wires: 557964cc.4ccf3c
  
---------- Node Type: ->gzip<-   ->gzip<-      ID: 4047cc95.c465f4       Wires: 1709ce1d.cc3342
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 557964cc.4ccf3c       Wires: 9ed26faa.17224
  
---------- Node Type: ->function<-   ->Unzip<-      ID: 1709ce1d.cc3342       Wires: 7f117f38.e5dae
           outputs: 1
           noerr: 0
===Function Start===
msg.inputs.body.case_log = msg.payload;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 9ed26faa.17224       Wires: <end>

***********************************************************************************************************
Processing Item: (58)     get /logs/cases/:caseID       Tab: Logs     ID: f73ba262.d5b9b     Wires: 2cc8cae9.633576
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 2cc8cae9.633576       Wires: 54d2c108.2f69
  
---------- Node Type: ->function<-   ->Log Case<-      ID: 54d2c108.2f69       Wires: cb138a3b.4a5498
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Log Case"
    });
msg.records = {
    "delete": ["_rev", "doc_type"],
    "object": "case",
    "format": "JSON",
    "returns": ["case"]
};
msg.inputs = {};
msg.filters = {};
msg.cloudant = {
    "request": "/stellaris_logs/" + msg.req.params.caseID,
    "method": "GET",
    "return_obj": ""
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: cb138a3b.4a5498       Wires: 9f6e0906.b01d68
  
---------- Node Type: ->function<-   ->Check Doc_Type & Found?<-      ID: 9f6e0906.b01d68       Wires: 8be210b3.c39db,44e94690.e0c348
           outputs: 2
           outputLabels: ["found","not found"]
           noerr: 0
===Function Start===
if(msg.hasOwnProperty(msg.records.object) && msg[msg.records.object][0].doc_type === msg.records.object ){
    return [msg,null]
    node.warn({"Doc Type Match": msg[msg.records.object][0].doc_type, msg});
} else {
    //error message
    node.warn({"Doc Type Does NOT Match": msg[msg.records.object][0].doc_type, msg});
    msg[msg.records.object] = [{}];
    return [null,msg]
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 8be210b3.c39db       Wires: df945697.3a0d88
  
---------- Node Type: ->function<-   ->Doc_Type Not Found<-      ID: 44e94690.e0c348       Wires: 66e92ceb.8fbd24
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
switch(msg.records.object) {
    case "case":
        var object_name = "Case"
        break;
    case "machine_life":
        var object_name = "Machine Life"
        break;
    case "edhr":
        var object_name = "EDHR"
        break;
}
msg.errors.push({
    "code": 400,
    "message": object_name + " record with id: " + msg.req.params[msg.records.object + "ID"] + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: df945697.3a0d88       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 66e92ceb.8fbd24       Wires: <end>

***********************************************************************************************************
Processing Item: (59)     post /logs/edhr       Tab: Logs     ID: 14cd7b3d.923455     Wires: 4772a05f.910e2
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 4772a05f.910e2       Wires: b4af5a85.dd66b8
  
---------- Node Type: ->function<-   ->Check String<-      ID: b4af5a85.dd66b8       Wires: 6e753d70.f649c4,16e45ddb.eb4f52
           outputs: 2
           outputLabels: ["no str","yes str"]
           noerr: 0
===Function Start===
if (typeof msg.payload === "string") { return [null, msg] }
return [msg, null]; 

===Function   End===
  
  
---------- Node Type: ->function<-   ->Log EDHR New<-      ID: 6e753d70.f649c4       Wires: 4e5cfcf7.b5d204
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Log New EDHR",
        "path": 1,
        "paths": 3
    });
msg.records = {
    //"delete": ["_rev", "doc_type", "status", "modlist", "software_options", "geo_location"],
    "return_deletes": {
        "edhr": ["_rev", "doc_type"],
        "sims": ["__type", "requestStatus", "MSISDNOrMDN", "currentDataPlan", "currentSMSPlan", "futureDataPlan", "futureSMSPlan", "dailyDataThreshold", "dailySMSThreshold", "monthlyDataThreshold", "monthlySMSThreshold", "customField4", "customField5", "customField6", "lstHistoryOverLastYear", "lstFeatures", "staticIP", "voiceDispatchNumber", "mostRecentLocateId", "previousLocateId", "mostRecentLocateDate", "mostRecentLatitude", "mostRecentLongitude", "mostRecentAddress", "previousLocateDate", "previousLatitude", "previousLongitude", "previousAddress", "lstExtFeatures"]
    },
    "doc_type": "edhr",
    "format": "JSON",
    "object": "edhr",
    "returns": ["edhr","sims"],
    "return_formats": {
        "edhr":"JSON",
        "sims":"array"
    },
    "models": ["edhr"],
    "return_code": 201
};
msg.inputs = {
    "required": ["system_sn", "system_type", "modlist", "software_options", "timestamp"], 
    "allowed": ["location", "birth", "field_birth"],
    "types": {
        "timestamp": "number"
    }
};
if (msg.payload.hasOwnProperty("system_sn")) {
    msg.inputs.device_id = msg.payload.system_sn;
} else {
    msg.inputs.device_id = "";
}
if (msg.payload.birth) {
    msg.inputs.birth = (msg.payload.birth === true); //to make copy
    delete msg.payload.birth;
} else {
    msg.inputs.birth = false;
}
if (msg.payload.field_birth) {
    msg.inputs.field_birth = (msg.payload.field_birth === true); //to make copy
    delete msg.payload.field_birth;
} else {
    msg.inputs.field_birth = false;
}
msg.cloudant = {
    "request": "/stellaris_documents/" + msg.inputs.device_id,
    "method": "GET",
    "object": "device",
    "return_obj": ""
};
return msg;
===Function   End===
  
  
---------- Node Type: ->json<-   ->json Parser<-      ID: 16e45ddb.eb4f52       Wires: 6e753d70.f649c4
           pretty: false
           action: 
           property: payload
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 4e5cfcf7.b5d204       Wires: d3d9378b.b98a28
  
---------- Node Type: ->subflow<-   ->Google Location 2.0<-      ID: d3d9378b.b98a28       Wires: c66fda46.2bbc38
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: c66fda46.2bbc38       Wires: ff55fb19.447ac8
  
---------- Node Type: ->function<-   ->Device Found<-      ID: ff55fb19.447ac8       Wires: 1de150bb.6b7c4f,6e7bfc80.952a44
           outputs: 2
           outputLabels: ["yes","no"]
           noerr: 0
===Function Start===
delete msg.inputs.body.birth;
if (msg.inputs.body.hasOwnProperty("location")) { delete msg.inputs.body.location }
if (!msg.hasOwnProperty("device") || msg.device.length === 0 || msg.device[0].doc_type !== "device") {
    return [null,msg]
}
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: 1de150bb.6b7c4f       Wires: 76ea0f8f.2a839
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: 6e7bfc80.952a44       Wires: b832460e.4625b8
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Device with serial number: " + msg.inputs.device_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Birth EDHR<-      ID: 76ea0f8f.2a839       Wires: 31ae35e1.daf33a,ed6f43d3.45a1c,2c2f61c1.5814be,45b0ab31.18db54
           outputs: 2
           outputLabels: ["yes birth","no birth"]
           noerr: 0
===Function Start===
if (msg.inputs.birth) {
    return [msg,null]
} else {
    msg.cloudant = {
        "request": "/stellaris_logs/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "last_edhr",
        "selector": {
            "doc_type": "edhr",
            "system_sn": msg.inputs.device_id,
        },
        "sort": [{"timestamp:number": "desc"}],
        "limit": 2
    };
    msg.api.path = 2;
    msg.records.returns.splice(msg.records.returns.indexOf("sims"), 1)
    return [null,msg]
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: b832460e.4625b8       Wires: <end>
  
---------- Node Type: ->function<-   ->Birth Email<-      ID: 31ae35e1.daf33a       Wires: a7846b6a.8031c8
           outputs: 1
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("email")) { msg.email = {} }
var edhr = msg.edhr[0];
var device = msg.device[0];
var mod_string = "";

// Software Option Names
var software_list =
{
    "vitesse_enabled" : "Vitesse",
    "gateway_enabled" : "Gateway",
};

// All possible modules
var full_modlist =
{
    "uic_info" : "UIC",
    "remote_info" : "Remote",
    "anterior_info" : "Anterior",
    "ivpole_info" : "IVPole",
    "footcan_info" : "FCIB",
    "footrx_info" : "FC Receiver",
    "footctrl_info" : "Foot Control",
    "foottx_info" : "FC Transmitter",
    "power_info" : "Power Supply",
    "fluidics_info" : "Fluidics",
    "compressor_info" : "Compressor",
    "posterior_info" : "Illumination",
    "glm_info" : "Laser",
    "lamp1_info" : "Lamp 1",
    "lamp2_info" : "Lamp 2",
    "mmc_info" : "MMC",
    "gateway_info" : "Gateway",
    "sim1_iccid" : "SIM 1",
    "sim2_iccid" : "SIM 2"
};

// Stellaris PC Laser System - 7.5K
var BL15455 =
{
    "uic_info" : "UIC",
    "remote_info" : "Remote",
    "anterior_info" : "Anterior",
    "ivpole_info" : "IVPole",
    "footcan_info" : "FCIB",
    "footrx_info" : "FC Receiver",
    "footctrl_info" : "Foot Control",
    "foottx_info" : "FC Transmitter",
    "power_info" : "Power Supply",
    "fluidics_info" : "Fluidics",
    "compressor_info" : "Compressor",
    "posterior_info" : "Illumination",
    "glm_info" : "Laser",
    "lamp1_info" : "Lamp 1",
    "lamp2_info" : "Lamp 2",
    "gateway_info" : "Gateway",
    "sim1_iccid" : "SIM 1"
};

// Stellaris PC Laser System - 5.0K
var BL15335 = BL15455;

// Stellaris PC Combined System - 7.5K
var BL14455 =
{
    "uic_info" : "UIC",
    "remote_info" : "Remote",
    "anterior_info" : "Anterior",
    "ivpole_info" : "IVPole",
    "footcan_info" : "FCIB",
    "footrx_info" : "FC Receiver",
    "footctrl_info" : "Foot Control",
    "foottx_info" : "FC Transmitter",
    "power_info" : "Power Supply",
    "fluidics_info" : "Fluidics",
    "compressor_info" : "Compressor",
    "posterior_info" : "Illumination",
    "lamp1_info" : "Lamp 1",
    "lamp2_info" : "Lamp 2",
    "gateway_info" : "Gateway",
    "sim1_iccid" : "SIM 1"
};

// Stellaris PC Combined System - 5.0K
var BL14335 = BL14455;

// Anterior System - HFM
var BL11145 =
{
    "uic_info" : "UIC",
    "remote_info" : "Remote",
    "anterior_info" : "Anterior",
    "ivpole_info" : "IVPole",
    "footrx_info" : "FC Receiver",
    "footctrl_info" : "Foot Control",
    "foottx_info" : "FC Transmitter",
    "foot_ctrl_info" : "Foot Control",
    "power_info" : "Power Supply",
    "fluidics_info" : "Fluidics",
    "compressor_info" : "Compressor",
    "gateway_info" : "Gateway",
    "sim1_iccid" : "SIM 1"
};

// Anterior System - VFM
var BL11115 = BL11145;
    
// Anterior System - AFM
var BL11125 = BL11145;

var system_modlist;
if (msg.device.system_type == "BL15455")
    system_modlist = BL15455;
else if (msg.device.system_type == "BL15335")
    system_modlist = BL15335;
else if (msg.device.system_type == "BL14455")
    system_modlist = BL14455;
else if (msg.device.system_type == "BL14335")
    system_modlist = BL14335;
else if (msg.device.system_type == "BL11145")
    system_modlist = BL11145;
else if (msg.device.system_type == "BL11115")
    system_modlist = BL11115;
else if (msg.device.system_type == "BL11125")
    system_modlist = BL11125;
else
    system_modlist = BL15455;

if (edhr.software_options.gateway_enabled == "disabled")
{
    delete system_modlist.gateway_info;
    delete system_modlist.sim1_iccid;
}

for(var propertyName in edhr.modlist) 
{
    var itemPrinted = false;
    if (system_modlist.hasOwnProperty(propertyName))
    {
        mod_string += 
            full_modlist[propertyName] +
            ", " + edhr.modlist[propertyName].SN;
        if (edhr.modlist[propertyName].present != "PRESENT")
        {
            mod_string += ", " + edhr.modlist[propertyName].present;
        }
        itemPrinted = true;
    }
	// Unexpected and present
    else if (full_modlist.hasOwnProperty(propertyName) &&
			 edhr.modlist[propertyName].present == "PRESENT")
    {
        mod_string += 
            full_modlist[propertyName] +
            ", " + edhr.modlist[propertyName].SN;
        itemPrinted = true;
    }
	// SW & HW
    //expected or present with SW/HW
    if ((system_modlist.hasOwnProperty(propertyName) || 
         edhr.modlist[propertyName].present == "PRESENT") &&
        edhr.modlist[propertyName].SW_version !== "")
    {
        mod_string +=
            ", SW v" + edhr.modlist[propertyName].SW_version +
            ", HW v" + edhr.modlist[propertyName].HW_version;
        itemPrinted = true;
    }
    //expected or present without SW/HW
    else if (system_modlist.hasOwnProperty(propertyName) || 
             edhr.modlist[propertyName].present == "PRESENT")
    {
        // end the string
        // nothing to add here
        itemPrinted = true;
    }
    //expected but missing
    else if (system_modlist.hasOwnProperty(propertyName) &&
              edhr.modlist[propertyName].present !== "PRESENT")
    {
        mod_string += ", " + edhr.modlist[propertyName].present;
        itemPrinted = true;
    }
    // end the line
    if (itemPrinted === true)
    {
        mod_string += "\n<br />\n";
    }
}

var settings_string = "";

for(var propertyName in edhr.software_options) 
{
    settings_string += 
        software_list[propertyName] + 
        ": " + edhr.software_options[propertyName] + 
        "\n<br />\n";
}

msg.email.topic = "Machine Birth Certificate for " + device._id;
msg.email.to = global.get("BIRTH_EMAIL_DISTRIBUTION");
msg.email.template_type = "device_birth";
msg.email.fields = {
    "system_type": device.system_type,
    "system_sn": device._id,
    "system_birth_date":  new Date(edhr.timestamp),
    "system_config": mod_string,
    "software_options": settings_string,
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Update Device<-      ID: ed6f43d3.45a1c       Wires: 294a1eec.7dd4a2
           outputs: 1
           noerr: 0
===Function Start===
msg.inputs.edhr_body = Object.assign({}, msg.inputs.body);
msg.inputs.body =  msg.device[0];
msg.inputs.body.edhr_birth_record_id = msg.edhr[0]._id;
msg.records.object = "device";
msg.records.doc_type = "device";
msg.records.id =  msg.device[0]._id;
delete msg.cloudant.object;
delete msg.cloudant.doc_type;
delete msg.device;

return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 2c2f61c1.5814be       Wires: fea2f747.faca78
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 45b0ab31.18db54       Wires: 27759584.8e7e7a
           outputs: 1
           noerr: 0
===Function Start===
if(msg.v1){
    delete msg.records.returns;
    msg.records.delete = ["_id", "_rev", "status", "address"]
    delete msg.api.info;
    delete msg.api.stats;
    delete msg.records.return_code;
    msg.edhr[0].geo_location = msg.req.body.location;
    msg.records.object = "edhr"
    msg.records.doc_type = "edhr"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Email 2.2<-      ID: a7846b6a.8031c8       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: 294a1eec.7dd4a2       Wires: fcbe3ce0.afe1e
  
---------- Node Type: ->function<-   ->EDHR Changes<-      ID: fea2f747.faca78       Wires: face4fb3.a4bda,834ab15d.2f968
           outputs: 2
           outputLabels: ["yes last_edhr","no last_edhr"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("last_edhr") || msg.last_edhr.length < 2) {
    //no EDHR with no birth flag send error
    return [null,msg];
}
msg.last_edhr.splice(0,1); //remove the latest one of 2 retrieved
var new_modlist = msg.edhr[0].modlist;
var modlist = msg.last_edhr[0].modlist;
var new_software_options = msg.edhr[0].software_options;
var software_options = msg.last_edhr[0].software_options;
// Do not trigger a change email on these items changing
var no_trigger_modlist =
{
    "footrx_info" : "FC Receiver",
    "footctrl_info" : "Foot Control",
    "foottx_info" : "FC Transmitter",
    "mmc_info" : "MMC"
}
//compare
var mod_compare = objectsAreEqual(new_modlist, modlist);
var software_options_compare = objectsAreEqual(new_software_options, software_options);
if(mod_compare[0] !== true)
{
    mod_compare[0] = true;
    var diff = {};
    for (var prop in mod_compare[1])
    {
        if (!no_trigger_modlist.hasOwnProperty(prop))
        {
            diff[prop] = mod_compare[1][prop];
            mod_compare[0] = false;
        }
    }
    if (mod_compare[0] !== false)
    {
        mod_compare[1] = diff;
    }
}
if(!mod_compare[0] || !software_options_compare[0]) {
    //change exists log edhr and send edhr change email
    msg.diffs = {
        "module_diff" : mod_compare[1],
        "software_diff" : software_options_compare[1]
    };
    var propertyList = ["service_area","service_region","service_territory", "sales_area", "sales_region", "sales_territory"];
    var filter = {};
    var device = msg.device[0];
    Object.keys(device).forEach(function(propertyName){
        if(propertyList.indexOf(propertyName)>=0){
            if(device[propertyName] === ""){
                filter[propertyName] = "ALL"
            }
            else {
                filter[propertyName] = {"$or": [device[propertyName], "ALL"]}
            }
        }
    });
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "bookmark_type": "payload", //"payload", "parameter"
        "fields": ["email"],
        "object": "email_users",
        "selector": {
    		"$and": [
    			{"doc_type": "user"},
    			{"status": "active"},
    			{"gets_change_email": true},
    			{"business_unit": {"$or": [device.business_unit, "ALL"]}},
        		{ "$or": [
        			{"$and": [
        				{"bart_sart": "sart"},
        				{"service_area": filter.service_area},
        				{"service_region": filter.service_region},
        				{"service_territory": filter.service_territory}
        				]},
        			{"$and": [
        				{"bart_sart": "bart"},
        				{"sales_area": filter.sales_area},
        				{"sales_region": filter.sales_region},
        				{"sales_territory": filter.sales_territory}
        				]}
        			]}
        		]
    	}
    }
    return [msg,null];
} else {
    //no change log edhr do nothing
}

//function used to compare objects
function objectsAreEqual(a, b) {
  var diff = {};
  var equal = true;
  for (var prop in a) {
    if (a.hasOwnProperty(prop)) {
      if (b.hasOwnProperty(prop)) {
        if (typeof a[prop] === 'object') {
          if (!propertiesAreEqual(a[prop], b[prop])) {
            diff[prop] = b[prop];
            equal = false;
          }
        } else {
          if (a[prop] !== b[prop]) {
            diff[prop] = b[prop];
            equal = false;
          }
        }
      } else {
      	diff[prop] = "Item Missing";
        equal = false;
      }
    }
  }
  for (var propb in b) {
    if (!a.hasOwnProperty(propb)) {
      	diff[propb] = b[propb];
        equal = false;
      }
    }
  return [equal, diff];
}

//function used to compare properties (which may be objects or properties themselves)
function propertiesAreEqual(a, b) {
  var equal = true;
  for (var prop in a) {
    if (a.hasOwnProperty(prop)) {
      if (b.hasOwnProperty(prop)) {
        if (typeof a[prop] === 'object') {
          if (!propertiesAreEqual(a[prop], b[prop])) {
            equal = false;
          }
        } else {
          if (a[prop] !== b[prop]) {
            equal = false;
          }
        }
      } else {
        equal = false;
      }
    }
  }
  for (var propb in b) {
    if (!a.hasOwnProperty(propb)) {
       equal = false; 
    }
  }
  return equal;
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 27759584.8e7e7a       Wires: 9a2b83eb.4bddf
  
---------- Node Type: ->function<-   ->EDHR Sims<-      ID: fcbe3ce0.afe1e       Wires: 547b5bc9.3f8334,45b0ab31.18db54
           outputs: 2
           outputLabels: ["sims present","no sims"]
           noerr: 0
===Function Start===
msg.records.sim_present = [];
msg.sims = [];
var edhr = msg.edhr[0];
if (edhr.hasOwnProperty("modlist")){
    if (edhr.modlist.hasOwnProperty("sim1_iccid") && edhr.modlist.sim1_iccid.present === "PRESENT"){ msg.records.sim_present.push(edhr.modlist.sim1_iccid.SN) }
    if (edhr.modlist.hasOwnProperty("sim2_iccid") && edhr.modlist.sim2_iccid.present === "PRESENT"){ msg.records.sim_present.push(edhr.modlist.sim2_iccid.SN) }
}
if (msg.records.sim_present.length > 0) {
    msg.sim_provider = {
        "req_type": "status",
        "sim_iccid": msg.records.sim_present.pop(),
        "object": "sim"
    }
    return [msg,null];
}
msg.records.returns.splice(msg.records.returns.indexOf("sims"), 1)
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: face4fb3.a4bda       Wires: d41b7ed3.80e1e
  
---------- Node Type: ->function<-   ->Last EDHR Not Found<-      ID: 834ab15d.2f968       Wires: b832460e.4625b8
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "There are no EDHR records for " + msg.inputs.device_id + ". Please set birth flag if birthing.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 9a2b83eb.4bddf       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: 547b5bc9.3f8334       Wires: 64799739.52d7e8
  
---------- Node Type: ->function<-   ->Change Email<-      ID: d41b7ed3.80e1e       Wires: a7846b6a.8031c8
           outputs: 1
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("email")) { msg.email = {} }
var edhr = msg.edhr[0];
var device = msg.device[0];
msg.email.to = msg.email_users.map(a => a.email);

//set up email
var mod_string = "";
var mod_changes_string = "";
var mod_changed = false;
var mult_mod_changed = false;

// Software Option Names
var software_list =
{
    "vitesse_enabled" : "Vitesse",
    "gateway_enabled" : "Gateway",
};

// All possible modules
var full_modlist =
{
    "uic_info" : "UIC",
    "remote_info" : "Remote",
    "anterior_info" : "Anterior",
    "ivpole_info" : "IVPole",
    "footcan_info" : "FCIB",
    "footrx_info" : "FC Receiver",
    "footctrl_info" : "Foot Control",
    "foottx_info" : "FC Transmitter",
    "power_info" : "Power Supply",
    "fluidics_info" : "Fluidics",
    "compressor_info" : "Compressor",
    "posterior_info" : "Illumination",
    "glm_info" : "Laser",
    "lamp1_info" : "Lamp 1",
    "lamp2_info" : "Lamp 2",
    "mmc_info" : "MMC",
    "gateway_info" : "Gateway",
    "sim1_iccid" : "SIM 1",
    "sim2_iccid" : "SIM 2"
};

// Stellaris PC Laser System - 7.5K
var BL15455 =
{
    "uic_info" : "UIC",
    "remote_info" : "Remote",
    "anterior_info" : "Anterior",
    "ivpole_info" : "IVPole",
    "footcan_info" : "FCIB",
    "footrx_info" : "FC Receiver",
    "footctrl_info" : "Foot Control",
    "foottx_info" : "FC Transmitter",
    "power_info" : "Power Supply",
    "fluidics_info" : "Fluidics",
    "compressor_info" : "Compressor",
    "posterior_info" : "Illumination",
    "glm_info" : "Laser",
    "lamp1_info" : "Lamp 1",
    "lamp2_info" : "Lamp 2",
    "gateway_info" : "Gateway",
    "sim1_iccid" : "SIM 1"
};

// Stellaris PC Laser System - 5.0K
var BL15335 = BL15455;

// Stellaris PC Combined System - 7.5K
var BL14455 =
{
    "uic_info" : "UIC",
    "remote_info" : "Remote",
    "anterior_info" : "Anterior",
    "ivpole_info" : "IVPole",
    "footcan_info" : "FCIB",
    "footrx_info" : "FC Receiver",
    "footctrl_info" : "Foot Control",
    "foottx_info" : "FC Transmitter",
    "power_info" : "Power Supply",
    "fluidics_info" : "Fluidics",
    "compressor_info" : "Compressor",
    "posterior_info" : "Illumination",
    "lamp1_info" : "Lamp 1",
    "lamp2_info" : "Lamp 2",
    "gateway_info" : "Gateway",
    "sim1_iccid" : "SIM 1"
};

// Stellaris PC Combined System - 5.0K
var BL14335 = BL14455;

// Anterior System - HFM
var BL11145 =
{
    "uic_info" : "UIC",
    "remote_info" : "Remote",
    "anterior_info" : "Anterior",
    "ivpole_info" : "IVPole",
    "footcan_info" : "FCIB",
    "footrx_info" : "FC Receiver",
    "footctrl_info" : "Foot Control",
    "foottx_info" : "FC Transmitter",
    "power_info" : "Power Supply",
    "fluidics_info" : "Fluidics",
    "compressor_info" : "Compressor",
    "gateway_info" : "Gateway",
    "sim1_iccid" : "SIM 1"
};

// Anterior System - VFM
var BL11115 = BL11145;
    
// Anterior System - AFM
var BL11125 = BL11145;

var system_modlist;
if (device.system_type == "BL15455")
    system_modlist = BL15455;
else if (device.system_type == "BL15335")
    system_modlist = BL15335;
else if (device.system_type == "BL14455")
    system_modlist = BL14455;
else if (device.system_type == "BL14335")
    system_modlist = BL14335;
else if (device.system_type == "BL11145")
    system_modlist = BL11145;
else if (device.system_type == "BL11115")
    system_modlist = BL11115;
else if (device.system_type == "BL11125")
    system_modlist = BL11125;
else
    system_modlist = BL15455;

if (edhr.software_options.gateway_enabled == "disabled")
{
    delete system_modlist.gateway_info;
    delete system_modlist.sim1_iccid;
}

for(var propertyName in system_modlist) 
{
    if (system_modlist.hasOwnProperty(propertyName))
    {
        if (edhr.modlist.hasOwnProperty(propertyName))
        {
            mod_string += 
                full_modlist[propertyName];
            //expected and present
            if (edhr.modlist[propertyName].present == "PRESENT")
            {
                mod_string += ", " + edhr.modlist[propertyName].SN;
            }
            //expected but missing
            else
            {
                mod_string += ", " + edhr.modlist[propertyName].present;
            }
        }
        //expected but missing
        else
        {
            mod_string += full_modlist[propertyName] + ", MISSING";
        }
    }
	// Unexpected and present
    else if (full_modlist.hasOwnProperty(propertyName) &&
             edhr.modlist.hasOwnProperty(propertyName) &&
             edhr.modlist[propertyName].present == "PRESENT")
    {
        mod_string += 
            full_modlist[propertyName] +
            ", " + edhr.modlist[propertyName].SN;
    }
	// SW & HW
    //expected or present with SW/HW
    if (edhr.modlist.hasOwnProperty(propertyName) &&
        (system_modlist.hasOwnProperty(propertyName) || 
         edhr.modlist[propertyName].present == "PRESENT") &&
        edhr.modlist[propertyName].SW_version !== "")
    {
        mod_string +=
            ", SW v" + edhr.modlist[propertyName].SW_version +
            ", HW v" + edhr.modlist[propertyName].HW_version;
    }
    //expected or present without SW/HW
    else if (edhr.modlist.hasOwnProperty(propertyName) &&
             (system_modlist.hasOwnProperty(propertyName) || 
              edhr.modlist[propertyName].present == "PRESENT"))
    {
        // end the string
        // nothing to add here
    }
    // end the line
    mod_string += "\n<br />\n"; 
}
for(var propertyName in msg.diffs.module_diff) 
{
	if (full_modlist.hasOwnProperty(propertyName))
	{
		mod_changes_string += full_modlist[propertyName];
	}
	else
	{
		mod_changes_string += propertyName;
	}
	mod_changes_string += ":\n<br />\n" + "From: ";
    if (typeof msg.diffs.module_diff[propertyName] === 'object')
    {
		if (msg.diffs.module_diff[propertyName].present == "PRESENT")
		{
		    mod_changes_string +=
                msg.diffs.module_diff[propertyName].SN;
		}
		else
		{
			mod_changes_string += msg.diffs.module_diff[propertyName].present;
		}
		// Present with SW/HW
		if ((msg.diffs.module_diff[propertyName].present == "PRESENT") &&
			msg.diffs.module_diff[propertyName].SW_version !== "")
		{
			mod_changes_string +=
				", SW v" + msg.diffs.module_diff[propertyName].SW_version +
				", HW v" + msg.diffs.module_diff[propertyName].HW_version;
		}
		// Present without SW/HW
		else if (msg.diffs.module_diff[propertyName].present == "PRESENT")
		{
			// end the string
			// nothing to add here
		}
		// Missing
		else if (msg.diffs.module_diff[propertyName].present !== "PRESENT")
		{
			mod_string += ", " + msg.diffs.module_diff[propertyName].present;
		}
    }
    else
    {
    	mod_changes_string += msg.diffs.module_diff[propertyName];
    }
    if (edhr.modlist.hasOwnProperty(propertyName))
    {
        mod_changes_string += "\n<br />\n" + "To:&emsp; " +
        edhr.modlist[propertyName].SN;
		if (edhr.modlist[propertyName].present != "PRESENT")
		{
			mod_changes_string += ", " + edhr.modlist[propertyName].present;
		}
		// Present with SW/HW
		if ((edhr.modlist[propertyName].present == "PRESENT") &&
			edhr.modlist[propertyName].SW_version !== "")
		{
			mod_changes_string +=
				", SW v" + edhr.modlist[propertyName].SW_version +
				", HW v" + edhr.modlist[propertyName].HW_version;
		}
		// Present without SW/HW
		else if (edhr.modlist[propertyName].present == "PRESENT")
		{
			// end the string
			// nothing to add here
		}
		// Missing
		else if (edhr.modlist[propertyName].present !== "PRESENT")
		{
			mod_string += ", " + edhr.modlist[propertyName].present;
		}
    }
    else
    {
        mod_changes_string += "\n<br />\n" + "To:&emsp; Item Missing";
    }
    mod_changes_string += "\n<br />\n";
    if (mod_changed === true) mult_mod_changed = true;
    else mod_changed = true;
}
var mod_changed_text = "";
if (mod_changed)
{
    mod_changed_text += "The following module";
    if (mult_mod_changed) mod_changed_text += "s";
    mod_changed_text += " changed:" +
    "\n<br />\n" +
    mod_changes_string +
    "\n<br />\n";
}

var settings_string = "";
var settings_changes_string = "";
var settings_changed = false;
var mult_settings_changed = false;

for(var propertyName in edhr.software_options) 
{
    settings_string += 
        software_list[propertyName] + 
        ": " + edhr.software_options[propertyName] + 
        "\n<br />\n";
}

for(var propertyName in msg.diffs.software_diff) 
{
    settings_changes_string += software_list[propertyName] + ": From " +
        msg.diffs.software_diff[propertyName];
    if (edhr.software_options.hasOwnProperty(propertyName))
    {
        settings_changes_string += " to " +
        edhr.software_options[propertyName];
    }
    settings_changes_string += "\n<br />\n";
    if (settings_changed === true) mult_settings_changed = true;
    else settings_changed = true;
}
var settings_changed_text = "";
if (settings_changed)
{
    settings_changed_text += "The following setting";
    if (mult_settings_changed) settings_changed_text += "s";
    settings_changed_text += " changed:" +
    "\n<br />\n" +
    settings_changes_string +
    "\n<br />\n";
}
msg.email.topic = "Machine Change Certificate for " + device._id;
msg.email.template_type = "device_change";
msg.email.fields = {
    "system_type": device.system_type,
    "system_sn": device._id,
    "update_time_stamp":  new Date(edhr.timestamp),
    "mode_changes": mod_changed_text,
    "settings_changes": settings_changed_text,
    "system_config": mod_string,
    "software_options": settings_string,
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Set Custom Info<-      ID: 64799739.52d7e8       Wires: 1a89e870.280498,9cef31e9.a7408
           outputs: 2
           outputLabels: ["sim active","sim not active"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("sim") && msg.sim.length > 0  && msg.sim[0].status === "Deactivated") {
    return[null,msg]
} else {
    msg.sim_provider.body = {
        "deviceNumber": msg.sim_provider.sim_iccid,
        "customField1": msg.device[0].system_type,
        "customField2": msg.device[0]._id,
        "customField3": "",
        "customField4": "",
        "customField5": "",
        "customField6": ""
    }
    msg.sim_provider.req_type = "update_info"
    return [msg,null];
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: 1a89e870.280498       Wires: c34852a.da908b
  
---------- Node Type: ->function<-   ->Next Sim<-      ID: 9cef31e9.a7408       Wires: 45b0ab31.18db54,df0facf9.de32f
           outputs: 2
           outputLabels: ["done","loop"]
           noerr: 0
===Function Start===
if (msg.records.sim_present.length > 0) {
    msg.sim_provider.sim_iccid = msg.records.sim_present.pop()
    msg.kore = {
        "request": "queryDevice",
        "return_obj": "d",
        "object": "sim",
        "body": { "deviceNumber": msg.sim_provider.sim_iccid }
    }
    msg.sims.push(msg.sim[0]);
    return [null,msg];
}
msg.sims.push(msg.sim[0]);
msg.records.delete = ["__type", "requestStatus", "MSISDNOrMDN", "currentDataPlan", "currentSMSPlan", "futureDataPlan", "futureSMSPlan", "dailyDataThreshold", "dailySMSThreshold", "monthlyDataThreshold", "monthlySMSThreshold", "customField4", "customField5", "customField6", "lstHistoryOverLastYear", "lstFeatures", "staticIP", "voiceDispatchNumber", "mostRecentLocateId", "previousLocateId", "mostRecentLocateDate", "mostRecentLatitude", "mostRecentLongitude", "mostRecentAddress", "previousLocateDate", "previousLatitude", "previousLongitude", "previousAddress", "lstExtFeatures"];
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->function<-   ->Deactivate Sim<-      ID: c34852a.da908b       Wires: 1fb16923.bc9157
           outputs: 1
           noerr: 0
===Function Start===
if(msg.inputs.field_birth) {
    delete msg.sim_provider.req_type;
} else {
    msg.sim_provider.req_type = "deactivate";
}
return msg;
===Function   End===
  
  
---------- Node Type: ->link out<-   ->SIM Loop out<-      ID: df0facf9.de32f       Wires: <end>
           links: ["e6bae4eb.61e7f8"]
  
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: 1fb16923.bc9157       Wires: 9cef31e9.a7408

***********************************************************************************************************
Processing Item: (60)     get /logs/edhr/:edhrID       Tab: Logs     ID: af176d8c.7bff5     Wires: 3b954974.1484e6
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 3b954974.1484e6       Wires: 281bd196.6135ce
  
---------- Node Type: ->function<-   ->Log EDHR<-      ID: 281bd196.6135ce       Wires: cb138a3b.4a5498
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Log EDHR"
    });
msg.records = {
    "delete": ["_rev", "doc_type"],
    "object": "edhr",
    "format": "JSON",
    "returns": ["edhr"]
};
msg.inputs = {};
msg.filters = {};
msg.cloudant = {
    "request": "/stellaris_logs/" + msg.req.params.edhrID,
    "method": "GET",
    "return_obj": ""
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: cb138a3b.4a5498       Wires: 9f6e0906.b01d68
  
---------- Node Type: ->function<-   ->Check Doc_Type & Found?<-      ID: 9f6e0906.b01d68       Wires: 8be210b3.c39db,44e94690.e0c348
           outputs: 2
           outputLabels: ["found","not found"]
           noerr: 0
===Function Start===
if(msg.hasOwnProperty(msg.records.object) && msg[msg.records.object][0].doc_type === msg.records.object ){
    return [msg,null]
    node.warn({"Doc Type Match": msg[msg.records.object][0].doc_type, msg});
} else {
    //error message
    node.warn({"Doc Type Does NOT Match": msg[msg.records.object][0].doc_type, msg});
    msg[msg.records.object] = [{}];
    return [null,msg]
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 8be210b3.c39db       Wires: df945697.3a0d88
  
---------- Node Type: ->function<-   ->Doc_Type Not Found<-      ID: 44e94690.e0c348       Wires: 66e92ceb.8fbd24
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
switch(msg.records.object) {
    case "case":
        var object_name = "Case"
        break;
    case "machine_life":
        var object_name = "Machine Life"
        break;
    case "edhr":
        var object_name = "EDHR"
        break;
}
msg.errors.push({
    "code": 400,
    "message": object_name + " record with id: " + msg.req.params[msg.records.object + "ID"] + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: df945697.3a0d88       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 66e92ceb.8fbd24       Wires: <end>

***********************************************************************************************************
Processing Item: (61)     post /logs/machine_life       Tab: Logs     ID: 4eaa6578.efef4c     Wires: 59c9084e.ee4738
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 59c9084e.ee4738       Wires: 6af691a.8709e7
  
---------- Node Type: ->function<-   ->Check String<-      ID: 6af691a.8709e7       Wires: df25c52.2380638,34fde09c.48d09
           outputs: 2
           outputLabels: ["no str","yes str"]
           noerr: 0
===Function Start===
if (typeof msg.payload === "string") { return [null, msg] }
return [msg, null]; 

===Function   End===
  
  
---------- Node Type: ->function<-   ->Log Machine Life New<-      ID: df25c52.2380638       Wires: 4aca654c.0f624c
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Log New Machine Life"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status", "function_accumulator"],
    "doc_type": "machine_life",
    "format": "JSON",
    "object": "machine_life",
    "returns": ["machine_life"],
    "models": ["machine_life"],
    "return_code": 201
};
msg.inputs = {
    "required": ["system_sn", "function_accumulator", "power_on_time_stamp", "prev_power_off_time_stamp"], 
    "allowed": []
};
return msg;
===Function   End===
  
  
---------- Node Type: ->json<-   ->json Parser<-      ID: 34fde09c.48d09       Wires: df25c52.2380638
           pretty: false
           action: 
           property: payload
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 4aca654c.0f624c       Wires: 7970b698.d57dc8
           outputs: 1
           noerr: 0
===Function Start===
if(msg.v1) {
    delete msg.res // disable responding
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 7970b698.d57dc8       Wires: bccb7190.ed50a
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: bccb7190.ed50a       Wires: 3db4fea3.8c93c2
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 3db4fea3.8c93c2       Wires: b1728cc7.2155a
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: b1728cc7.2155a       Wires: <end>

***********************************************************************************************************
Processing Item: (62)     get /logs/machine_life/:machine_lifeID       Tab: Logs     ID: 5f1f858.6f20d7c     Wires: 26694e23.686142
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 26694e23.686142       Wires: 728e2f44.71ddf
  
---------- Node Type: ->function<-   ->Log Machine Life<-      ID: 728e2f44.71ddf       Wires: cb138a3b.4a5498
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Log Machine Life"
    });
msg.records = {
    "delete": ["_rev", "doc_type"],
    "object": "machine_life",
    "format": "JSON",
    "returns": ["machine_life"]
};
msg.inputs = {};
msg.filters = {};
msg.cloudant = {
    "request": "/stellaris_logs/" + msg.req.params.machine_lifeID,
    "method": "GET",
    "return_obj": ""
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: cb138a3b.4a5498       Wires: 9f6e0906.b01d68
  
---------- Node Type: ->function<-   ->Check Doc_Type & Found?<-      ID: 9f6e0906.b01d68       Wires: 8be210b3.c39db,44e94690.e0c348
           outputs: 2
           outputLabels: ["found","not found"]
           noerr: 0
===Function Start===
if(msg.hasOwnProperty(msg.records.object) && msg[msg.records.object][0].doc_type === msg.records.object ){
    return [msg,null]
    node.warn({"Doc Type Match": msg[msg.records.object][0].doc_type, msg});
} else {
    //error message
    node.warn({"Doc Type Does NOT Match": msg[msg.records.object][0].doc_type, msg});
    msg[msg.records.object] = [{}];
    return [null,msg]
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 8be210b3.c39db       Wires: df945697.3a0d88
  
---------- Node Type: ->function<-   ->Doc_Type Not Found<-      ID: 44e94690.e0c348       Wires: 66e92ceb.8fbd24
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
switch(msg.records.object) {
    case "case":
        var object_name = "Case"
        break;
    case "machine_life":
        var object_name = "Machine Life"
        break;
    case "edhr":
        var object_name = "EDHR"
        break;
}
msg.errors.push({
    "code": 400,
    "message": object_name + " record with id: " + msg.req.params[msg.records.object + "ID"] + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: df945697.3a0d88       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 66e92ceb.8fbd24       Wires: <end>

***********************************************************************************************************
Processing Item: (63)     post /pairing/pair/device_to_user       Tab: Pairing     ID: 686439bb.f798e     Wires: 543f09e7.6d93a8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 543f09e7.6d93a8       Wires: 995dac1d.9d569
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 995dac1d.9d569       Wires: 571417f.b82ade8
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    msg.v1 = true;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Pair Device and User<-      ID: 571417f.b82ade8       Wires: a83e2e96.a3ec7
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Pair Device and User",
        "paths": 3
    });
msg.records = {
    "delete": ["_rev", "doc_type","status"],
    "doc_type": "machine_link",
    "object": "machine_link",
    "format": "JSON",
    "returns": ["machine_link"],
    "models": ["machine_link"]
};
msg.inputs = {
    "required": ["device_id"],
    "device_id": msg.payload.device_id
};
if (msg.payload.hasOwnProperty("email")) {
    msg.inputs.required.push("email");
    msg.inputs.email = msg.payload.email.toLowerCase();
    var user_filter = {"email": msg.inputs.email};
} else {
    msg.inputs.required.push("user_id");
    msg.inputs.user_id = msg.payload.user_id;
    var user_filter = {"_id": msg.inputs.user_id};
}
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_type",
    "selector": {
        "$or": [ { "$and": [ {"doc_type": "user"},{"status": "active"},user_filter ] },
                 { "$and": [ {"doc_type": "device"},{"status": "active"},{"_id": msg.inputs.device_id} ] }
               ]
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: a83e2e96.a3ec7       Wires: 2d2eb37c.8ee20c
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("v1") && msg.v1){
    delete msg.records.returns;
    msg.records.delete = [];
    delete msg.api.info;
    delete msg.api.starts;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 2d2eb37c.8ee20c       Wires: d8af0157.14296
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: d8af0157.14296       Wires: 3edae6c0.5d3eda
  
---------- Node Type: ->function<-   ->User & Device Exists<-      ID: 3edae6c0.5d3eda       Wires: 841cff74.703b5,b552f73a.ccac78,27042ffd.d801
           outputs: 3
           outputLabels: ["yes","no device","no user"]
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("user") || msg.user.length === 0 || msg.user[0].doc_type !== "user"){
    return [null,null,msg]
}
msg.inputs.user_id = msg.user[0]._id
if(!msg.hasOwnProperty("device") || msg.device.length === 0 || msg.device[0].doc_type !== "device"){
    return [null,msg,null]
}
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "machine_link",
    "selector": {
        "doc_type": "machine_link",
        "device": msg.inputs.device_id,
        "user": msg.inputs.user_id
    }
};
return [msg,null,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 841cff74.703b5       Wires: 1ab3d2d9.dd1e8d
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: b552f73a.ccac78       Wires: e9fa2dce.721d5
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Device: " + msg.inputs.device_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: 27042ffd.d801       Wires: e9fa2dce.721d5
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User: " + (msg.inputs.user_id || msg.inputs.email) + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Link Exists<-      ID: 1ab3d2d9.dd1e8d       Wires: 263ba63e.c9fe1a,c8aa9dc8.12735,706fb4bb.6b0c0c
           outputs: 3
           outputLabels: ["no","yes active","yes inactive"]
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("machine_link") || msg.machine_link.length === 0){
    msg.inputs.body = {
        "device": msg.inputs.device_id,
        "user": msg.inputs.user_id
    }
    msg.records.id = "";
    return [msg,null,null];
}
if (msg.machine_link[0].status === "inactive") {
    msg.inputs.machine_link = msg.machine_link[0]._id;
    msg.records.id = msg.machine_link[0]._id;
    delete msg.machine_link;
    msg.inputs.body = { "status": "active" }
    node.warn({"Update Link": msg})
    msg.api.path = 3
    return [null,null,msg];
} else {
    msg.api.path = 2
    return [null,msg,null];
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: e9fa2dce.721d5       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: 263ba63e.c9fe1a       Wires: c8aa9dc8.12735
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: c8aa9dc8.12735       Wires: e32b93e.7aadc7
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: 706fb4bb.6b0c0c       Wires: c8aa9dc8.12735
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: e32b93e.7aadc7       Wires: <end>

***********************************************************************************************************
Processing Item: (64)     post /pairing/pair/device_user       Tab: Pairing     ID: 6748df65.acb22     Wires: 543f09e7.6d93a8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 543f09e7.6d93a8       Wires: 995dac1d.9d569
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 995dac1d.9d569       Wires: 571417f.b82ade8
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    msg.v1 = true;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Pair Device and User<-      ID: 571417f.b82ade8       Wires: a83e2e96.a3ec7
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Pair Device and User",
        "paths": 3
    });
msg.records = {
    "delete": ["_rev", "doc_type","status"],
    "doc_type": "machine_link",
    "object": "machine_link",
    "format": "JSON",
    "returns": ["machine_link"],
    "models": ["machine_link"]
};
msg.inputs = {
    "required": ["device_id"],
    "device_id": msg.payload.device_id
};
if (msg.payload.hasOwnProperty("email")) {
    msg.inputs.required.push("email");
    msg.inputs.email = msg.payload.email.toLowerCase();
    var user_filter = {"email": msg.inputs.email};
} else {
    msg.inputs.required.push("user_id");
    msg.inputs.user_id = msg.payload.user_id;
    var user_filter = {"_id": msg.inputs.user_id};
}
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_type",
    "selector": {
        "$or": [ { "$and": [ {"doc_type": "user"},{"status": "active"},user_filter ] },
                 { "$and": [ {"doc_type": "device"},{"status": "active"},{"_id": msg.inputs.device_id} ] }
               ]
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: a83e2e96.a3ec7       Wires: 2d2eb37c.8ee20c
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("v1") && msg.v1){
    delete msg.records.returns;
    msg.records.delete = [];
    delete msg.api.info;
    delete msg.api.starts;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 2d2eb37c.8ee20c       Wires: d8af0157.14296
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: d8af0157.14296       Wires: 3edae6c0.5d3eda
  
---------- Node Type: ->function<-   ->User & Device Exists<-      ID: 3edae6c0.5d3eda       Wires: 841cff74.703b5,b552f73a.ccac78,27042ffd.d801
           outputs: 3
           outputLabels: ["yes","no device","no user"]
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("user") || msg.user.length === 0 || msg.user[0].doc_type !== "user"){
    return [null,null,msg]
}
msg.inputs.user_id = msg.user[0]._id
if(!msg.hasOwnProperty("device") || msg.device.length === 0 || msg.device[0].doc_type !== "device"){
    return [null,msg,null]
}
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "machine_link",
    "selector": {
        "doc_type": "machine_link",
        "device": msg.inputs.device_id,
        "user": msg.inputs.user_id
    }
};
return [msg,null,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 841cff74.703b5       Wires: 1ab3d2d9.dd1e8d
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: b552f73a.ccac78       Wires: e9fa2dce.721d5
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Device: " + msg.inputs.device_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: 27042ffd.d801       Wires: e9fa2dce.721d5
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User: " + (msg.inputs.user_id || msg.inputs.email) + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Link Exists<-      ID: 1ab3d2d9.dd1e8d       Wires: 263ba63e.c9fe1a,c8aa9dc8.12735,706fb4bb.6b0c0c
           outputs: 3
           outputLabels: ["no","yes active","yes inactive"]
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("machine_link") || msg.machine_link.length === 0){
    msg.inputs.body = {
        "device": msg.inputs.device_id,
        "user": msg.inputs.user_id
    }
    msg.records.id = "";
    return [msg,null,null];
}
if (msg.machine_link[0].status === "inactive") {
    msg.inputs.machine_link = msg.machine_link[0]._id;
    msg.records.id = msg.machine_link[0]._id;
    delete msg.machine_link;
    msg.inputs.body = { "status": "active" }
    node.warn({"Update Link": msg})
    msg.api.path = 3
    return [null,null,msg];
} else {
    msg.api.path = 2
    return [null,msg,null];
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: e9fa2dce.721d5       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: 263ba63e.c9fe1a       Wires: c8aa9dc8.12735
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: c8aa9dc8.12735       Wires: e32b93e.7aadc7
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: 706fb4bb.6b0c0c       Wires: c8aa9dc8.12735
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: e32b93e.7aadc7       Wires: <end>

***********************************************************************************************************
Processing Item: (65)     post /pairing/pair/user_to_device       Tab: Pairing     ID: 81677d22.f17a8     Wires: 543f09e7.6d93a8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 543f09e7.6d93a8       Wires: 995dac1d.9d569
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 995dac1d.9d569       Wires: 571417f.b82ade8
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    msg.v1 = true;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Pair Device and User<-      ID: 571417f.b82ade8       Wires: a83e2e96.a3ec7
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Pair Device and User",
        "paths": 3
    });
msg.records = {
    "delete": ["_rev", "doc_type","status"],
    "doc_type": "machine_link",
    "object": "machine_link",
    "format": "JSON",
    "returns": ["machine_link"],
    "models": ["machine_link"]
};
msg.inputs = {
    "required": ["device_id"],
    "device_id": msg.payload.device_id
};
if (msg.payload.hasOwnProperty("email")) {
    msg.inputs.required.push("email");
    msg.inputs.email = msg.payload.email.toLowerCase();
    var user_filter = {"email": msg.inputs.email};
} else {
    msg.inputs.required.push("user_id");
    msg.inputs.user_id = msg.payload.user_id;
    var user_filter = {"_id": msg.inputs.user_id};
}
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_type",
    "selector": {
        "$or": [ { "$and": [ {"doc_type": "user"},{"status": "active"},user_filter ] },
                 { "$and": [ {"doc_type": "device"},{"status": "active"},{"_id": msg.inputs.device_id} ] }
               ]
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: a83e2e96.a3ec7       Wires: 2d2eb37c.8ee20c
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("v1") && msg.v1){
    delete msg.records.returns;
    msg.records.delete = [];
    delete msg.api.info;
    delete msg.api.starts;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 2d2eb37c.8ee20c       Wires: d8af0157.14296
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: d8af0157.14296       Wires: 3edae6c0.5d3eda
  
---------- Node Type: ->function<-   ->User & Device Exists<-      ID: 3edae6c0.5d3eda       Wires: 841cff74.703b5,b552f73a.ccac78,27042ffd.d801
           outputs: 3
           outputLabels: ["yes","no device","no user"]
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("user") || msg.user.length === 0 || msg.user[0].doc_type !== "user"){
    return [null,null,msg]
}
msg.inputs.user_id = msg.user[0]._id
if(!msg.hasOwnProperty("device") || msg.device.length === 0 || msg.device[0].doc_type !== "device"){
    return [null,msg,null]
}
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "machine_link",
    "selector": {
        "doc_type": "machine_link",
        "device": msg.inputs.device_id,
        "user": msg.inputs.user_id
    }
};
return [msg,null,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 841cff74.703b5       Wires: 1ab3d2d9.dd1e8d
  
---------- Node Type: ->function<-   ->Device Not Found<-      ID: b552f73a.ccac78       Wires: e9fa2dce.721d5
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Device: " + msg.inputs.device_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: 27042ffd.d801       Wires: e9fa2dce.721d5
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User: " + (msg.inputs.user_id || msg.inputs.email) + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Link Exists<-      ID: 1ab3d2d9.dd1e8d       Wires: 263ba63e.c9fe1a,c8aa9dc8.12735,706fb4bb.6b0c0c
           outputs: 3
           outputLabels: ["no","yes active","yes inactive"]
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("machine_link") || msg.machine_link.length === 0){
    msg.inputs.body = {
        "device": msg.inputs.device_id,
        "user": msg.inputs.user_id
    }
    msg.records.id = "";
    return [msg,null,null];
}
if (msg.machine_link[0].status === "inactive") {
    msg.inputs.machine_link = msg.machine_link[0]._id;
    msg.records.id = msg.machine_link[0]._id;
    delete msg.machine_link;
    msg.inputs.body = { "status": "active" }
    node.warn({"Update Link": msg})
    msg.api.path = 3
    return [null,null,msg];
} else {
    msg.api.path = 2
    return [null,msg,null];
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: e9fa2dce.721d5       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: 263ba63e.c9fe1a       Wires: c8aa9dc8.12735
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: c8aa9dc8.12735       Wires: e32b93e.7aadc7
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: 706fb4bb.6b0c0c       Wires: c8aa9dc8.12735
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: e32b93e.7aadc7       Wires: <end>

***********************************************************************************************************
Processing Item: (66)     put /pairing/unpair/:method/id/:id_one/id/:id_two       Tab: Pairing     ID: 48f76f93.99f7c8     Wires: e56e273b.ffa378
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: e56e273b.ffa378       Wires: dbee4981.7c9998
           outputs: 1
           noerr: 0
===Function Start===
if(msg.req.params.id_one && msg.req.params.id_two)
{
    if (msg.req.params.method == "device_to_user")
    {
        msg.payload = {
            "device_id": msg.req.params.id_one,
            "user_id": msg.req.params.id_two
        }
    }
    else if (msg.req.params.method == "user_to_device")
    {
        msg.payload = {
            "device_id": msg.req.params.id_two,
            "user_id": msg.req.params.id_one
        }
    }
}
msg.v1 = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: dbee4981.7c9998       Wires: d88d0d95.c768a
  
---------- Node Type: ->function<-   ->Unpair Device and User<-      ID: d88d0d95.c768a       Wires: 7188c7c5.f89e28
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Unpair Device and User"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "machine_link",
    "object": "machine_link",
    "format": "JSON",
    "returns": ["machine_link"],
};
msg.inputs = {
    "required": ["device_id", "user_id"],
    "device_id": msg.payload.device_id,
    "user_id": msg.payload.user_id
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "machine_link",
    "selector": {
        "doc_type": "machine_link",
        "device": msg.inputs.device_id,
        "user": msg.inputs.user_id
    }
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 7188c7c5.f89e28       Wires: fca2ce1e.60d5c
           outputs: 1
           noerr: 0
===Function Start===
if(msg.v1){
    delete msg.records.returns;
    msg.records.delete = [];
    delete msg.api.info;
    delete msg.api.starts;
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "machine_link",
        "selector": {
            "doc_type": "machine_link",
            "device": msg.inputs.device_id,
            "user": msg.inputs.user_id
        }
    };
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: fca2ce1e.60d5c       Wires: 2dda1550.4ac74a
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 2dda1550.4ac74a       Wires: 4a567afe.2bfee4
  
---------- Node Type: ->function<-   ->Link Exists<-      ID: 4a567afe.2bfee4       Wires: 4755c42e.196ccc,b4dbd532.031d08,8e78e591.f1a9e8
           outputs: 3
           outputLabels: ["yes","no",""]
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("machine_link") || msg.machine_link.length === 0){
    return [null,msg,null]
}
if(msg.hasOwnProperty("machine_link") && msg.machine_link[0].status === "inactive"){
    return [null,null,msg]
}
msg.inputs.machine_link = msg.machine_link[0]._id;
msg.records.id = msg.machine_link[0]._id;
delete msg.machine_link;
msg.inputs.body = { "status": "inactive" };
return [msg,null,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: 4755c42e.196ccc       Wires: 1e092205.03841e
  
---------- Node Type: ->function<-   ->Link Not Found<-      ID: b4dbd532.031d08       Wires: 29b16398.3bde7c
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active Link between Device: " + msg.inputs.device_id + " and User: " + msg.inputs.user_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Link Already Inactive<-      ID: 8e78e591.f1a9e8       Wires: 1e092205.03841e
           outputs: 1
           noerr: 0
===Function Start===
if(msg.records.returns) {
    msg.records.returns.push("message");
}
else {
    msg.records.returns = ["message"];
}
msg.message = "Link between Device: " + msg.inputs.body.device_id + " and User: " + msg.inputs.body.user_id + " was already delinked."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 1e092205.03841e       Wires: 4d87f9a0.988378
  
---------- Node Type: ->function<-   ->v1 Errors<-      ID: 29b16398.3bde7c       Wires: bcabe882.080058
           outputs: 1
           noerr: 0
===Function Start===
if(msg.v1){
    msg.errors[0].message = msg.errors[0].message.replace(" was not found"," does not exist");
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 4d87f9a0.988378       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: bcabe882.080058       Wires: <end>

***********************************************************************************************************
Processing Item: (67)     post /pairing/unpair/device_user       Tab: Pairing     ID: 39b570e5.7807d     Wires: dbee4981.7c9998
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: dbee4981.7c9998       Wires: d88d0d95.c768a
  
---------- Node Type: ->function<-   ->Unpair Device and User<-      ID: d88d0d95.c768a       Wires: 7188c7c5.f89e28
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Unpair Device and User"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "machine_link",
    "object": "machine_link",
    "format": "JSON",
    "returns": ["machine_link"],
};
msg.inputs = {
    "required": ["device_id", "user_id"],
    "device_id": msg.payload.device_id,
    "user_id": msg.payload.user_id
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "machine_link",
    "selector": {
        "doc_type": "machine_link",
        "device": msg.inputs.device_id,
        "user": msg.inputs.user_id
    }
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 7188c7c5.f89e28       Wires: fca2ce1e.60d5c
           outputs: 1
           noerr: 0
===Function Start===
if(msg.v1){
    delete msg.records.returns;
    msg.records.delete = [];
    delete msg.api.info;
    delete msg.api.starts;
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "machine_link",
        "selector": {
            "doc_type": "machine_link",
            "device": msg.inputs.device_id,
            "user": msg.inputs.user_id
        }
    };
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: fca2ce1e.60d5c       Wires: 2dda1550.4ac74a
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 2dda1550.4ac74a       Wires: 4a567afe.2bfee4
  
---------- Node Type: ->function<-   ->Link Exists<-      ID: 4a567afe.2bfee4       Wires: 4755c42e.196ccc,b4dbd532.031d08,8e78e591.f1a9e8
           outputs: 3
           outputLabels: ["yes","no",""]
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("machine_link") || msg.machine_link.length === 0){
    return [null,msg,null]
}
if(msg.hasOwnProperty("machine_link") && msg.machine_link[0].status === "inactive"){
    return [null,null,msg]
}
msg.inputs.machine_link = msg.machine_link[0]._id;
msg.records.id = msg.machine_link[0]._id;
delete msg.machine_link;
msg.inputs.body = { "status": "inactive" };
return [msg,null,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: 4755c42e.196ccc       Wires: 1e092205.03841e
  
---------- Node Type: ->function<-   ->Link Not Found<-      ID: b4dbd532.031d08       Wires: 29b16398.3bde7c
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active Link between Device: " + msg.inputs.device_id + " and User: " + msg.inputs.user_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Link Already Inactive<-      ID: 8e78e591.f1a9e8       Wires: 1e092205.03841e
           outputs: 1
           noerr: 0
===Function Start===
if(msg.records.returns) {
    msg.records.returns.push("message");
}
else {
    msg.records.returns = ["message"];
}
msg.message = "Link between Device: " + msg.inputs.body.device_id + " and User: " + msg.inputs.body.user_id + " was already delinked."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 1e092205.03841e       Wires: 4d87f9a0.988378
  
---------- Node Type: ->function<-   ->v1 Errors<-      ID: 29b16398.3bde7c       Wires: bcabe882.080058
           outputs: 1
           noerr: 0
===Function Start===
if(msg.v1){
    msg.errors[0].message = msg.errors[0].message.replace(" was not found"," does not exist");
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 4d87f9a0.988378       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: bcabe882.080058       Wires: <end>

***********************************************************************************************************
Processing Item: (68)     post /sims/plan_codes       Tab: Sim     ID: 620136a4.0c9928     Wires: b5c4a534.d50fa8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: b5c4a534.d50fa8       Wires: 27ab0656.d57e7a
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 27ab0656.d57e7a       Wires: 95572347.dd40a
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Plan Codes<-      ID: 95572347.dd40a       Wires: a0a5577b.8dd158
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Plan Codes"
    });
msg.records = {
    "object": "plan_codes",
    "returns": ["plan_codes"]
};
msg.sim_provider = {
    "req_type": "plan_codes"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (69)     post /sims/sim/activate_to_state       Tab: Sim     ID: d2ae0e69.be647     Wires: 6f3005b7.1b698c
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 6f3005b7.1b698c       Wires: 72d4978b.b46228
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 72d4978b.b46228       Wires: d87752cb.f9983
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    if(msg.payload.hasOwnProperty("toState")){
        msg.payload.status = msg.payload.toState;
        msg.req.body.status = msg.req.body.toState;
        delete msg.payload.toState;
        delete msg.req.body.toState;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Activate to State<-      ID: d87752cb.f9983       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Activate To State"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["message", "sim"]
};
msg.inputs = {
    "required": ["sim_iccid", "EAPCode", "status"],
    "values": {
        "status": ["Test", "Active"]
    }
};
msg.sim_provider = {
    "req_type": "activate_to_state",
    "body": msg.payload
};
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "SIM Card " + msg.payload.sim_iccid + " was successfully activated to " + msg.payload.status + "."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (70)     post /sims/sim/deactivate       Tab: Sim     ID: efc596bb.b6d6f8     Wires: c393c069.a7c09
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: c393c069.a7c09       Wires: 3a473fea.3e376
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 3a473fea.3e376       Wires: d68a7ab.71f5488
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    if(msg.payload.hasOwnProperty("flagScrap")){
        delete msg.payload.flagScrap;
        delete msg.req.body.flagScrap;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Deactivate<-      ID: d68a7ab.71f5488       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Deactivate"
    });
msg.records = {
    "object": "sim",
    "returns": ["message","sim"]
};
msg.inputs = {
    "required": ["sim_iccid"]
};
msg.sim_provider = {
    "req_type": "deactivate",
    "body": msg.payload
};
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "SIM Card " +  msg.payload.sim_iccid + " was successfully deactivated."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (71)     post /sims/sim/modify_device_custom_info       Tab: Sim     ID: e0ae0bf7.2d9ae8     Wires: ad4d16d7.a27ac8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: ad4d16d7.a27ac8       Wires: 7aef97a2.b2b238
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 7aef97a2.b2b238       Wires: 231352bf.6eeb3e
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Update Custom Info<-      ID: 231352bf.6eeb3e       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Update Custom Info"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["message", "sim"]
};
msg.inputs = {
    "required": ["sim_iccid"],
    "allowed": ["customField1", "customField2", "customField3", "customField4", "customField5", "customField6"]
};
msg.sim_provider = {
    "req_type": "update_info",
    "body": msg.payload
};
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "Sim Card " + msg.payload.sim_iccid + " custom information was successfully updated."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (72)     post /sims/sim/modify_plan_codes       Tab: Sim     ID: 4ee95eec.50386     Wires: 3ff0e8c.7279e18
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 3ff0e8c.7279e18       Wires: 85a02a72.2d6718
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 85a02a72.2d6718       Wires: be86f9ca.2f2238
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    if(msg.payload.hasOwnProperty("planCode")){
        msg.payload.plan_code = msg.payload.planCode;
        msg.req.body.plan_code = msg.req.body.planCode;
        delete msg.payload.planCode;
        delete msg.req.body.planCode;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Update Plan Code<-      ID: be86f9ca.2f2238       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Modify Plan Code"
    });
msg.records = {
    "object": "sim",
    "returns": ["message","sim"]
};
msg.inputs = {
    "required": ["sim_iccid", "plan_code"]
};
msg.sim_provider = {
    "req_type": "update_plan_code",
    "body": msg.payload
}
if (msg.payload.plan_code && typeof msg.payload.plan_code !== "string") {
    if (msg.payload.plan_code.code) {
        msg.sim_provider.body.plan_code = msg.payload.plan_code.code;
    } else {
        delete msg.payload.plan_code;
        delete msg.sim_provider.plan_code
    }
}
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "SIM Card " +  msg.sim_provider.sim_iccid + " was successfully updated to use plan code " + msg.sim_provider.body.plan_code + "."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (73)     post /sims/sim/reactivate       Tab: Sim     ID: aee4d49f.d7f7c8     Wires: cc6048c0.ed4cf8
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: cc6048c0.ed4cf8       Wires: 2cd1ac5e.1793e4
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 2cd1ac5e.1793e4       Wires: c682ec6e.e63d3
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Reactivate<-      ID: c682ec6e.e63d3       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Reactivate"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["message", "sim"]
};
msg.inputs = {
    "required": ["sim_iccid"]
};
msg.sim_provider = {
    "req_type": "reactivate",
    "body": msg.payload
}
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
msg.message = "SIM Card " + msg.payload.sim_iccid + " was successfully reactivated."
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (74)     post /sims/sim/status       Tab: Sim     ID: 3b1ea62d.032d9a     Wires: dc53ae32.cc78b
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: dc53ae32.cc78b       Wires: 95e1bc30.a8423
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 95e1bc30.a8423       Wires: 24b7e3ce.e41b4c
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    if(msg.payload.hasOwnProperty("deviceNumber")){
        msg.payload.sim_iccid = msg.payload.deviceNumber;
        msg.req.body.sim_iccid = msg.req.body.deviceNumber;
        delete msg.payload.deviceNumber;
        delete msg.req.body.deviceNumber;
    }
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sim Status<-      ID: 24b7e3ce.e41b4c       Wires: 6d0d2e62.f103f
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Sim Status"
    });
msg.records = {
    "object": "sim",
    "format": "JSON",
    "returns": ["sim"]
};
msg.inputs = {
    "allowed": [],
    "required": ["sim_iccid"]
};
msg.sim_provider = {
    "req_type": "status",
    "body": msg.payload
};
if (msg.payload.sim_iccid) { msg.sim_provider.sim_iccid = msg.payload.sim_iccid }
if(msg.payload.details && msg.payload.details) { msg.sim_provider.details = true }
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 6d0d2e62.f103f       Wires: 22b7a3b5.846cbc
           outputs: 1
           noerr: 0
===Function Start===
if(msg.v1){
    delete msg.records.returns;
    delete msg.api.info;
    delete msg.api.stats;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 22b7a3b5.846cbc       Wires: a0a5577b.8dd158
  
---------- Node Type: ->subflow<-   ->Sim Http 1.1<-      ID: a0a5577b.8dd158       Wires: 761ba67.0445c58
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 761ba67.0445c58       Wires: <end>

***********************************************************************************************************
Processing Item: (75)     get /system/info       Tab: System     ID: c96ffa76.06f018     Wires: 114a461b.bf575a
  
---------- Node Type: ->function<-   ->Enc<-      ID: 114a461b.bf575a       Wires: c4369d37.22b4c
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: c4369d37.22b4c       Wires: 5fd442b1.24a51c
  
---------- Node Type: ->function<-   ->System Info<-      ID: 5fd442b1.24a51c       Wires: bdf6a6b3.6e3418
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "System Info"
    });
msg.records = {
    "format": "JSON",
    "returns": ["info","nodered", "variables", "CF", "npm", "VCAP_APPLICATION", "VCAP_SERVICES", "other"]
};
var ENV = context.global.process.env;
var key_list = [];
Object.keys(ENV).forEach(function(key) {
    key_list.push([key, ENV[key]])
});
key_list.sort();
msg.npm = [{
    "config": {},
    "package": {
        "dependencies": {}
    }
}];
msg.CF = [{
    "INSTANCE": {}
}];
var env_var = ["API_Connect_url", "Birth_Email_Distribution", "Google_Geocoding_url", "Google_Geolocate_url", "IOT_Devices_Authorization", "IOT_Devices_Path", "KORE_url", "NODE_RED_FLOW_NAME", "NODE_RED_PASSWORD", "NODE_RED_STORAGE_NAME", "NODE_RED_USERNAME"];
msg.variables = [{}];
let list = Object.assign([], key_list);
list.forEach(function(key_value) {
    if (key_value[0].startsWith("npm_")) {
        key = key_value[0].replace(/^npm_/, '');
        if (key_value[0].startsWith("npm_config_")) {
            key = key_value[0].replace(/^npm_config_/, '');
            msg.npm[0].config[key] = key_value[1];
        } else
        if (key_value[0].startsWith("npm_package_")) {
            key = key_value[0].replace(/^npm_package_/, '');
            if (key_value[0].startsWith("npm_package_dependencies_")) {
                key = key_value[0].replace(/^npm_package_dependencies_/, '');
                msg.npm[0].package.dependencies[key] = key_value[1];
            } else {
                msg.npm[0].package[key] = key_value[1];
            }
        } else {
            msg.npm[0][key] = key_value[1];
        }
        key_list.splice(key_list.indexOf(key_value),1);
    } else
    if (key_value[0].startsWith("CF_")) {
        key = key_value[0].replace(/^CF_/, '');
        if (key_value[0].startsWith("CF_INSTANCE_")) {
            key = key_value[0].replace(/^CF_INSTANCE_/, '');
            msg.CF[0].INSTANCE[key] = key_value[1];
        } else {
            msg.CF[0][key] = key_value[1];
        }
        key_list.splice(key_list.indexOf(key_value),1);
    } else
    if (key_value[0].startsWith("VCAP_SERVICES")) {
        msg.VCAP_SERVICES = [JSON.parse(ENV.VCAP_SERVICES)];
        key_list.splice(key_list.indexOf(key_value),1);
    } else
    if (key_value[0].startsWith("VCAP_APPLICATION")) {
        msg.VCAP_APPLICATION = [JSON.parse(ENV.VCAP_APPLICATION)];
        key_list.splice(key_list.indexOf(key_value),1);
    }else
    if (env_var.indexOf(key_value[0]) >= 0) {
        msg.variables[0][key_value[0]] = key_value[1];
        key_list.splice(key_list.indexOf(key_value),1);
    }
})
var sorted_ENV = {};
key_list.forEach(function(key_value) {
    sorted_ENV[key_value[0]] = key_value[1];
})
msg.other = [sorted_ENV];
msg.nodered = [{
    "cloudant_query_limit": global.get("cloudant_query_limit"),
    "FLOW_FILE": global.get("FLOW_FILE")
}]
node.warn({"sys-info": msg})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: bdf6a6b3.6e3418       Wires: <end>

***********************************************************************************************************
Processing Item: (76)     put /tickets/ticket/:ticketID       Tab: Tickets     ID: 302565b1.05779a     Wires: 47b93e95.3ec1e
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 47b93e95.3ec1e       Wires: 2f410b84.ebfd44
  
---------- Node Type: ->function<-   ->Ticket Update<-      ID: 2f410b84.ebfd44       Wires: b634508d.20d92
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Ticket Update"
    });
msg.records = {
    "delete": ["_rev"],
    "doc_type": "help_ticket",
    "object": "help_ticket",
    "format": "JSON",
    "returns": ["help_ticket"],
    "id": msg.req.params.ticketID
};
msg.inputs = {
    "allowed": ["close_time","ticket_status","reason","responder_id","ticket_notes"],
    "required": [],
    "values": {
        "reason": ["Setup", "Order Packs", "Another Issue", "Technical Support"]
    },
    "ticket_id": msg.req.params.ticketID
};
msg.cloudant = {
    "request": "/help_tickets/" + msg.records.id,
    "method": "get",
    "return_obj": "",
    "object": "help_ticket"
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: b634508d.20d92       Wires: 8cbc90e.74d727
  
---------- Node Type: ->function<-   ->Check Reassigned or Reason<-      ID: 8cbc90e.74d727       Wires: 3f45bfe3.b37e2,52481ef9.55d1e,9066da0d.905eb8
           outputs: 3
           outputLabels: ["Update","Update & Email","no body"]
           noerr: 0
===Function Start===
if(Object.keys(msg.inputs.body).length > 0) {
    if((msg.inputs.body.ticket_status && msg.inputs.body.ticket_status === "Reassigned") || (msg.inputs.body.reason)) {
        return [null,msg,null]
    } else {
        return [msg,null,null]
    }
} else {
    return [null,null,msg]
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: 3f45bfe3.b37e2       Wires: 185cef8a.e6049,17cfc529.01751b
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 52481ef9.55d1e       Wires: 4477f43e.4e0d5c
  
---------- Node Type: ->function<-   ->No Body<-      ID: 9066da0d.905eb8       Wires: 713615fd.a07fbc
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "The request must have at least one allowed field in the body."
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 185cef8a.e6049       Wires: ada1b83a.b05318
  
---------- Node Type: ->function<-   ->EMAIL & SMS<-      ID: 17cfc529.01751b       Wires: a04840d5.e19e6,97de7ab6.1754f8
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("support_users") && msg.support_users.length > 0){
    msg.email = {
        "to": msg.support_users.map(a => a.email),
        "operation": "updated"
    };
    msg.sms = {
        "to": msg.support_users.map(a => a.mobile_phone),
        "to_voice": msg.support_users.map(a => a.voice_phone),
        "operation": "updated"
    }
} else {
    //do nothing
    msg.email = {};
    msg.sms = {};
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Get Linked Users<-      ID: 4477f43e.4e0d5c       Wires: a85bbe21.fe3d,269a407b.075bd
           outputs: 2
           outputLabels: ["Update",""]
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("help_ticket") && msg.help_ticket.length === 1 && (msg.help_ticket[0]._id === msg.inputs.ticket_id)){
    if(msg.inputs.body.reason) {
        msg.inputs.reason = msg.inputs.body.reason;
    } else {
        msg.inputs.reason = msg.help_ticket[0].reason;
    }
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "bookmark_type": "payload", //"payload", "parameter"
        "pagination": false,
        "bookmark_use": false,
        "object": "linked_user_ids",
        "fields": ["user"],
        "selector": {
            "$and": [
                {"doc_type": "machine_link"},
                {"device": msg.help_ticket[0].system_sn},
                {"status": "active"}
            ]
        }
    };
    return [msg,null]
} else {
    return [null,msg]
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 713615fd.a07fbc       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: ada1b83a.b05318       Wires: <end>
  
---------- Node Type: ->function<-   ->Email Setup<-      ID: a04840d5.e19e6       Wires: 6b45b347.5123fc
           outputs: 1
           noerr: 0
===Function Start===
var ticket = msg.help_ticket[0];
msg.email.template_type = "help_ticket";
var mod_string = "n/a";
var settings_string = "n/a";
var machine_errors = "n/a";
var posterior = ["BL15455", "BL15335"] // Stellaris PC Laser System - 7.5K, 5.0K
var combined = ["BL14455", "BL14335"] // Stellaris PC Combined System - 7.5K, 5.0K
var anterior = ["BL11145", "BL11115", "BL11125"] // Anterior System - HFM, VFM, AFM
if (ticket.hasOwnProperty("machine_state"))  {
    var edhr = ticket.machine_state;
    if (edhr.hasOwnProperty("modlist")) {
        var full_modlist = {
            "uic_info" : "UIC",
            "remote_info" : "Remote",
            "anterior_info" : "Anterior",
            "ivpole_info" : "IVPole",
            "footcan_info" : "FCIB",
            "footrx_info" : "FC Receiver",
            "footctrl_info" : "Foot Control",
            "foottx_info" : "FC Transmitter",
            "power_info" : "Power Supply",
            "fluidics_info" : "Fluidics",
            "compressor_info" : "Compressor",
            "posterior_info" : "Illumination",
            "glm_info" : "Laser",
            "lamp1_info" : "Lamp 1",
            "lamp2_info" : "Lamp 2",
            "mmc_info" : "MMC",
            "gateway_info" : "Gateway",
            "sim1_iccid" : "SIM 1",
            "sim2_iccid" : "SIM 2"
        };
        var system_modlist = full_modlist;
        if (posterior.indexOf(ticket.system_type.substring(0,7)) >= 0) {
            delete system_modlist.mmc_info;
            delete system_modlist.sim2_iccid;
        }
        if (combined.indexOf(ticket.system_type.substring(0,7)) >= 0) {
            delete system_modlist.mmc_info;
            delete system_modlist.sim2_iccid;
            delete system_modlist.laser;
        }
        if (anterior.indexOf(ticket.system_type.substring(0,7)) >= 0) {
            delete system_modlist.mmc_info;
            delete system_modlist.sim2_iccid;
            delete system_modlist.laser;
            delete system_modlist.footcan_info;
            delete system_modlist.lamp1_info;
            delete system_modlist.lamp2_info;
        }
        // Non E models that do not have gateway enabled in software should not have it
        if (ticket.system_type.length === 7 && edhr.software_options && edhr.software_options.gateway_enabled && edhr.software_options.gateway_enabled === "disabled") {
            delete system_modlist.gateway_info
            delete system_modlist.sim1_iccid;
        }
        var mod_list = [];
        var name_list = [];
        for(var propertyName in edhr.modlist) {
            var module_text = "";
            if (system_modlist.hasOwnProperty(propertyName) || edhr.modlist[propertyName].present === "PRESENT") {
                module_text =  system_modlist[propertyName]; // add module Name
                if (edhr.modlist[propertyName].present === "PRESENT") {
                    module_text += ", " + edhr.modlist[propertyName].SN; // add SN
                } else {
                    module_text += ", " + edhr.modlist[propertyName].present; // add MISSING
                }
            }
            // Add SW and HW if it has a name and a SW version
            if (edhr.modlist[propertyName].present === "PRESENT"  && edhr.modlist[propertyName].SW_version !== "") {
                module_text += ", SW v" + edhr.modlist[propertyName].SW_version + ", HW v" + edhr.modlist[propertyName].HW_version; // add SW, HW
            }
            if (module_text !== "" ) {
                mod_list.push(module_text);
                name_list.push(propertyName);
            } // print if not empty
        }
        if (mod_list.length > 0) { // Sort and Join if array not empty
            var order_list = new Array(mod_list.length);
            var idx = 0;
            for(var propertyName in full_modlist) {
                var i = name_list.indexOf(propertyName);
                if (i >= 0) {
                    order_list[idx] = mod_list[i];
                    ++idx;
                }
            }
            mod_string = order_list.join("\n<br />\n")
        } 
    }
    if (edhr.hasOwnProperty("software_options")) {
        // Software Option Names
        var software_list = {
            "vitesse_enabled" : "Vitesse",
            "gateway_enabled" : "Gateway"
        };
        var settings_string = "";
        for(var propertyName in edhr.software_options) {
            settings_string += software_list[propertyName] + ": " + edhr.software_options[propertyName] + "\n<br />\n";
        }
    }
    if (edhr.hasOwnProperty("errors")) {
        var machine_errors = JSON.stringify(edhr.errors)
    }
}
msg.email.topic = "[" + ticket.ticket_status + "] Get Me Help Ticket " + ticket._id;
msg.email.fields = {
    "operation": msg.email.operation,
    "ticket_id": ticket._id,
    "system_type": ticket.system_type,
    "device_id": ticket.system_sn,
    "reason": ticket.reason,
    "start_time": Date(ticket.start_time),
    "user_id": ticket.doctor_id,
    "contact_name": ticket.contact_name,
    "contact_number": ticket.contact_number,
    "address": ticket.address,
    "system_config": mod_string,
    "software_options": settings_string,
    "machine_errors": machine_errors
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->SMS Setup<-      ID: 97de7ab6.1754f8       Wires: 2a4e720f.02b92e
           outputs: 1
           noerr: 0
===Function Start===
var ticket = msg.help_ticket[0];
msg.sms.template_type = "help_ticket";
msg.sms.fields = {
    "ticket_status": ticket.ticket_status,
    "system_type": ticket.system_type,
    "device_id": ticket.system_sn,
    "reason": ticket.reason,
    "start_time": Date(ticket.start_time),
    "contact_name": ticket.contact_name,
    "contact_number": ticket.contact_number
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: a85bbe21.fe3d       Wires: fecc8b70.269468
  
---------- Node Type: ->function<-   ->Ticket Not Found<-      ID: 269a407b.075bd       Wires: 713615fd.a07fbc
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Ticket with id: " + msg.inputs.ticket_id + " was not found."
});
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Email 2.2<-      ID: 6b45b347.5123fc       Wires: <end>
  
---------- Node Type: ->subflow<-   ->SMS 2.2<-      ID: 2a4e720f.02b92e       Wires: <end>
  
---------- Node Type: ->switch<-   ->Reason<-      ID: fecc8b70.269468       Wires: 3c679d5e.106a62,6aa306d8.afc768,d5884c06.42b66,eae3a578.634778
           checkall: true
           repair: false
           rules: [{"vt":"str","t":"eq","v":"Setup"},{"vt":"str","t":"eq","v":"Technical Support"},{"vt":"str","t":"eq","v":"Another Issue"},{"t":"else"}]
           outputs: 4
           propertyType: msg
           property: inputs.reason
  
  
---------- Node Type: ->function<-   ->Paired Application Field Sales<-      ID: 3c679d5e.106a62       Wires: f862bbff.3874b8
           outputs: 1
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("linked_user_ids") && msg.linked_user_ids.length > 0) {
    var linked_user_ids = msg.linked_user_ids.map(a => a.user);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "support_users",
        "selector": {
            "$and": [
                {"doc_type": "user"},
                {"status": "active"},
                {"_id": {"$in": linked_user_ids}},
                {"sub_roles": {
                    "$or": [{"$elemMatch": { "$eq": "Applications" }},
                            {"$elemMatch": { "$eq": "Field Sales" }},
                            {"$elemMatch": { "$eq": "Sales Manager" }}]
                    }
                }]
        }
    };
} else {
    var linked_user_ids = [];
    delete msg.cloudant;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Paired Technical Support<-      ID: 6aa306d8.afc768       Wires: f862bbff.3874b8
           outputs: 1
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("linked_user_ids") && msg.linked_user_ids.length > 0) {
    var linked_user_ids = msg.linked_user_ids.map(a => a.user);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "support_users",
        "selector": {
            "$and": [
                {"doc_type": "user"},
                {"status": "active"},
                {"_id": {"$in": linked_user_ids}},
                {"sub_roles": {
                    "$or": [{"$elemMatch": { "$eq": "Technical Support" }}]
                    }
                }]
        }
    };
} else {
    var linked_user_ids = [];
    delete msg.cloudant;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Paired Lens Rep Service<-      ID: d5884c06.42b66       Wires: f862bbff.3874b8
           outputs: 1
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("linked_user_ids") && msg.linked_user_ids.length > 0) {
    var linked_user_ids = msg.linked_user_ids.map(a => a.user);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "support_users",
        "selector": {
            "$and": [
                {"doc_type": "user"},
                {"status": "active"},
                {"_id": {"$in": linked_user_ids}},
                {"sub_roles": {
                    "$or": [{"$elemMatch": { "$eq": "Lens Rep" }}]
                    }
                }]
        }
    };
} else {
    var linked_user_ids = [];
    delete msg.cloudant;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Paired Customer Service<-      ID: eae3a578.634778       Wires: f862bbff.3874b8
           outputs: 1
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("linked_user_ids") && msg.linked_user_ids.length > 0) {
    var linked_user_ids = msg.linked_user_ids.map(a => a.user);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "support_users",
        "selector": {
            "$and": [
                {"doc_type": "user"},
                {"status": "active"},
                {"_id": {"$in": linked_user_ids}},
                {"sub_roles": {
                    "$or": [{"$elemMatch": { "$eq": "Customer Service" }}]
                    }
                }]
        }
    };
} else {
    var linked_user_ids = [];
    delete msg.cloudant;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: f862bbff.3874b8       Wires: 5d9fcfb4.b94d9
  
---------- Node Type: ->subflow<-   ->Support Users 2.1<-      ID: 5d9fcfb4.b94d9       Wires: 907e0f31.64e57
  
---------- Node Type: ->function<-   ->Add Support Person<-      ID: 907e0f31.64e57       Wires: 3f45bfe3.b37e2
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("support_users") && msg.support_users.length > 0){
    msg.inputs.body.assigned_id = msg.support_users.map(a => a._id);
} else {
    msg.inputs.body.assigned_id = [];
}
msg.cloudant.object = "help_ticket";
return msg;  
===Function   End===
  

***********************************************************************************************************
Processing Item: (77)     post /token       Tab: System     ID: 4e42e061.1bfdd     Wires: 178ef45f.00a64c
  
---------- Node Type: ->function<-   ->Access Token<-      ID: 178ef45f.00a64c       Wires: bd0f7250.6f7f8,60ddcf4a.6c8f7
           outputs: 2
           noerr: 0
===Function Start===
msg.api = {
    "start_time": Date.now(),
    "version": global.get("API_VERSION"),
    "name": "Access Token",
    "statistics": {}
}
msg.inputs = {
    "required": ["grant_type", "scope"],
    "allowed": []
}
if(msg.payload.grant_type) {
    if(msg.payload.grant_type === "password") {
        msg.inputs.required = ["grant_type", "username", "password", "scope"]
    } else if(msg.payload.grant_type === "refresh_token") {
        msg.inputs.required = ["grant_type", "refresh_token", "scope"]
    }
}
msg.records = {};
if(global.get("VCAP_APPID")) {
    msg.appid = {
        "server": global.get("VCAP_APPID").credentials.oauthServerUrl
    }
    return [msg,null];
}
return [null,msg]
//Modification for rebirth
//if APPID returns an error, check the username if it is a system_sn, check if in cloudant.
//If there, add a record in appid with a random password and return the new password.
===Function   End===
  
  
---------- Node Type: ->function<-   ->Headers<-      ID: bd0f7250.6f7f8       Wires: aed2ad76.87b3e
           outputs: 1
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("req") && msg.req.hasOwnProperty("headers")) {
    if (msg.req.headers.hasOwnProperty("api_info")) {
        msg.api.info = (msg.req.headers.api_info === "true");
    } else {
        msg.api.info = false;
    }
    if (msg.req.headers.hasOwnProperty("api_debug")) {
        msg.api.debug = (msg.req.headers.api_debug === "true");
    } else {
        msg.api.debug = false;
    }
    if (msg.req.headers.hasOwnProperty("api_stats")) {
        msg.api.stats = (msg.req.headers.api_stats === "true");
    } else {
        msg.api.stats = false;
    }
    if (msg.req.headers.hasOwnProperty("debug")) {
        msg.debug = JSON.parse(msg.req.headers.debug)
    }
    if (msg.req.headers.hasOwnProperty("apic")) {
        msg.api.apic = JSON.parse(msg.req.headers.apic)
    }
    if (msg.req.headers.hasOwnProperty("api_encrypt")) {
        msg.api.encrypt = (msg.req.headers.api_encrypt === "true")
    } else {
        msg.api.encrypt = false
    }
}
// override info flag here for vx environment
//if (global.get("VCAP").app.application_name.substr(-1) === "x"){ msg.api.info = true; }
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->APP ID Not Configured<-      ID: 60ddcf4a.6c8f7       Wires: f37244ae.346dd8
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": {
        "code": "appid_missing",
        "description": "APP ID is not configured on this CF APP"
    }
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->APP ID Setup<-      ID: aed2ad76.87b3e       Wires: bde75af7.2d5698
           outputs: 1
           noerr: 0
===Function Start===
msg.url = msg.appid.server + "/token";
//msg.payload = msg.inputs.body;
if (msg.payload.hasOwnProperty("email")) { msg.payload.email = msg.payload.email.toLowerCase() }
msg.headers = {
    "authorization": msg.req.headers.authorization
}
msg.method = "POST"
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: f37244ae.346dd8       Wires: <end>
  
---------- Node Type: ->http request<-   ->APP ID Token<-      ID: bde75af7.2d5698       Wires: 7b43a735.8abdd8
           tls: 
           url: 
           ret: obj
           method: use
  
  
---------- Node Type: ->switch<-   ->200<-      ID: 7b43a735.8abdd8       Wires: 38d932.6d8546ce,9531e771.713668
           checkall: true
           repair: false
           rules: [{"vt":"str","t":"eq","v":"200"},{"t":"else"}]
           outputs: 2
           propertyType: msg
           property: statusCode
  
  
---------- Node Type: ->function<-   ->Add c_id<-      ID: 38d932.6d8546ce       Wires: 692bef4.d6f061
           outputs: 1
           noerr: 0
===Function Start===
var jsr = global.get('jsrsasign');
if (!msg.hasOwnProperty("authorization")) {msg.authorization = {}; }
if (msg.payload.hasOwnProperty("access_token")) {
    msg.authorization.access_token = msg.payload.access_token;
    msg.authorization.token_header = jsr.KJUR.jws.JWS.readSafeJSONString(jsr.b64utoutf8(msg.authorization.access_token.split(".")[0]))
    //node.warn({"token_header":  msg.authorization.token_header})
    msg.authorization.token_payload = jsr.KJUR.jws.JWS.readSafeJSONString(jsr.b64utoutf8(msg.authorization.access_token.split(".")[1]))
    //node.warn({"token_payload":  msg.authorization.token_payload})
}
if (msg.payload.hasOwnProperty("id_token")) {
    msg.authorization.id_token = msg.payload.id_token;
    msg.authorization.id_token_header = jsr.KJUR.jws.JWS.readSafeJSONString(jsr.b64utoutf8(msg.authorization.id_token.split(".")[0]))
    //node.warn({"id_token_header":  msg.authorization.id_token_header})
    msg.authorization.id_token_payload = jsr.KJUR.jws.JWS.readSafeJSONString(jsr.b64utoutf8(msg.authorization.id_token.split(".")[1]))
    //node.warn({"id_token_payload":  msg.authorization.id_token_payload})
    msg.authorization.appid_id = msg.authorization.id_token_payload.sub;
    msg.authorization.id_token_payload.identities.forEach(function(idp){
        if (idp.provider === "cloud_directory") {
            msg.authorization.idp_id = idp.id;        
        }
    })
    if(msg.authorization.id_token_payload.oauth_client) {
        msg.authorization.requesting_app = msg.authorization.id_token_payload.oauth_client.name;
    }
}
var users = global.get("APPID").users;
var devices = global.get("APPID").devices
var user_idx = users.idp_ids.indexOf(msg.authorization.idp_id)
if (user_idx >= 0 && ('null' != users.idp_ids[user_idx]) && users.idp_ids[user_idx] !== "") {
    msg.authorization.c_id = users.c_ids[user_idx]
} else {
    var device_idx = users.idp_ids.indexOf(msg.authorization.idp_id)
    if ( device_idx >= 0  && ('null' != devices.idp_ids[device_idx]) && devices.idp_ids[device_idx] !== "") {
        msg.authorization.c_id = devices.c_ids[device_idx]
    }
}
if (msg.authorization.hasOwnProperty("appid_id")) { msg.payload.appid_id = msg.authorization.appid_id }
if (msg.authorization.hasOwnProperty("idp_id")) { msg.payload.idp_id = msg.authorization.idp_id }
if (msg.authorization.hasOwnProperty("c_id")) { msg.payload.c_id = msg.authorization.c_id }
//node.warn({"Token Info": msg});
msg.api.info = false;
msg.api.stats = false;
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->APP ID Wrong Credentials<-      ID: 9531e771.713668       Wires: f37244ae.346dd8
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 401,
    "message": {
            "code": msg.payload.error,
            "description": msg.payload.error_description,
            "service": "appid"
    }
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 692bef4.d6f061       Wires: <end>

***********************************************************************************************************
Processing Item: (78)     post /users       Tab: Users     ID: 5d63391a.f22528     Wires: 9d966eb7.76ee9
  
---------- Node Type: ->function<-   ->Enc<-      ID: 9d966eb7.76ee9       Wires: afbb8311.d2f1e
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: afbb8311.d2f1e       Wires: 7d4c1fc4.026b8
  
---------- Node Type: ->function<-   ->User New<-      ID: 7d4c1fc4.026b8       Wires: f5c36594.30df18
           outputs: 1
           noerr: 0
===Function Start===
var genPwd = global.get("genpwd");
msg.api = Object.assign(msg.api,
    {
        "name": "User New"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status", "password"],
    "doc_type": "user",
    "object": "user",
    "format": "JSON",
    "models": ["user"],
    "returns": ["user"],
    "return_code": 201
};
if(!msg.payload.password || msg.payload.password === "") {
    msg.records.password = genPwd.generate(global.get("PWD_GEN"))
}
msg.inputs = {
    "required": ["role","email"],
    "allowed": ["sub_roles","uid","first_name","last_name","mobile_phone","password","gets_change_email","bart_sart","business_unit","sales_area","sales_region","sales_territory","service_area","service_region","service_territory","created_by","remote_access_allowed"]
};
if(msg.payload.hasOwnProperty("email")) {
    msg.records.email = msg.payload.email.toLowerCase();
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: f5c36594.30df18       Wires: 134c7500.1c7cab
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: 134c7500.1c7cab       Wires: 334ee051.206e8
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 334ee051.206e8       Wires: cb82516b.87be9
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: cb82516b.87be9       Wires: <end>

***********************************************************************************************************
Processing Item: (79)     post /users/authentication       Tab: Users     ID: 9622f892.ea1278     Wires: c365d482.561be8
  
---------- Node Type: ->function<-   ->Enc<-      ID: c365d482.561be8       Wires: 70a6c339.a33ffc
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 70a6c339.a33ffc       Wires: 1604ec79.d75484
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 1604ec79.d75484       Wires: a2a10c47.415ea
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    msg.v1 = true
    if(msg.payload.userId) {
        msg.payload.user_id = msg.payload.userId;
        delete msg.payload.userId;
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->User Authentication<-      ID: a2a10c47.415ea       Wires: 36bdfd54.ed5562
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(
    {
        "name": "User Authentication",
    }, msg.api);
msg.records = {
    "delete": ["_rev", "password", "doc_type", "status"],
    "doc_type": "user",
    "returns": ["message"]
};
msg.inputs = {
    "required": ["password"],
    "allowed": ["user_id", "email"]
};
if (msg.payload.hasOwnProperty("user_id")) {
    msg.cloudant = {
        "request": "/stellaris_documents/" + msg.payload.user_id,
        "method": "GET",
        "return_obj": "",
        "object": "users"
    }
} else
if (msg.payload.hasOwnProperty("email")) {
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "users",
        "selector": {
            "$and": [{"email": msg.payload.email},
                     {"status": "active"}]
        }
    }
} else {
    msg.inputs.required.push("user_id")
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 36bdfd54.ed5562       Wires: a8991dec.34ea7
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: a8991dec.34ea7       Wires: 2492a8e2.b23e68
  
---------- Node Type: ->function<-   ->Check for valid user<-      ID: 2492a8e2.b23e68       Wires: a7ad127f.b8415,4c90ea09.bc5ac4
           outputs: 2
           outputLabels: ["Authenticated","Failed"]
           noerr: 0
===Function Start===

if (msg.hasOwnProperty("users") && msg.users.length === 1 ) {
    var user = msg.users[0];
    if (user.doc_type === 'user' && user.status === 'active' && user.hasOwnProperty("password") && user.hasOwnProperty("email") && user.password === msg.inputs.body.password) {
        return [msg, null]
    }
}
return [null, msg];
===Function   End===
  
  
---------- Node Type: ->function<-   ->Authentication Success<-      ID: a7ad127f.b8415       Wires: 142a3246.60a09e
           outputs: 1
           noerr: 0
===Function Start===
msg.message = "Authentication success.";
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Athentication Failed<-      ID: 4c90ea09.bc5ac4       Wires: 490b4ef.93ca3b,b7561f41.e2926
           outputs: 2
           outputLabels: ["Error","Email Admin"]
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
var error = {
    "code": 400,
    "message": "Authentication failed."
}
if (msg.hasOwnProperty("users") && msg.users.length > 1) {
    error.message = "More than one user with the same email " + msg.inputs.body.email + " was found."
    msg.errors.push(error);
    return [msg, null];
} else
if (!msg.users || msg.users.length === 0 || !msg.users[0].doc_type) {
    if (msg.inputs.body.hasOwnProperty("email")) {
        error.message = "User with email: " + msg.inputs.body.email + " was not found."    
    } else {
        error.message = "User with ID: " +  msg.inputs.body.user_id + " was not found."    
    }
    msg.errors.push(error);
    return [msg, null];
}
// Authentication Failed
msg.errors.push(error);
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "support_users",
    "selector": {
        "doc_type": "user",
        "status": "active",
        "$or": [{"sub_roles": {"$elemMatch": {"$eq": "Admin"}}}]
    },
    "fields": ["email"],
	"sort": [{ "email:string": "asc"}]
}
if (msg.users[0].hasOwnProperty("created_by") && msg.users[0].created_by !== ""){
    msg.cloudant.selector["$or"].push({"_id": msg.users[0].created_by})
}
var attempts = global.get("user_authentications");
if (typeof attempts !== "undefined" && Array.isArray(attempts)) {
    var index = -1;
    var attempt_found = attempts.some(function(attempt,i) {
        if(msg.users[0]._id === attempt.id)
        {
            attempt.tries++;
            attempt.timestamp = Date.now();
            global.set("user_authentications", attempts);
            index = i;
            return true;
        }
    });
    if (attempt_found && attempts[index].tries >= 5) {
        node.warn({"User Auth Attempts":attempts})
        return [msg, msg]; //send emails too
    } else 
    if (!attempt_found) {
        attempts.push({"id": msg.users[0]._id, "tries": 1, "timestamp": Date.now()});
        global.set("user_authentications", attempts);
    }
    node.warn({"User Auth Attempts":attempts})
}
return [msg, null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 142a3246.60a09e       Wires: <end>
  
---------- Node Type: ->function<-   ->v1 Errors<-      ID: 490b4ef.93ca3b       Wires: 625542f7.b8bb1c
           outputs: 1
           noerr: 0
===Function Start===
if(msg.v1){
    msg.errors[0].message = msg.errors[0].message.replace(" was not found"," does not exist");
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: b7561f41.e2926       Wires: 3fd9a5b6.d740fa
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 625542f7.b8bb1c       Wires: <end>
  
---------- Node Type: ->function<-   ->Email Format and input<-      ID: 3fd9a5b6.d740fa       Wires: 2c1af94a.703936
           outputs: 1
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("email")) { msg.email = {} }
msg.email.to = msg.support_users.map(a => a.email);
msg.email.topic = "User " + msg.users[0]._id + " Max Login Attempts";
var tab = '<span style="padding-left: 1.8em"></span>';
msg.email.template = "" +
"Hello Bausch & Lomb Support," +
"\n<br />" +
"\n<br />" +
"\n<br />" +
"\n<br />" + tab + "User " +  msg.users[0].first_name + " " + msg.users[0].last_name + " has attempted and failed multiple logins." +
"\n<br />" +
"";
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Email 2.2<-      ID: 2c1af94a.703936       Wires: <end>

***********************************************************************************************************
Processing Item: (80)     get /users/filter_by       Tab: Users     ID: c7915b17.1d84e8     Wires: 9bdecbf1.62b788
  
---------- Node Type: ->function<-   ->Enc<-      ID: 9bdecbf1.62b788       Wires: 77408e62.94768
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 77408e62.94768       Wires: 6a62633a.206c4c
  
---------- Node Type: ->function<-   ->Users Filter By<-      ID: 6a62633a.206c4c       Wires: 344a4abb.ad3e26
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Users Filter By"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "password"],
    "doc_type": "user",
    "format": "array",
    "object": "users",
    "fields": ["_id","status","role","sub_roles","uid","first_name","last_name","mobile_phone","email","gets_change_email","bart_sart","business_unit","sales_area","sales_region","sales_territory","service_area","service_region","service_territory","created_by","eula_create_date","eula_accept_status","eula_accept_date","remote_access_allowed"],
    "sort": [{"last_name:string": "asc"}],
    "returns": ["users"]
};
msg.inputs = {};
msg.filters = {};
msg.filters.params = {
    "doc_type": "user",
    "status": "active"
}
var allowedFields = ["_id","status","role","sub_roles","uid","first_name","last_name","mobile_phone","email","gets_change_email","bart_sart","business_unit","sales_area","sales_region","sales_territory","service_area","service_region","service_territory","created_by","eula_create_date","eula_accept_status","eula_accept_date","remote_access_allowed"]
if(msg.req.query.field && msg.req.query.value && allowedFields.indexOf(msg.req.query.field) >= 0)
{
    msg.req.query.value = msg.req.query.value.replace(/\"/g,"") //remove quotes from value
    if(msg.req.query.field === "email")
    {
        msg.filters.params[msg.req.query.field] = msg.req.query.value.toLowerCase();
    } else {
        msg.filters.params[msg.req.query.field] = msg.req.query.value
    }
} else {
    msg.inputs.allowed = ["field", "value"];
    msg.inputs.required = ["field", "value"];
}
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "bookmark_type": "payload",
    "pagination": true,
    "bookmark_use": false
}
msg.payload = {};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 344a4abb.ad3e26       Wires: b40e020e.c1fa8
  
---------- Node Type: ->subflow<-   ->Cloudant Setup 2.0<-      ID: b40e020e.c1fa8       Wires: a09146a6.a383c8
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: a09146a6.a383c8       Wires: 4a9a92bc.fd559c
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 4a9a92bc.fd559c       Wires: <end>

***********************************************************************************************************
Processing Item: (81)     post /users/surgeon       Tab: Users     ID: 1fc3deba.47e321     Wires: 6dab3b10.8c28a4
  
---------- Node Type: ->function<-   ->Enc<-      ID: 6dab3b10.8c28a4       Wires: 1e2c5f61.780851
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 1e2c5f61.780851       Wires: 99270dcc.02d
  
---------- Node Type: ->function<-   ->User New Surgeon<-      ID: 99270dcc.02d       Wires: 7f3a67a2.38a2a8
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "User New Surgeon"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status", "password"],
    "doc_type": "user",
    "object": "user",
    "format": "JSON",
    "models": ["user"],
    "returns": ["message","user"],
    "error_on_found": false,
    "first_name": msg.payload.first_name,
    "last_name": msg.payload.last_name,
    "created_by": msg.payload.created_by,
    "return_code": 201
};
msg.message = "A record for " + msg.records.first_name + " " + msg.records.last_name + " has been created."
msg.inputs = {
    "required": ["first_name","last_name","email","created_by"],
    "allowed": []
};
if(msg.payload.hasOwnProperty("email")) {
    msg.records.email = msg.payload.email.toLowerCase();
}
msg.cloudant = {
    "request": "/stellaris_documents/" + msg.records.created_by,
    "method": "GET",
    "return_obj": "",
    "object": "creator"
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 7f3a67a2.38a2a8       Wires: 3966126d.1d1fce
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 3966126d.1d1fce       Wires: e1e78464.a4cfd8
  
---------- Node Type: ->function<-   ->Check Creator<-      ID: e1e78464.a4cfd8       Wires: eaa135a5.e53a88,82265dc1.d9cbb
           outputs: 2
           outputLabels: ["yes creator","no creator"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("creator") && msg.creator.length > 0 && msg.creator[0].doc_type === "user") {
    msg.inputs.body = {
        "gets_change_email": false,
        "created_by": msg.creator[0]._id,
        "eula_create_date": Date.now(),
        "eula_accept_status": "not accepted",
        "remote_access_allowed": false
    };
    return [msg,null];
} else {
    return [null,msg];
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: eaa135a5.e53a88       Wires: d588fe08.7a40a
  
---------- Node Type: ->function<-   ->Creator Not Found<-      ID: 82265dc1.d9cbb       Wires: 342063b9.03e4fc
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User with id: " + msg.records.created_by + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Welcome Email<-      ID: d588fe08.7a40a       Wires: be06b71e.e733a8
           outputs: 1
           noerr: 0
===Function Start===
var user = msg.user[0];
var sales = msg.creator[0];
var key_body = {
        "first_name": msg.records.first_name,
        "last_name": msg.records.last_name,
        "email": msg.records.email,
        "id": user._id
    };
msg.records.key = Buffer.from(JSON.stringify(key_body)).toString('base64');
msg.email = {
    "template_type": "welcome",
    "to": msg.records.email,
    "key": msg.records.key,
    "fields": {
        "surgeon_first_name": msg.records.first_name,
        "surgeon_last_name": msg.records.last_name,
        "sales_first_name": sales.first_name,
        "sales_last_name": sales.last_name
    },
    "return": true
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 342063b9.03e4fc       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Email 2.2<-      ID: be06b71e.e733a8       Wires: 32d59540.45c0fa
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 32d59540.45c0fa       Wires: d282c995.5aa328
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: d282c995.5aa328       Wires: <end>

***********************************************************************************************************
Processing Item: (82)     post /users/user/:assignedID/tickets_query       Tab: Users     ID: 8ce9c141.2b96f     Wires: 3fafa365.afae5c
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 3fafa365.afae5c       Wires: 2df6949b.7911bc
  
---------- Node Type: ->function<-   ->User Query Tickets<-      ID: 2df6949b.7911bc       Wires: 7e685dba.ed6804
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "User Query Tickets"
    });
msg.records = {
    "doc_type": "help_ticket",
    "format": "array",
    "object": "help_tickets",
    "returns": ["help_tickets"],
    "fields": [ "_id",
                "system_sn",
                "system_type",
                "doctor_id",
                "cell_tower_info",
                "geo_location",
                "start_time",
                "close_time",
                "ticket_status",
                "reason",
                "contact_name",
                "contact_number",
                "assigned_id",
                "responder_id",
                "surgeon_settings_file_id",
                "surgeon_settings_name",
                "device_ip"
               ],
    "sort": [{"start_time:number": "desc"}]
};
if(msg.req.body.hasOwnProperty("return_assigned_users") && msg.req.body.return_assigned_users === true) {
    msg.records.returns.push("assigned_users");
}
msg.inputs = {
    "required": [],
    "allowed": ["filter_options", "return_assigned_users"]
};
msg.filters = {
    "allowed": ["start_time_range_begin" , "start_time_range_end" , "ticket_status" , "reason"],
    "required": []
};
msg.inputs.assigned_id = msg.req.params.assignedID;
msg.cloudant = {
    "request": "/help_tickets/_find",
    "method": "POST",
    "return_obj": "docs",
    "bookmark_type": "payload", //"payload", "parameter"
    "pagination": true
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 7e685dba.ed6804       Wires: 2b9a116b.1b0a6e
  
---------- Node Type: ->subflow<-   ->Cloudant Setup 2.0<-      ID: 2b9a116b.1b0a6e       Wires: a9e40a42.47c7e8
  
---------- Node Type: ->function<-   ->Filter by Assigned_ID<-      ID: a9e40a42.47c7e8       Wires: 1b347920.fd6e87
           outputs: 1
           noerr: 0
===Function Start===
if (!msg.cloudant.hasOwnProperty("selector")) { msg.cloudant.selector = {}}
if (!msg.cloudant.selector.hasOwnProperty("$and")) { msg.cloudant.selector["$and"] = []}
msg.cloudant.selector["$and"].push( {"assigned_id": {"$elemMatch": { "$eq": msg.inputs.assigned_id} } })
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 1b347920.fd6e87       Wires: ed4fc18d.d9efd
  
---------- Node Type: ->function<-   ->Distinct List<-      ID: ed4fc18d.d9efd       Wires: 1ac0f15b.6652af,77536a3c.542ee4
           outputs: 2
           noerr: 0
===Function Start===
if(msg.help_tickets.length > 0 && msg.inputs.body.hasOwnProperty("return_assigned_users") && msg.inputs.body.return_assigned_users === true){
    var unique_assigned_ids = [];
    msg.help_tickets.forEach(function(record){
        if(record.hasOwnProperty("assigned_id")){
            record.assigned_id.forEach(function(id){
                if(unique_assigned_ids.indexOf(id) < 0){
                    unique_assigned_ids.push(id);
                }
            });
        }
    });
    msg.assigned_id = unique_assigned_ids;
    if(unique_assigned_ids.length > 0){
        msg.cloudant.request = "/stellaris_documents/_find";
        msg.cloudant.method = "POST";
        msg.cloudant.selector = { "_id":  { "$in": msg.assigned_id  }};
        msg.cloudant.fields = ["_id", "first_name", "last_name"];
        msg.cloudant.sort= [{ "last_name:string": "asc"}];
        msg.cloudant.object = "assigned_users";
        msg.cloudant.pagination = false;
        msg.cloudant.bookmark_use = false;
        msg.cloudant.bookmark_save = false;
        return [msg, null];
    }
    msg.assigned_users = [];
}
return [null, msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 1ac0f15b.6652af       Wires: 77536a3c.542ee4
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 77536a3c.542ee4       Wires: <end>

***********************************************************************************************************
Processing Item: (83)     post /users/user/:doctor_id/files/file/settings/:file_id       Tab: Files     ID: 8eef34d3.fedb98     Wires: 5425dc39.566a54
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: 5425dc39.566a54       Wires: 7b3d1734.bde8f8
           outputs: 1
           noerr: 0
===Function Start===
msg.v1 = true;
msg.payload.user_id = msg.req.params.doctor_id
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 7b3d1734.bde8f8       Wires: 11388bff.03f9d4
  
---------- Node Type: ->function<-   ->Settings File New<-      ID: 11388bff.03f9d4       Wires: 2dbaa227.50f91e
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Settings File New"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "settings_file",
    "object": "settings_file",
    "format": "JSON",
    "returns": ["message","settings_file"],
    "models": ["settings_file"]
};
msg.inputs = {
    "file_id": msg.req.params.file_id,
    "objectDB_id": msg.req.params.file_id + "_" + msg.payload.updating_timestamp,
    "required": ["file_name", "updating_system", "updating_timestamp", "user_id"],
    "allowed": [],
    "attach_num": 1
};
msg.cos = {
    "method": "PUT",
    "container": "stellaris-settings",
    "filename": msg.inputs.objectDB_id,
    "object": "message"
}
if (msg.req.hasOwnProperty("files")) {
    msg.cos.file = msg.req.files[0]
} else if (msg.req.body.hasOwnProperty("file")) {
    var cryptojs = global.get('cryptojs');
    msg.cos.file_string = cryptojs.enc.Utf8.stringify(cryptojs.enc.Base64.parse(msg.req.body.file));
    msg.cos.file = {
        "buffer": Buffer.from(msg.cos.file_string, 'utf8'),
        "mimetype": "text/plain"
    }
    delete msg.payload.file;
}
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "settings_file",
    "selector": {
        "file_id": msg.inputs.file_id,
        "doc_type": "settings_file",
        "status": "active"
    },
    "sort": [{"updating_timestamp:number": "asc"}]
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 2dbaa227.50f91e       Wires: c6fde4a7.09f7c8
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("v1") && msg.v1){
    delete msg.records.returns;
    msg.records.delete = ["_rev", "doc_type"];
    delete msg.api.info;
    delete msg.api.starts;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: c6fde4a7.09f7c8       Wires: 9fee4799.288e88
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 9fee4799.288e88       Wires: 8dce59a6.9f9ee8
  
---------- Node Type: ->function<-   ->File Exist<-      ID: 8dce59a6.9f9ee8       Wires: a1432bf7.1f2948,15a3f33e.b9c3ad
           outputs: 2
           outputLabels: ["no","yes"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("settings_file") || msg.settings_file.length === 0 || msg.settings_file[0].doc_type !== "settings_file") {
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "user",
        "selector": {
            "_id": msg.inputs.body.user_id,
            "doc_type": "user",
            "status": "active"
        }
    };
    return [msg,null];
}
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: a1432bf7.1f2948       Wires: c458e074.fbee
  
---------- Node Type: ->function<-   ->File Found<-      ID: 15a3f33e.b9c3ad       Wires: 57d0e6f5.67b918
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active File " + msg.inputs.file_id + " already exists",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->User Exist<-      ID: c458e074.fbee       Wires: 5c27e9aa.3e1648,2ba1b03b.10276
           outputs: 2
           outputLabels: ["yes","no"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("user") || msg.user.length === 0 || msg.user[0].doc_type !== "user") {
    return [null,msg]
}
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "filename_list",
    "selector": {
        "user_id": msg.inputs.body.user_id,
        "doc_type": "settings_file",
        "status": "active",
        "file_name": msg.inputs.body.file_name
    }
};
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Update<-      ID: 57d0e6f5.67b918       Wires: a061b3d1.5281a,2bf2afcb.87bdf
           outputs: 2
           outputLabels: ["error","v1"]
           noerr: 0
===Function Start===
if(msg.v1){
    delete msg.errors;
    msg.payload = msg.req.body;
    msg.payload.user_id = msg.req.params.doctor_id;
    return [null,msg];
}
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 5c27e9aa.3e1648       Wires: e71429fc.aebf28
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: 2ba1b03b.10276       Wires: a061b3d1.5281a
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User with id " + msg.inputs.body.user_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: a061b3d1.5281a       Wires: <end>
  
---------- Node Type: ->function<-   ->Settings File Update<-      ID: 2bf2afcb.87bdf       Wires: 4d823372.5cde6c
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Settings File Update"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "status"],
    "doc_type": "settings_file",
    "object": "settings_file",
    "format": "JSON",
    "returns": ["message","settings_file"],
    "models": ["settings_file"]
};
msg.inputs = {
    "file_id": msg.req.params.file_id,
    "objectDB_id": msg.req.params.file_id + "_" + msg.payload.updating_timestamp,
    "required": ["file_name", "updating_system", "updating_timestamp"], //user_id is not allowed. Can't be changed
    "allowed": [],
    "attach_num": 1
};
msg.message = "File_id: " + msg.inputs.file_id + " has been successfully updated.";
msg.cos = {
    "method": "PUT",
    "container": "stellaris-settings",
    "filename": msg.inputs.objectDB_id
}
if (msg.req.hasOwnProperty("files")) {
    msg.cos.file = msg.req.files[0]
} else if (msg.req.body.hasOwnProperty("file")) {
    var cryptojs = global.get('cryptojs');
    msg.cos.file = cryptojs.enc.Utf8.stringify(cryptojs.enc.Base64.parse(msg.req.body.file));
    delete msg.payload.file;
}
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "settings_file",
    "selector": {
        "file_id": msg.inputs.file_id,
        "doc_type": "settings_file",
        "status": "active"
    },
    "sort": [{"updating_timestamp:number": "asc"}]
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->File_name Exist<-      ID: e71429fc.aebf28       Wires: 4d8f7ca9.bd4c54,93187c7c.ddda1
           outputs: 2
           outputLabels: ["no","yes"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("filename_list") || msg.filename_list.length === 0 || msg.filename_list[0].doc_type !== "settings_file") {
    msg.inputs.body.file_id = msg.inputs.file_id;
    msg.inputs.body.objectDB_id = msg.inputs.objectDB_id;
    return [msg,null]
}
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 4d823372.5cde6c       Wires: 8df95eb8.f7ae3
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("v1") && msg.v1){
    delete msg.records.returns;
    msg.records.delete = ["_rev", "doc_type"];
    delete msg.api.info;
    delete msg.api.starts;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Object Storage 2.1<-      ID: 4d8f7ca9.bd4c54       Wires: 102b38b7.d949c7
  
---------- Node Type: ->function<-   ->File_name Found<-      ID: 93187c7c.ddda1       Wires: a061b3d1.5281a
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "File_name " + msg.inputs.body.file_name + " already exists for this user with id " + msg.inputs.body.user_id + ".",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 8df95eb8.f7ae3       Wires: b8c198d3.924768
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: 102b38b7.d949c7       Wires: 2e212846.440a88
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: b8c198d3.924768       Wires: adaaa8f8.136fd8
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 2e212846.440a88       Wires: 873725d1.a72bf8
  
---------- Node Type: ->function<-   ->File Exist<-      ID: adaaa8f8.136fd8       Wires: c1f5d569.f103a8,820cb737.c3d288
           outputs: 2
           outputLabels: ["yes","no"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("settings_file") || msg.settings_file.length === 0 || msg.settings_file[0].doc_type !== "settings_file") {
    return [null,msg]
}
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 873725d1.a72bf8       Wires: <end>
  
---------- Node Type: ->function<-   ->User Match<-      ID: c1f5d569.f103a8       Wires: 77e10d4a.554344,b67d4e6.df716b
           outputs: 2
           outputLabels: ["yes","no"]
           noerr: 0
===Function Start===
msg.inputs.file_user = msg.inputs.body.file_name.split('_').pop();
if (msg.settings_file[0].user_id !== msg.inputs.file_user) {
    return [null,msg]
}
msg.inputs.body.user_id = msg.settings_file[0].user_id;
msg.inputs.body.file_id = msg.settings_file[0].file_id;
msg.inputs.body.objectDB_id = msg.inputs.objectDB_id;
msg.records.old_file_id = msg.settings_file[0]._id;
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "filename_list",
    "selector": {
        "user_id": msg.inputs.body.user_id ,
        "doc_type": "settings_file",
        "status": "active",
        "file_name": msg.inputs.body.file_name,
        "_id": {"$ne": msg.records.old_file_id}
    }
};
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->function<-   ->File Not Found<-      ID: 820cb737.c3d288       Wires: 74596a0f.233c14
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active File " + msg.inputs.file_id + " doesn't exist",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 77e10d4a.554344       Wires: 1a72069e.a97329
  
---------- Node Type: ->function<-   ->User Do Not Match<-      ID: b67d4e6.df716b       Wires: 74596a0f.233c14
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User id " + msg.settings_file[0].user_id + " does not match the record or the file_name " + msg.inputs.body.file_name + ".",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 74596a0f.233c14       Wires: <end>
  
---------- Node Type: ->function<-   ->File_name Exist<-      ID: 1a72069e.a97329       Wires: 89dcb35f.a0052,d8ede6c6.8d9298
           outputs: 2
           outputLabels: ["no","yes"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("filename_list") || msg.filename_list.length === 0 || msg.filename_list[0].doc_type !== "settings_file") {
    return [msg,null]
}
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Object Storage 2.1<-      ID: 89dcb35f.a0052       Wires: ec6e1945.8e0a38
  
---------- Node Type: ->function<-   ->File_name Found<-      ID: d8ede6c6.8d9298       Wires: 74596a0f.233c14
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "File_name " + msg.inputs.body.file_name + " already exists for this user wth id " + msg.inputs.body.user_id + ".",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record New 2.2<-      ID: ec6e1945.8e0a38       Wires: c1bfea7b.7d61a8,db5a3b27.f7e7e8
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: c1bfea7b.7d61a8       Wires: 2a8e726d.2d300e
  
---------- Node Type: ->function<-   ->Set Inactive<-      ID: db5a3b27.f7e7e8       Wires: 25739575.0f457a
           outputs: 1
           noerr: 0
===Function Start===
msg.records.id = msg.records.old_file_id;
msg.inputs.body = {"status": "inactive"}
delete msg.settings_file;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 2a8e726d.2d300e       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: 25739575.0f457a       Wires: <end>

***********************************************************************************************************
Processing Item: (84)     get /users/user/:userID       Tab: Users     ID: 362ba31b.7435ac     Wires: 54e2ee12.45f6f
  
---------- Node Type: ->function<-   ->Enc<-      ID: 54e2ee12.45f6f       Wires: fcb3a021.f5d13
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: fcb3a021.f5d13       Wires: c87739c6.50c3f8
  
---------- Node Type: ->function<-   ->User Info<-      ID: c87739c6.50c3f8       Wires: b7f3968c.58ebd8
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "User Info"
    });
msg.records = {
    "delete": ["_rev", "password", "doc_type", "status"],
    "doc_type": "user",
    "object": "user",
    "format": "JSON",
    "returns": ["user"],
    "id": msg.req.params.userID
};
msg.inputs = {
    "user_id": msg.req.params.userID
};
msg.filters = {};
msg.filters.params = {};
msg.cloudant = {
    "request": "/stellaris_documents/" + msg.records.id,
    "method": "GET",
    "return_obj": "",
    "object": "user"
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: b7f3968c.58ebd8       Wires: eb579346.ac809
  
---------- Node Type: ->function<-   ->User Found?<-      ID: eb579346.ac809       Wires: 899f840c.74d418,20331d15.b21c72
           outputs: 2
           outputLabels: ["found","not found"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("user") && msg.user.length > 0 && msg.user[0].hasOwnProperty("doc_type") && msg.user[0].doc_type === "user") {
    return [msg,null];
}
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 899f840c.74d418       Wires: f59277d1.f57878
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: 20331d15.b21c72       Wires: 682f4640.de4a58
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User with id: " + msg.inputs.user_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: f59277d1.f57878       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 682f4640.de4a58       Wires: <end>

***********************************************************************************************************
Processing Item: (85)     get /users/user/:userID/appid       Tab: Users     ID: 3210fa78.a284b6     Wires: 1be0df5b.e90391
  
---------- Node Type: ->function<-   ->Enc<-      ID: 1be0df5b.e90391       Wires: 4419957b.11d7fc
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 4419957b.11d7fc       Wires: 4de32139.9a97
  
---------- Node Type: ->function<-   ->User Info AppID<-      ID: 4de32139.9a97       Wires: 337f46aa.6006ea
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "User Info AppID"
    });
msg.records = {
    "doc_type": "user",
    "object": "user",
    "format": "JSON",
    "returns": ["user"],
    "id": msg.req.params.userID
};
var appid_users = global.get("APPID").users
msg.user = [appid_users.records[appid_users.c_ids.indexOf(msg.records.id)]]
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->User Found?<-      ID: 337f46aa.6006ea       Wires: 2282ccc2.7ea4a4,16872e79.ce6f22
           outputs: 2
           outputLabels: ["found","not found"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("user") && msg.user.length > 0) {
    return [msg,null];
}
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 2282ccc2.7ea4a4       Wires: <end>
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: 16872e79.ce6f22       Wires: 71319811.7e2ee8
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User with id: " + msg.records.id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 71319811.7e2ee8       Wires: <end>

***********************************************************************************************************
Processing Item: (86)     get /users/user/:userID/devices       Tab: Users     ID: 5606368b.0f5fc8     Wires: 2a3158bf.3a0838
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 2a3158bf.3a0838       Wires: ec6841de.69337
  
---------- Node Type: ->function<-   ->User Devices<-      ID: ec6841de.69337       Wires: 1bb98b8e.87fff4
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "User Devices"
    });
msg.records = {
    "delete": ["_rev", "doc_type","status"],
    "doc_type": "device",
    "format": "array",
    "object": "devices",
    "returns": ["devices"]
};
msg.inputs = {
    "user_id": msg.req.params.userID
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_types",
    "selector": {
        "$or": [{"$and": [{"doc_type": "user"},{"status": "active"},{"_id": msg.inputs.user_id}]},
                {"$and": [{"doc_type": "machine_link"},{"status": "active"},{"user": msg.inputs.user_id}]}]
    }
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 1bb98b8e.87fff4       Wires: fe4a0fcb.7a45a
  
---------- Node Type: ->function<-   ->Paired Device Ids<-      ID: fe4a0fcb.7a45a       Wires: df075575.8e95b8,5ff613b0.735a8c,7beac8b7.062f98
           outputs: 3
           outputLabels: ["yes paired","no paired","no user"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("users") || msg.users.length === 0) {
    return [null,null,msg];
}
if (msg.hasOwnProperty("machine_links") && msg.machine_links.length > 0) {
    msg.paired_device_ids = msg.machine_links.map(a => a.device);
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "selector": {
            "$and": [{"doc_type": "device"},{"status": "active"},{"_id": {"$in": msg.paired_device_ids}}]
        },
        "sort": [{ "_id:string": "asc"}],
        "object": "devices"
    };
    if(msg.req.query.hasOwnProperty("limit") || msg.req.query.hasOwnProperty("offset")){
        if(msg.req.query.hasOwnProperty("limit")){msg.cloudant.limit = parseInt(msg.req.query.limit)}
        if(msg.req.query.hasOwnProperty("offset")){msg.cloudant.skip = parseInt(msg.req.query.offset)}
    }
    return [msg,null,null];
}
msg.devices = [];
msg.api.path = 2;
return [null,msg,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: df075575.8e95b8       Wires: bdeca7d1.149ac8
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 5ff613b0.735a8c       Wires: <end>
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: 7beac8b7.062f98       Wires: e9cbf636.9f3ff8
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Active user with id: " + msg.inputs.user_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: bdeca7d1.149ac8       Wires: 5ff613b0.735a8c
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: e9cbf636.9f3ff8       Wires: <end>

***********************************************************************************************************
Processing Item: (87)     get /users/user/:userID/files       Tab: Users     ID: 3ecf6780.25ca88     Wires: a1a4f440.9c5a18
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: a1a4f440.9c5a18       Wires: ab2fdab9.55c3b8
  
---------- Node Type: ->function<-   ->v1 Inputs<-      ID: ab2fdab9.55c3b8       Wires: 1c01fc1f.ebd9a4
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.apic && msg.api.apic.version === "v1") {
    msg.v1 = true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Users Files<-      ID: 1c01fc1f.ebd9a4       Wires: 1371888f.402167
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Users Files"
    });
msg.records = {
    "delete": ["_rev","doc_type","status"],
    "doc_type": "settings_file",
    "format": "array",
    "object": "settings_files",
    "returns": ["settings_files"]
};
msg.inputs = {
    "user_id": msg.req.params.userID
};
msg.cloudant = {
    "request": "/stellaris_documents/" + msg.inputs.user_id,
    "method": "GET",
    "return_obj": "",
    "object": "user"
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->v1 Outputs<-      ID: 1371888f.402167       Wires: c24a421d.d2ee2
           outputs: 1
           noerr: 0
===Function Start===
if(msg.v1) {
    msg.records.delete = ["_rev","doc_type"]
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: c24a421d.d2ee2       Wires: dbcced9a.03622
  
---------- Node Type: ->function<-   ->User Found?<-      ID: dbcced9a.03622       Wires: a7501dbe.358ae,1421da2f.848706
           outputs: 2
           outputLabels: ["found","not found"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("user") && msg.user.length > 0 && msg.user[0].hasOwnProperty("doc_type") && msg.user[0].doc_type === "user") {
    msg.cloudant = {
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "selector": {
            "doc_type": "settings_file",
            "status": "active",
            "user_id": msg.inputs.user_id
        },
        "sort": [{"file_id:string": "desc"}]
    };
    if(msg.req.query.hasOwnProperty("limit") || msg.req.query.hasOwnProperty("offset")){
        if(msg.req.query.hasOwnProperty("limit")){msg.cloudant.limit = parseInt(msg.req.query.limit)}
        if(msg.req.query.hasOwnProperty("offset")){msg.cloudant.skip = parseInt(msg.req.query.offset)}
    }
    return [msg,null];
}
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: a7501dbe.358ae       Wires: ed7272f5.93f2e
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: 1421da2f.848706       Wires: d8a16247.bbced
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User with id: " + msg.inputs.user_id + " was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: ed7272f5.93f2e       Wires: 41969339.8e8e1c
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: d8a16247.bbced       Wires: <end>
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 41969339.8e8e1c       Wires: <end>

***********************************************************************************************************
Processing Item: (88)     post /users/user/:userID/logs/cases_query       Tab: Users     ID: 5400805.2f99d8     Wires: 467070d9.a759d
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 467070d9.a759d       Wires: 55edbef.09e114
  
---------- Node Type: ->function<-   ->User Query Cases<-      ID: 55edbef.09e114       Wires: adc8c6e2.750618
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "User Query Cases"
    });
msg.records = {
    "doc_type": "case",
    "format": "array",
    "object": "cases",
    "returns": ["cases"],
    "fields": [ "_id",
                "log_id",
                "system_sn",
                "system_type",
                "location",
                "geo_location",
                "address",
                "user_id",
                "settings_file_name",
                "start_time",
                "stop_time"
               ],
    "sort": [{"stop_time:number": "desc"}]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]
};
msg.filters = {
    "allowed": ["stop_time_range_begin" , "stop_time_range_end" , "system_sn"],
    "required": []
};
msg.cloudant = {
    "request": "/stellaris_logs/_find",
    "method": "POST",
    "return_obj": "docs",
    "bookmark_type": "payload",
    "pagination": true
};
msg.filters.params = {
    "user_id": msg.req.params.userID
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: adc8c6e2.750618       Wires: 17fd34ff.c30cdb
  
---------- Node Type: ->subflow<-   ->Cloudant Setup 2.0<-      ID: 17fd34ff.c30cdb       Wires: 39b6e31e.6bea3c
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 39b6e31e.6bea3c       Wires: 58eb3885.6ed9d8
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 58eb3885.6ed9d8       Wires: <end>

***********************************************************************************************************
Processing Item: (89)     post /users/user/partial_user_last_name/:partial_last_name       Tab: Users     ID: f5931e7e.e23e5     Wires: dfea7251.479c6
  
---------- Node Type: ->function<-   ->Enc<-      ID: dfea7251.479c6       Wires: e87ec0f4.0009
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: e87ec0f4.0009       Wires: 88626675.95df08
  
---------- Node Type: ->function<-   ->Users Partial Last Name<-      ID: 88626675.95df08       Wires: cba52518.e54a98
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Users Partial Last Name"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "password"],
    "doc_type": "user",
    "format": "array",
    "object": "users",
    "fields": ["_id","status","role","sub_roles","uid","first_name","last_name","mobile_phone","email","gets_change_email","bart_sart","business_unit","sales_area","sales_region","sales_territory","service_area","service_region","service_territory","created_by","eula_create_date","eula_accept_status","eula_accept_date","remote_access_allowed"],
    "sort": [{"last_name:string": "asc"}],
    "returns": ["users"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"],
    "partial_last_name": msg.req.params.partial_last_name};
msg.filters = {
    "allowed": ["role"],
    "required": []};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "bookmark_type": "payload",
    "pagination": true,
    "bookmark_use": false
}
msg.filters.params = {
    "doc_type": msg.records.doc_type,
    "status": "active",
    "last_name": {"$regex": "(?i)^" + msg.inputs.partial_last_name}
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: cba52518.e54a98       Wires: 96ff9a16.4952d8
  
---------- Node Type: ->subflow<-   ->Cloudant Setup 2.0<-      ID: 96ff9a16.4952d8       Wires: 5798ec25.1f5b14
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 5798ec25.1f5b14       Wires: f1e0148c.34a9d8
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: f1e0148c.34a9d8       Wires: 8997b720.bd0518
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 8997b720.bd0518       Wires: <end>

***********************************************************************************************************
Processing Item: (90)     post /users/user/password_reset       Tab: Users     ID: 7b3aa890.8ba488     Wires: f3e272dd.d0c98
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: f3e272dd.d0c98       Wires: f17225ca.01f9c8
  
---------- Node Type: ->function<-   ->Users Password Reset<-      ID: f17225ca.01f9c8       Wires: 564122a.12cb3dc
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Users Password Reset"
    });
msg.records = {
    "delete": ["_rev","doc_type","status","password"],
    "doc_type": "user",
    "format": "json",
    "object": "user",
    "returns": ["message","user"]
};
msg.inputs = {
    "required": ["email"],
    "allowed": []
};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "user",
    "selector": {
        "$and": [{"email": msg.payload.email},{"status": "active"}]
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 564122a.12cb3dc       Wires: 5034b236.6829bc
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 5034b236.6829bc       Wires: 545ffdf0.5ddfc4
  
---------- Node Type: ->function<-   ->User Found?<-      ID: 545ffdf0.5ddfc4       Wires: be8fad80.20d7b,51befd69.2916a4
           outputs: 2
           outputLabels: ["found","not found"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("user") && msg.user.length > 0 && msg.user[0].hasOwnProperty("doc_type") && msg.user[0].doc_type === "user") {
    return [msg,null];
}
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: be8fad80.20d7b       Wires: 4512e03c.53bbd
  
---------- Node Type: ->function<-   ->User Not Found<-      ID: 51befd69.2916a4       Wires: 38333690.40b41a
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User with provided email was not found.",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->App ID Get Token<-      ID: 4512e03c.53bbd       Wires: 9511a2d2.41a42,2781d36b.71c89c
           outputs: 2
           outputLabels: ["execute","no appid"]
           noerr: 0
===Function Start===
if(global.get("VCAP_APPID")) {
    msg.iam = {
        "type": "appid",
        "mgmt": true
    }
    return [msg,null];
}
return [null,msg]
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 38333690.40b41a       Wires: <end>
  
---------- Node Type: ->subflow<-   ->IAM Mgmt 2.0<-      ID: 9511a2d2.41a42       Wires: 8c681569.2ec6e8
  
---------- Node Type: ->function<-   ->APP ID Not Configured<-      ID: 2781d36b.71c89c       Wires: 38333690.40b41a
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": {
        "code": "appid_missing",
        "description": "APP ID is not configured on this CF APP"
    }
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->App ID Reset Password<-      ID: 8c681569.2ec6e8       Wires: ec42f2ba.c9f11
           outputs: 1
           noerr: 0
===Function Start===
var appid = global.get("VCAP_APPID").credentials;
msg.method = "POST";
msg.url = appid.managementUrl + "/cloud_directory/forgot_password";
msg.headers = {
    "Authorization": msg.appid.authorization
}
msg.payload = {
    "tenantId": appid.tenantId,
    "user": msg.inputs.body.email,
    "language": "en"
};
return msg;
===Function   End===
  
  
---------- Node Type: ->http request<-   -><-      ID: ec42f2ba.c9f11       Wires: fea147ea.4d2f88
           tls: 
           url: 
           ret: obj
           method: use
  
  
---------- Node Type: ->function<-   ->email confirmation<-      ID: fea147ea.4d2f88       Wires: 2e318782.d30ea8,344304a5.8b656c
           outputs: 2
           noerr: 0
===Function Start===
if(msg.statusCode !== 200) {
    return [null,msg]
}

delete msg.method; //necessary to avoid error on default nodes
delete msg.url;
delete msg.responseUrl;
delete msg.headers;
delete msg.statusCode;

msg.message = "An email was sent to " + msg.inputs.body.email + " to reset the password."
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 2e318782.d30ea8       Wires: <end>
  
---------- Node Type: ->function<-   ->AppID Error<-      ID: 344304a5.8b656c       Wires: 38333690.40b41a
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": msg.statusCode,
    "message": msg.payload
})
msg.payload = {};
if (msg.hasOwnProperty("req")) {
    return msg;
} else {
    node.warn({"AppID User Password Reset Error": msg.errors[0]})
}
===Function   End===
  

***********************************************************************************************************
Processing Item: (91)     post /users/user_query       Tab: Users     ID: 7e29eb57.8ae134     Wires: 117ec4cf.45508b
  
---------- Node Type: ->function<-   ->Enc<-      ID: 117ec4cf.45508b       Wires: 432d2c2f.7f4814
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 432d2c2f.7f4814       Wires: 70e9f908.9f3768
  
---------- Node Type: ->function<-   ->Users Query<-      ID: 70e9f908.9f3768       Wires: 1877668b.722379
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Users Query"
    });
msg.records = {
    "delete": ["_rev","doc_type","status","password"],
    "doc_type": "user",
    "format": "array",
    "object": "users",
    "sort": [{"last_name:string": "asc"}],
    "returns": ["users"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "required": [],
    "allowed": ["_id","role","sub_roles","uid","first_name","last_name","last_name_partial","mobile_phone","email","gets_change_email","bart_sart","business_unit","sales_area","sales_region","sales_territory","service_area","service_region","service_territory","created_by","remote_access_allowed"]};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "bookmark_type": "payload",
    "pagination": true,
    "bookmark_use": false
}
msg.filters.params = {
    "doc_type": msg.records.doc_type,
    "status": "active"
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 1877668b.722379       Wires: dfd8736e.dbbc2
  
---------- Node Type: ->subflow<-   ->Cloudant Setup 2.0<-      ID: dfd8736e.dbbc2       Wires: bb5b499e.93ca28
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: bb5b499e.93ca28       Wires: 28fa5aa.f459fa6
  
---------- Node Type: ->subflow<-   ->Clean Records 2.1<-      ID: 28fa5aa.f459fa6       Wires: 3922b63e.0c665a
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 3922b63e.0c665a       Wires: <end>

***********************************************************************************************************
Processing Item: (92)     post /users/user_query/region/:bart_sart/:business_unit/:area/:region/:territory       Tab: Users     ID: a2703c4d.00e93     Wires: 20efb05e.928c8
  
---------- Node Type: ->function<-   ->Enc<-      ID: 20efb05e.928c8       Wires: 3bcd4b75.f94e44
           outputs: 1
           noerr: 0
===Function Start===
msg.force_encryption = true;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 3bcd4b75.f94e44       Wires: bc9631a5.eebb9
  
---------- Node Type: ->function<-   ->Users by Region<-      ID: bc9631a5.eebb9       Wires: 8765f60c.c804f8
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Users by Region"
    });
msg.records = {
    "delete": ["_rev", "doc_type", "password"],
    "doc_type": "user",
    "format": "array",
    "object": "users",
    "fields": ["_id","status","role","sub_roles","uid","first_name","last_name","mobile_phone","email","gets_change_email","bart_sart","business_unit","sales_area","sales_region","sales_territory","service_area","service_region","service_territory","created_by","eula_create_date","eula_accept_status","eula_accept_date","remote_access_allowed"],
    "sort": [{"last_name:string": "asc"}],
    "returns": ["users"]
};
msg.inputs = {
    "required": [],
    "allowed": ["filter_options"]};
msg.filters = {
    "allowed": ["gets_change_email", "sub_roles", "role"],
    "required": []};
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "bookmark_type": "payload",
    "pagination": true,
    "bookmark_use": false
}
msg.filters.params = {
    "doc_type": msg.records.doc_type,
    "status": "active",
    "bart_sart": msg.req.params.bart_sart
}
if(msg.req.params.bart_sart === "bart"){
        var area = "sales_area";
        var region = "sales_region";
        var territory = "sales_territory";
}
else {
        var area = "service_area";
        var region = "service_region";
        var territory = "service_territory";
}
if(msg.req.params.business_unit.trim() != "ALL"){
    msg.filters.params.business_unit =  msg.req.params.business_unit
	if(msg.req.params.area.trim() != "ALL"){
	    msg.filters.params[area] = msg.req.params.area;
	    if(msg.req.params.region.trim() != "ALL"){
	        msg.filters.params[region] = msg.req.params.region;
	        if(msg.req.params.territory.trim() != "ALL"){
	            msg.filters.params[territory] = msg.req.params.territory;
	        }
	    }
	}
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Inputs 2.2<-      ID: 8765f60c.c804f8       Wires: 520762ca.ba423c
  
---------- Node Type: ->subflow<-   ->Cloudant Setup 2.0<-      ID: 520762ca.ba423c       Wires: aeb139d4.c23978
  
---------- Node Type: ->function<-   ->Add Or ALL<-      ID: aeb139d4.c23978       Wires: f56eae86.65d97
           outputs: 1
           noerr: 0
===Function Start===
var addList = ["business_unit", "sales_area", "sales_region", "sales_territory", "service_area", "service_region", "service_territory"];
msg.cloudant.selector.$and.forEach(function(andObj, index){
    andObjKey = Object.keys(andObj)[0];
    andObjValue = andObj[andObjKey];if(addList.includes(andObjKey)){
        msg.cloudant.selector.$and[index][andObjKey] = { "$or": [andObjValue, "ALL"]};
    }
});
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: f56eae86.65d97       Wires: e67eeb3d.179488
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: e67eeb3d.179488       Wires: <end>

***********************************************************************************************************
Processing Item: (93)     get /utilities/xmls       Tab: System     ID: db97d81e.7388b8     Wires: 9ce2945e.33ba08
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 9ce2945e.33ba08       Wires: d4387111.70451
  
---------- Node Type: ->function<-   ->Get XMLs<-      ID: d4387111.70451       Wires: 7aafa9f.d8cc158
           outputs: 1
           noerr: 0
===Function Start===
msg.api = {
        "name": "Get XMLs"
};
msg.records = {
    "format": "array",
    "returns": ["xmls"]
};
msg.xmls = global.get("XMLs");
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: 7aafa9f.d8cc158       Wires: <end>

***********************************************************************************************************
Processing Item: (94)     get /version       Tab: System     ID: 520a449b.27e6dc     Wires: c01fdfa9.82752
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: c01fdfa9.82752       Wires: 4f8e3057.22691
  
---------- Node Type: ->function<-   ->Version<-      ID: 4f8e3057.22691       Wires: ee85cac2.558588
           outputs: 1
           noerr: 0
===Function Start===
msg.api = Object.assign(msg.api,
    {
        "name": "Version",
        "encrypt": false
    });
msg.records = {
    "format": "JSON",
    "returns": ["space","version", "nodered", "cloudapp", "connections"]
};
var vcap = global.get("VCAP");
var ENV = context.global.process.env;
msg.space = [global.get("SPACE")];
msg.version = [global.get("API_VERSION")];
msg.nodered = [{
    "flow": global.get("API_VERSION"),
    "file": global.get("FLOW_FILE"),
    "engine": ENV.npm_package_engines_node,
    "editor": ENV.npm_package_dependencies_node_red
}];
msg.cloudapp = [{
    "name": vcap.app.application_name,
    "instance": vcap.app.instance_index,
    "instance_id": vcap.app.instance_id,
    "version": vcap.app.application_version,
    "space": vcap.app.space_name
}];
var connections = { }
var connections_list = ["config","appid","cloudant","dashdb","cos","keyprotect","kore","webbing","email","sms","google"]
connections_list.forEach(function(con){
    var service = global.get("VCAP_" + con.toUpperCase());
    if(service) { 
        if(con === "email") {
            connections[con] = service.office365.name;
        } else if(con === "sms") {
            connections[con + "_att"] = service.att.name;
            connections[con + "_twilio"] = service.twilio.name;
        } else {
            connections[con] = service.name;
        }
    }
})
/*if(global.get("VCAP_EMAIL")) { connections.email = global.get("VCAP_EMAIL").office365.name }
if(global.get("VCAP_SMS")) {
    if(global.get("VCAP_SMS").att) { connections.sms_att = global.get("VCAP_SMS").att.name }
    if(global.get("VCAP_SMS").twilio) { connections.sms_twilio = global.get("VCAP_SMS").twilio.name }
}*/
msg.connections = [connections];
if (msg.req.headers.hasOwnProperty("apic")) {
    var apicInfo = JSON.parse(msg.req.headers["apic"]);
    node.warn({"APIc Info": apicInfo});
    msg.apic = [apicInfo];
    msg.records.returns = ["version", "apic", "nodered", "cloudapp", "connections"];
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Returns 2.3<-      ID: ee85cac2.558588       Wires: <end>

***********************************************************************************************************
Processing Item: (95)     get users/verify/:key       Tab: Users     ID: dec06ec.6860e9     Wires: 701a5d1a.ff39a4
  
---------- Node Type: ->subflow<-   ->Authentication 2.1<-      ID: 701a5d1a.ff39a4       Wires: 951b9520.93d548
  
---------- Node Type: ->function<-   ->Surgeon Verify<-      ID: 951b9520.93d548       Wires: 8c80fe37.7909a
           outputs: 1
           noerr: 0
===Function Start===
var genPwd = global.get("genpwd");
msg.api = Object.assign(msg.api,
    {
        "name": "Surgeon Verify"
    });
msg.records = {
    "doc_type": "user",
    "object": "user",
    "password": genPwd.generate(global.get("PWD_GEN"))
};
msg.inputs = {
    "key": msg.req.params.key
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Check Key<-      ID: 8c80fe37.7909a       Wires: da8afa3c.d70d28,589ff27c.df7a9c
           outputs: 2
           outputLabels: ["yes key","no key"]
           noerr: 0
===Function Start===
if(msg.inputs.hasOwnProperty("key") && (typeof msg.inputs.key === "string") && msg.inputs.key !== "") {
    msg.inputs.body = JSON.parse(Buffer.from(msg.inputs.key, 'base64').toString())
    if (msg.inputs.body.hasOwnProperty("first_name") && msg.inputs.body.hasOwnProperty("last_name") && msg.inputs.body.hasOwnProperty("email") && msg.inputs.body.hasOwnProperty("id")) {
        msg.records.id = msg.inputs.body.id;
        delete msg.inputs.body.id;
        msg.cloudant = {
            "request": "/stellaris_documents/" + msg.records.id,
            "method": "GET",
            "return_obj": ""
        };
        return [msg,null];
    }
}
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "The information in the request is invalid.",
})
return [null,msg]

//encode var key = Buffer.from(JSON.stringify(msg.inputs.body)).toString('base64')
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: da8afa3c.d70d28       Wires: d88de838.8324c8
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 589ff27c.df7a9c       Wires: <end>
  
---------- Node Type: ->function<-   ->Check EULA<-      ID: d88de838.8324c8       Wires: 5d4be690.7e2678,b7ac4c51.d02d7,589ff27c.df7a9c
           outputs: 3
           outputLabels: ["no EULA","yes EULA","Error"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("user") && msg.user.length > 0 && msg.user[0].doc_type === "user") {
    var surgeon = msg.user[0];
    if (surgeon.hasOwnProperty("eula_accept_status")) {
        if (surgeon.eula_accept_status === "accepted") {
            //already accepted EULA confirmation no email
            return [null,msg,null];
        } else {
            if (msg.payload.eula_create_date + 86400000 < Date.now()) {
                // time expired error
                if(!msg.hasOwnProperty("errors")){msg.errors = []}
                    msg.errors.push({
                        "code": 400,
                        "message": "The request has expired.",
                    })
                return [null,null,msg];
            } else {
                // accept EULA
                msg.inputs.body.status = "active";
                msg.inputs.body.eula_accept_status = "accepted";
                msg.inputs.body.eula_accept_date = Date.now();
                msg.inputs.body.role = "Surgeon";
                return [msg,null,null]
            }
        }
    }
} else {
    // user does not exist error
    if(!msg.hasOwnProperty("errors")){msg.errors = []}
    msg.errors.push({
        "code": 400,
        "message": "The request is for an invalid user.",
    })
    return [null,null,msg];
}


===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record Update 2.2<-      ID: 5d4be690.7e2678       Wires: b7ac4c51.d02d7,46ac8988.510c48
  
---------- Node Type: ->function<-   ->Thank You Email<-      ID: b7ac4c51.d02d7       Wires: 4bbb7397.cd5c4c
           outputs: 1
           noerr: 0
===Function Start===
msg.email = {
    "template_type": "thankyou",
    "to": msg.inputs.body.email,
    "fields": {},
    "return": true
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Sales User<-      ID: 46ac8988.510c48       Wires: 12ead310.043cdd
           outputs: 1
           noerr: 0
===Function Start===
msg.cloudant.request = "/stellaris_documents/" + msg.user[0].created_by;
msg.cloudant.object = "sales_user";
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Email 2.2<-      ID: 4bbb7397.cd5c4c       Wires: 929715a4.55ebc8
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 12ead310.043cdd       Wires: 160fa73c.a2f439
  
---------- Node Type: ->http response<-   -><-      ID: 929715a4.55ebc8       Wires: <end>
           headers: {}
           statusCode: 
  
  
---------- Node Type: ->function<-   ->Acceptance Email<-      ID: 160fa73c.a2f439       Wires: 70bac3a1.fdbdec
           outputs: 1
           noerr: 0
===Function Start===
msg.email = {
    "template_type": "acceptance",
    "to": msg.inputs.body.email,
    "fields": {
        "surgeon_first_name": msg.inputs.body.first_name,
        "surgeon_last_name": msg.inputs.body.last_name,
        "sales_first_name": msg.sales_user[0].first_name,
        "sales_last_name": msg.sales_user[0].last_name
    }
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Email 2.2<-      ID: 70bac3a1.fdbdec       Wires: <end>
*** Processing The Sub-Flows ***

***********************************************************************************************************
Processing Subflow Item: 96   ->AppID Delete User<-    ID: 9791a478.8db8f8      Wires: [{"y":140,"x":40,"wires":[{"id":"f6e12cb0.b33c6"}]}]
===Info Start===

===info   End===
  
---------- Node Type: ->function<-   ->AppID Find User<-      ID: f6e12cb0.b33c6       Wires: ,ba027845.9a4788
           outputs: 2
           outputLabels: ["skip","ok"]
           noerr: 0
===Function Start===
if (!msg.appid.hasOwnProperty("id")) {
    if (msg.appid.hasOwnProperty("user") && msg.appid.user.hasOwnProperty("id")) {
        //update an already available AppID record.
        msg.appid.id = msg.appid.user.id;
    } else if (msg.hasOwnProperty("user") && msg.user.length === 1 && msg.user[0].hasOwnProperty("idp_id")) {
        msg.appid.id = msg.user[0].idp_id;
    } else if (msg.hasOwnProperty("user") && msg.user.length === 1 && msg.user[0].hasOwnProperty("_id")) {
        var appID = global.get("APPID");
        var user_idx = appID.users.c_ids.indexOf(msg.user[0]._id);
        if (user_idx >= 0) {
            msg.appid.id = appid.users.idp_id[user_idx];
        }
    } else if (msg.hasOwnProperty("records") && msg.records.hasOwnProperty("id")){
        var appID = global.get("APPID");
        var user_idx = appID.users.c_ids.indexOf(msg.records.id);
        if (user_idx >= 0) {
            msg.appid.id = appid.users.idp_id[user_idx];
        }
    }
}
if (msg.appid.hasOwnProperty("id")) {
    if(!msg.iam) { msg.iam = {} }
    msg.iam.type = "appid";
    return [null,msg];
} else {
    return [msg,null];
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->IAM Mgmt 2.0<-      ID: ba027845.9a4788       Wires: 8416becc.ffc55
  
---------- Node Type: ->function<-   ->Get User<-      ID: 8416becc.ffc55       Wires: b2015582.3bfbe8
           outputs: 1
           noerr: 0
===Function Start===
msg.appid.mgmt_url = global.get("VCAP_APPID").credentials.managementUrl;
msg.appid.headers = { "Authorization": msg.appid.authorization }
msg.method = "GET";
msg.url = msg.appid.mgmt_url + "/cloud_directory/Users/" + msg.appid.id;
msg.headers = msg.appid.headers;
node.warn({"APP ID Get User To Delete": msg})
return msg;
===Function   End===
  
  
---------- Node Type: ->http request<-   ->APPID MGMT<-      ID: b2015582.3bfbe8       Wires: 4d2890f7.3198a
           tls: 
           url: 
           ret: obj
           method: use
  
  
---------- Node Type: ->switch<-   ->200?<-      ID: 4d2890f7.3198a       Wires: 957e0ad5.19e238,317e43aa.0b92dc
           checkall: false
           repair: false
           rules: [{"vt":"str","t":"eq","v":"200"},{"t":"else"}]
           outputs: 2
           propertyType: msg
           property: statusCode
  
  
---------- Node Type: ->function<-   ->AppID Delete User<-      ID: 957e0ad5.19e238       Wires: a1a1ecf4.4c93c
           outputs: 1
           noerr: 0
===Function Start===
msg.appid.user = msg.payload;
delete msg.method;
delete msg.url;
delete msg.responseUrl;
delete msg.headers;
delete msg.statusCode;
msg.payload = {};
msg.method = "DELETE";
msg.url = msg.appid.mgmt_url + "/cloud_directory/Users/" + msg.appid.id;
msg.headers = msg.appid.headers
node.warn({"APP ID Delete User": msg})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->AppID Error<-      ID: 317e43aa.0b92dc       Wires: 14b60d65.d43573
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
if(msg.payload.schemas) {
    msg.errors.push({
        "code": 412,
        "message": {
            "code": msg.payload.status,
            "description": msg.payload.detail,
            "service": "appid"
        }
    });
} else {
    msg.payload.service = "appid";
    msg.errors.push({
        "code": msg.statusCode,
        "message": msg.payload
    });
}
msg.payload = {};
if (msg.hasOwnProperty("req")) {
    return msg;
} else {
    node.warn({"AppID Delete User Error": msg.errors[0]})
}
===Function   End===
  
  
---------- Node Type: ->http request<-   ->APPID MGMT<-      ID: a1a1ecf4.4c93c       Wires: 8fd82bbd.458fe8
           tls: 
           url: 
           ret: txt
           method: use
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 14b60d65.d43573       Wires: <end>
  
---------- Node Type: ->switch<-   ->204?<-      ID: 8fd82bbd.458fe8       Wires: 6a38926f.37894c,6a38926f.37894c,317e43aa.0b92dc
           checkall: true
           repair: false
           rules: [{"vt":"str","t":"eq","v":"204"},{"vt":"str","t":"eq","v":"404"},{"t":"else"}]
           outputs: 3
           propertyType: msg
           property: statusCode
  
  
---------- Node Type: ->function<-   ->AppID Delete User Cleanup<-      ID: 6a38926f.37894c       Wires: 1cc053ad.3cac6c,e659294b.0af3d8
           outputs: 1
           noerr: 0
===Function Start===
node.warn({"APP ID User Deleted": msg})
delete msg.method;
delete msg.url;
delete msg.responseUrl;
delete msg.headers;
delete msg.statusCode;
msg.payload = {};
return msg
===Function   End===
  
  
---------- Node Type: ->function<-   ->AppID Delete User Cleanup<-      ID: 6a38926f.37894c       Wires: 1cc053ad.3cac6c,e659294b.0af3d8
           outputs: 1
           noerr: 0
===Function Start===
node.warn({"APP ID User Deleted": msg})
delete msg.method;
delete msg.url;
delete msg.responseUrl;
delete msg.headers;
delete msg.statusCode;
msg.payload = {};
return msg
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: 1cc053ad.3cac6c       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.debug) {
    node.warn({"AppId Delete User": msg});
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->AppID Lists<-      ID: e659294b.0af3d8       Wires: <end>

***********************************************************************************************************
Processing Subflow Item: 97   ->AppID Lists<-    ID: 16e7afc8.9866e      Wires: [{"y":180,"x":40,"wires":[{"id":"609f1982.3171a8"}]}]
===Info Start===

===info   End===
  
---------- Node Type: ->delay<-   -><-      ID: 609f1982.3171a8       Wires: 3441d3ba.93abbc
           nbRateUnits: 5
           randomLast: 5
           timeoutUnits: seconds
           drop: true
           randomUnits: seconds
           rate: 1
           timeout: 5
           randomFirst: 1
           rateUnits: second
           pauseType: rate
  
  
---------- Node Type: ->function<-   ->Start Time<-      ID: 3441d3ba.93abbc       Wires: 7992d4b0.b6cebc,d98d78cf.05ecd8,57faa6c2.bbd878
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.api){msg.api = {}}
msg.start_time = Date.now();
flow.set("appid",false);
flow.set("users",false);
flow.set("devices",false);
if(!msg.iam) {msg.iam = {}}
msg.iam.type = "appid";
msg.iam.mgmt = false;
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Get Cloudant Users<-      ID: 7992d4b0.b6cebc       Wires: 65db318c.fa416
           outputs: 1
           noerr: 0
===Function Start===
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_types",
    "selector": {"$and": [{"doc_type":"user"},{"status":"active"}]},
    "sort": [{"last_name:string":"asc"},{"first_name:string":"asc"}]
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Get Cloudant Devices<-      ID: d98d78cf.05ecd8       Wires: 883862e7.43d98
           outputs: 1
           noerr: 0
===Function Start===
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "doc_types",
    "selector": {"$and": [{"doc_type":"device"},{"status":"active"}]},
    "sort": [{"_id:string":"asc"}]
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->IAM Mgmt 2.0<-      ID: 57faa6c2.bbd878       Wires: 6ae58aaf.e170d4
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 65db318c.fa416       Wires: 62011823.4b1588
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 883862e7.43d98       Wires: a1d59098.90c4e
  
---------- Node Type: ->function<-   ->Get Lists Setup<-      ID: 6ae58aaf.e170d4       Wires: e034be20.f790e
           outputs: 1
           noerr: 0
===Function Start===
delete msg.appid.records;
msg.appid.headers = {
    "Authorization": msg.appid.authorization
}
msg.appid.mgmt_url = global.get("VCAP_APPID").credentials.managementUrl;
msg.method = "GET";
msg.url = msg.appid.mgmt_url + "/cloud_directory/Users";
msg.headers = msg.appid.headers;
return [msg];
===Function   End===
  
  
---------- Node Type: ->function<-   ->Get Cloudant Users Cleanup<-      ID: 62011823.4b1588       Wires: 8aa34922.d66d78
           outputs: 1
           noerr: 0
===Function Start===
global.set("CLOUDANT.users",  {
    "c_ids": msg.users.map(a => a._id),
    "idp_ids": msg.users.map(a => a.idp_id),
    "emails": msg.users.map(a => a.email),
    "phones": msg.users.map(a => a.mobile_phone),
    "records": msg.users
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Get Cloudant Devices Cleanup<-      ID: a1d59098.90c4e       Wires: 8aa34922.d66d78
           outputs: 1
           noerr: 0
===Function Start===
global.set("CLOUDANT.devices", {
    "c_ids": msg.devices.map(a => a._id),
    "idp_ids": msg.devices.map(a => a.idp_id),
    "records": msg.devices
})
return msg;
===Function   End===
  
  
---------- Node Type: ->http request<-   ->APPID MGMT<-      ID: e034be20.f790e       Wires: 1b6fd1bd.1d66fe
           tls: 
           url: 
           ret: obj
           method: use
  
  
---------- Node Type: ->function<-   ->Combine Databases<-      ID: 8aa34922.d66d78       Wires: 90649835.db6f38
           outputs: 1
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("appid")) {
    flow.set("appid", true);
}
if (msg.hasOwnProperty("users")) {
    flow.set("users", true);
}
if (msg.hasOwnProperty("devices")) {
    flow.set("devices", true);
}
if (flow.get("appid") && flow.get("users") && flow.get("devices")) {
    msg.end_time = Date.now();
    node.warn({"Update List Time": msg.end_time- msg.start_time })
    return msg;   
}
===Function   End===
  
  
---------- Node Type: ->switch<-   ->Error?<-      ID: 1b6fd1bd.1d66fe       Wires: ac57e76.bfb4b18,2b4f8acb.432876
           checkall: true
           repair: false
           rules: [{"vt":"str","t":"eq","v":"200"},{"t":"else"}]
           outputs: 2
           propertyType: msg
           property: statusCode
  
  
---------- Node Type: ->function<-   ->debug<-      ID: 90649835.db6f38       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("api") && msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"APPID Get Users & Devices": msg});
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->More Results<-      ID: ac57e76.bfb4b18       Wires: 5517404b.39a56,e034be20.f790e
           outputs: 2
           outputLabels: ["exit","loop"]
           noerr: 0
===Function Start===
if (msg.payload.hasOwnProperty("totalResults") && msg.payload.hasOwnProperty("itemsPerPage")) {
    msg.appid.totalResults = msg.payload.totalResults;
    msg.appid.itemsPerPage = msg.payload.itemsPerPage;
    if (!msg.appid.hasOwnProperty("records")) {
        msg.appid.records = msg.payload.Resources;
        //node.warn({"Creating records": msg.appid.records});
    } else {
        msg.appid.records = msg.appid.records.concat(msg.payload.Resources);
        //node.warn({"Appending records": msg.appid.records});
    }
    msg.appid.totalRecords = msg.appid.records.length;
    if (msg.appid.totalResults > msg.appid.totalRecords) {
        msg.method = "GET";
        msg.url = msg.appid.mgmt_url + "/cloud_directory/Users?startIndex=" + msg.appid.totalRecords;
        msg.headers = msg.appid.headers;
        return [null,msg];
    } else {
        return [msg,null];
    }
} else {
    msg.appid.records = msg.payload.Resources;
    return [msg,null];
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->AppID Error<-      ID: 2b4f8acb.432876       Wires: b8b0e4a9.4b31c8
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": msg.statusCode,
    "message": msg.payload
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Get Lists Cleanup<-      ID: 5517404b.39a56       Wires: 8aa34922.d66d78
           outputs: 1
           noerr: 0
===Function Start===
var raw_users = msg.appid.records;
var users = [];
var user_c_ids = [];
var user_idp_ids = [];
var user_emails = [];
var user_phones = [];
var devices = [];
var device_c_ids = [];
var device_idp_ids = [];
raw_users.forEach(function(user){
    if (user.hasOwnProperty("entitlements")) {
        var index = user.entitlements.findIndex(function(obj, idx){ if(obj.hasOwnProperty("bl_cloud")) { return true }})
        if (index >= 0 && user.entitlements[index].hasOwnProperty("bl_cloud") && user.entitlements[index].bl_cloud.hasOwnProperty("doc_type")) {
            var ent = user.entitlements[index].bl_cloud;
            var mobile = null;
            var voice = null;
            if (user.hasOwnProperty("phoneNumbers")) {
                var mobile_list = user.phoneNumbers.filter(function(phone) {
                    if (phone.type === "mobile") {
                        return true
                    }
                })
                if(mobile_list.length > 0) { mobile = mobile_list[0].value }
                var voice_list = user.phoneNumbers.filter(function(phone) {
                    if (phone.type === "voice") {
                        return true
                    }
                })
                if(voice_list.length > 0) { voice = voice_list[0].value }
            }
            if (ent.doc_type === "user") {
                bl_user = {
                   "idp_id": user.id,
                   "c_id": ent.c_id,
                   "last_name": user.name.familyName,
                   "first_name": user.name.givenName,
                   "email": user.emails[0].value,
                   "role": ent.role
                   //"sub_roles": ent.sub_roles
               };
               if(mobile || mobile === "")(bl_user.mobile_phone = mobile);
               if(voice)(bl_user.voice_phone = voice);
               users.push(bl_user);
            } else if (ent.doc_type === "device") {
                bl_device = {
                   "idp_id": user.id,
                   "c_id": ent.c_id,
                   "system_type": ent.system_type,
                   "email": user.emails[0].value
               };
               devices.push(bl_device);
            }
        }
    } else {
        if (user.userName.search("@") >= 0) {
           bl_user = {
               "idp_id": user.id,
               "c_id": null,
               "last_name": user.name.familyName,
               "first_name": user.name.givenName,
               "email": user.userName
           };
           users.push(bl_user);
        } else {
            bl_device = {
               "idp_id": user.id,
               "c_id": user.userName
           };
           devices.push(bl_device);
        }
    }
});
var sorted_users = users.sort(sortUsers);
var sorted_devices = devices.sort(sortDevices);
global.set("APPID", {
    "users": {
        "c_ids": sorted_users.map(a => a.c_id), //user_c_ids,
        "idp_ids": sorted_users.map(a => a.idp_id), //user_idp_ids,
        "emails": sorted_users.map(a => a.email), //user_emails,
        "phones": sorted_users.map(a => a.mobile_phone), //user_phones,
        "records": sorted_users //users
    },
    "devices": {
        "c_ids": sorted_devices.map(a => a.c_id), //device_c_ids,
        "idp_ids": sorted_devices.map(a => a.idp_id), //device_idp_ids,
        "records": sorted_devices //devices
    }
})
delete msg.appid.records;
delete msg.url;
delete msg.method;
delete msg.responseUrl;
delete msg.statusCode;
msg.payload = {};
return msg;

function sortUsers(a,b) {
    if(a.last_name<b.last_name && a.first_name<b.first_name) { return -1 } else { return 1 }
}
function sortDevices(a,b) {
    if(a.c_id<b.c_id) { return -1 } else { return 1 }
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: b8b0e4a9.4b31c8       Wires: <end>

***********************************************************************************************************
Processing Subflow Item: 98   ->AppID New Device<-    ID: 3cbceae5.45c156      Wires: [{"y":120,"x":20,"wires":[{"id":"19ed28b8.769907"}]}]
===Info Start===

===info   End===
  
---------- Node Type: ->function<-   ->AppID New Device Setup<-      ID: 19ed28b8.769907       Wires: ,df645591.6cfba8
           outputs: 2
           outputLabels: ["error","ok"]
           noerr: 0
===Function Start===
if (msg.records && msg.records.device) {
    if(!msg.iam) { msg.iam = {} }
    msg.iam.type = "appid";
    if(!msg.appid) { msg.appid = {} }
    var config = global.set("VCAP_CONFIG");
    if(config && config.Birth_Email_Distribution) {
        msg.records.device.email = config.Birth_Email_Distribution;
    } else {
        msg.records.device.email = global.get("BIRTH_EMAIL_DISTRIBUTION");
    }
    return [null,msg]
} else {
    return [msg,null]
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->IAM Mgmt 2.0<-      ID: df645591.6cfba8       Wires: fb170db6.d6631
  
---------- Node Type: ->function<-   ->AppID Device Template<-      ID: fb170db6.d6631       Wires: 8b70c25a.368f1
           outputs: 1
           noerr: 0
===Function Start===
var device = msg.records.device;
msg.appid.mgmt_url = global.get("VCAP_APPID").credentials.managementUrl;
msg.appid.headers = { "Authorization": msg.appid.authorization }
msg.appid.device = {
  "displayName": device._id,
  "userName": device._id,
  "password": msg.records.password,
  "emails": [
    {
      "value": device.email,
      "primary": true
    }
  ],
  "name": {
    "givenName": device._id,
    "familyName": device.system_type,
    "formatted": device._id + "(" + device.system_type + ")"
  },
  "active": true,
  "status": "CONFIRMED",
  "entitlements": [
                {
                    "bl_cloud": {
                        "c_id": device._id,
                        "doc_type": "device",
                        "system_type": device.system_type
                    }
                }
            ]
}
msg.method = "POST";
msg.url = msg.appid.mgmt_url + "/cloud_directory/Users";
msg.payload = msg.appid.device;
msg.headers = msg.appid.headers;
return msg;
===Function   End===
  
  
---------- Node Type: ->http request<-   ->APPID MGMT<-      ID: 8b70c25a.368f1       Wires: 106d52c1.04dd1d
           tls: 
           url: 
           ret: obj
           method: use
  
  
---------- Node Type: ->switch<-   ->Error?<-      ID: 106d52c1.04dd1d       Wires: da807d9a.f69fc,33aa6952.3bbe16
           checkall: true
           repair: false
           rules: [{"vt":"str","t":"eq","v":"201"},{"t":"else"}]
           outputs: 2
           propertyType: msg
           property: statusCode
  
  
---------- Node Type: ->function<-   ->AppID New Device Cleanup<-      ID: da807d9a.f69fc       Wires: 7cf8c37f.aef6dc
           outputs: 1
           noerr: 0
===Function Start===
msg.appid.device = msg.payload;
msg.records.idp_id = msg.payload.id;

delete msg.method;
delete msg.url;
delete msg.responseUrl;
delete msg.headers;
delete msg.statusCode;

return msg
===Function   End===
  
  
---------- Node Type: ->function<-   ->AppID Error<-      ID: 33aa6952.3bbe16       Wires: 6ece93d8.19f22c
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
if(msg.payload.schemas) {
    msg.errors.push({
        "code": 412,
        "message": {
            "code": msg.payload.status,
            "description": msg.payload.detail,
            "service": "appid"
        }
    });
} else {
    msg.payload.service = "appid";
    msg.errors.push({
        "code": msg.statusCode,
        "message": msg.payload
    });
}
if (msg.hasOwnProperty("req")) {
    return msg;
} else {
    node.warn({"AppID New Device Error": msg.errors[0]})
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: 7cf8c37f.aef6dc       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.debug) {
    node.warn({"AppId New Device": msg});
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 6ece93d8.19f22c       Wires: <end>

***********************************************************************************************************
Processing Subflow Item: 99   ->AppID New User<-    ID: 12505187.8b5d0e      Wires: [{"y":120,"x":40,"wires":[{"id":"3953d8fd.d97d18"}]}]
===Info Start===

===info   End===
  
---------- Node Type: ->function<-   ->AppID New User Setup<-      ID: 3953d8fd.d97d18       Wires: d749acc8.9acb2,287ed895.91abd8
           outputs: 2
           outputLabels: ["ok","error"]
           noerr: 0
===Function Start===
if (msg.records && msg.records.user) {
    if(!msg.iam) { msg.iam = {} }
    msg.iam.type = "appid";
    if(!msg.appid) { msg.appid = {} }
    return [null,msg]
} else {
    return [msg,null]
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: d749acc8.9acb2       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("api") && msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"AppID New User": msg});
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->IAM Mgmt 2.0<-      ID: 287ed895.91abd8       Wires: a49a9003.00d0f
  
---------- Node Type: ->function<-   ->AppID User Template<-      ID: a49a9003.00d0f       Wires: 2b1568a8.0d6678
           outputs: 1
           noerr: 0
===Function Start===
var user = msg.records.user;
msg.appid.mgmt_url = global.get("VCAP_APPID").credentials.managementUrl;
msg.appid.headers = { "Authorization": msg.appid.authorization }
msg.appid.user = {
  "displayName": user.first_name + ", " + user.last_name,
  "userName": user.email,
  "password": user.password,
  "emails": [
    {
      "value": user.email,
      "primary": true
    }
  ],
  "phoneNumbers": [],
  "name": {
      "givenName": user.first_name,
      "familyName": user.last_name,
      "formatted": user.first_name + ", " + user.last_name
  },
  "active": true,
  "status": "CONFIRMED",
  "entitlements": [
                {
                    "bl_cloud": {
                        "c_id": user._id,
                        "doc_type": "user",
                        "role": user.role
                        //"sub_roles": user.sub_roles
                    }
                }
            ]
}
if (user.hasOwnProperty("mobile_phone") || user.hasOwnProperty("voice_phone")) {
    if (user.hasOwnProperty("mobile_phone") && user.mobile_phone !== "") {
        msg.appid.user.phoneNumbers.push(
            {
                "value": user.mobile_phone,
                "type": "mobile"
            }
        )
    }
    if (user.hasOwnProperty("voice_phone") && user.voice_phone !== "") {
        msg.appid.user.phoneNumbers.push(
            {
                "value": user.voice_phone,
                "type": "voice"
            }
        )
    }
} else {
    delete msg.appid.user.phoneNumbers;
}
msg.method = "POST";
msg.url = msg.appid.mgmt_url + "/cloud_directory/Users";
msg.payload = msg.appid.user;
msg.headers = msg.appid.headers;
return msg;
===Function   End===
  
  
---------- Node Type: ->http request<-   ->APPID MGMT<-      ID: 2b1568a8.0d6678       Wires: f8bd9cd0.1bbb3
           tls: 
           url: 
           ret: obj
           method: use
  
  
---------- Node Type: ->switch<-   ->Error?<-      ID: f8bd9cd0.1bbb3       Wires: 79db8e2c.ed8df,80548f87.17108
           checkall: true
           repair: false
           rules: [{"vt":"str","t":"eq","v":"201"},{"t":"else"}]
           outputs: 2
           propertyType: msg
           property: statusCode
  
  
---------- Node Type: ->function<-   ->AppID New User Cleanup<-      ID: 79db8e2c.ed8df       Wires: d749acc8.9acb2
           outputs: 1
           noerr: 0
===Function Start===
//node.warn({"AppID New User Returns": msg})
msg.appid.user = msg.payload;
msg.records.idp_id = msg.payload.id;

delete msg.method;
delete msg.url;
delete msg.responseUrl;
delete msg.headers;
delete msg.statusCode;

return msg
===Function   End===
  
  
---------- Node Type: ->function<-   ->AppID Error<-      ID: 80548f87.17108       Wires: 1b678f08.1410e1
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
if(msg.payload.schemas) {
    msg.errors.push({
        "code": 412,
        "message": {
            "code": msg.payload.status,
            "description": msg.payload.detail,
            "service": "appid"
        }
    });
} else {
    msg.payload.service = "appid";
    msg.errors.push({
        "code": msg.statusCode,
        "message": msg.payload
    });
}
msg.payload = {};
if (msg.hasOwnProperty("req")) {
    return msg;
} else {
    node.warn({"AppID New User Error": msg.errors[0]})
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 1b678f08.1410e1       Wires: <end>

***********************************************************************************************************
Processing Subflow Item: 100   ->AppID Update Device<-    ID: 11fa1bee.eb6984      Wires: [{"y":260,"x":20,"wires":[{"id":"bb709a71.dcf858"}]}]
===Info Start===

===info   End===
  
---------- Node Type: ->function<-   ->AppID Find Device<-      ID: bb709a71.dcf858       Wires: ,b47984e9.c2c9b8
           outputs: 2
           outputLabels: ["skip","ok"]
           noerr: 0
===Function Start===
if (!msg.appid.hasOwnProperty("id")) {
    if (msg.appid.hasOwnProperty("device") && msg.appid.device.hasOwnProperty("id")) {
        //update an already available AppID record.
        msg.appid.id = msg.appid.device.id;
    } else if (msg.hasOwnProperty("device") && msg.device.length === 1 && msg.device[0].hasOwnProperty("idp_id")) {
        msg.appid.id = msg.device[0].idp_id;
    } else if (msg.hasOwnProperty("device") && msg.device.length === 1 && msg.device[0].hasOwnProperty("_id")) {
        var appID = global.get("APPID");
        var device_idx = appID.devices.c_ids.indexOf(msg.device[0]._id);
        if (device_idx >= 0) {
            msg.appid.id = appid.devices.idp_id[device_idx];
        }
    } else if (msg.hasOwnProperty("records") && msg.records.hasOwnProperty("id")){
        var appID = global.get("APPID");
        var device_idx = appID.devices.c_ids.indexOf(msg.records.id);
        if (device_idx >= 0) {
            msg.appid.id = appid.devices.idp_id[device_idx];
        }
    }
}
if (msg.appid.hasOwnProperty("id")) {
    if(!msg.iam) { msg.iam = {} }
    msg.iam.type = "appid";
    return [null,msg];
} else {
    return [msg,null];
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->IAM Mgmt 2.0<-      ID: b47984e9.c2c9b8       Wires: d4c7f6fb.dbdcf8
  
---------- Node Type: ->function<-   ->Get Device<-      ID: d4c7f6fb.dbdcf8       Wires: c7d28003.2d2d4
           outputs: 1
           noerr: 0
===Function Start===
msg.appid.mgmt_url = global.get("VCAP_APPID").credentials.managementUrl;
msg.appid.headers = { "Authorization": msg.appid.authorization }
msg.method = "GET";
msg.url = msg.appid.mgmt_url + "/cloud_directory/Users/" + msg.appid.id;
msg.headers = msg.appid.headers;
return msg;
===Function   End===
  
  
---------- Node Type: ->http request<-   ->APPID MGMT<-      ID: c7d28003.2d2d4       Wires: 3f635259.acf6de
           tls: 
           url: 
           ret: obj
           method: use
  
  
---------- Node Type: ->switch<-   ->Error?<-      ID: 3f635259.acf6de       Wires: 48515f9.64f2ca,764552a6.91ff7c
           checkall: false
           repair: false
           rules: [{"vt":"str","t":"eq","v":"200"},{"t":"else"}]
           outputs: 2
           propertyType: msg
           property: statusCode
  
  
---------- Node Type: ->function<-   ->AppID Update Device<-      ID: 48515f9.64f2ca       Wires: 6bc2faa0.dd7ee4
           outputs: 1
           noerr: 0
===Function Start===
msg.appid.device = msg.payload;
delete msg.method;
delete msg.url;
delete msg.responseUrl;
delete msg.headers;
delete msg.statusCode;
if (msg.appid.device.hasOwnProperty("entitlements")) {
    msg.appid.device.entitlements.forEach(function (ent,idx) {
        if (ent.hasOwnProperty("bl_cloud")) {
            msg.appid.bl_cloud = msg.appid.device.entitlements.splice(idx,1)[0].bl_cloud
            //node.warn({"Found bl_cloud": idx})
        }
    })
}
if (!msg.appid.hasOwnProperty("bl_cloud")) {
    msg.appid.bl_cloud = {
        "doc_type": "device"
    }
}
node.warn({"AppID Update Device": msg})
Object.keys(msg.appid.updates).forEach(function (key) {
    if (key === "c_id") {
        msg.appid.bl_cloud.c_id = msg.appid.updates[key];
    }
    if (key === "system_type") {
        msg.appid.bl_cloud.system_type = msg.appid.updates[key];
    }
    if (key === "email") {
        msg.appid.device.emails = [
            {
              "value": msg.appid.updates[key],
              "primary": true
            }
        ];
    }
    if (key === "status" && ["CONFIRMED"].indexOf(msg.appid.updates[key].toUpperCase()) >= 0) {
        msg.appid.device.status = msg.appid.updates[key]
    }
})
if(!msg.appid.device.entitlements) { msg.appid.device.entitlements = []}
msg.appid.device.entitlements.push({"bl_cloud": msg.appid.bl_cloud});
if(msg.records && msg.records.password) {
    msg.appid.device.password = msg.records.password;
}
msg.method = "PUT";
msg.url = msg.appid.mgmt_url + "/cloud_directory/Users/" + msg.appid.id;
msg.payload = msg.appid.device;
msg.headers = msg.appid.headers;
delete msg.payload.meta;
delete msg.payload.schemas;
delete msg.payload.mfaContext;
delete msg.payload.id;
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->AppID Error<-      ID: 764552a6.91ff7c       Wires: f19f8fbb.0a107
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
if(msg.payload.schemas) {
    msg.errors.push({
        "code": 412,
        "message": {
            "code": msg.payload.status,
            "description": msg.payload.detail,
            "service": "appid"
        }
    });
} else {
    msg.payload.service = "appid";
    msg.errors.push({
        "code": msg.statusCode,
        "message": msg.payload
    });
}
msg.payload = {};
if (msg.hasOwnProperty("req")) {
    return msg;
} else {
    node.warn({"AppID Update Device Error": msg.errors[0]})
}
===Function   End===
  
  
---------- Node Type: ->http request<-   ->APPID MGMT<-      ID: 6bc2faa0.dd7ee4       Wires: 119d24fe.a45b0b
           tls: 
           url: 
           ret: obj
           method: use
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: f19f8fbb.0a107       Wires: <end>
  
---------- Node Type: ->switch<-   ->Error?<-      ID: 119d24fe.a45b0b       Wires: 34dc469d.d26f8a,764552a6.91ff7c
           checkall: true
           repair: false
           rules: [{"vt":"str","t":"eq","v":"200"},{"t":"else"}]
           outputs: 2
           propertyType: msg
           property: statusCode
  
  
---------- Node Type: ->function<-   ->AppID Update Device Cleanup<-      ID: 34dc469d.d26f8a       Wires: c5bb6e36.b66
           outputs: 1
           noerr: 0
===Function Start===
msg.appid.device = msg.payload;

delete msg.method;
delete msg.url;
delete msg.responseUrl;
delete msg.headers;
delete msg.statusCode;
msg.payload = {};

return msg
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: c5bb6e36.b66       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.debug) {
    node.warn({"AppId Update Device": msg});
}
===Function   End===
  

***********************************************************************************************************
Processing Subflow Item: 101   ->AppID Update User<-    ID: 67ed0408.e2437c      Wires: [{"y":180,"x":40,"wires":[{"id":"95eb6b24.16f7f8"}]}]
===Info Start===

===info   End===
  
---------- Node Type: ->function<-   ->AppID Find User<-      ID: 95eb6b24.16f7f8       Wires: ,19afbd7b.6020f3
           outputs: 2
           outputLabels: ["skip","ok"]
           noerr: 0
===Function Start===
if (!msg.appid.hasOwnProperty("id")) {
    if (msg.appid.hasOwnProperty("user") && msg.appid.user.hasOwnProperty("id")) {
        //update an already available AppID record.
        msg.appid.id = msg.appid.user.id;
    } else if (msg.hasOwnProperty("user") && msg.user.length === 1 && msg.user[0].hasOwnProperty("idp_id")) {
        msg.appid.id = msg.user[0].idp_id;
    } else if (msg.hasOwnProperty("user") && msg.user.length === 1 && msg.user[0].hasOwnProperty("_id")) {
        var appID = global.get("APPID");
        var user_idx = appID.users.c_ids.indexOf(msg.user[0]._id);
        if (user_idx >= 0) {
            msg.appid.id = appid.users.idp_id[user_idx];
        }
    } else if (msg.hasOwnProperty("records") && msg.records.hasOwnProperty("id")){
        var appID = global.get("APPID");
        var user_idx = appID.users.c_ids.indexOf(msg.records.id);
        if (user_idx >= 0) {
            msg.appid.id = appID.users.idp_id[user_idx];
        }
    }
}
if (msg.appid.hasOwnProperty("id")) {
    if(!msg.iam) { msg.iam = {} }
    msg.iam.type = "appid";
    return [null,msg];
} else {
    return [msg,null];
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->IAM Mgmt 2.0<-      ID: 19afbd7b.6020f3       Wires: 1c8d8d2a.cb8233
  
---------- Node Type: ->function<-   ->Get User<-      ID: 1c8d8d2a.cb8233       Wires: ebda8ac5.8c7668
           outputs: 1
           noerr: 0
===Function Start===
msg.appid.mgmt_url = global.get("VCAP_APPID").credentials.managementUrl;
msg.appid.headers = { "Authorization": msg.appid.authorization }
msg.method = "GET";
msg.url = msg.appid.mgmt_url + "/cloud_directory/Users/" + msg.appid.id;
msg.headers = msg.appid.headers;
return msg;
===Function   End===
  
  
---------- Node Type: ->http request<-   ->APPID MGMT<-      ID: ebda8ac5.8c7668       Wires: 102f1dcf.e09442
           tls: 
           url: 
           ret: obj
           method: use
  
  
---------- Node Type: ->switch<-   ->Error?<-      ID: 102f1dcf.e09442       Wires: 17577dda.2dd6d2,819b0371.b7a78
           checkall: false
           repair: false
           rules: [{"vt":"str","t":"eq","v":"200"},{"t":"else"}]
           outputs: 2
           propertyType: msg
           property: statusCode
  
  
---------- Node Type: ->function<-   ->AppID Update User<-      ID: 17577dda.2dd6d2       Wires: 8875d11e.92ef9
           outputs: 1
           noerr: 0
===Function Start===
msg.appid.user = msg.payload;
delete msg.appid.user.mfaContext;
delete msg.appid.user.meta;
delete msg.appid.user.schemas;
var c_user = msg.user[0];
delete msg.method;
delete msg.url;
delete msg.responseUrl;
delete msg.headers;
delete msg.statusCode;
if (msg.appid.user.hasOwnProperty("entitlements")) {
    msg.appid.user.entitlements.forEach(function (ent,idx) {
        if (ent.hasOwnProperty("bl_cloud")) {
            msg.appid.bl_cloud = msg.appid.user.entitlements.splice(idx,1)[0].bl_cloud
        }
    })
} else {
    msg.appid.user.entitlements = [];
}
if (msg.appid.user.hasOwnProperty("phoneNumbers")) {
    msg.appid.user.phoneNumbers.forEach(function (phone,idx) {
        if (phone.type === "mobile") {
            msg.appid.mobile = phone;
        }
        if (phone.type === "voice") {
            msg.appid.voice = phone;
        }
    })
    msg.appid.user.phoneNumbers = [];
}
//Hack to enter voice_phone in AppID
if(c_user.voice_phone) {
    msg.appid.updates.voice_phone = c_user.voice_phone
} else {
    delete msg.appid.voice;
}
if (!msg.appid.hasOwnProperty("bl_cloud")) {
    msg.appid.bl_cloud = {
        "c_id": c_user._id,
        "doc_type": "user",
        "role": c_user.role
        //"sub_roles": c_user.sub_roles
    }
}
if (!msg.appid.bl_cloud.c_id || msg.appid.bl_cloud.c_id === "") {
    msg.appid.bl_cloud.c_id = c_user._id;
}
//node.warn({"AppID Update user - Original": msg})
Object.keys(msg.appid.updates).forEach(function (key) {
    if (key === "last_name") {
        msg.appid.user.displayName = msg.appid.user.name.givenName + ", " + msg.appid.updates[key];
        msg.appid.user.name.familyName = msg.appid.updates[key];
        msg.appid.user.name.formatted = msg.appid.user.name.givenName + ", " + msg.appid.updates[key];
    }
    if (key === "first_name") {
        msg.appid.user.displayName = msg.appid.updates[key] + ", " + msg.appid.user.name.familyName;
        msg.appid.user.name.givenName = msg.appid.updates[key];
        msg.appid.user.name.formatted = msg.appid.updates[key] + ", " + msg.appid.user.name.familyName;
    }
    if (key === "email") {
        msg.appid.user.userName = msg.appid.updates[key];
        msg.appid.user.emails = [
            {
              "value": msg.appid.updates[key],
              "primary": true
            }
        ];
    }
    if (key === "password") {
        msg.appid.user.password = msg.appid.updates[key];
    }
    if (key === "mobile_phone") {
        if(msg.appid.updates[key] === "") {
            delete msg.appid.mobile;
        } else {
            msg.appid.mobile = {
                "value": msg.appid.updates[key],
                "type": "mobile"
            };
        }
    }
    if (key === "voice_phone") {
        if(msg.appid.updates[key] === ""){
            delete msg.appid.voice;
        } else {
            msg.appid.voice = {
                "value": msg.appid.updates[key],
                "type": "voice"
            };
        }
    }
    if (key === "role") {
        msg.appid.bl_cloud.role = msg.appid.updates[key];
    }
    if (key === "sub_roles") {
        msg.appid.bl_cloud.sub_roles = msg.appid.updates[key];
    }
    if (key === "c_id") {
        msg.appid.bl_cloud.c_id = msg.appid.updates[key];
    }
})
msg.appid.user.entitlements.push({"bl_cloud": msg.appid.bl_cloud});
if(msg.appid.mobile) {msg.appid.user.phoneNumbers.push(msg.appid.mobile)}
if(msg.appid.voice) {msg.appid.user.phoneNumbers.push(msg.appid.voice)}
if(msg.records && msg.records.password) {
    msg.appid.user.password = msg.records.password;
}
msg.method = "PUT";
msg.url = msg.appid.mgmt_url + "/cloud_directory/Users/" + msg.appid.id;
msg.payload = msg.appid.user;
msg.headers = msg.appid.headers;
delete msg.payload.meta;
delete msg.payload.schemas;
delete msg.payload.mfaContext;
delete msg.payload.id;
//node.warn({"AppID Update user - Request": msg})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->AppID Error<-      ID: 819b0371.b7a78       Wires: 1d92a5f5.e4bf3a
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
if(msg.payload.schemas) {
    msg.errors.push({
        "code": 412,
        "message": {
            "code": msg.payload.status,
            "description": msg.payload.detail,
            "service": "appid"
        }
    });
} else {
    msg.payload.service = "appid";
    msg.errors.push({
        "code": msg.statusCode,
        "message": msg.payload
    });
}
msg.payload = {};
if (msg.hasOwnProperty("req")) {
    return msg;
} else {
    node.warn({"AppID Update User Error": msg.errors[0]});
}
===Function   End===
  
  
---------- Node Type: ->http request<-   ->APPID MGMT<-      ID: 8875d11e.92ef9       Wires: 7cb661c7.ac4f
           tls: 
           url: 
           ret: obj
           method: use
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 1d92a5f5.e4bf3a       Wires: <end>
  
---------- Node Type: ->switch<-   ->Error?<-      ID: 7cb661c7.ac4f       Wires: 45b1df63.9e79a,819b0371.b7a78
           checkall: true
           repair: false
           rules: [{"vt":"str","t":"eq","v":"200"},{"t":"else"}]
           outputs: 2
           propertyType: msg
           property: statusCode
  
  
---------- Node Type: ->function<-   ->AppID Update User Cleanup<-      ID: 45b1df63.9e79a       Wires: febc43f3.28b13
           outputs: 1
           noerr: 0
===Function Start===
msg.appid.user = msg.payload;

delete msg.method;
delete msg.url;
delete msg.responseUrl;
delete msg.headers;
delete msg.statusCode;
msg.payload = {};

return msg
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: febc43f3.28b13       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.debug) {
    node.warn({"AppID Update User": msg});
}
===Function   End===
  

***********************************************************************************************************
Processing Subflow Item: 102   ->Authentication 2.1<-    ID: 3962857e.44abba      Wires: [{"y":160,"x":20,"wires":[{"id":"bfe490a.2c4cf7"}]}]
===Info Start===
Imprements Node-Red Authentication for each API
===info   End===
  
---------- Node Type: ->function<-   ->Start Time<-      ID: bfe490a.2c4cf7       Wires: 514b425d.eea37c
           outputs: 1
           noerr: 0
===Function Start===
msg.api = {
    "start_time": Date.now(),
    "version": global.get("API_VERSION"),
    "statistics": {}
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Headers<-      ID: 514b425d.eea37c       Wires: b8c36493.e64ac8
           outputs: 1
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("req") && msg.req.hasOwnProperty("headers")) {
    if (msg.req.headers.hasOwnProperty("api_info")) {
        msg.api.info = (msg.req.headers.api_info === "true");
    } else {
        msg.api.info = false;
    }
    if (msg.req.headers.hasOwnProperty("api_debug")) {
        msg.api.debug = (msg.req.headers.api_debug === "true");
    } else {
        msg.api.debug = false;
    }
    if (msg.req.headers.hasOwnProperty("api_stats")) {
        msg.api.stats = (msg.req.headers.api_stats === "true");
    } else {
        msg.api.stats = false;
    }
    if (msg.req.headers.hasOwnProperty("debug")) {
        msg.debug = JSON.parse(msg.req.headers.debug)
    }
    if (msg.req.headers.hasOwnProperty("apic")) {
        msg.api.apic = JSON.parse(msg.req.headers.apic)
    }
    if (msg.req.headers.hasOwnProperty("api_encrypt")) {
        msg.api.override_encrypt = (msg.req.headers.api_encrypt === "true")
    }
}
// override info flag here for vx environment
//if (global.get("VCAP").app.application_name.substr(-1) === "x"){ msg.api.info = true; }
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Auth Type<-      ID: b8c36493.e64ac8       Wires: b7b890fe.b54a6,e4adfe3d.c3c6b,6a141388.c3e46c
           outputs: 3
           outputLabels: ["Basic","Bearer","no auth"]
           noerr: 0
===Function Start===
if(msg.req.headers && msg.req.headers.authorization){
    var auth_type = msg.req.headers.authorization.split(" ")[0];
    if(msg.api && msg.api.apic && msg.api.apic.version && ["v4","ve"].indexOf(msg.api.apic.version) >= 0) {
        //v4 only supporst bearer token
        if(auth_type === "Bearer") {
            return [null,msg,null];
        } else {
            return [null,null,msg];
        }
    } else {
        // node red direct and any other version apic support both
        if(auth_type === "Bearer") {
            return [null,msg,null];
        }
        if(auth_type === "Basic") {
            return [msg,null,null];
        }
    }
}
return [null,null,msg];
===Function   End===
  
  
---------- Node Type: ->function<-   ->Basic Auth<-      ID: b7b890fe.b54a6       Wires: ed1d24e.f4bc6d8,c4a24f6a.37c1b,c3e26155.669ab
           outputs: 3
           outputLabels: ["legacy","authorized","unauthorized"]
           noerr: 0
===Function Start===
if(global.get("VCAP_AUTH")) {
    var auth = global.get("VCAP_AUTH").credentials.type + " " + global.get("VCAP_AUTH").auth_key;
    if(msg.req.headers && msg.req.headers.authorization){
        if (msg.req.headers.authorization === auth) {
            if(msg.api && msg.api.debug) {
                msg.api.auth = { "type": "basic" }
            }
            return [null,msg,null]
        }
    }
    return [null,null,msg];
}
return [msg,null,null]
===Function   End===
  
  
---------- Node Type: ->function<-   ->Bearer Auth<-      ID: e4adfe3d.c3c6b       Wires: c4a24f6a.37c1b,99d252f4.5b4ed,d3e04f7d.e76fb
           outputs: 3
           outputLabels: ["authorized","unauthorized","not supported"]
           noerr: 0
===Function Start===
if(global.get('jsrsasign') && global.get("VCAP_APPID") && global.get("APPID_PUB")) {
    var jsr = global.get('jsrsasign');
    var public_key = global.get('APPID_PUB').key_jsr;
    if (msg.req.headers.authorization && msg.req.headers.authorization.split(" ")[0] === "Bearer") {
        msg.authorization = {
            "access_token": msg.req.headers.authorization.split(" ")[1]
        };
        try {
            msg.authorization.token_header = jsr.KJUR.jws.JWS.readSafeJSONString(jsr.b64utoutf8(msg.authorization.access_token.split(".")[0]));
            msg.authorization.token_payload = jsr.KJUR.jws.JWS.readSafeJSONString(jsr.b64utoutf8(msg.authorization.access_token.split(".")[1]));
            msg.authorization.token_isValid = jsr.KJUR.jws.JWS.verifyJWT(msg.authorization.access_token, public_key, {alg: ['RS256'], verifyAt: Math.round(Date.now()/1000)})
        }
        catch(err) {
            return [null,msg,null];
        }
        if(msg.api && msg.api.debug) {
            msg.api.auth = { "type": "bearer" }
        }
        if (msg.authorization.token_isValid) {
            return [msg,null,null];
        } else {
            return [null,msg,null];
        }
    }
}
return [null,null,msg];
===Function   End===
  
  
---------- Node Type: ->function<-   ->Unauthorized<-      ID: 6a141388.c3e46c       Wires: f795cb6f.150988
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 401,
    "message": {
        "code": "invalid_auth",
        "description": "Unauthorized - No valid Credentials"
    }
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Missing Credentials<-      ID: ed1d24e.f4bc6d8       Wires: f795cb6f.150988
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 401,
    "message": {
        "code": "missing_credentials",
        "description":"Unauthorized - Setup is missing credential file linked to system"
    }
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Headers<-      ID: c4a24f6a.37c1b       Wires: aca5a392.3f18f,81dc9242.80e54
           outputs: 1
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("req") && msg.req.hasOwnProperty("headers")) {
    if (msg.req.headers.hasOwnProperty("api_info")) {
        msg.api.info = (msg.req.headers.api_info === "true");
    } else {
        msg.api.info = false;
    }
    if (msg.req.headers.hasOwnProperty("api_debug")) {
        msg.api.debug = (msg.req.headers.api_debug === "true");
    } else {
        msg.api.debug = false;
    }
    if (msg.req.headers.hasOwnProperty("api_stats")) {
        msg.api.stats = (msg.req.headers.api_stats === "true");
    } else {
        msg.api.stats = false;
    }
    if (msg.req.headers.hasOwnProperty("debug")) {
        msg.debug = JSON.parse(msg.req.headers.debug)
    }
    if (msg.req.headers.hasOwnProperty("apic")) {
        msg.api.apic = JSON.parse(msg.req.headers.apic)
    }
    if (msg.req.headers.hasOwnProperty("api_encrypt")) {
        msg.api.override_encrypt = (msg.req.headers.api_encrypt === "true")
    }
}
// override info flag here for vx environment
//if (global.get("VCAP").app.application_name.substr(-1) === "x"){ msg.api.info = true; }
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Unauthorized Basic<-      ID: c3e26155.669ab       Wires: f795cb6f.150988
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 401,
    "message": {
        "code": "invalid_auth",
        "description":"Unauthorized - Wrong Basic Auth Credentials"
    }
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Unauthorized - Invalid Token<-      ID: 99d252f4.5b4ed       Wires: f795cb6f.150988
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 401,
    "message": {
        "code": "invalid_token",
        "description": "Unauthorized - Invalid Token"
    }
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Unauthorized - Token Not Supported<-      ID: d3e04f7d.e76fb       Wires: f795cb6f.150988
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 401,
    "message": {
        "code": "unsupported_auth",
        "description": "Unauthorized - Token Auth Not Supported"
    }
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: f795cb6f.150988       Wires: <end>
  
---------- Node Type: ->function<-   ->debug<-      ID: aca5a392.3f18f       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"Auth": msg});
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Decryption<-      ID: 81dc9242.80e54       Wires: <end>

***********************************************************************************************************
Processing Subflow Item: 103   ->Clean Records 2.1<-    ID: 313bd1d3.01c06e      Wires: [{"y":160,"x":80,"wires":[{"id":"f9ef366a.b61188"}]}]
===Info Start===
It looks at the following object to find the object to apply the delete process.
msg.records.object
msg.payload
It then sets msg.records.object with that object
If msg.records.delete list exist it goes through each record in msg.object and delete any field that match the list.
===info   End===
  
---------- Node Type: ->function<-   ->Clean Record Setup<-      ID: f9ef366a.b61188       Wires: ,e5007f19.1a783
           outputs: 2
           outputLabels: ["skip","execute"]
           noerr: 0
===Function Start===
if(!msg.records.hasOwnProperty("object")){
        if(!msg.cloudant.hasOwnProperty("object")) {
            msg.records.object = "payload";
        }
        else {
            msg.records.object = msg.cloudant.object;
        }
}
if (msg.hasOwnProperty(msg.records.object)) {
    return [null,msg];
} else {
    return [msg,null];
}
    
===Function   End===
  
  
---------- Node Type: ->function<-   ->Records Delete Fields<-      ID: e5007f19.1a783       Wires: 51211fa9.904fe
           outputs: 1
           noerr: 0
===Function Start===
if(msg.records.hasOwnProperty("return_deletes") && msg.records.hasOwnProperty("returns")){
    var obj_list = msg.records.returns.filter(function(object) {
       return ["info","stats","message"].indexOf(object) < 0; 
    });
    obj_list.forEach(function(object){
        if (msg.hasOwnProperty(object) && msg.records.return_deletes.hasOwnProperty(object)) {
            msg[object].forEach(function(record) {
                msg.records.return_deletes[object].forEach(function(propertyName){
                    if(record.hasOwnProperty(propertyName)){
                        delete record[propertyName];
                    }
                });
            });
        }
    });
    return msg;
}
if(msg.records.hasOwnProperty("object") && msg.records.hasOwnProperty("delete")){
    msg[msg.records.object].forEach(function(record) {
        msg.records.delete.forEach(function(propertyName){
            if(record.hasOwnProperty(propertyName)){
                delete record[propertyName];
            }
        });
    });
}
else {
    msg.payload.forEach(function(record) {
        msg.records.delete.forEach(function(propertyName){
            if(record.hasOwnProperty(propertyName)){
                delete record[propertyName];
            }
        });
    });
}
return msg;

===Function   End===
  
  
---------- Node Type: ->function<-   ->Clean Record Cleanup<-      ID: 51211fa9.904fe       Wires: b1a1c80a.2529c8
           outputs: 1
           noerr: 0
===Function Start===
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: b1a1c80a.2529c8       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"Clean Records": msg});
}
===Function   End===
  

***********************************************************************************************************
Processing Subflow Item: 104   ->Cloudant Http 2.2<-    ID: d35dd8d5.3b2a88      Wires: [{"y":220,"x":40,"wires":[{"id":"54621c9b.f201d4"}]}]
===Info Start===
Variables uses:
 msg.cloudant["server", "request", "body", ]
Uses msg.cloudant.server as the abse url for the cloudant instance.
If not found it creates it from VCAP_CLOUDANT global variable.
Formats the url using the cloudant base address and 
20190515 2.2 Changed auth to explicit basic header, deleted old versions
===info   End===
  
---------- Node Type: ->function<-   ->Cloudant Stats Setup<-      ID: 54621c9b.f201d4       Wires: 2a03c952.1c9bc6,d03dd36b.66414
           outputs: 2
           outputLabels: ["ignore","execute"]
           noerr: 0
===Function Start===
if (!msg.hasOwnProperty("cloudant")) {
    return [msg,null]
} else {
    msg.cloudant.loop_count = 0;
    msg.cloudant.retry_count = 0;
    if (!msg.api.hasOwnProperty("statistics")) { msg.api.statistics = {} }
    if (!msg.api.statistics.hasOwnProperty("cloudant")) { msg.api.statistics.cloudant = {
        "req_total": 0,
        "retry_total": 0,
        "req_loops": [],
        "retry_loops": [],
        "req_time_ms": []
    }}
    return [null,msg];
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->Cloudant Stats Total<-      ID: 2a03c952.1c9bc6       Wires: 694368d9.62c798
           outputs: 1
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("cloudant")) {
    if (msg.cloudant.hasOwnProperty("loop_count")) { 
        msg.api.statistics.cloudant.req_total += msg.cloudant.loop_count;
        msg.api.statistics.cloudant.req_loops.push(msg.cloudant.loop_count);
    }
    if (msg.cloudant.hasOwnProperty("retry_count")) { 
        msg.api.statistics.cloudant.retry_total += msg.cloudant.retry_count;
        msg.api.statistics.cloudant.retry_loops.push(msg.cloudant.retry_count);
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Cloudant Setup<-      ID: d03dd36b.66414       Wires: 75d8150c.5acc6c
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.cloudant.hasOwnProperty("loop_limit")) {msg.cloudant.loop_limit = global.get("cloudant_query_limit")}
if(!msg.cloudant.hasOwnProperty("server")) {
    var cloudant = global.get("VCAP_CLOUDANT");
    msg.cloudant.server = "https://" + cloudant.credentials.host;
    msg.cloudant.headers = {
        "Authorization": "Basic " + Buffer.from(cloudant.credentials.username + ':' + cloudant.credentials.password).toString('base64')
    }
}
msg.cloudant.url = msg.cloudant.server + msg.cloudant.request;
msg.cloudant.records = [];
msg.cloudant.body = {};
if(msg.cloudant.hasOwnProperty("method")){msg.method = msg.cloudant.method} else {msg.method = "POST"}
msg.url = msg.cloudant.url;

var findBody = {};
if(msg.cloudant.hasOwnProperty("selector")) { findBody["selector"] = msg.cloudant.selector }
if(msg.cloudant.hasOwnProperty("fields")) { findBody["fields"] = msg.cloudant.fields }
if(msg.cloudant.hasOwnProperty("sort")) { findBody["sort"] = msg.cloudant.sort }
if(msg.cloudant.hasOwnProperty("limit")) { findBody["limit"] = msg.cloudant.limit }
if(msg.cloudant.hasOwnProperty("skip")) { findBody["skip"] = msg.cloudant.skip }
if(msg.cloudant.bookmark_use && msg.inputs.body.hasOwnProperty("bookmark")) {
    if(msg.cloudant.bookmark_type === "payload") {
        findBody["bookmark"] = msg.inputs.body.bookmark;
    }
    else {
        msg.cloudant.url += "&bookmark=" +  msg.inputs.body.bookmark;
    }
}

msg.cloudant.body = findBody;
msg.payload = msg.cloudant.body;
msg.headers = msg.cloudant.headers;
msg.cloudant.start_time = Date.now();
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: 694368d9.62c798       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"Cloudant Http": msg});
}
===Function   End===
  
  
---------- Node Type: ->delay<-   ->Rate Limit 20msg/sec<-      ID: 75d8150c.5acc6c       Wires: d770cd1f.f9447
           nbRateUnits: 1
           randomLast: 5
           timeoutUnits: seconds
           drop: false
           randomUnits: seconds
           rate: 20
           timeout: 5
           randomFirst: 1
           rateUnits: second
           pauseType: rate
  
  
---------- Node Type: ->http request<-   -><-      ID: d770cd1f.f9447       Wires: 51e91443.e2ec4c
           tls: 
           url: 
           ret: obj
           method: use
  
  
---------- Node Type: ->function<-   ->Cloudant Stats<-      ID: 51e91443.e2ec4c       Wires: 285b3c64.8f64b4
           outputs: 1
           noerr: 0
===Function Start===
msg.api.statistics.cloudant.req_time_ms.push(Date.now() - msg.cloudant.start_time);
return msg;
===Function   End===
  
  
---------- Node Type: ->switch<-   ->200, 404, 429<-      ID: 285b3c64.8f64b4       Wires: 934ce807.c2d068,61e2253e.31759c,5ab53c4.3cb1dc4,70c38799.bf5838
           checkall: true
           repair: false
           rules: [{"vt":"str","t":"eq","v":"200"},{"vt":"str","t":"eq","v":"404"},{"vt":"str","t":"eq","v":"429"},{"t":"else"}]
           outputs: 4
           propertyType: msg
           property: statusCode
  
  
---------- Node Type: ->function<-   ->Loop and Combine<-      ID: 934ce807.c2d068       Wires: d518bc91.dddcc,285a85d0.b2f51a
           outputs: 2
           noerr: 0
===Function Start===
msg.cloudant.loop_count += 1;
if(msg.payload.hasOwnProperty("bookmark") && msg.cloudant.bookmark_save) {msg.bookmark = msg.payload.bookmark}
if(msg.cloudant.return_obj === ""){
    msg.cloudant.records = msg.cloudant.records.concat(msg.payload);
    msg.payload = {};
    msg.api.statistics.cloudant.req_loops.push(msg.cloudant.loop_count);
    return [msg, null];
} else {
    if(msg.payload.hasOwnProperty(msg.cloudant.return_obj)) {
        msg.cloudant.records = msg.cloudant.records.concat(msg.payload[msg.cloudant.return_obj]);
        if(!msg.cloudant.hasOwnProperty("limit") || (msg.cloudant.records.length < msg.cloudant.limit)) {
            if(msg.payload.hasOwnProperty("bookmark") && msg.payload[msg.cloudant.return_obj].length >= 200 && msg.cloudant.loop_count<msg.cloudant.loop_limit){
                //Loop
                if(msg.cloudant.bookmark_type === "payload" || msg.cloudant.method !== "GET"){
                    msg.url = msg.cloudant.url;
                    msg.headers = msg.cloudant.headers;
                    msg.cloudant.body.bookmark = msg.payload.bookmark;
                    msg.payload = msg.cloudant.body;
                }
                else {//bookmark_type = "parameter"
                    msg.url = msg.cloudant.url + "&bookmark=" +  msg.payload.bookmark;
                    msg.headers = msg.cloudant.headers;
                }
                msg.cloudant.start_time = Date.now()
                //node.warn({"Cloudant Loop":msg})
                return [null,msg];
            }
        }
        //Exit Loop
        //node.warn({"Cloudant Loop End":msg})
        return [msg, null];
    }
    else {
        //wrong cloudant return object
        node.warn({"Error": "Wrong return object in payload", "Expected": msg.cloudant.return_obj, msg});
    }
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->Error 404 Not Found<-      ID: 61e2253e.31759c       Wires: 2a03c952.1c9bc6
           outputs: 1
           noerr: 0
===Function Start===
msg.api.statistics.cloudant.req_time_ms.push(Date.now() - msg.cloudant.start_time);
msg.api.statistics.cloudant.req_total += msg.cloudant.loop_count;
msg.api.statistics.cloudant.req_loops.push(msg.cloudant.loop_count);
if(!msg.cloudant.hasOwnProperty("object")){
    msg.cloudant.object = msg.records.object
}
if(msg.cloudant.hasOwnProperty("records") && msg.records.format === "array"){
    msg[msg.cloudant.object] = msg.cloudant.records;
} else {
    msg[msg.cloudant.object] = [{}];
}
msg.cloudant.error = {
    "statusCode": msg.statusCode,
    "response": msg.payload
}

delete msg.method; //necessary to avoid error on default nodes
delete msg.url;
delete msg.responseUrl;
delete msg.headers;
delete msg.statusCode;
msg.payload = {};

return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Cloudant Query Limit Retry<-      ID: 5ab53c4.3cb1dc4       Wires: 285a85d0.b2f51a,91d21a4e.ef8058
           outputs: 2
           outputLabels: ["retry","error"]
           noerr: 0
===Function Start===
if (!msg.cloudant.hasOwnProperty("retry_count")) {
    msg.cloudant.retry_count = 1;
} else {
    msg.cloudant.retry_count ++;
}
if (msg.cloudant.retry_count > 50 ) {
    //give up and return error
    return [null,msg];
} else {
    //reformat request
    msg.payload = msg.cloudant.body;
    msg.headers = msg.cloudant.headers;
    msg.cloudant.start_time = Date.now();
    return [msg,null];
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->Cloudant Error<-      ID: 70c38799.bf5838       Wires: 25a06cb8.5d6c44
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": msg.statusCode,
    "message": {
        "code": msg.payload.error,
        "description": msg.payload.reason,
        "service": "cloudant"
    }
});
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Cloudant Object<-      ID: d518bc91.dddcc       Wires: 57b9385d.9648d8
           outputs: 1
           noerr: 0
===Function Start===
delete msg.method; //necessary to avoid error on default nodes
delete msg.url;
delete msg.responseUrl;
delete msg.headers;
delete msg.statusCode;

msg.payload = {};

if(msg.cloudant.return_obj === "rows"){ msg.cloudant.records = msg.cloudant.records.map(a => a.doc)}
if(!msg.cloudant.hasOwnProperty("object")){
    if(!msg.records.hasOwnProperty("object")){
        if(msg.records.hasOwnProperty("doc_type")){
            msg.cloudant.object = msg.records.doc_type;
            if(msg.records.hasOwnProperty("format")){
                if(msg.records.format === "array"){ msg.cloudant.object += "s" }
            }
        }
        else {
            msg.cloudant.object = "payload"
        }
    }
    else {
        msg.cloudant.object = msg.records.object
    }
}
// if object is set to doc_type separate each record based on doc_type
if ((msg.cloudant.object === "doc_type") || (msg.cloudant.object === "doc_types")) {
    msg.cloudant.records.forEach(function(record){
       if (record.hasOwnProperty("doc_type")) {
           var object = record.doc_type;
           if (msg.cloudant.object === "doc_types") { object += "s" }
           if (!msg.hasOwnProperty(object)) { msg[object] = [] }
           msg[object].push(record);
       }
       else {
           if (!msg.hasOwnProperty("document")) { msg.document = [] }
           msg.document.push(record);
       }
    }); 
}
else { 
    msg[msg.cloudant.object] = msg.cloudant.records;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->link out<-   ->Cloudant Loop out<-      ID: 285a85d0.b2f51a       Wires: <end>
           links: ["4dfc5bee.86dae4"]
  
  
---------- Node Type: ->function<-   ->Cloudant Rate Limit Error<-      ID: 91d21a4e.ef8058       Wires: 25a06cb8.5d6c44
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": msg.statusCode,
    "message": {
        "code": msg.payload.error,
        "description": msg.payload.reason,
        "service": "cloudant"
    }
});
node.warn("Cloudant Rate Limit Reached")
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Cloudant Stats Total<-      ID: 25a06cb8.5d6c44       Wires: 7adea78f.8c4e18
           outputs: 1
           noerr: 0
===Function Start===
if (msg.cloudant.hasOwnProperty("loop_count")) { 
    msg.api.statistics.cloudant.req_total += msg.cloudant.loop_count;
    msg.api.statistics.cloudant.req_loops.push(msg.cloudant.loop_count);
}
if (msg.cloudant.hasOwnProperty("retry_count")) { 
    msg.api.statistics.cloudant.retry_total += msg.cloudant.retry_count;
    msg.api.statistics.cloudant.retry_loops.push(msg.cloudant.retry_count);
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Decrypt Cloudant Objects<-      ID: 57b9385d.9648d8       Wires: 2a03c952.1c9bc6
           outputs: 1
           noerr: 0
===Function Start===
var types = ["help_tickets","help_ticket","settings_files","settings_file"];
var objects = Object.keys(msg);
var process = types.filter(value => objects.includes(value))
if(process && process.length >= 0) {
    var cryptojs = global.get('cryptojs');
    var key = global.get('CRYPTO_KEYS').cloudant.payload;
    var field_list = [];
    process.forEach(function(type) {
        if(["help_tickets","help_ticket"].indexOf(type) >= 0) { field_list = ["contact_name", "contact_number", "surgeon_settings_name"]; }
        if(["settings_files","settings_file"].indexOf(type) >= 0) { field_list = ["file_name"]; }
        if(Array.isArray(msg[type])) {
            msg[type].forEach(function(record,idx){
                field_list.forEach(function(field){
                    var efield = "e_" + field;
                    if(record[efield]) {
                        if(record[efield] !== "") {
                            try {
                                record[field] = JSON.parse(cryptojs.AES.decrypt(record[efield],key).toString(cryptojs.enc.Utf8));
                            }
                            catch(e){ node.warn({"Decrypt ERROR": e}) }
                        } else {
                            record[field] = "";
                        }
                        delete record[efield];
                    }
                });
            });
        } else {
            field_list.forEach(function(field){
                //node.warn(field)
                var efield = "e_" + field;
                if(msg[type][efield]) {
                    if(msg[type][efield] !== "") {
                        try {
                            msg[type][field] = JSON.parse(cryptojs.AES.decrypt(msg[type][efield],key).toString(cryptojs.enc.Utf8));
                        }
                        catch(e){ node.warn( {"Decrypt ERROR": e}) }
                    } else {
                        msg[type][field] = "";
                    }
                    delete msg[type][efield];
                }
            });
        }
    });
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 7adea78f.8c4e18       Wires: <end>

***********************************************************************************************************
Processing Subflow Item: 105   ->Cloudant Setup 2.0<-    ID: f83a5f50.ef8e      Wires: [{"y":160,"x":60,"wires":[{"id":"1addfec1.69f9f1"}]}]
===Info Start===

===info   End===
  
---------- Node Type: ->function<-   ->Setup<-      ID: 1addfec1.69f9f1       Wires: 23b78bed.56ef34
           outputs: 1
           noerr: 0
===Function Start===
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Filter To Cloudant<-      ID: 23b78bed.56ef34       Wires: 2db3ffe8.069ff
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("filters") && msg.filters.hasOwnProperty("options")){
    if(msg.hasOwnProperty("cloudant")) {
        //format filters for cloudant filtering
        var andFilters = [];
        if(msg.filters.hasOwnProperty("values")) {
            Object.keys(msg.filters.values).forEach(function(propertyName){
                var andObject = {};
                andObject[propertyName] = msg.filters.values[propertyName];
                andFilters.push(andObject);
            });
        }
        if(msg.filters.hasOwnProperty("arrays")) {
            Object.keys(msg.filters.arrays).forEach(function(propertyName){
                var inArray = {};
                inArray[propertyName] = {};
                inArray[propertyName].$in = msg.filters.arrays[propertyName];
                andFilters.push(inArray);
            });
        }
        if(msg.filters.hasOwnProperty("dates")) {
        Object.keys(msg.filters.dates).forEach(function(rangePropertyName){
                var dateObject = {};
                var dateValue = parseInt(msg.filters.dates[rangePropertyName]);
                var propertyName = rangePropertyName.substring(0,rangePropertyName.indexOf("_range",0));
                if(rangePropertyName.includes("_range_begin")){
                     dateObject[propertyName] = { "$gt": dateValue};
                }
                else{
                    dateObject[propertyName] = { "$lt": dateValue};
                }
                andFilters.push(dateObject);
            });
        }
        if(msg.filters.hasOwnProperty("partial")) {
        Object.keys(msg.filters.partial).forEach(function(partialPropertyName){
                var partialObject = {};
                var partialValue = msg.filters.partial[partialPropertyName];
                var propertyName = partialPropertyName.substring(0,partialPropertyName.indexOf("_partial",0));
                partialObject[propertyName] = {"$regex": "(?i)^" + partialValue};
                andFilters.push(partialObject);
            });
        }
        if(msg.filters.hasOwnProperty("like")) {
        Object.keys(msg.filters.like).forEach(function(likePropertyName){
                var likeObject = {};
                var likeValue = msg.filters.like[likePropertyName];
                var propertyName = likePropertyName.substring(0,likePropertyName.indexOf("_like",0));
                likeObject[propertyName] = {"$regex": likeValue};
                andFilters.push(likeObject);
            });
        }
        /*
        if(andFilters.length >1) {
            msg.cloudant.selector = {"$and": andFilters};
        }
        else {
            msg.cloudant.selector = andFilters[0];
        }*/
        msg.cloudant.selector = {"$and": andFilters};
    }
}
if(msg.hasOwnProperty("records") && msg.records.hasOwnProperty("fields")){
    msg.cloudant.fields = msg.records.fields;
}
if(msg.hasOwnProperty("records") && msg.records.hasOwnProperty("sort")){
    msg.cloudant.sort = msg.records.sort; //array of { "<propertyName>:<value Type>": "asc"/"desc" }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Pagination to Cloudant<-      ID: 2db3ffe8.069ff       Wires: 30b52c07.dc8dd4
           outputs: 1
           noerr: 0
===Function Start===
if(msg.cloudant.hasOwnProperty("pagination") && msg.cloudant.pagination) {
    if(msg.req.query.hasOwnProperty("limit") || msg.req.query.hasOwnProperty("offset")){
        if(msg.req.query.hasOwnProperty("limit")) {
            msg.cloudant.limit = parseInt(msg.req.query.limit);
        }
        if(msg.req.query.hasOwnProperty("offset")) {
            msg.cloudant.skip = parseInt(msg.req.query.offset);
        }
        //msg.records.returns.push("bookmark"); //Not Needed
        msg.cloudant.bookmark_save = true;
    }
    else {
        msg.cloudant.bookmark_save = false;
    }
}
else {
    msg.cloudant.bookmark_save = false;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Cleanup<-      ID: 30b52c07.dc8dd4       Wires: 44061979.9f3078
           outputs: 1
           noerr: 0
===Function Start===
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: 44061979.9f3078       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"Cloudant Setup": msg});
}
===Function   End===
  

***********************************************************************************************************
Processing Subflow Item: 106   ->Cloudant Test Data 2.0<-    ID: 42e57474.0f0cac      Wires: [{"y":40,"x":40,"wires":[{"id":"34cfd7dc.07ad48"}]}]
===Info Start===
Set 
payload to JSON with the following fields:
{ 
  "api_name": <common name of the API>,
  "test_name": <name of the test>,
  "object": <field in the record to be inserted in payload>
}

Returns record[object] in payload
If no record is found a node.warn is returned and flow stops
===info   End===
  
---------- Node Type: ->function<-   ->Get Test Data<-      ID: 34cfd7dc.07ad48       Wires: 19b980a0.a9002f
           outputs: 1
           noerr: 0
===Function Start===
msg = msg.payload
msg.url = global.get("VCAP_CLOUDANT").credentials.url + "/test_data/_find";
msg.method = "POST";
msg.payload = {
    "selector": {
        "api_name": msg.api_name,
        "test_name": msg.test_name
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->http request<-   ->Get Test Data<-      ID: 19b980a0.a9002f       Wires: 8c590d57.95c94
           tls: 
           url: 
           ret: obj
           method: use
  
  
---------- Node Type: ->function<-   ->Inject Data in Payload<-      ID: 8c590d57.95c94       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.payload.hasOwnProperty("docs") && msg.payload.docs.length > 0 && msg.hasOwnProperty("object")) {
    msg = {
        "payload": msg.payload.docs[0][msg.object]
    }
    return msg;
} else {
    node.warn({"Cloudant Test Data 2.0": "Test Data NOT found"})
}
===Function   End===
  

***********************************************************************************************************
Processing Subflow Item: 107   ->DashDB Http<-    ID: 2a17b7c7.4eaf08      Wires: [{"y":100,"x":60,"wires":[{"id":"b19df8b3.0b1828"}]}]
===Info Start===

===info   End===
  
---------- Node Type: ->function<-   ->DashDB Setup<-      ID: b19df8b3.0b1828       Wires: 7d6be2d6.b16bbc,3c0558a.1a4f1a8
           outputs: 2
           outputLabels: ["skip","execute"]
           noerr: 0
===Function Start===
if(msg.dashdb) {
    if(!msg.iam) {
        msg.iam = {
            "type": "dashdb"
        }
    }
    return [null,msg];
}
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: 7d6be2d6.b16bbc       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"DashDB Http": msg});
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->IAM Mgmt 2.0<-      ID: 3c0558a.1a4f1a8       Wires: d7abc96e.231908
  
---------- Node Type: ->function<-   ->DashDB Request<-      ID: d7abc96e.231908       Wires: 9dc5a99.4e71c58
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.dashdb.server) {
    msg.dashdb.credentials = global.get("VCAP_DASHDB").credentials;
    msg.dashdb.server = msg.dashdb.credentials.https_url;
}
msg.dashdb.url = msg.dashdb.server + msg.dashdb.request;
msg.url = msg.dashdb.url;
msg.method = msg.dashdb.method;
if(msg.method !== "GET" && msg.dashdb.body) { msg.payload = msg.dashdb.body; }
if(!msg.headers){ msg.headers = {} }
msg.headers.Authorization = msg.dashdb.authorization;
return msg;
===Function   End===
  
  
---------- Node Type: ->http request<-   ->DashDB http<-      ID: 9dc5a99.4e71c58       Wires: d285fa93.2552e8
           tls: 
           url: 
           ret: txt
           method: use
  
  
---------- Node Type: ->switch<-   ->200, 201<-      ID: d285fa93.2552e8       Wires: 3ccc46f8.57cdfa,3ccc46f8.57cdfa,492fc35d.43bd1c
           checkall: true
           repair: false
           rules: [{"vt":"str","t":"eq","v":"201"},{"vt":"str","t":"eq","v":"200"},{"t":"else"}]
           outputs: 3
           propertyType: msg
           property: statusCode
  
  
---------- Node Type: ->function<-   ->DashDB Process Returns<-      ID: 3ccc46f8.57cdfa       Wires: 7d6be2d6.b16bbc
           outputs: 1
           noerr: 0
===Function Start===
msg.dashdb.results = JSON.parse(msg.payload);
if(msg.dashdb.return_obj) {
    if(msg.dashdb.results[msg.dashdb.return_obj]){
        msg.dashdb[msg.dashdb.object] = msg.dashdb.results[msg.dashdb.return_obj];
    } else {
        node.warn("DashDB return_obj: " + msg.dashdb.return_obj + " was not found.")
    }
}
msg.payload = {};
delete msg.headers;
delete msg.url;
delete msg.statusCode;
delete msg.responseUrl;
delete msg.responseCookies;
delete msg.topic;
delete msg.method;
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->DashDB Process Returns<-      ID: 3ccc46f8.57cdfa       Wires: 7d6be2d6.b16bbc
           outputs: 1
           noerr: 0
===Function Start===
msg.dashdb.results = JSON.parse(msg.payload);
if(msg.dashdb.return_obj) {
    if(msg.dashdb.results[msg.dashdb.return_obj]){
        msg.dashdb[msg.dashdb.object] = msg.dashdb.results[msg.dashdb.return_obj];
    } else {
        node.warn("DashDB return_obj: " + msg.dashdb.return_obj + " was not found.")
    }
}
msg.payload = {};
delete msg.headers;
delete msg.url;
delete msg.statusCode;
delete msg.responseUrl;
delete msg.responseCookies;
delete msg.topic;
delete msg.method;
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->DashDBError<-      ID: 492fc35d.43bd1c       Wires: 3aeec3e9.68197c
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": msg.statusCode,
    "message": {
        "code": msg.statusCode,
        "descritpion": msg.payload,
        "service": "dashdb"
    }
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 3aeec3e9.68197c       Wires: <end>

***********************************************************************************************************
Processing Subflow Item: 108   ->DashDB SQL<-    ID: 5b840ccd.bdbfc4      Wires: [{"y":120,"x":40,"wires":[{"id":"8c5f15d.8f4dce8"}]}]
===Info Start===

===info   End===
  
---------- Node Type: ->function<-   ->SQL SELECT Statement<-      ID: 8c5f15d.8f4dce8       Wires: d6bea762.f55398
           outputs: 1
           noerr: 0
===Function Start===
if(msg.dashdb && msg.dashdb.select){
    if(msg.hasOwnProperty("filters") && msg.filters.hasOwnProperty("options")){
        if(msg.hasOwnProperty("dashdb")) {
            var andFilters = [];
            var addFilter = "";
            if(msg.filters.hasOwnProperty("values")) {
                Object.keys(msg.filters.values).forEach(function(propertyName){
                    addFilter = propertyName + " = \'" + msg.filters.values[propertyName] + "\'";
                    andFilters.push(addFilter);
                });
            }
            if(msg.filters.hasOwnProperty("arrays")) {
                Object.keys(msg.filters.arrays).forEach(function(propertyName){
                    addFilter = propertyName + " IN (\'" + msg.filters.arrays[propertyName].join("\',\'") +"\')";
                    andFilters.push(addFilter);
                });
            }
            if(msg.filters.hasOwnProperty("dates")) {
                var date_columns = [];
                var date_filters = [];
                Object.keys(msg.filters.dates).forEach(function(rangePropertyName){
                    var dateValue = new Date(parseInt(msg.filters.dates[rangePropertyName]));
                    var dateString = dateValue.getFullYear() + "-" + ('0' + (dateValue.getMonth()+1)).slice(-2) + "-" + ('0' + dateValue.getDate()).slice(-2) + " " + ('0' + dateValue.getHours()).slice(-2) + ":" + ('0' + dateValue.getMinutes()).slice(-2) + ":" + ('0' + dateValue.getSeconds()).slice(-2) + "." + dateValue.getMilliseconds();
                    var propertyName = rangePropertyName.substring(0,rangePropertyName.indexOf("_range",0));
                    if(rangePropertyName.includes("_range_begin")){
                         addFilter = "(" + propertyName + " >= \'" + dateString + "\')";
                    } else{
                        addFilter = "(" + propertyName + " <= \'" + dateString + "\')";
                    }
                    andFilters.push(addFilter);
                });
            }
            if(msg.filters.hasOwnProperty("partial")) {
            Object.keys(msg.filters.partial).forEach(function(partialPropertyName){
                    var partialValue = msg.filters.partial[partialPropertyName];
                    var propertyName = partialPropertyName.substring(0,partialPropertyName.indexOf("_partial",0));
                    addFilter = propertyName + " LIKE " + partialValue + "%";
                    andFilters.push(addFilter);
                });
            }
            if(andFilters.length >0) {
                msg.dashdb.where = "WHERE " + andFilters.join(" AND ");
            } else {
                msg.dashdb.where = "";
            }
        }
    }
    msg.dashdb.commands = msg.dashdb.select;
    if(msg.dashdb.where) { msg.dashdb.commands = msg.dashdb.commands + " " + msg.dashdb.where; }
    if(msg.dashdb.sort) { msg.dashdb.commands = msg.dashdb.commands + " " + msg.dashdb.sort; }
}
return msg;


===Function   End===
  
  
---------- Node Type: ->function<-   ->DashDB SQL Setup<-      ID: d6bea762.f55398       Wires: 3ec16871.b58648
           outputs: 1
           noerr: 0
===Function Start===
msg.dashdb.request = "/dbapi/v3/sql_jobs";
msg.dashdb.method = "POST";
delete msg.dashdb.return_obj
msg.dashdb.body = {
    "commands": msg.dashdb.commands,
    "limit": msg.dashdb.limit,
    "separator": ";",
	"stop_on_error": false
};
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->DashDB Http<-      ID: 3ec16871.b58648       Wires: 2f8e1b99.2fa454
  
---------- Node Type: ->function<-   ->DashDB Get job_id<-      ID: 2f8e1b99.2fa454       Wires: 35652eff.a95602
           outputs: 1
           noerr: 0
===Function Start===
msg.dashdb.job_id = msg.dashdb.results.id;
delete msg.dashdb.rows 
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->DashDB SQL Setup<-      ID: 35652eff.a95602       Wires: 85f0bdf0.833a2
           outputs: 1
           noerr: 0
===Function Start===
msg.dashdb.request = "/dbapi/v3/sql_jobs/" + msg.dashdb.job_id;
msg.dashdb.method = "GET";
delete msg.dashdb.results;
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->DashDB Http<-      ID: 85f0bdf0.833a2       Wires: e3600962.e33318
  
---------- Node Type: ->function<-   ->DashDB Get all Records<-      ID: e3600962.e33318       Wires: b3baa402.ee4498,4548938f.17c7cc,cfa6a12b.afef7
           outputs: 3
           outputLabels: ["done","loop","error"]
           noerr: 0
===Function Start===
// only supports one SQL statement at the time for now.
if(msg.dashdb.results && msg.dashdb.results.results && msg.dashdb.results.results.length > 0) {
    var sql_req = msg.dashdb.results.results[0];
    sql_req.records = [];
    if(sql_req.rows) {
        sql_req.rows.forEach(function(row) {
            var record = {};
            sql_req.columns.forEach(function(col,idx) {
                var type = sql_req.columns_type[idx];
                switch(type) {
                    case "number":
                        record[col] = parseInt(row[idx]);
                        break;
                    case "time":
                        record[col] = Date.parse(row[idx] + "GMT");
                        break;
                    default:
                        record[col] = row[idx].trim();
                }
            });
            sql_req.records.push(record);
        });
        msg.dashdb.sql_req = sql_req;
    } else {
        msg.dashdb.error = {
            "message": sql_req.error,
            "code": 400
        }
        return [null,null,msg];
    }
}
if(!msg.dashdb.records) {
    if(!msg.dashdb.sql_req) {msg.dashdb.sql_req = {}}
    msg.dashdb.records = msg.dashdb.sql_req.records;
} else {
    msg.dashdb.records = msg.dashdb.records.concat(msg.dashdb.sql_req.records);
}
if(msg.dashdb.results.status === "completed") {
    return [msg,null,null];
} else {
    return [null,msg,null];
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->DashDB Object<-      ID: b3baa402.ee4498       Wires: 21a8fbbb.847ea4
           outputs: 1
           noerr: 0
===Function Start===
if(msg.dashdb.object) {
    msg[msg.dashdb.object] = msg.dashdb.records;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->link out<-   ->SQL Loop in<-      ID: 4548938f.17c7cc       Wires: <end>
           links: ["796e77a.4747988"]
  
  
---------- Node Type: ->function<-   ->DashDBError<-      ID: cfa6a12b.afef7       Wires: bafd19b1.437e68
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": msg.dashdb.error.code,
    "message": {
        "code": msg.dashdb.error.code,
        "description": msg.dashdb.error.message,
        "service": "dashdb"
    }
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: 21a8fbbb.847ea4       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"DashDB SQL": msg});
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: bafd19b1.437e68       Wires: <end>

***********************************************************************************************************
Processing Subflow Item: 109   ->Decryption<-    ID: f7b5cbff.598508      Wires: [{"y":80,"x":40,"wires":[{"id":"e1900411.9c5ae8"}]}]
===Info Start===

===info   End===
  
---------- Node Type: ->function<-   ->Check Encryption<-      ID: e1900411.9c5ae8       Wires: ca46ff2a.7ec5e,af682a75.b6daf8
           outputs: 2
           outputLabels: ["no encryption","encryption"]
           noerr: 0
===Function Start===
msg.api.encrypt = false;
if (msg.api.apic && ["v4","ve"].indexOf(msg.api.apic.version) >= 0) { 
    if(!msg.force_encryption) {
        if (msg.api.apic.catalog) { 
            var unencrypted_cat = ["dapp", "erplx", "eula"];
            var encrypted = true;
            unencrypted_cat.forEach(function(cat){
                if(RegExp("^"+ cat,"g").test(msg.api.apic.catalog)) {
                    encrypted = false;
                }
            })
            msg.api.encrypt = encrypted
        }
    } else {
        msg.api.encrypt = true;
    }
}
var SPACE = global.get("SPACE");
if (["Development", "US Test"].indexOf(SPACE) >= 0 && msg.api.hasOwnProperty("override_encrypt")) {
    msg.api.encrypt = msg.api.override_encrypt;
}
if(msg.api.encrypt) {
    return [null,msg];
} else {
    return [msg,null];
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->Decrypt Cleanup<-      ID: ca46ff2a.7ec5e       Wires: d9096a9f.275358
           outputs: 1
           noerr: 0
===Function Start===
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Check Payload Encryption<-      ID: af682a75.b6daf8       Wires: ca46ff2a.7ec5e,eba1fe6d.2e37b,7dde1afa.d404f4
           outputs: 3
           outputLabels: ["skip","encrypted","not encrypted"]
           noerr: 0
===Function Start===
if (msg.payload) {
    if (msg.payload.ciphertext) {
        if (IsJsonString(msg.payload.ciphertext)) {
            node.warn({"Expected Enc - Body - Not Encrypted": msg})
            msg.payload = {};
            return [null,null,msg]
        } else {
            node.warn({"Expected Enc - Body - Encrypted": msg})
            msg.encryption = {
                "ciphertext": msg.payload
            }
            msg.payload = {};
            return [null,msg,null]
        }
    } else {
        if (Object.keys(msg.payload).length > 0) {
            node.warn({"Expected Enc - Body - Not Encrypted": msg})
            msg.payload = {};
            return [null,null,msg]
        }
    }
}
return [msg,null,null]

function IsJsonString(str) {
try {
    return (str.indexOf('{') >= 0);
  } catch (e) {
    return false;
  }
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: d9096a9f.275358       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"Decryption": msg});
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->Decrypt<-      ID: eba1fe6d.2e37b       Wires: ca46ff2a.7ec5e,eb57155f.526f18,dc9c6289.c9cd5
           outputs: 3
           outputLabels: ["decrypted","failed","not available"]
           noerr: 0
===Function Start===
if (msg.encryption && msg.encryptionciphertext) {
    var cryptojs = global.get('cryptojs');
    var encryption_available = global.get("CRYPTO_KEYS");
    if(encryption_available && encryption_available.com) {
        if (!msg.encryption.key) {msg.encryption.key = global.get("CRYPTO_KEYS").com.payload}
        try {
            msg.encryption.decrypted = JSON.parse(cryptojs.AES.decrypt(msg.encryption.ciphertext, msg.encryption.key).toString(cryptojs.enc.Utf8));
            msg.payload = msg.encryption.decrypted
            return [msg,null,null];
        }
        catch(error) {
            return [null,msg,null]
        }
    } else {
        node.warn("WARNING [Com Decryption]: On this setup Communication Decryption is NOT available")
        return [null,null,msg]
    }
}
return [msg,null,null];
===Function   End===
  
  
---------- Node Type: ->function<-   ->Body Not Encrypted<-      ID: 7dde1afa.d404f4       Wires: f50f5ea3.bbe9d
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 403,
    "message": "Decryption - Failed: Body not encrypted",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Decryption Failed<-      ID: eb57155f.526f18       Wires: f50f5ea3.bbe9d
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 403,
    "message": "Decryption - Failed: cypertext could not be decrypted",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Decryption Not Available<-      ID: dc9c6289.c9cd5       Wires: f50f5ea3.bbe9d
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 403,
    "message": "Decryption - Failed: cypertext could not be decrypted",
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: f50f5ea3.bbe9d       Wires: <end>

***********************************************************************************************************
Processing Subflow Item: 110   ->Email 2.2<-    ID: 5dbd57cc.fc9bb8      Wires: [{"y":100,"x":40,"wires":[{"id":"bb960040.7d816"}]}]
===Info Start===
msg.email =
{
  "send": "true",
  "template_type": "default",
  "fields": {},
  "to": ["to@b.com"],
  "cc": ["cc@b.com"]
  "bcc": ["bcc@b.com"]
  "topic": ""
}
Overrides:
msg.email.send === "false"
or
msg.email.send === "true"
msg.api.debug === "true"
msg.debug.email.to = <override email>

Template fields out replaced:
{{{field}}}
===info   End===
  
---------- Node Type: ->function<-   ->Setup<-      ID: bb960040.7d816       Wires: ,9f406a53.f97dc8
           outputs: 2
           outputLabels: ["no email","yes email"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("email") && msg.email.hasOwnProperty("to") && ( (Array.isArray(msg.email.to) && msg.email.to.length > 0) ||  msg.email.to !== "") ) {
    if ( (Array.isArray(msg.email.to) && msg.email.to.length === 0) || msg.email.to === "") {
             return [msg,null];
    }
    msg.apic = {
        "url": global.get("EULA_CATALOG")
    }
    if(!msg.email.return) {
        delete msg.res;
        delete msg.req;
    }
    return [null,msg];
}
return [msg,null]
===Function   End===
  
  
---------- Node Type: ->function<-   ->Check Template<-      ID: 9f406a53.f97dc8       Wires: bd2fe652.82c918,65919f4d.91575
           outputs: 2
           outputLabels: ["no template","yes template"]
           noerr: 0
===Function Start===
if (msg.email.hasOwnProperty("template_type")) {
    if (!msg.email.hasOwnProperty("fields")) {msg.email.fields = {}}
    msg.email.fields.apic_server = msg.apic.url;
    msg.email.fields.email_from = "no-reply.IoTServices@Bausch.com";
    return [null,msg];
}
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->function<-   ->Template Processing<-      ID: bd2fe652.82c918       Wires: 96c73689.41cd78
           outputs: 1
           noerr: 0
===Function Start===
if(msg.email.template && msg.email.fields) {
    Object.keys(msg.email.fields).forEach(function(field) {
        var tag = "{{{" + field + "}}}";
        msg.email.template = msg.email.template.replace(RegExp(tag, 'g'), msg.email.fields[field])
    });
}
msg.payload = msg.email.template;
if(msg.email.topic) {msg.topic = msg.email.topic}
if(msg.email.to) {
    if (Array.isArray(msg.email.to)) {
        msg.to = msg.email.to.join(" , ");
    } else {
        msg.to = msg.email.to;
    }
}
if(msg.email.cc) {
        if (Array.isArray(msg.email.cc)) {
        msg.cc = msg.email.cc.join(" , ");
    } else {
        msg.cc = msg.email.cc;
    }
}
if(msg.email.bcc) {
    if (Array.isArray(msg.email.bcc)) {
        msg.bcc = msg.email.bcc.join(" , ");
    } else {
        msg.bcc = msg.email.bcc;
    }
}
if(msg.email.files && msg.email.files.length > 0) {
    // file attachements
    var file = msg.email.files[0];
    msg.filename = file.originalname;
    msg.payload = file.buffer;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->switch<-   ->template_type<-      ID: 65919f4d.91575       Wires: 593bdd0b.fbdf34,8212c433.518408,e315f683.67cbd8,37d7d60f.cf7bba,5ccb4407.36faec,25c6e7df.230978,521ce329.1a21dc,11c00066.cca8b,bf320d02.d8846
           checkall: true
           repair: false
           rules: [{"vt":"str","t":"eq","v":"welcome"},{"vt":"str","t":"eq","v":"thankyou"},{"vt":"str","t":"eq","v":"acceptance"},{"vt":"str","t":"eq","v":"help_ticket"},{"vt":"str","t":"eq","v":"rem_conn"},{"vt":"str","t":"eq","v":"config_file"},{"vt":"str","t":"eq","v":"device_birth"},{"vt":"str","t":"eq","v":"device_change"},{"t":"else"}]
           outputs: 9
           propertyType: msg
           property: email.template_type
  
  
---------- Node Type: ->function<-   ->Debug Setup<-      ID: 96c73689.41cd78       Wires: 891726ae.68c7b8,6cc5e7f5.857148
           outputs: 1
           noerr: 0
===Function Start===
var SPACE = global.get("SPACE");
if (["Development", "US Test"].indexOf(SPACE) >= 0) {
   msg.topic = "[" + SPACE + "] " + msg.topic;
}
if(msg.api.hasOwnProperty("debug") && (msg.api.debug === true || msg.api.debug.override)) {
    if(msg.hasOwnProperty("debug") && msg.debug.hasOwnProperty("email")){
        if(msg.debug.email.hasOwnProperty("to")){ msg.to = msg.debug.email.to; }
        if(msg.debug.email.hasOwnProperty("send") && (msg.debug.email.send === false)){
            node.warn({"Email Not Sent to": msg.to});
            delete msg.to;
        } else {
            node.warn({"Email Sent to": msg.to});
        }
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->change<-   ->Welcome<-      ID: 593bdd0b.fbdf34       Wires: 1b3ef7f5.121ef8
           property: 
           from: 
           rules: [{"p":"email.template_file","tot":"str","t":"set","pt":"msg","to":"B+L_Eyetelligence_EULA_v1.html"},{"p":"email.topic","tot":"str","t":"set","pt":"msg","to":"EULA Agreement"}]
           reg: false
           to: 
           action: 
  
  
---------- Node Type: ->change<-   ->Thank You<-      ID: 8212c433.518408       Wires: 2988c5c0.8b57aa
           property: 
           from: 
           rules: [{"p":"email.template_file","tot":"str","t":"set","pt":"msg","to":"B+L_Eyetelligence_ThankYou_v1.html"},{"p":"email.topic","tot":"str","t":"set","pt":"msg","to":"EULA Agreement Confirmation"}]
           reg: false
           to: 
           action: 
  
  
---------- Node Type: ->change<-   ->Acceptance<-      ID: e315f683.67cbd8       Wires: 5a100d21.bc08b4
           property: 
           from: 
           rules: [{"p":"email.template_file","tot":"str","t":"set","pt":"msg","to":"B+L_Eyetelligence_Acceptance_v1.html"}]
           reg: false
           to: 
           action: 
  
  
---------- Node Type: ->change<-   ->Help Ticket<-      ID: 37d7d60f.cf7bba       Wires: 2988c5c0.8b57aa
           property: 
           from: 
           rules: [{"p":"email.template_file","tot":"str","t":"set","pt":"msg","to":"B+L_Eyetelligence_Help_Ticket_00.html"}]
           reg: false
           to: 
           action: 
  
  
---------- Node Type: ->change<-   ->Rem Conn<-      ID: 5ccb4407.36faec       Wires: 2988c5c0.8b57aa
           property: 
           from: 
           rules: [{"p":"email.template_file","tot":"str","t":"set","pt":"msg","to":"B+L_Eyetelligence_Rem_Conn_00.html"}]
           reg: false
           to: 
           action: 
  
  
---------- Node Type: ->change<-   ->Config File<-      ID: 25c6e7df.230978       Wires: 2988c5c0.8b57aa
           property: 
           from: 
           rules: [{"p":"email.template_file","tot":"str","t":"set","pt":"msg","to":"B+L_Eyetelligence_Config_File_00.html"}]
           reg: false
           to: 
           action: 
  
  
---------- Node Type: ->change<-   ->Device Birth<-      ID: 521ce329.1a21dc       Wires: 2988c5c0.8b57aa
           property: 
           from: 
           rules: [{"p":"email.template_file","tot":"str","t":"set","pt":"msg","to":"B+L_Eyetelligence_Device_Birth_00.html"}]
           reg: false
           to: 
           action: 
  
  
---------- Node Type: ->change<-   ->Device Change<-      ID: 11c00066.cca8b       Wires: 2988c5c0.8b57aa
           property: 
           from: 
           rules: [{"p":"email.template_file","tot":"str","t":"set","pt":"msg","to":"B+L_Eyetelligence_Device_Change_00.html"}]
           reg: false
           to: 
           action: 
  
  
---------- Node Type: ->function<-   ->Template Not Supported<-      ID: bf320d02.d8846       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
node.warn({"Email Error:" : "Email template type: " + msg.email.template_type + " is not supported."})
===Function   End===
  
  
---------- Node Type: ->function<-   ->Debug Send<-      ID: 891726ae.68c7b8       Wires: b5f8e84c.b5b468
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("to")) {
    return msg;
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: 6cc5e7f5.857148       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"Email": msg});
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->EULA Link<-      ID: 1b3ef7f5.121ef8       Wires: 2988c5c0.8b57aa
           outputs: 1
           noerr: 0
===Function Start===
msg.email.fields.eula_link = msg.apic.url + "/users/verify/" + msg.email.key
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Object Setup<-      ID: 2988c5c0.8b57aa       Wires: f637ef7b.74e6a
           outputs: 1
           noerr: 0
===Function Start===
msg.cos = {
    "method": "GET",
    "filename": msg.email.template_file,
    "container": "email-templates"
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Acceptance Topic<-      ID: 5a100d21.bc08b4       Wires: 2988c5c0.8b57aa
           outputs: 1
           noerr: 0
===Function Start===
msg.email.topic = "Confirmation of user creation for Dr. " + msg.email.fields.surgeon_first_name + " " + msg.email.fields.surgeon_last_name
return msg;
===Function   End===
  
  
---------- Node Type: ->e-mail<-   -><-      ID: b5f8e84c.b5b468       Wires: <end>
           secure: false
           dname: Elite.IoT@bausch.com
           server: smtp.office365.com
           port: 587
  
  
---------- Node Type: ->subflow<-   ->Object Storage 2.1<-      ID: f637ef7b.74e6a       Wires: 8041ed2a.a021d
  
---------- Node Type: ->function<-   ->Object Return<-      ID: 8041ed2a.a021d       Wires: bd2fe652.82c918
           outputs: 1
           noerr: 0
===Function Start===
msg.email.template = msg.cos.return.toString("utf-8")
return msg;
===Function   End===
  

***********************************************************************************************************
Processing Subflow Item: 111   ->Encryption<-    ID: 86df012b.3eb7e      Wires: [{"y":160,"x":40,"wires":[{"id":"ac2f644e.9dd8f8"}]}]
===Info Start===

===info   End===
  
---------- Node Type: ->function<-   ->Check Encryption<-      ID: ac2f644e.9dd8f8       Wires: 64c933b6.4c341c,c1ff557a.425668
           outputs: 2
           outputLabels: ["no encryption","encryption"]
           noerr: 0
===Function Start===
if(msg.api.encrypt) {
    var encryption_available = global.get("CRYPTO_KEYS")
    if(encryption_available && encryption_available.com) {
        return [null,msg];
    } else {
        node.warn("WARNING [Com Encryption]: On this setup Communication Encrytpion is NOT available")
        return [msg,null];
    }
} else {
    return [msg,null];
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->Encryption Cleanup<-      ID: 64c933b6.4c341c       Wires: b381842f.bf47d8
           outputs: 1
           noerr: 0
===Function Start===
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Encrypt Returns<-      ID: c1ff557a.425668       Wires: 64c933b6.4c341c
           outputs: 1
           noerr: 0
===Function Start===
if (!msg.encryption) { msg.encryption = {} }
if (!msg.encryption.key) { msg.encryption.key = global.get("CRYPTO_KEYS").com.payload }
msg.encryption.to_encrypt = {}
var clear_list = ["info", "error", "stats", "error_fields", "reason"]
Object.keys(msg.payload).forEach(function(key) {
    if (clear_list.indexOf(key) < 0) {
        msg.encryption.to_encrypt[key] = msg.payload[key];
        delete msg.payload[key];
    }
})
if (Object.keys(msg.encryption.to_encrypt).length > 0) {
    var cryptojs = global.get('cryptojs');
    msg.encryption.ciphertext = cryptojs.AES.encrypt(JSON.stringify(msg.encryption.to_encrypt), msg.encryption.key).toString();
    msg.payload.ciphertext =  msg.encryption.ciphertext;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: b381842f.bf47d8       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"Encryption": msg});
}
===Function   End===
  

***********************************************************************************************************
Processing Subflow Item: 112   ->Google Location 2.0<-    ID: d1af1cc8.e0fda      Wires: [{"y":60,"x":40,"wires":[{"id":"9531b8f5.005c08"}]}]
===Info Start===
uses
msg.inputs.body.location
and returns
msg.inputs.body.geo_location
===info   End===
  
---------- Node Type: ->function<-   ->Check Location<-      ID: 9531b8f5.005c08       Wires: 3bd74387.03639c,47d467e8.16f018
           outputs: 2
           outputLabels: ["no loc","yes loc"]
           noerr: 0
===Function Start===
if(!msg.inputs.body.hasOwnProperty("location") && !msg.inputs.body.hasOwnProperty("cell_tower_info")) {
    //node.warn({"Google Loc Test": !msg.inputs.body.hasOwnProperty("location") && !msg.inputs.body.hasOwnProperty("cell_tower_info")})
    return [msg,null]
}
if (msg.inputs.body.hasOwnProperty("location")) {
    var carrier = msg.inputs.body.location.carrier;
    var cellTowers = [{
        "cellId": msg.inputs.body.location.cellId,
        "locationAreaCode": msg.inputs.body.location.locationAreaCode,
        "mobileCountryCode": msg.inputs.body.location.mobileCountryCode,
        "mobileNetworkCode": msg.inputs.body.location.mobileNetworkCode
    }];
}
if (msg.inputs.body.hasOwnProperty("cell_tower_info")) {
    var carrier = msg.inputs.body.cell_tower_info.Carrier;
    var cellTowers = [{
        "cellId": msg.inputs.body.cell_tower_info.CellID,
        "locationAreaCode": msg.inputs.body.cell_tower_info.LAC,
        "mobileCountryCode": msg.inputs.body.cell_tower_info.MCC,
        "mobileNetworkCode": msg.inputs.body.cell_tower_info.MNC
    }];
}
node.warn({"Google Loc Test": cellTowers})
if (cellTowers.cellId === 0) {
    return [msg,null]
}
msg.url = global.get("VCAP_GOOGLE").credentials["Google_Geolocate_url"] + "?key=" + global.get("VCAP_GOOGLE").credentials.key;
msg.payload = {
    "carrier" : carrier,
    "considerIP" : false,
    "cellTowers" : cellTowers
};
return [null,msg];  

===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: 3bd74387.03639c       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.debug) {
    node.warn({"Google Location": msg});
}
===Function   End===
  
  
---------- Node Type: ->http request<-   ->Coordinates by Cell Info<-      ID: 47d467e8.16f018       Wires: 67a9b438.23fefc
           tls: 
           url: 
           ret: obj
           method: POST
  
  
---------- Node Type: ->function<-   ->Extract Lat & Lng<-      ID: 67a9b438.23fefc       Wires: e220d288.2368c,837f04ae.861f28
           outputs: 2
           outputLabels: ["no geo","yes geo"]
           noerr: 0
===Function Start===
if (msg.payload.hasOwnProperty("location") && msg.payload.location.hasOwnProperty("lat") && msg.payload.location.hasOwnProperty("lng"))
{
    msg.inputs.body.geo_location = [ msg.payload.location.lng, msg.payload.location.lat ];
    msg.url = global.get("VCAP_GOOGLE").credentials["Google_Geocoding_url"] + "?key=" + global.get("VCAP_GOOGLE").credentials.key + "&latlng=" + msg.payload.location.lat + "," + msg.payload.location.lng;
    return [null,msg];
}
else
{
    return [msg,null];
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->clean up<-      ID: e220d288.2368c       Wires: 3bd74387.03639c
           outputs: 1
           noerr: 0
===Function Start===
delete msg.topic;
delete msg.url;
delete msg.responseUrl;
delete msg.statusCode;
delete msg.method;
delete msg.headers;
return msg;
===Function   End===
  
  
---------- Node Type: ->http request<-   ->Coordinates by Lat & Lng<-      ID: 837f04ae.861f28       Wires: 1140d829.f33a88
           tls: 
           url: 
           ret: obj
           method: POST
  
  
---------- Node Type: ->function<-   ->Extract Address<-      ID: 1140d829.f33a88       Wires: e220d288.2368c
           outputs: 1
           noerr: 0
===Function Start===
if (msg.payload.hasOwnProperty("results"))
{
    msg.inputs.body.address = msg.payload.results[0].formatted_address
}
return msg;
===Function   End===
  

***********************************************************************************************************
Processing Subflow Item: 113   ->IAM Mgmt 2.0<-    ID: ab306e30.d0cc3      Wires: [{"y":180,"x":40,"wires":[{"id":"be86d379.943a6"}]}]
===Info Start===
Manages all IAM Tokens in the system.
Stored them in TOKENS global variable
inputs:
msg.iam = {
    "type": <type>
}
checks if a valid token is available and return it
checks the expiration if present and refresh it if necessary
uses the appropriate VCAP credentials to get the token
returns:
msg.iam[type] = <access_token>
msg[type].token = "<token_type> <access_token>"
Supported type: cos, cloudant, keyprotect
===info   End===
  
---------- Node Type: ->function<-   ->IAM Skip<-      ID: be86d379.943a6       Wires: ,5268805f.92bc5
           outputs: 2
           outputLabels: ["skip","execute"]
           noerr: 0
===Function Start===
if(msg.iam && msg.iam.type && (!msg[msg.iam.type] || !msg[msg.iam.type].authorization)) {
    return [null,msg];
}
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->function<-   ->IAM Check Token<-      ID: 5268805f.92bc5       Wires: 5440f228.63411c,718667fc.df6078,ee07c62.23f4238,14b4a1fc.79f63e
           outputs: 4
           outputLabels: ["valid","new-refresh","error",""]
           noerr: 0
===Function Start===
var tokens = global.get("TOKENS");
var type = msg.iam.type;
var mgmt = msg.iam.mgmt;
if(!msg.iam.url) { msg.iam.url = "https://iam.bluemix.net/identity/token"; } //find a better place to get this url
if(!msg.iam.headers) {
     msg.iam.headers = {
        "accept": "application/json",
        "content-type": "application/x-www-form-urlencoded"
    }
}
if(tokens && tokens[type]) {
    msg.iam.token = tokens[type];
    if(msg.iam.token.expiration > (Date.now()/1000) + 60) {
        return [msg,null,null,null]; // return token
    }
}
msg.iam.credentials = global.get("VCAP_" + type.toUpperCase()).credentials;
if(!msg.iam.credentials) {
    return [null,null,null,msg] // error
}
msg.iam.body = "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=" + msg.iam.credentials.apikey + "&response_type=cloud_iam";
node.warn("New Api Key Token for " + msg.iam.type);
if(type === "dashdb") {
    return [null,null,msg,null]; // new DashDB token
}
if(type === "appid" && mgmt) {
    msg.iam.url = "https://iam.cloud.ibm.com/oidc/token";
    msg.iam.headers.Authorization = "Basic " + Buffer.from(msg.iam.credentials.clientId + ':' + msg.iam.credentials.secret).toString('base64')
    if(msg.iam.token && msg.iam.token.refresh_token) {
        msg.iam.body = "grant_type=refresh_token&refresh_token=" + msg.iam.token.refresh_token + "&response_type=cloud_iam";
        node.warn("Refresh Token for " + msg.iam.type);
    } else {
        msg.iam.body = "grant_type=client_credentials&scope=openid&response_type=cloud_iam";
        node.warn("New Token for " + msg.iam.type);
    }
}
return [null,msg,null,null]; // new token
===Function   End===
  
  
---------- Node Type: ->function<-   ->IAM Return Authorization<-      ID: 5440f228.63411c       Wires: ad489be8.83b808
           outputs: 1
           noerr: 0
===Function Start===
var authorization = msg.iam.token.token_type + " " + msg.iam.token.access_token;
if(msg[msg.iam.type]) {
    msg[msg.iam.type].authorization = authorization;
} else {
    msg[msg.iam.type] = {
        "authorization": authorization
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->IAM Setup<-      ID: 718667fc.df6078       Wires: ddaa190d.17c168
           outputs: 1
           outputLabels: ["error","ok"]
           noerr: 0
===Function Start===
msg.url = msg.iam.url;
msg.headers = msg.iam.headers;
msg.payload = msg.iam.body;
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->DashDB Token Setup<-      ID: ee07c62.23f4238       Wires: 66078a5b.0e1a14
           outputs: 1
           outputLabels: ["error"]
           noerr: 0
===Function Start===
msg.iam.url = msg.iam.credentials.https_url + "/dbapi/v3/auth/tokens";
msg.iam.headers = {};
msg.iam.body = {
	"userid": msg.iam.credentials.username,
	"password": msg.iam.credentials.password
}
msg.headers = msg.iam.headers;
msg.url = msg.iam.url;
msg.payload = msg.iam.body;
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->IAM Credentials Error<-      ID: 14b4a1fc.79f63e       Wires: 319e6624.b4ff4a
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "IAM credentials for " + msg.iam.type + " are not configured."
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: ad489be8.83b808       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.debug === true && msg.api.version) {
    node.warn({"IAM Manager": msg});
}
===Function   End===
  
  
---------- Node Type: ->http request<-   ->POST<-      ID: ddaa190d.17c168       Wires: 34d99932.b68a26
           tls: 
           url: 
           ret: obj
           method: POST
  
  
---------- Node Type: ->http request<-   ->POST<-      ID: 66078a5b.0e1a14       Wires: 81c91dd2.dbf5e
           tls: 
           url: 
           ret: obj
           method: POST
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 319e6624.b4ff4a       Wires: <end>
  
---------- Node Type: ->function<-   ->IAM Auth Token<-      ID: 34d99932.b68a26       Wires: 666acb09.36f164,1f349275.1d59ce
           outputs: 2
           outputLabels: ["ok","error"]
           noerr: 0
===Function Start===
if (msg.statusCode === 200) {
    msg.iam.token = msg.payload
    msg.payload = {};
    delete msg.headers;
    delete msg.url;
    delete msg.statusCode;
    delete msg.responseUrl;
    delete msg.responseCookies;
    delete msg.topic;
    return [msg,null];
} else {
    return [null,msg]
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->DashDB Auth Token<-      ID: 81c91dd2.dbf5e       Wires: 666acb09.36f164,1f349275.1d59ce
           outputs: 2
           outputLabels: ["ok","error"]
           noerr: 0
===Function Start===
if (msg.statusCode === 200) {
    msg.iam.token = {
        "access_token": msg.payload.token,
        "token_type":"Bearer",
        "expires_in":3600,
        "expiration": Math.round(3600 + Date.now()/1000)
    }
    msg.payload = {};
    delete msg.headers;
    delete msg.url;
    delete msg.statusCode;
    delete msg.responseUrl;
    delete msg.responseCookies;
    delete msg.topic;
    return [msg,null];
} else {
    return [null,msg]
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->Save Token<-      ID: 666acb09.36f164       Wires: 5440f228.63411c
           outputs: 1
           noerr: 0
===Function Start===
var tokens = global.get("TOKENS");
if(!tokens) { tokens = {} }
tokens[msg.iam.type] = msg.iam.token;
global.set("TOKENS", tokens)
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->IAM Auth Error<-      ID: 1f349275.1d59ce       Wires: 319e6624.b4ff4a
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": msg.statusCode,
    "message": msg.payload
})
return msg;
===Function   End===
  

***********************************************************************************************************
Processing Subflow Item: 114   ->IAM Token 2.0<-    ID: a8815016.d1158      Wires: [{"y":100,"x":40,"wires":[{"id":"f57d2f7d.1ee9c"}]}]
===Info Start===

===info   End===
  
---------- Node Type: ->function<-   ->IAM Inputs<-      ID: f57d2f7d.1ee9c       Wires: c626119d.cdecf,a6247270.c8aee
           outputs: 2
           outputLabels: ["error","ok"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("iam") && msg.iam.hasOwnProperty("apikey")){
    msg.iam.url = "https://iam.bluemix.net/oidc/token";
    msg.iam.body = "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=" + msg.iam.apikey + "&response_type=cloud_iam"
    msg.iam.headers = {
        "accept": "application/json",
        "content-type": "application/x-www-form-urlencoded"
    };
} else {
    return [msg,null]
}
msg.url = msg.iam.url;
//msg.url = "https://iam.bluemix.net/oidc/token";
msg.headers = msg.iam.headers;
msg.payload = msg.iam.body;
//msg.payload = "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=WPplASjWGKPKJeF-HCcVDk-OfgQ1wcT059f6I57zXI7X&response_type=cloud_iam"
return [null,msg]
===Function   End===
  
  
---------- Node Type: ->function<-   ->IAM Inputs Error<-      ID: c626119d.cdecf       Wires: 97678e95.32f21
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "IAM subflow missing inputs"
})
===Function   End===
  
  
---------- Node Type: ->http request<-   ->POST<-      ID: a6247270.c8aee       Wires: 7270274.a1b58d8
           tls: 
           url: 
           ret: obj
           method: POST
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 97678e95.32f21       Wires: <end>
  
---------- Node Type: ->function<-   ->Auth Token<-      ID: 7270274.a1b58d8       Wires: 447a939f.1a92fc,9f08a84b.dfa518
           outputs: 2
           outputLabels: ["error","ok"]
           noerr: 0
===Function Start===
if (msg.statusCode === 200) {
    msg.iam.auth = Object.assign(msg.payload, msg.iam.auth)
    if (msg.iam.hasOwnProperty("add_obj") && msg.hasOwnProperty(msg.iam.add_obj)) { msg[msg.iam.add_obj].auth = msg.iam.auth }
    msg.payload = {};
    delete msg.headers;
    delete msg.url;
    delete msg.statusCode;
    delete msg.reponseUrl;
    delete msg.responseCookies;
    return [null,msg];
} else {
    return [msg,null]
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->IAM Auth Error<-      ID: 447a939f.1a92fc       Wires: 97678e95.32f21
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": msg.statusCode,
    "message": msg.payload
})
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: 9f08a84b.dfa518       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"IAM Token": msg});
}
===Function   End===
  

***********************************************************************************************************
Processing Subflow Item: 115   ->Info & Stats 2.0<-    ID: b6210d1b.09e3a      Wires: [{"y":180,"x":80,"wires":[{"id":"7296ac0b.83c144"}]}]
===Info Start===

===info   End===
  
---------- Node Type: ->function<-   ->Info<-      ID: 7296ac0b.83c144       Wires: 6b661b5.70e66e4
           outputs: 1
           noerr: 0
===Function Start===
if (msg.api.info) {
    msg.info = {
        "name": msg.api.name,
        "version": msg.api.version
    };
    if (msg.api.hasOwnProperty("path") && msg.api.hasOwnProperty("paths")) {
        var path = {
            "path": msg.api.path,
            "paths": msg.api.paths
        }
    } else {
        var path = {
            "path": 1,
            "paths": 1
        }
    }
    msg.info = Object.assign(msg.info, path);
    if (msg.api.hasOwnProperty("example")) { msg.info.example = msg.api.example }
    if (msg.hasOwnProperty("inputs") && msg.inputs.hasOwnProperty("required") && msg.inputs.required.length > 0) { msg.info.inputs_required = msg.inputs.required }
    if (msg.hasOwnProperty("inputs") && msg.inputs.hasOwnProperty("allowed") && msg.inputs.allowed .length > 0) { msg.info.inputs_allowed = msg.inputs.allowed }
    if (msg.hasOwnProperty("filters") && msg.filters.hasOwnProperty("required") && msg.filters.required.length > 0) { msg.info.filters_required = msg.filters.required }
    if (msg.hasOwnProperty("filters") && msg.filters.hasOwnProperty("allowed") && msg.filters.allowed.length > 0) { msg.info.filters_allowed = msg.filters.allowed }

    if (msg.records.hasOwnProperty("returns")) {
        if (msg.records.returns.indexOf("info") < 0 ) { msg.records.returns.unshift("info") }
    } else {
        msg.records.returns = ["info"]
    }
    if (msg.api.hasOwnProperty("apic")){
        msg.info.apic = msg.api.apic
    }
    var system = global.get("SYSTEM")
    if(system) {
        msg.info.app = system.name;
        msg.info.instance = system.instance;
        msg.info.space = system.space;
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Stats<-      ID: 6b661b5.70e66e4       Wires: 6b8c0164.25435
           outputs: 1
           noerr: 0
===Function Start===
if (msg.api.stats) {
    msg.stats = msg.api.statistics
    
    if (msg.records.hasOwnProperty("returns")) {
        if (msg.records.returns.indexOf("stats") < 0 ) { msg.records.returns.push("stats") }
    } else {
        msg.records.returns = ["stats"]
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: 6b8c0164.25435       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.debug && (msg.api.info || msg.api.stats)) {
    node.warn({"Info & Stats": msg});
}
===Function   End===
  

***********************************************************************************************************
Processing Subflow Item: 116   ->Inputs 2.2<-    ID: 71afa3f9.81defc      Wires: [{"y":120,"x":80,"wires":[{"id":"9366b740.5b24c8"}]}]
===Info Start===
copies msg.payload to msg.inputs.body and deletes the payload
copies msg.inputs.body.fitler_options to msg.fitlers.options if it exist

Checks msg.inputs.body for required and allowed fields from:
msg.inputs.required
msg.inputs.allowed

Checks msg.filters.options for required and allowed fields from:
msg.filters.required
msg.fitlers.allowed

Checks for email format
Checks for uid format

Checks msg.inputs.params and add those values to msg.filters.options

Process all msg.filters.options and remove "" and [] filters from the list.
Process the reminder of filters and separate them in 3 lists:
msg.filters.values single value filters
msg.filters.arrays array of values filters
msg.filters.dates _range_begin and _range_end filters

===info   End===
  
---------- Node Type: ->function<-   ->Setup<-      ID: 9366b740.5b24c8       Wires: a6e5ec6a.96ded
           outputs: 1
           noerr: 0
===Function Start===
msg.inputs.body = Object.assign({},msg.payload);
if(msg.inputs.body.hasOwnProperty("filter_options") && msg.hasOwnProperty("filters")) { msg.filters.options = Object.assign({},msg.inputs.body.filter_options)}
msg.payload = {};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Check Inputs<-      ID: a6e5ec6a.96ded       Wires: c2650b08.281dc8,6e62136f.a8385c
           outputs: 2
           noerr: 0
===Function Start===
var errors = [];
if(msg.hasOwnProperty("inputs")) {
    if(msg.inputs.hasOwnProperty("required") && Array.isArray(msg.inputs.required))
    {
        msg.inputs.required.forEach(function(field)
        {
            if(!msg.inputs.body.hasOwnProperty(field))
            {
                errors.push(field);
            }
        });
         if(errors.length !== 0)
        {
            msg.error_fields = errors;
            return [ null, msg ];
        }
    }
    if(msg.inputs.hasOwnProperty("allowed") && Array.isArray(msg.inputs.allowed))
    {
        if(msg.inputs.hasOwnProperty("required")) {msg.inputs.allowed = msg.inputs.required.concat(msg.inputs.allowed)} //All required fields are allowed
        Object.keys(msg.inputs.body).forEach(function(field)
        {
            if(msg.inputs.allowed.indexOf(field)<0)
            {
                delete msg.inputs.body[field]; //remove illegal fields do not error
                //errors.push(field);
            }
        });
    /* Add if return error for not allowed fields
         if(errors.length === 0)
        {
            return [ msg, null ];
        }
        else
        {
            msg.headers = {"Content-type" : "application/json"};
            msg.statusCode = 400;
            msg.payload = {"illegal_body_fields":[errors]};
            return [ null, msg ];
        }
    */
    }
}
/*if(msg.inputs.body.hasOwnProperty("mobile_phone")){
    var phone_regex = new RegExp(global.get("REGEXP").mobile_phone,"g");
    if(typeof msg.inputs.body.mobile_phone !== 'string' || (!phone_regex.test(msg.inputs.body.mobile_phone)))
    {
        if(!msg.hasOwnProperty("errors")){msg.errors = []}
            msg.errors.push({
                "code": 412,
                "message": "The Mobile Phone (" + msg.inputs.body.mobile_phone + ") is not in the correct format."
            });
        return [  null, msg ];
    }
}
if(msg.inputs.body.hasOwnProperty("voice_phone")){
    var phone_regex = new RegExp(global.get("REGEXP").voice_phone,"g");
    if(typeof msg.inputs.body.voice_phone !== 'string' || (!phone_regex.test(msg.inputs.body.voice_phone)))
    {
        if(!msg.hasOwnProperty("errors")){msg.errors = []}
            msg.errors.push({
                "code": 412,
                "message": "The Voice Phone (" + msg.inputs.body.voice_phone + ") is not in the correct format."
            });
        return [  null, msg ];
    }
}*/
if(msg.inputs.body.hasOwnProperty("password")){
    var password_regex = new RegExp(global.get("REGEXP").password,"g");
    if(typeof msg.inputs.body.password !== 'string' || (!password_regex.test(msg.inputs.body.password)))
    {
        if(!msg.hasOwnProperty("errors")){msg.errors = []}
            msg.errors.push({
                "code": 412,
                "message": "The password doesn't meet the strength requirements."
            });
        return [  null, msg ];
    }
}
if(msg.inputs.body.hasOwnProperty("system_sn")){
    var system_sn_regex = new RegExp(global.get("REGEXP").system_sn,"g");
    msg.inputs.body.system_sn = msg.inputs.body.system_sn.toUpperCase();
    if(typeof msg.inputs.body.system_sn !== 'string' || (!system_sn_regex.test(msg.inputs.body.system_sn)))
    {
        if(!msg.hasOwnProperty("errors")){msg.errors = []}
            msg.errors.push({
                "code": 412,
                "message": "System SN (" + msg.inputs.body.system_sn + ") not in proper format."
            });
        return [  null, msg ];
    }
}
if(msg.inputs.body.hasOwnProperty("email")){
    var re = new RegExp(global.get("REGEXP").email);
    if(typeof msg.inputs.body.email !== 'string' || (!re.test(msg.inputs.body.email)))
    {
        if(!msg.hasOwnProperty("errors")){msg.errors = []}
            msg.errors.push({
                "code": 412,
                "message": "Email (" + msg.inputs.body.email + ") not in proper format."
            });
        return [  null, msg ];
    }
    msg.inputs.body.email = msg.inputs.body.email.toLowerCase();
    if(msg.inputs.body.uid && msg.inputs.body.uid.length>0)
    {   
        msg.inputs.body.uid = safeToString(msg.inputs.body.uid);
    }
}

return [ msg, null ];

//Used to convert something to a string
function safeToString(x) {
  switch (typeof x) {
    case 'object':
      return 'object';
    case 'function':
      return 'function';
    default:
      return x + '';
  }
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->Check Filters<-      ID: c2650b08.281dc8       Wires: 9120565a.7298f8,6814fe1c.ec122
           outputs: 2
           noerr: 0
===Function Start===
var errors = [];
if(msg.hasOwnProperty("filters")) {
    if(msg.filters.hasOwnProperty("required")  && msg.filters.hasOwnProperty("options") && Array.isArray(msg.filters.required))
    {
        msg.filters.required.forEach(function(field)
        {
            if(!msg.filters.options.hasOwnProperty(field))
            {
                errors.push(field);
            }
        });
        if(errors.length !== 0)
        {
            msg.error_fields = errors;
            return [ null, msg ];
        }
    }
    if(msg.filters.hasOwnProperty("allowed") && msg.filters.hasOwnProperty("options") && Array.isArray(msg.filters.allowed))
    {
        if(msg.filters.hasOwnProperty("required")) {msg.filters.allowed = msg.filters.required.concat(msg.filters.allowed)} //All required fields are allowed
        Object.keys(msg.filters.options).forEach(function(field)
        {
            if(msg.filters.allowed.indexOf(field)<0)
            {
                delete msg.filters.options[field]; //remove illegal filter option do not error
                //node.warn({"CHK Inputs": "Remove Filter", "Filter Field": field});
                //errors.push(field);
            }
        });
    /* Add if return error for not allowed fields
         if(errors.length === 0)
        {
            return [ msg, null ];
        }
        else
        {
            msg.headers = {"Content-type" : "application/json"};
            msg.statusCode = 400;
            msg.payload = {"illegal_filter_options":[errors]};
            return [ null, msg ];
        }
    */
    }
}
return [ msg, null ];
===Function   End===
  
  
---------- Node Type: ->function<-   ->Missing Required Body Fields<-      ID: 6e62136f.a8385c       Wires: 44304eec.b88b6
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 412,
    "message": "Missing required body fields.",
    "returns": ["error_fields"]
});
msg.records.format = "array";
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Process Filters<-      ID: 9120565a.7298f8       Wires: 8bc261aa.d6ad2
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("filters") && msg.filters.hasOwnProperty("params")){
    if(!msg.filters.hasOwnProperty("options")){
        msg.filters.options = {}
    }
    Object.keys(msg.filters.params).forEach(function(paramKey)
    {
        msg.filters.options[paramKey] = msg.filters.params[paramKey];
    });
}
if(msg.hasOwnProperty("filters") && msg.filters.hasOwnProperty("options")){
    //remove empty filters
    Object.keys(msg.filters.options).forEach(function(propertyName){
    	var propertyValue = msg.filters.options[propertyName];
    	//check if empty string
    	if(propertyValue === "" || (propertyValue.length === 0)) {
    		delete msg.filters.options[propertyName];
    	}
    });
    var filterList = Object.assign({},msg.filters.options);
    msg.filters.values = {}; //will contain single filters
    msg.filters.dates = {}; //will contain date filters
    msg.filters.arrays = {}; //will contain array filters
    msg.filters.partial = {}; //will contain partial filters
    msg.filters.like = {}; //will contain like filters
    //move array and time filters to thier lists
    Object.keys(filterList).forEach(function(propertyName){
    	var propertyValue = filterList[propertyName];
    	//relocate if array and not empty to arrayFilter
    	if(Array.isArray(propertyValue)){
    		if(propertyValue.length > 0){
    			msg.filters.arrays[propertyName] = propertyValue;
    		}
    		delete filterList[propertyName];
    	}
    	//relocate time filters to timeFilter
    	if(propertyName.includes("_range_begin") || propertyName.includes("_range_end")) {
    		msg.filters.dates[propertyName] = propertyValue;
    		delete filterList[propertyName];
    	}
    	//relocated partial search
    	if(propertyName.includes("_like")) {
    		msg.filters.like[propertyName] = propertyValue;
    		delete filterList[propertyName];
    	}
    	msg.filters.values = filterList;
    });
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Missing Required filter_options Fields<-      ID: 6814fe1c.ec122       Wires: 44304eec.b88b6
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 412,
    "message": "Missing required filter_options fields.",
    "returns": ["error_fields"]
});
msg.records.format = "array";
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 44304eec.b88b6       Wires: <end>
  
---------- Node Type: ->function<-   ->Check Input Values<-      ID: 8bc261aa.d6ad2       Wires: c541bab7.920618,399b8cd0.d0e8f4
           outputs: 2
           noerr: 0
===Function Start===
var errors = [];
if(msg.hasOwnProperty("inputs") && msg.inputs.hasOwnProperty("body") && msg.inputs.hasOwnProperty("values")) { 
    Object.keys(msg.inputs.values).forEach(function(key) {
        if (msg.inputs.body.hasOwnProperty(key)) {
            if (Array.isArray(msg.inputs.body[key])) {
                msg.inputs.body[key].forEach(function(value) {
                     if(msg.inputs.values[key].indexOf(value) < 0) {
                         var error_key = {};
                         error_key[key] = value;
                         errors.push(error_key);
                    }
                })
            } else {
                if(msg.inputs.values[key].indexOf(msg.inputs.body[key]) < 0) {
                    var error_key = {};
                    error_key[key] = msg.inputs.body[key];
                    errors.push(error_key);
                }
            }
        }
    })
}
if (errors.length > 0) {
    msg.error_keys = errors;
    return [null,msg];
} else {
    return [msg,null];   
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->Check Input Data Type<-      ID: c541bab7.920618       Wires: acdaf127.7ffc5,8220fc30.6bebf
           outputs: 2
           noerr: 0
===Function Start===
var errors = [];
if(msg.hasOwnProperty("inputs") && msg.inputs.hasOwnProperty("body") && msg.inputs.hasOwnProperty("types")) { 
    Object.keys(msg.inputs.types).forEach(function(key) {
        if (msg.inputs.body.hasOwnProperty(key)) {
            if(typeof(msg.inputs.body[key]) !== msg.inputs.types[key]) {
                     var error_key = {};
                     error_key[key] = msg.inputs.types[key];
                     errors.push(error_key);
                }
        }
    })
}
if (errors.length > 0) {
    msg.error_keys = errors;
    return [null,msg];
} else {
    return [msg,null];   
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->Invalid Input Value<-      ID: 399b8cd0.d0e8f4       Wires: 44304eec.b88b6
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 412,
    "message": "Invalid key values.",
    "returns": ["error_keys"]
});
msg.records.format = "array";
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Check Attachments<-      ID: acdaf127.7ffc5       Wires: 1cce4f59.4185d1,fb30b5a0.4a80e8
           outputs: 2
           noerr: 0
===Function Start===
var errors = [];
if(msg.hasOwnProperty("inputs") && msg.inputs.hasOwnProperty("attach_num") && msg.inputs.attach_num > 0) {
    // Check if there is an attachment or a file field in the body
    if (msg.req.headers.hasOwnProperty("content-type") && msg.req.headers["content-type"].includes("multipart/form-data")) {
        if (msg.req.hasOwnProperty("files") && msg.req.files.length === msg.inputs.attach_num) { return [msg,null] } else { return [null,msg] }
    } else if (msg.req.headers.hasOwnProperty("content-type") && msg.req.headers["content-type"].includes("application/json")) {
        if ((msg.req.hasOwnProperty("body") && msg.req.body.hasOwnProperty("file") && msg.req.body.file !== "") || (msg.cos && msg.cos.file && msg.cos.file.buffer && msg.cos.file.buffer.length > 0)) { return [msg,null] } else { return [null,msg] }
    } else {
        return [null,msg]
    }
}
return [msg,null]
===Function   End===
  
  
---------- Node Type: ->function<-   ->Invalid Input Data Type<-      ID: 8220fc30.6bebf       Wires: 44304eec.b88b6
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 412,
    "message": "Invalid key data type.",
    "returns": ["error_keys"]
});
msg.records.format = "array";
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Cleanup<-      ID: 1cce4f59.4185d1       Wires: b0a3f154.45812
           outputs: 1
           noerr: 0
===Function Start===
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Missing Required Attachment<-      ID: fb30b5a0.4a80e8       Wires: 44304eec.b88b6
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 412,
    "message": "Missing required file attachment."
});
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: b0a3f154.45812       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"Inputs": msg});
}
===Function   End===
  

***********************************************************************************************************
Processing Subflow Item: 117   ->Kore Http 2.0<-    ID: da740a9b.08ed88      Wires: [{"y":140,"x":60,"wires":[{"id":"8f27b7b4.9190d8"}]}]
===Info Start===
Expects msg.kore.request to present
msg.kore.return_obj contains the field return by KORE ("d")
If data is return msg.kore.object is needed.
===info   End===
  
---------- Node Type: ->function<-   ->KORE URL<-      ID: 8f27b7b4.9190d8       Wires: d712f801.098658
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("kore") && !msg.kore.hasOwnProperty("server")){
    var kore = global.get("VCAP_KORE");
    msg.kore.server = kore.credentials.url
    msg.headers = {
        "content-type": "application/json",
        "Authorization": kore.credentials.type + " " + kore.credentials.apikey
    };
}
msg.url = msg.kore.server + "/json/" + msg.kore.request
msg.payload = msg.kore.body
return msg;
===Function   End===
  
  
---------- Node Type: ->http request<-   ->KORE http<-      ID: d712f801.098658       Wires: 75722218.98ad1c
           tls: 
           url: 
           ret: obj
           method: POST
  
  
---------- Node Type: ->function<-   ->KORE Returns<-      ID: 75722218.98ad1c       Wires: d9a454ac.e85b08,ecc66f3a.fe958
           outputs: 2
           outputLabels: ["Data","Error"]
           noerr: 0
===Function Start===
delete msg.statusCode;
delete msg.url;
delete msg.responseUrl;
delete msg.headers;
delete msg.responseCookies;
if (msg.kore.return_obj === "items" && msg.payload.hasOwnProperty("d")) { msg.payload = msg.payload.d }
if (msg.payload.hasOwnProperty(msg.kore.return_obj))
{
    msg[msg.kore.object] = [];
    if(Array.isArray(msg.payload[msg.kore.return_obj])) {
        msg[msg.kore.object] = msg.payload[msg.kore.return_obj];
    } else {
        msg[msg.kore.object][0] = msg.payload[msg.kore.return_obj];
    }
    msg.payload = {};
    return [msg, null];
}
if (msg.payload.hasOwnProperty("errorCode")) {
    msg.kore.error = {
        "code": msg.payload.errorCode,
        "description": msg.payload.errorMessage,
        "source": "kore"
    }
    msg.payload = {};
    return [null,msg];
}
if (typeof msg.payload === "number") {
    msg.kore.return_code = msg.payload;
    msg.payload = {};
    if(msg.kore.return_code === 0) {
        return [msg, null];
    } else {
        return [null,msg];
    }
}


===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: d9a454ac.e85b08       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"Kore Http": msg});
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->KORE Error<-      ID: ecc66f3a.fe958       Wires: 7c53d266.ff837c
           outputs: 1
           noerr: 0
===Function Start===
/*if(msg.kore.hasOwnProperty("return_code")) {
    if(msg.kore.return_code === 1) { msg.kore.error_message = "Access Denied" }
    else if(msg.kore.return_code === 2) { msg.kore.error_message = "Invalid Action" }
    else if(msg.kore.return_code === 3) { msg.kore.error_message = "Invalid Device Number" }
    else { msg.kore.error_message = "Unknown KORE return code."}
}*/
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": msg.kore.error
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 7c53d266.ff837c       Wires: <end>

***********************************************************************************************************
Processing Subflow Item: 118   ->Object Storage 2.1<-    ID: f4989ebd.9314      Wires: [{"y":160,"x":40,"wires":[{"id":"25f95225.2b743e"}]}]
===Info Start===
2.1 20190515 delete 4K flows and replaced token with IAM Management
===info   End===
  
---------- Node Type: ->function<-   ->Check Inputs<-      ID: 25f95225.2b743e       Wires: 9c968e0d.e9e5e,e8efde41.fb3c3
           outputs: 2
           outputLabels: ["error","ok"]
           noerr: 0
===Function Start===
if (!msg.cos.hasOwnProperty("container") && !msg.cos.hasOwnProperty("filename")) {
    msg.cos.message = "Object Storage with missing inputs (container, filename).";
    return [msg,null,null];
} 
if (!msg.cos.hasOwnProperty("method")) {
    msg.cos.message = "Object Storage called with missing method (GET, PUT, DELETE).";
    return [msg,null,null];
}
if (msg.cos.method === "PUT" && !msg.cos.hasOwnProperty("file")) {
    msg.cos.message = "Object Storage PUT request with missing file.";
    return [msg,null,null];
}
var COS = global.get("VCAP_COS");
if (!msg.cos.hasOwnProperty("server")) { msg.cos.server = COS.url }
if (!msg.cos.hasOwnProperty("id")) { msg.cos.id = COS.credentials.resource_instance_id }
if (!msg.cos.hasOwnProperty("base_path") && COS.base_path !== "") { msg.cos.base_path = COS.base_path }
if (msg.cos.hasOwnProperty("base_path")) {
    msg.cos.url = msg.cos.server + "/" + msg.cos.base_path + "." + msg.cos.container + "/" + msg.cos.filename;
} else {
    msg.cos.url = msg.cos.server + "/" + msg.cos.container + "/" + msg.cos.filename;
}
if(!msg.iam) { msg.iam = {}; }
msg.iam.type = "cos";
return [null,msg,null];
===Function   End===
  
  
---------- Node Type: ->function<-   ->Object Storage Message<-      ID: 9c968e0d.e9e5e       Wires: b1b0bc4a.da5dd
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": msg.cos.message
})
return msg
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->IAM Mgmt 2.0<-      ID: e8efde41.fb3c3       Wires: dcfa8b29.377188
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: b1b0bc4a.da5dd       Wires: <end>
  
---------- Node Type: ->function<-   ->COS Http Setup<-      ID: dcfa8b29.377188       Wires: d11807d.309b6f8
           outputs: 1
           noerr: 0
===Function Start===
if (!msg.cos.headers) { msg.cos.headers = {}; }
msg.cos.headers.Authorization = msg.cos.authorization;
msg.method = msg.cos.method
msg.url = msg.cos.url
msg.headers = msg.cos.headers
if (msg.cos.method === "PUT") {
    msg.payload = msg.cos.file.buffer;
    msg["content-type"] = msg.cos.file.mimetype;
} else {
    msg.payload = {};
}
return msg;
===Function   End===
  
  
---------- Node Type: ->http request<-   ->Buffer<-      ID: d11807d.309b6f8       Wires: 43f0142a.79e35c
           tls: 
           url: 
           ret: bin
           method: use
  
  
---------- Node Type: ->function<-   ->COS Http Return<-      ID: 43f0142a.79e35c       Wires: d118bfe4.87601,b7ab7769.c2efb8
           outputs: 2
           outputLabels: ["error","ok"]
           noerr: 0
===Function Start===
delete msg.headers;
delete msg.url;
delete msg.responseUrl;
if (msg.method === "GET") {
    if (msg.statusCode === 200) {
        if (msg.cos.hasOwnProperty("object")) {
            msg[msg.cos.object] = msg.payload;
        } else {
            msg.cos.return = msg.payload;
        }
        msg.payload = {};
        delete msg.method;
        delete msg.statusCode;
        return [null,msg];
    }
}
if (msg.method === "PUT") {
    if (msg.statusCode === 200) {
        if (msg.cos.hasOwnProperty("object")) { msg[msg.cos.object] = "File " + msg.cos.filename + " was successfully added" }
        delete msg.method;
        delete msg.statusCode;
        return [null,msg];
    }
}
if (msg.method === "DELETE") {
    if (msg.statusCode === 204) {
        if (msg.cos.hasOwnProperty("object")) {msg[msg.cos.object] = "File " + msg.cos.filename + " was successfully deleted" }
        delete msg.method;
        delete msg.statusCode;
        return [null,msg];
    }
}
delete msg.method;
msg.payload = msg.payload.toString("utf-8");
return [msg,null]
===Function   End===
  
  
---------- Node Type: ->xml<-   ->COS Error<-      ID: d118bfe4.87601       Wires: f269bccf.265eb
           attr: 
           chr: 
           property: payload
  
  
---------- Node Type: ->function<-   ->debug<-      ID: b7ab7769.c2efb8       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"Object Storage": msg});
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->Object Storage Error<-      ID: f269bccf.265eb       Wires: b1b0bc4a.da5dd
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": msg.statusCode,
    "message": msg.payload.Error.Message[0],
    "returns": [ "cos_error" ]
})
msg.cos_error = {
    "Code": msg.payload.Error.Code[0],
    "Message": msg.payload.Error.Message[0],
    "Resource": msg.payload.Error.Resource[0],
    "RequestId": msg.payload.Error.RequestId[0],
    "httpStatusCode": msg.payload.Error.httpStatusCode[0]
}
node.warn({"COS Error": msg.payload});
return msg;
===Function   End===
  

***********************************************************************************************************
Processing Subflow Item: 119   ->Record Model 2.1<-    ID: df6d98dd.00d378      Wires: [{"y":120,"x":40,"wires":[{"id":"4b326353.484a3c"}]}]
===Info Start===
Create a msg.records.<model name> for each element in msg.records.models array.
Warning:
Some models require sub models.
"help_tickets" model requires "geo_location", "cell_data", "cell_tower_info"
msg.records.models array order must be ordered to create sub models first.
===info   End===
  
---------- Node Type: ->function<-   ->For Each Model<-      ID: 4b326353.484a3c       Wires: 495056ad.f6a658,3d594598.444a5a
           outputs: 2
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("records") && msg.records.hasOwnProperty("models") && Array.isArray(msg.records.models) && msg.records.models.length > 0){
    msg.records.model_type = msg.records.models.pop();
    return [null, msg];
}
else {
    // ignore models
    return [msg, null];
}


===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: 495056ad.f6a658       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api && msg.api.debug) {
    node.warn({"Record Models": msg});
}
===Function   End===
  
  
---------- Node Type: ->switch<-   ->doc_type<-      ID: 3d594598.444a5a       Wires: f41eb87f.3fe8e8,e65b1849.fa8ef8,b50566a4.bafa58,f6c4cc23.e611d,b80809e7.3a0438,1181b084.21530f,b7a43a54.bed748,64c927c5.1f5948,60e8682c.16a928,36a87de1.f725d2,d75b2252.f82da,e237bae3.862198,3be3718a.91923e,320704c9.c219fc
           checkall: true
           repair: false
           rules: [{"vt":"str","t":"eq","v":"user"},{"vt":"str","t":"eq","v":"device"},{"vt":"str","t":"eq","v":"cell_data"},{"vt":"str","t":"eq","v":"geo_location"},{"vt":"str","t":"eq","v":"cell_tower_info"},{"vt":"str","t":"eq","v":"help_ticket"},{"vt":"str","t":"eq","v":"edhr"},{"vt":"str","t":"eq","v":"machine_life"},{"vt":"str","t":"eq","v":"settings_file"},{"vt":"str","t":"eq","v":"machine_link"},{"vt":"str","t":"eq","v":"provider_link"},{"vt":"str","t":"eq","v":"case"},{"vt":"str","t":"eq","v":"dapp_user"},{"t":"else"}]
           outputs: 14
           propertyType: msg
           property: records.model_type
  
  
---------- Node Type: ->function<-   ->user<-      ID: f41eb87f.3fe8e8       Wires: 86fcedb.068ad1
           outputs: 1
           noerr: 0
===Function Start===
msg.records.user = {
  "doc_type": "user",
  "status": "active",
  "role": "",
  "sub_roles": [], 
  "password": "",
  "uid": "",
  "first_name": "",
  "last_name": "",
  "mobile_phone": "",
  "email": "",
  "gets_change_email": false,
  "bart_sart": "",
  "business_unit": "",
  "sales_area": "",
  "sales_region": "",
  "sales_territory": "",
  "service_area": "",
  "service_region": "",
  "service_territory": "",
  "created_by": "", 
  "eula_create_date": 0,
  "eula_accept_status": "",
  "eula_accept_date": 0,
  "remote_access_allowed": false,
  "idp_id": ""
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->device<-      ID: e65b1849.fa8ef8       Wires: 86fcedb.068ad1
           outputs: 1
           noerr: 0
===Function Start===
msg.records.device = {
  "_id": "",
  "doc_type": "device",
  "status": "active",
  "system_type": "",
  "business_unit": "",
  "sales_area": "",
  "sales_region": "",
  "sales_territory": "",
  "service_area": "",
  "service_region": "",
  "service_territory": "",
  "customer_id": "",
  "facility_id": "",
  "facility_name": "",
  "facility_address": "",
  "sales_status": "",
  "status_date": 0,
  "get_me_help_allowed": false,
  "placed_by": "",
  "birth_date": Date.now(),
  "edhr_birth_record_id": "",
  "idp_id": "",
  "password": "",
  "email": ""
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->cell_data<-      ID: b50566a4.bafa58       Wires: 86fcedb.068ad1
           outputs: 1
           noerr: 0
===Function Start===
msg.records.cell_data = {
    "carrier" : "",
    "considerIP" : false,
    "cellTowers" : [
        {
            "cellId": 0,
            "locationAreaCode": 0,
            "mobileCountryCode": 0,
            "mobileNetworkCode": 0
        }
    ]
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->geo_location<-      ID: f6c4cc23.e611d       Wires: 86fcedb.068ad1
           outputs: 1
           noerr: 0
===Function Start===
msg.records.geo_location = {
    "location": {
        "lat": 0,
        "lng": 0
    },
    "accuracy": 0
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->cell_tower_info<-      ID: b80809e7.3a0438       Wires: 86fcedb.068ad1
           outputs: 1
           noerr: 0
===Function Start===
msg.records.cell_tower_info = {
    "Carrier":"",
    "CellID":0,
    "LAC":0,
    "MCC":0,
    "MNC":0
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->help_ticket<-      ID: 1181b084.21530f       Wires: 86fcedb.068ad1
           outputs: 1
           noerr: 0
===Function Start===
msg.records.help_ticket = {
    "system_sn": "",
    "system_type": "",
    "doctor_id": "",
    "cell_tower_info": {},
    "geo_location": {},
    "address": "",
    "start_time": Date.now(),
    "close_time": 0,
    "ticket_status": "New",
    "reason": "",
    "contact_name": "",
    "contact_number": "",
    "machine_state": {},
    "assigned_id": [],
    "responder_id": [],
    "ticket_notes": "",
    "surgeon_settings_file_id": "",
    "surgeon_settings_name": "",
    "device_ip": ""
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->edhr<-      ID: b7a43a54.bed748       Wires: 86fcedb.068ad1
           outputs: 1
           noerr: 0
===Function Start===
msg.records.edhr = {
  "doc_type": "edhr",
  "status": "active",
  "system_sn": "",
  "system_type": "",
  "timestamp": Date.now(),
  "geo_location": {},
  "modlist": [],
  "software_options": []
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->machine_life<-      ID: 64c927c5.1f5948       Wires: 86fcedb.068ad1
           outputs: 1
           noerr: 0
===Function Start===
msg.records.machine_life = {
    "doc_type": "machine_life",
    "status": "active",
    "system_sn": "",
    "power_on_time_stamp": 0,
    "prev_power_off_time_stamp": 0, 
    "function_accumulator": []
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->settings_file<-      ID: 60e8682c.16a928       Wires: 86fcedb.068ad1
           outputs: 1
           noerr: 0
===Function Start===
msg.records.settings_file = {
    "doc_type": "settings_file",
    "status": "active",
    "file_id": "",
    "updating_system": "", 
    "file_name": "",
    "user_id": "",
    "updating_timestamp": 0,
    "objectDB_id": ""
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->machine_link<-      ID: 36a87de1.f725d2       Wires: 86fcedb.068ad1
           outputs: 1
           noerr: 0
===Function Start===
msg.records.machine_link = {
    "doc_type": "machine_link",
    "status": "active",
    "device": "",
    "user": ""
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->provider_link<-      ID: d75b2252.f82da       Wires: 86fcedb.068ad1
           outputs: 1
           noerr: 0
===Function Start===
msg.records.provider_link = {
    "doc_type": "provider_link",
    "status": "active",
    "provider_id": "",
    "consumer_id": ""
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->case<-      ID: e237bae3.862198       Wires: 86fcedb.068ad1
           outputs: 1
           noerr: 0
===Function Start===
msg.records.case = {
    "doc_type": "case",
    "status": "active",
    "log_id": "",
    "system_sn": "",
    "system_type": "",
    "location": "",
    "geo_location": "",
    "address": "",
    "user_id": "",
    "settings_file_id": "",
    "settings_file_name": "",
    "start_time": 0,
    "stop_time": 0,
    "case_log": ""
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->dapp_user<-      ID: 3be3718a.91923e       Wires: 86fcedb.068ad1
           outputs: 1
           noerr: 0
===Function Start===
msg.records.dapp_user = {
    "_id": "",
    "settings": {
        "is_goal_visible": true,
        "is_lifetime_visible": true,
        "is_period_visible": true,
        "spotlight_metrics": [
            {
                "metric_id": "time_in_case_first_fp_end",
                "display_order": 0,
                "is_hidden": false,
                "goal_value": 0
            },
            {
                "metric_id": "us_effective_time",
                "display_order": 1,
                "is_hidden": false,
                "goal_value": 10
            }
        ],
        "categories": [
            {
                "category_name": "Case Time",
                "display_order": 0,
                "metrics": [
                    {
                        "metric_id": "time_in_case_setup_end",
                        "display_order": 0,
                        "is_hidden": false,
                        "goal_value": 0
                    },
                    {
                        "metric_id": "time_in_case_first_fp_end",
                        "display_order": 1,
                        "is_hidden": false,
                        "goal_value": 1
                    }
                ]
            },
            {
                "category_name": "Case Fluid",
                "display_order": 1,
                "metrics": [
                    {
                        "metric_id": "fluid_level",
                        "display_order": 0,
                        "is_hidden": false,
                        "goal_value": 0
                    }
                ]
            },
            {
                "category_name": "Infusion",
                "display_order": 2,
                "metrics": [
                    {
                        "metric_id": "infusion_actual_time",
                        "display_order": 0,
                        "is_hidden": false,
                        "goal_value": 25
                    },
                    {
                        "metric_id": "infusion_average_pressure_cmH2O",
                        "display_order": 1,
                        "is_hidden": false,
                        "goal_value": 0
                    },
                    {
                        "metric_id": "infusion_average_pressure_mmHg",
                        "display_order": 2,
                        "is_hidden": false,
                        "goal_value": 0
                    }
                ]
            },
            {
                "category_name": "Aspiration",
                "display_order": 3,
                "metrics": [
                    {
                        "metric_id": "aspiration_actual_time",
                        "display_order": 0,
                        "is_hidden": false,
                        "goal_value": 25
                    },
                    {
                        "metric_id": "aspiration_average_vacuum",
                        "display_order": 1,
                        "is_hidden": false,
                        "goal_value": 0
                    },
                    {
                        "metric_id": "aspiration_effective_vacuum_time",
                        "display_order": 2,
                        "is_hidden": false,
                        "goal_value": 0
                    }
                ]
            },
            {
                "category_name": "Ultrasound",
                "display_order": 4,
                "metrics": [
                    {
                        "metric_id": "us_actual_time",
                        "display_order": 0,
                        "is_hidden": false,
                        "goal_value": 0
                    },
                    {
                        "metric_id": "us_average_power",
                        "display_order": 1,
                        "is_hidden": false,
                        "goal_value": 0
                    },
                    {
                        "metric_id": "us_effective_time",
                        "display_order": 2,
                        "is_hidden": false,
                        "goal_value": 0
                    }
                ]
            },
            {
                "category_name": "Coagulation",
                "display_order": 5,
                "metrics": [
                    {
                        "metric_id": "coagulation_actual_time",
                        "display_order": 0,
                        "is_hidden": false,
                        "goal_value": 0
                    },
                    {
                        "metric_id": "coagulation_average_power",
                        "display_order": 1,
                        "is_hidden": false,
                        "goal_value": 25
                    },
                    {
                        "metric_id": "coagulation_effective_time",
                        "display_order": 2,
                        "is_hidden": false,
                        "goal_value": 0
                    }
                ]
            },
            {
                "category_name": "Vitrectomy",
                "display_order": 6,
                "metrics": [
                    {
                        "metric_id": "vitrectomy_actual_time",
                        "display_order": 0,
                        "is_hidden": false,
                        "goal_value": 0
                    },
                    {
                        "metric_id": "vitrectomy_average_cut_rate",
                        "display_order": 1,
                        "is_hidden": false,
                        "goal_value": 0
                    },
                    {
                        "metric_id": "vitrectomy_effective_time",
                        "display_order": 2,
                        "is_hidden": false,
                        "goal_value": 0
                    }
                ]
            }
        ],
        "color_mapping": [
            {
                "id": "mode_chop",
                "color": "#CCFF99"
            },
            {
                "id": "mode_debulk", 
                "color": "#33FF66",
            },
            {
                "id": "mode_epi", 
                "color": "#33FF99",
            },
            {
                "id": "mode_phaco", 
                "color": "#33CC33",
            },
            {
                "id": "mode_scchop", 
                "color": "#99CC33",
            },
            {
                "id": "mode_sculpt", 
                "color": "#00CC99",
            },
            {
                "id": "mode_segment", 
                "color": "#99FFCC",
            },
            {
                "id": "Ultrasound", 
                "color": "#CCFF66",
            },
            {
                "id": "mode_frag", 
                "color": "#199919",
            },
            {
                "id": "Frag", 
                "color": "#7BCC7B",
            },
            {
                "id": "mode_ia", 
                "color": "#0033CC",
            },
            {
                "id": "mode_polish", 
                "color": "#0066CC",
            },
            {
                "id": "mode_visco", 
                "color": "#0099CC",
            },
            {
                "id": "IrrigationAspiration", 
                "color": "#6699FF",
            },
            {
                "id": "mode_extrude", 
                "color": "#3399FF",
            },
            {
                "id": "Extrude", 
                "color": "#33CCFF",
            },
            {
                "id": "mode_irr", 
                "color": "#66CCFF",
            },
            {
                "id": "Irrigation", 
                "color": "#CCECFF",
            },
            {
                "id": "mode_coag", 
                "color": "#CC00CC",
            },
            {
                "id": "Coagulation", 
                "color": "#FF99FF",
            },
            {
                "id": "mode_avit", 
                "color": "#FFFF00",
            },
            {
                "id": "AnteriorVit", 
                "color": "#CCCC00",
            },
            {
                "id": "mode_vit", 
                "color": "#FFFF99",
            },
            {
                "id": "PosteriorVit", 
                "color": "#FFFF66",
            },
            {
                "id": "mode_vitesse_core", 
                "color": "#CCFF33",
            },
            {
                "id": "mode_vitesse_low", 
                "color": "#CCFF66",
            },
            {
                "id": "Vitesse", 
                "color": "#CCFF99",
            },
            {
                "id": "mode_laser", 
                "color": "#00FF00",
            },
            {
                "id": "Laser", 
                "color": "#66FF66",
            },
            {
                "id": "mode_vfi", 
                "color": "#996633",
            },
            {
                "id": "ViscousFluidControl", 
                "color": "#CC9966",
            },
            {
                "id": "Setup", 
                "color": "#808080",
            },
            {
                "id": "Other", 
                "color": "#C0C0C0"
            }
        ]
    },
    "filters": {
        "data_user_id": null,
        "facility_id": null,
        "machine_id": null,
        "display_period": "monthly",
        "date": Date.now(),
        "case_type": "cataract"
    }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Not Found<-      ID: 320704c9.c219fc       Wires: 86fcedb.068ad1
           outputs: 1
           noerr: 0
===Function Start===
node.warn({"Model": "Not Found",  "doc_type": msg.records.doc_type});
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Combine for Each<-      ID: 86fcedb.068ad1       Wires: 495056ad.f6a658,b3d679ba.4c1868
           outputs: 2
           noerr: 0
===Function Start===
if(msg.records.models.length >= 1){
    return [null, msg];
}
else {
    delete msg.records.model_type;
    return [msg, null];
}
===Function   End===
  
  
---------- Node Type: ->link out<-   ->ForEach_Model<-      ID: b3d679ba.4c1868       Wires: <end>
           links: ["13f08a81.b16255"]
  

***********************************************************************************************************
Processing Subflow Item: 120   ->Record New 2.2<-    ID: e0cd8199.1ad77      Wires: [{"y":220,"x":40,"wires":[{"id":"aa7ba18f.b2222"}]}]
===Info Start===
Verifies the previous http call did not return a record
If record is found, returns an error
Get a model of the record
Update the model with inputs
Insert the record in Cloudant
lookup and return the inserted record

uses:
msg.records.doc_type to determine which cloudant database to target
msg.records.models to setup a model to populate
msg.inputs.body to find the fields to populate the model with

===info   End===
  
---------- Node Type: ->function<-   ->Find Record<-      ID: aa7ba18f.b2222       Wires: 4e06e02a.6185e,c8f1b2d5.de0b7,bc93e10d.9f064
           outputs: 3
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("records") && msg.records.hasOwnProperty("id") && msg.records.id !== ""){
    msg.cloudant = {
        "method": "GET",
        "return_obj": "",
        "db_table": "stellaris_documents"
    };
    if(msg.records.hasOwnProperty("doc_type") && msg.records.doc_type === "help_ticket") {  msg.cloudant.db_table = "help_tickets" }
    if(msg.records.hasOwnProperty("doc_type") && (msg.records.doc_type === "machine_life" || msg.records.doc_type === "case" || msg.records.doc_type === "edhr")) {  msg.cloudant.db_table = "stellaris_logs" }
    if(msg.records.hasOwnProperty("doc_type") && msg.records.doc_type === "dapp_user") { 
        msg.cloudant.db_table = "dataapp_documents";
        msg.cloudant.object = "dapp_user";
    }
    msg.cloudant.request = "/" +  msg.cloudant.db_table + "/" + msg.records.id;
    if (msg.hasOwnProperty("inputs") && msg.inputs.hasOwnProperty("body")) {
        if(msg.inputs.body.hasOwnProperty("id")) { delete msg.inputs.body.id }
        if(msg.inputs.body.hasOwnProperty("_id")) { delete msg.inputs.body._id }
    }
    return [null,msg,null]
} else if(msg.hasOwnProperty("records") && msg.records.hasOwnProperty("doc_type") && msg.records.doc_type === "user" && msg.records.hasOwnProperty("email")){
    msg.cloudant = {
        "db_table": "stellaris_documents",
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "user",
        "selector": {
            "doc_type": "user",
            "email": msg.records.email,
            "status": "active"
        },
        "fields": ["_id", "doc_type", "email"]
    }
    return [null,msg,null]
} else if(msg.hasOwnProperty("records") && msg.records.hasOwnProperty("doc_type") && msg.records.doc_type === "case" && msg.records.hasOwnProperty("log_id")){
    msg.cloudant = {
        "db_table": "stellaris_logs",
        "request": "/stellaris_logs/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "case",
        "selector": {
            "doc_type": "case",
            "log_id": msg.records.log_id
        },
        "fields": ["_id", "doc_type", "log_id"]
    }
    return [null,msg,null]
} else if(msg.hasOwnProperty("records") && msg.records.hasOwnProperty("doc_type") &&(msg.records.doc_type === "machine_life" || msg.records.doc_type === "edhr") && !msg.records.hasOwnProperty("id")){
    msg.cloudant = {
        "db_table": "stellaris_logs",
        "object": msg.records.doc_type
    }
    return [msg,null,null]
} else if(msg.hasOwnProperty("records") && msg.records.hasOwnProperty("doc_type") && msg.records.doc_type === "help_ticket" && !msg.records.hasOwnProperty("id")){
    msg.cloudant = {
        "db_table": "help_tickets",
        "object": msg.records.doc_type
    }
    return [msg,null,null]
} else if(msg.hasOwnProperty("records") && msg.records.hasOwnProperty("doc_type") && msg.records.doc_type === "settings_file" && !msg.records.hasOwnProperty("id")){
    msg.cloudant = {
        "db_table": "stellaris_documents",
        "object": msg.records.doc_type
    }
    return [msg,null,null]
} else if(msg.hasOwnProperty("records") && msg.records.hasOwnProperty("doc_type") && msg.records.doc_type === "machine_link"){
    msg.cloudant = {
        "db_table": "stellaris_documents",
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "machine_link",
        "selector": {
            "doc_type": "machine_link",
            "user": msg.inputs.user_id,
            "device": msg.inputs.device_id
        },
        "fields": ["_id", "doc_type", "device", "user"]
    }
    return [msg,null,null]
} else if(msg.hasOwnProperty("records") && msg.records.hasOwnProperty("doc_type") && msg.records.doc_type === "provider_link"){
    msg.cloudant = {
        "db_table": "stellaris_documents",
        "request": "/stellaris_documents/_find",
        "method": "POST",
        "return_obj": "docs",
        "object": "provider_link",
        "selector": {
            "doc_type": "provider_link",
            "provider_id": msg.inputs.provider_id,
            "consumer_id": msg.inputs.consumer_id
        },
        "fields": ["_id", "doc_type", "provider_id", "consumer_id"]
    }
    return [msg,null,null]
} else {
    return [null,null, msg]
}

    
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Record Model 2.1<-      ID: 4e06e02a.6185e       Wires: 73b7ca8a.39dd04
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: c8f1b2d5.de0b7       Wires: fb687ee1.7f9ad
  
---------- Node Type: ->function<-   ->doc_type not supported<-      ID: bc93e10d.9f064       Wires: bf795f.ef8d86a
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "The provided doc_type: " + msg.records.doc_type + " is not supported by the New Record subflow"
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Update Record Values<-      ID: 73b7ca8a.39dd04       Wires: f10e4ede.450cb,7f36f4fa.4c3d1c
           outputs: 2
           outputLabels: ["standard","skip (user surgeon)"]
           noerr: 0
===Function Start===
if ( msg.hasOwnProperty("inputs") && msg.inputs.hasOwnProperty("body")) {
    Object.keys(msg.inputs.body).forEach(function(field){
        msg.records[msg.records.object][field] = msg.inputs.body[field]
    });
}
if(msg.records.object === "user" && (msg.records.user.password === "" || msg.records.user.email === "")) {
    node.warn({"User New: Skip Surgeon Create": msg});
    return [null,msg];
}
if(msg.records.object === "device") {
    msg.records[msg.records.object]._id = msg.records.id
}
if(msg.records.object === "dapp_user") {
    msg.records[msg.records.object]._id = msg.records.id;
    msg.records[msg.records.object].filters.data_user_id = msg.records.id;
}
if(msg.records.object === "help_ticket") {
    var field_list = ["contact_name", "contact_number", "surgeon_settings_name"];
    var cryptojs = global.get('cryptojs');
    var key = global.get('CRYPTO_KEYS').cloudant.payload;
    field_list.forEach(function(field){
        var efield = "e_" + field;
        if(msg.records[msg.records.object][field]) {
            if(msg.records[msg.records.object][field] !== "") {
                msg.records[msg.records.object][efield] = cryptojs.AES.encrypt(JSON.stringify(msg.records[msg.records.object][field]),key).toString();
            } else {
                msg.records[msg.records.object][efield] = "";
            }
            delete msg.records[msg.records.object][field];
        }
    })
}
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->function<-   ->Record Not Found<-      ID: fb687ee1.7f9ad       Wires: 4e06e02a.6185e,a610ab5b.d8e668
           outputs: 2
           noerr: 0
===Function Start===
var return_object = msg.records.object;
if(msg.cloudant.hasOwnProperty("object")){ return_object = msg.cloudant.object }
if(msg.hasOwnProperty(return_object) && msg[return_object].length > 0 && msg[return_object][0].hasOwnProperty("_id") ){
    if ( msg.records.doc_type === "dapp_user" ) {
        return [ null, msg ];
    } else {
        if ( msg[return_object][0].doc_type === msg.records.doc_type) {
            return [ null, msg ];
        } else {
            return [ msg, null ];
        }
    }
} else {
    return [ msg, null ];
}

===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: bf795f.ef8d86a       Wires: <end>
  
---------- Node Type: ->switch<-   ->doc_type<-      ID: f10e4ede.450cb       Wires: 3cd3ca14.eae3d6,897afc99.9645d,7f36f4fa.4c3d1c
           checkall: false
           repair: false
           rules: [{"vt":"str","t":"eq","v":"user"},{"vt":"str","t":"eq","v":"device"},{"t":"else"}]
           outputs: 3
           propertyType: msg
           property: records.doc_type
  
  
---------- Node Type: ->function<-   ->Setup Cloudant Insert<-      ID: 7f36f4fa.4c3d1c       Wires: 1d679b99.e2ad74
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.cloudant.hasOwnProperty("server")) {
    var cloudant = global.get("VCAP_CLOUDANT");
    msg.cloudant.server = "https://" + cloudant.credentials.host;
    msg.cloudant.headers = {
        "Authorization": "Basic " + Buffer.from(cloudant.credentials.username + ':' + cloudant.credentials.password).toString('base64')
    }
}
msg.url = msg.cloudant.server + "/" + msg.cloudant.db_table;
msg.headers = msg.cloudant.headers;
msg.cloudant.body = msg.records[msg.records.object]
msg.payload = msg.cloudant.body;
delete msg.cloudant.method;
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Record Already Exist<-      ID: a610ab5b.d8e668       Wires: e11bfea5.e8f09,bf795f.ef8d86a
           outputs: 2
           outputLabels: ["Exist Override","Exist Error"]
           noerr: 0
===Function Start===
if (!msg.records.hasOwnProperty("error_on_exist") || msg.records.error_on_exist === true) {
    var error_id = msg.records.id;
    var error_obj = "id";
    if(msg.records.hasOwnProperty("email")) {
        error_id = msg.records.email;
        error_obj = "email";
    }
    if(msg.records.hasOwnProperty("log_id")) {
        error_id = msg.records.log_id;
        error_obj = "log_id";
    }
    var error_return_object = msg.records.object;
    if (msg.cloudant.hasOwnProperty("object")) { error_return_object = msg.cloudant.object }
    if(!msg.hasOwnProperty("errors")){msg.errors = []}
    msg.errors.push({
        "code": 400,
        "message": "The " + msg.records.object + " with " + error_obj + ": " + error_id + " already exists.",
        "returns": [error_return_object]
    })
    delete msg[error_return_object][0].doc_type;
    return [null,msg];
} else {
    msg.records.found = true;
    return [msg,null];
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->AppID New User<-      ID: 3cd3ca14.eae3d6       Wires: a11dd7ca.4a0b58
  
---------- Node Type: ->subflow<-   ->AppID New Device<-      ID: 897afc99.9645d       Wires: a5ba9d3d.b7007
  
---------- Node Type: ->http request<-   ->POST Request<-      ID: 1d679b99.e2ad74       Wires: 20975717.82edb8
           tls: 
           url: 
           ret: obj
           method: POST
  
  
---------- Node Type: ->function<-   ->debug<-      ID: e11bfea5.e8f09       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"New Record": msg});
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->User idp_id<-      ID: a11dd7ca.4a0b58       Wires: 7f36f4fa.4c3d1c
           outputs: 1
           noerr: 0
===Function Start===
if (msg.appid.hasOwnProperty("user") && msg.appid.user.hasOwnProperty("id")) {
    msg.records[msg.records.object].idp_id = msg.records.idp_id;
    if(msg.records.password) {
        msg.records[msg.records.object].password = msg.records.password;
    }
}
node.warn({"New Rec User APPID": msg})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Device idp_id<-      ID: a5ba9d3d.b7007       Wires: 7f36f4fa.4c3d1c
           outputs: 1
           noerr: 0
===Function Start===
if (msg.appid.hasOwnProperty("device") && msg.appid.device.hasOwnProperty("id")) {
    msg.records[msg.records.object].idp_id = msg.records.idp_id;
    msg.records[msg.records.object].password = msg.records.password;
}
node.warn({"New Rec Device APPID": msg})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Setup Record Reload<-      ID: 20975717.82edb8       Wires: f5e9fd9a.06e74,b84c1252.a892c
           outputs: 2
           noerr: 0
===Function Start===
if(msg.payload.hasOwnProperty("ok") && msg.payload.ok && msg.payload.hasOwnProperty("id")) { 
    msg.records.id = msg.payload.id;
    msg.records[msg.records.object]._id = msg.payload.id;
    if(msg.hasOwnProperty("records") && msg.records.hasOwnProperty("id")){
        msg.cloudant.method = "GET";
        msg.cloudant.return_obj = "";
        msg.cloudant.request = "/" +  msg.cloudant.db_table + "/" + msg.records.id;
    }
    return [msg,null];
} else {
    return [null,msg]
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: f5e9fd9a.06e74       Wires: e11bfea5.e8f09,582c62cd.3bc4ac
  
---------- Node Type: ->function<-   ->Insert Failed<-      ID: b84c1252.a892c       Wires: bf795f.ef8d86a
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "The " + msg.records.object + " insertion failed."
})
return msg;
===Function   End===
  
  
---------- Node Type: ->switch<-   ->doc_type<-      ID: 582c62cd.3bc4ac       Wires: 2cddf891.d4a998,25a03c33.80a984
           checkall: false
           repair: false
           rules: [{"vt":"str","t":"eq","v":"user"},{"vt":"str","t":"eq","v":"device"}]
           outputs: 2
           propertyType: msg
           property: records.doc_type
  
  
---------- Node Type: ->function<-   ->User _id<-      ID: 2cddf891.d4a998       Wires: 9dd93110.befca,25a03c33.80a984
           outputs: 2
           outputLabels: ["update","skip"]
           noerr: 0
===Function Start===
if(msg.appid) {
    if (msg.appid[msg.records.object] && msg.appid[msg.records.object].entitlements && msg.appid[msg.records.object].entitlements.length > 0) {
        var bl_cloud = msg.appid[msg.records.object].entitlements[0].bl_cloud
        if(!bl_cloud.c_id || bl_cloud.c_id === "") {
            msg.appid.updates = {
                "c_id": msg.records.id
            }
        }
        node.warn({"Update _id in APPID": msg})
        return [msg,null];
    }
}
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->AppID Lists<-      ID: 25a03c33.80a984       Wires: <end>
  
---------- Node Type: ->subflow<-   ->AppID Update User<-      ID: 9dd93110.befca       Wires: 25a03c33.80a984

***********************************************************************************************************
Processing Subflow Item: 121   ->Record Update 2.2<-    ID: 68197f61.7975      Wires: [{"y":220,"x":60,"wires":[{"id":"90877aec.e498b8"}]}]
===Info Start===
This subflow expects the following
object id located in msg.records.id
object type located in msg.records.doc_type
fields to update locate in msg.inputs.body
Note: msg.inputs.body should not include "id" or "_id"
===info   End===
  
---------- Node Type: ->function<-   ->Find Record<-      ID: 90877aec.e498b8       Wires: a009dac3.412498,fe7d02fa.eeed3
           outputs: 2
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("cloudant")) {msg.cloudant = {}}
if(!msg.cloudant.hasOwnProperty("id") && msg.records.hasOwnProperty("id") ) {msg.cloudant.id = msg.records.id}
if(!msg.cloudant.hasOwnProperty("doc_type") && msg.records.hasOwnProperty("doc_type") ) {msg.cloudant.doc_type = msg.records.doc_type}
if (msg.hasOwnProperty(msg.cloudant.object)) { delete msg[msg.cloudant.object] }
if(msg.cloudant.hasOwnProperty("id")){
    msg.cloudant.db_table = "stellaris_documents";
    msg.cloudant.object="doc_type";
    msg.cloudant.method = "GET";
    msg.cloudant.return_obj = "";
    if(msg.cloudant.hasOwnProperty("doc_type") && msg.cloudant.doc_type === "help_ticket") {
        msg.cloudant.db_table = "help_tickets";
        msg.cloudant.object = "help_ticket";
    }
    if(msg.cloudant.hasOwnProperty("doc_type") && (msg.cloudant.doc_type === "machine_life" || msg.cloudant.doc_type === "case" || msg.cloudant.doc_type === "edhr")) {
        msg.cloudant.db_table = "stellaris_logs";
    }
    if(msg.cloudant.hasOwnProperty("doc_type") && msg.cloudant.doc_type === "dapp_user") { 
        msg.cloudant.db_table = "dataapp_documents";
        msg.cloudant.object = "dapp_user";
    }
    msg.cloudant.request = "/" + msg.cloudant.db_table + "/" + msg.cloudant.id;
    return [msg, null]
} else {
    return [null, msg]
}

===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: a009dac3.412498       Wires: 5f138d96.afa2e4
  
---------- Node Type: ->function<-   ->Invalid id Provided<-      ID: fe7d02fa.eeed3       Wires: 1357e27e.bc178e,68e3cec6.a0ed2
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Provided ID is not valid"
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Record Found<-      ID: 5f138d96.afa2e4       Wires: 17232310.01f24d,6296d1ff.4ba9
           outputs: 2
           noerr: 0
===Function Start===
if(["help_ticket", "dapp_user"].includes(msg.cloudant.doc_type)) { //help_ticket and dapp_user do not have doc_type
    if(msg.hasOwnProperty(msg.records.object) && msg[msg.records.object].length === 1 && msg[msg.records.object][0]._id === msg.records.id) {
        msg.records.rev = msg[msg.records.object][0]._rev;
        return [ msg, null ];
    } else {
        return [ null, msg ];
    }
} else {
    if(msg.hasOwnProperty(msg.records.object) && msg[msg.records.object].length === 1 && msg[msg.records.object][0].doc_type === msg.records.doc_type && msg[msg.records.object][0]._id === msg.records.id) {
        msg.records.rev = msg[msg.records.object][0]._rev;
        return [ msg, null ];
    } else {
        return [ null, msg ];
    } 
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: 1357e27e.bc178e       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"Update Record": msg});
}
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 68e3cec6.a0ed2       Wires: <end>
  
---------- Node Type: ->function<-   ->Update Record Values<-      ID: 17232310.01f24d       Wires: 7294442a.03530c,f5704060.0564c,3bb8e474.ba6abc
           outputs: 3
           outputLabels: ["appid update","cloudant only","appid new"]
           noerr: 0
===Function Start===
var record = msg[msg.records.object][0];
var update_appid = false;
var new_appid = false;
var appid_fields = ["last_name", "first_name", "email", "password", "mobile_phone", "voice_phone", "role"]; //"sub_roles"
var appid_objects = ["device","user"];
if (record.hasOwnProperty("doc_type") && appid_objects.indexOf(record.doc_type) >= 0){
    update_appid = true;
    if(!msg.appid) { msg.appid = {} }
    if(record.idp_id) {
        msg.appid.id = record.idp_id;
    } else {
        var appid = global.get("APPID")
        var record_idx = appid[record.doc_type + "s"].c_ids.indexOf(record._id);
        if(record_idx >= 0){
            msg.appid.id = appid[record.doc_type + "s"].idp_ids[record_idx];
            msg.inputs.body.idp_id = msg.appid.id;
        } else {
            //return an error
            node.warn("WARNING: Record is not in APP ID");
            new_appid = true;
        }
    }
    if(msg.records.password){msg.inputs.body.password = msg.records.password}
    msg.appid.updates = {};
}
Object.keys(msg.inputs.body).forEach(function(field){
    if(field === "ticket_notes" && record.hasOwnProperty(field)) {
        record[field] = record[field] + "\n" + msg.inputs.body[field];
    } else if(field === "responder_id" && record.hasOwnProperty(field)) {
        record[field].push(msg.inputs.body[field]);
    } else {
        if (update_appid && appid_fields.indexOf(field) >=0) {
            msg.appid.updates[field] = msg.inputs.body[field];
            record[field] = msg.inputs.body[field]; // update all in cloudant for now
        } else {
            record[field] = msg.inputs.body[field];
        }
    }
    if(field === "_id" || field === "c_id") {msg.appid.updates.c_id = msg.inputs.body[field];}
});
if(msg.records.object === "help_ticket") {
    var field_list = ["contact_name", "contact_number", "surgeon_settings_name"];
    var cryptojs = global.get('cryptojs');
    var key = global.get('CRYPTO_KEYS').cloudant.payload;
    field_list.forEach(function(field){
        var efield = "e_" + field;
        if(record[field]) {
            if(record[field] !== "") {
                record[efield] = cryptojs.AES.encrypt(JSON.stringify(record[field]),key).toString();
            } else {
                record[efield] = "";
            }
            delete record[field];
        }
    })
}
msg[msg.records.object][0] = record;
if (update_appid && Object.keys(msg.appid.updates).length > 0) {
    if(new_appid){
        msg.records[msg.records.object] = record;
        return [null,null,msg];
    } else {
        return [msg,null,null];
    }
} else {
    return [null,msg,null];
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->Record Not Found<-      ID: 6296d1ff.4ba9       Wires: 68e3cec6.a0ed2,1357e27e.bc178e
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "Record with id: " + msg.records.id + " was not found"
})
return msg;
===Function   End===
  
  
---------- Node Type: ->switch<-   ->doc_type<-      ID: 7294442a.03530c       Wires: 120fbfbf.e3ce1,6f3869a9.e36078
           checkall: false
           repair: false
           rules: [{"vt":"str","t":"eq","v":"user"},{"vt":"str","t":"eq","v":"device"}]
           outputs: 2
           propertyType: msg
           property: records.doc_type
  
  
---------- Node Type: ->function<-   ->Setup Cloudant Insert<-      ID: f5704060.0564c       Wires: 9fa0d4af.a95a58
           outputs: 1
           noerr: 0
===Function Start===
msg.url = msg.cloudant.url;
msg.headers = msg.cloudant.headers;
msg.payload = msg[msg.records.object][0];
if(!msg.payload.idp_id || msg.payload.idp_id === "") {
    msg.payload.idp_id = msg.records.idp_id;
    node.warn({"New Surgeon Add idp_id":msg});
}
return msg;
===Function   End===
  
  
---------- Node Type: ->switch<-   ->doc_type<-      ID: 3bb8e474.ba6abc       Wires: 451fd57.ddc742c,5767abd4.2b63a4
           checkall: false
           repair: false
           rules: [{"vt":"str","t":"eq","v":"user"},{"vt":"str","t":"eq","v":"device"}]
           outputs: 2
           propertyType: msg
           property: records.doc_type
  
  
---------- Node Type: ->subflow<-   ->AppID Update User<-      ID: 120fbfbf.e3ce1       Wires: f5704060.0564c
  
---------- Node Type: ->subflow<-   ->AppID Update Device<-      ID: 6f3869a9.e36078       Wires: f5704060.0564c
  
---------- Node Type: ->http request<-   ->PUT Request<-      ID: 9fa0d4af.a95a58       Wires: 51cdf21e.e0a42c
           tls: 
           url: 
           ret: obj
           method: PUT
  
  
---------- Node Type: ->subflow<-   ->AppID New User<-      ID: 451fd57.ddc742c       Wires: f5704060.0564c
  
---------- Node Type: ->subflow<-   ->AppID New Device<-      ID: 5767abd4.2b63a4       Wires: f5704060.0564c
  
---------- Node Type: ->function<-   ->Setup Record Reload<-      ID: 51cdf21e.e0a42c       Wires: c5424b86.7d0048
           outputs: 1
           noerr: 0
===Function Start===
msg.cloudant.return_obj = "";
if (msg.hasOwnProperty(msg.records.object)) { delete msg[msg.records.object] }
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: c5424b86.7d0048       Wires: 1357e27e.bc178e,5ded422f.342e1c
  
---------- Node Type: ->switch<-   ->doc_type<-      ID: 5ded422f.342e1c       Wires: c9c3c28.d7b2f4,c9c3c28.d7b2f4
           checkall: false
           repair: false
           rules: [{"vt":"str","t":"eq","v":"user"},{"vt":"str","t":"eq","v":"device"}]
           outputs: 2
           propertyType: msg
           property: records.doc_type
  
  
---------- Node Type: ->subflow<-   ->AppID Lists<-      ID: c9c3c28.d7b2f4       Wires: <end>
  
---------- Node Type: ->subflow<-   ->AppID Lists<-      ID: c9c3c28.d7b2f4       Wires: <end>

***********************************************************************************************************
Processing Subflow Item: 122   ->Return Error 2.1<-    ID: 2638fa4d.cb43e6      Wires: [{"y":160,"x":40,"wires":[{"id":"66468412.9e2ccc"}]}]
===Info Start===
Format and returns the last error in the msg.errors array
===info   End===
  
---------- Node Type: ->function<-   ->Compile Error<-      ID: 66468412.9e2ccc       Wires: 9340a5fc.f0d5d8
           outputs: 1
           noerr: 0
===Function Start===
msg.payload = {};
msg.api.end_time = Date.now();
if (msg.api.hasOwnProperty("statistics")) {msg.api.statistics.time_ms = msg.api.end_time - msg.api.start_time}
if(msg.hasOwnProperty("errors") && msg.errors.length > 0) {
    var first_error = msg.errors[0];
    msg.headers = {"Content-type" : "application/json"};
    if(typeof first_error.message === "string") { msg.payload = { "error": first_error.message } } else { msg.payload = { "error": first_error.message } }
    msg.statusCode = first_error.code;
    if(first_error.hasOwnProperty("returns") && first_error.returns.length > 0) {
        first_error.returns.forEach(function(object){
            if(msg.hasOwnProperty(object)){
                if(msg.hasOwnProperty("records") && msg.records.hasOwnProperty("format") && msg.records.format === "JSON") {
                    msg.payload[object] = msg[object][0];
                }
                else {
                    msg.payload[object] = msg[object];
                }
            }
            else{
                node.warn({"Returns": "Error", "Expected object not found in msg: ": object})
            }
        });
    }
} else {
    msg.statusCode = 400;
    msg.payload = { "error": "Unhandled Error was triggered" }
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Info & Stats 2.0<-      ID: 9340a5fc.f0d5d8       Wires: f86d4788.190438
  
---------- Node Type: ->function<-   ->Combine Returns<-      ID: f86d4788.190438       Wires: 4394da9d.caf384,fae978dd.b05238
           outputs: 1
           noerr: 0
===Function Start===
if (msg.api.info) {msg.payload.info = msg.info}
if (msg.api.stats) {msg.payload.stats = msg.stats}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->IF Http Res Exist<-      ID: 4394da9d.caf384       Wires: 56b6ae51.32017
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("res")) {return msg}
else { node.warn({ "Return Error": msg}) }
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: fae978dd.b05238       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"Return Error": msg});
}
if(!msg.api.hasOwnProperty("name")) {
    msg.api.name = "API Results";    
}
var api_name = "[ERROR] - Returns";
var apic = "";
if (msg.api.hasOwnProperty("apic")) {
    apic = " - [" + msg.api.apic.catalog + "][" + msg.api.apic.version + "]";
}
if(msg.api.hasOwnProperty("example")) {
    api_name = "[ERROR] - " + msg.api.name + " - " + msg.api.example + apic;
}
else {
   api_name = "[ERROR] - " + msg.api.name + apic; 
}
var warn = {}
warn[api_name] = msg.payload;
warn.msg = msg;
node.warn(warn);
===Function   End===
  
  
---------- Node Type: ->http response<-   ->Error<-      ID: 56b6ae51.32017       Wires: <end>
           headers: {}
           statusCode: 
  

***********************************************************************************************************
Processing Subflow Item: 123   ->Returns 2.3<-    ID: bc6ff87.05a2908      Wires: [{"y":200,"x":80,"wires":[{"id":"e20763f5.33406"}]}]
===Info Start===
Returns act in order of existance:
msg.records.returns
msg.records.object
msg.payload

If returns exists it uses the array of objectNames and creates a JSON return object containing the msg.objectNames in the order they appear on the list.
If object exists it returns msg.object.
Otherwise it returns the payload unchanged.
===info   End===
  
---------- Node Type: ->function<-   ->Setup Returns<-      ID: e20763f5.33406       Wires: 794affb4.5365
           outputs: 1
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("api")) {
    msg.api.end_time = Date.now();
    if (msg.api.hasOwnProperty("statistics")) {msg.api.statistics.time_ms = msg.api.end_time - msg.api.start_time}
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Info & Stats 2.0<-      ID: 794affb4.5365       Wires: 838a5b09.936648
  
---------- Node Type: ->function<-   ->Combine Returns<-      ID: 838a5b09.936648       Wires: 60d75440.bb3a6c
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("records")) {
    if (msg.records.hasOwnProperty("returns") && msg.records.returns.length > 0) {
        // if msg.records.return is an array of object to return
        msg.payload = {};
        msg.records.returns.forEach(function(object){
            if (["info","stats"].includes(object)){
                if (msg.hasOwnProperty(object)) {
                    msg.payload[object] = msg[object]
                }
            } else if (object === "message"){
               if (msg.hasOwnProperty(object)){ msg.payload[object] = msg[object] }
            } else if (object === "file"){
               if (msg.hasOwnProperty(object)){ msg.payload = msg[object] }
            } else {
                if (msg.hasOwnProperty(object)){
                    if (msg.records.hasOwnProperty("return_formats") && msg.records.return_formats.hasOwnProperty(object)) {
                        var format = msg.records.return_formats[object]
                        node.warn({"WARNING": object})
                        if (format === "JSON") {
                            if(msg[object][0]) {
                                msg.payload[object] = msg[object][0];
                            } else {
                                msg.payload[object] = {};
                            }
                        } else {
                            msg.payload[object] = msg[object];
                        }
                    } else {
                        if (msg.records.format === "JSON") {
                            if(msg[object][0]) {
                                msg.payload[object] = msg[object][0];
                            } else {
                                msg.payload[object] = {};
                            }
                        } else {
                            msg.payload[object] = msg[object];
                        }
                    }
                } else {
                    node.warn({"Returns": "Error", "Expected object not found in msg: ": object})
                }
            }
        });
    } else {
        if (msg.records.hasOwnProperty("object")) {
            // return the one JSON or array of objects defined in records
            if (msg.hasOwnProperty(msg.records.object)) {
                if (msg.records.hasOwnProperty("format") && msg.records.format === "JSON") { msg.payload = msg[msg.records.object][0]; }
                else { msg.payload = msg[msg.records.object]; }
            }
            else {
                node.warn({"Returns": "Error", "Expected object not found in msg: ": msg.cloudant.object})
            }
        }
    }
    if (msg.records.hasOwnProperty("return_code")) {msg.statusCode = msg.records.return_code}
}
// else return payload
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->Decrypt Cloudant Fields<-      ID: 60d75440.bb3a6c       Wires: 471373d5.3cd54c
           outputs: 1
           noerr: 0
===Function Start===
var cryptojs = global.get('cryptojs');
var encryption_available = global.get('CRYPTO_KEYS');
if(encryption_available && encryption_available.cloudant) {
    var key = encryption_available.cloudant.payload;
    var field_list = [];
    var types = ["help_tickets","help_ticket","settings_files","settings_file"];
    if(msg.payload && msg.payload !== {}) {
        Object.keys(msg.payload).forEach(function(type) {
            if(types.indexOf(type) >= 0) {
                if(["help_tickets","help_ticket"].indexOf(type) >= 0) { field_list = ["contact_name", "contact_number", "surgeon_settings_name"]; }
                if(["settings_files","settings_file"].indexOf(type) >= 0) { field_list = ["file_name"]; }
                if(Array.isArray(msg.payload[type])) {
                    msg.payload[type].forEach(function(record,idx){
                        field_list.forEach(function(field){
                            var efield = "e_" + field;
                            if(record[efield]) {
                                if(record[efield] !== "") {
                                    try {
                                        record[field] = JSON.parse(cryptojs.AES.decrypt(record[efield],key).toString(cryptojs.enc.Utf8));
                                    }
                                    catch(e){ node.warn({"Decrypt ERROR": e}) }
                                } else {
                                    record[field] = "";
                                }
                                delete record[efield];
                            }
                        });
                    });
                } else {
                    field_list.forEach(function(field){
                        //node.warn(field)
                        var efield = "e_" + field;
                        if(msg.payload[type][efield]) {
                            if(msg.payload[type][efield] !== "") {
                                try {
                                    msg.payload[type][field] = JSON.parse(cryptojs.AES.decrypt(msg.payload[type][efield],key).toString(cryptojs.enc.Utf8));
                                }
                                catch(e){ node.warn( {"Decrypt ERROR": e}) }
                            } else {
                                msg.payload[type][field] = "";
                            }
                            delete msg.payload[type][efield];
                        }
                    });
                }
            }
        });
    }
} else {
    node.warn("WARNING [cloudant Encryption]: On this setup Cloudant Encrytpion is NOT available")
}
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Encryption<-      ID: 471373d5.3cd54c       Wires: 53775c5.a4da7a4,d85da47d.445228
  
---------- Node Type: ->function<-   ->IF Http Res Exist<-      ID: 53775c5.a4da7a4       Wires: 51fa0754.778cc8
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("res")) {return msg}
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: d85da47d.445228       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"Returns": msg});
}
var warn = {};
if(!msg.api.hasOwnProperty("name")) {
    msg.api.name = "API Results";    
}
var apic = "";
if (msg.api.hasOwnProperty("apic")) {
    apic = " - [" + msg.api.apic.catalog + "][" + msg.api.apic.version + "]";
}
if(msg.api.hasOwnProperty("example")) {
    warn[msg.api.name + " - " + msg.api.example + apic] = { "Returns": msg.payload, "msg": msg };
}
else {
   warn[msg.api.name + apic] = msg.payload; 
}
node.warn(warn);
===Function   End===
  
  
---------- Node Type: ->http response<-   ->Return<-      ID: 51fa0754.778cc8       Wires: <end>
           headers: {}
           statusCode: 
  

***********************************************************************************************************
Processing Subflow Item: 124   ->SMS 2.2<-    ID: 4f94cf29.53815      Wires: [{"y":120,"x":40,"wires":[{"id":"9d11623.9608ba"}]}]
===Info Start===
msg.sms =
{
  "send": "true",
  "template_type": "default",
  "fields": {},
  "to": ["+1-555-123-4567"]
}
Template options:
remove msg.sms.template_type
msg.sms.template = <manual template utf-8 string>

Overrides:
msg.sms.send === "false"
or
msg.sms.send === "true"
msg.api.debug === "true"
msg.debug.sms.to = <override sms-number>

Template fields out replaced:
{{{field}}}
===info   End===
  
---------- Node Type: ->function<-   ->SMS Setup<-      ID: 9d11623.9608ba       Wires: ,f00b78cb.ad3a28
           outputs: 2
           outputLabels: ["no sms","yes sms"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("sms") && (msg.sms.hasOwnProperty("to") || msg.sms.hasOwnProperty("to_voice"))) {
    if ( (Array.isArray(msg.sms.to) && msg.sms.to.length === 0) || msg.sms.to === "" ) {
        return [msg,null];
    }
    delete msg.res;
    delete msg.req;
    return [null,msg];
}
return [msg,null]
===Function   End===
  
  
---------- Node Type: ->function<-   ->SMS Check Template<-      ID: f00b78cb.ad3a28       Wires: 812ba212.bb63c,57cdc08a.c8efa
           outputs: 2
           outputLabels: ["no template","yes template"]
           noerr: 0
===Function Start===

if (msg.sms.hasOwnProperty("template_type")) {
    return [null,msg];
}
return [msg,null];
===Function   End===
  
  
---------- Node Type: ->function<-   ->SMS Template Processing<-      ID: 812ba212.bb63c       Wires: f9cb1c7.d26aee
           outputs: 1
           noerr: 0
===Function Start===
msg.sms.message = msg.sms.template;
if(msg.sms.hasOwnProperty("fields")) {
    Object.keys(msg.sms.fields).forEach(function(field) {
        var tag = "{{{" + field + "}}}";
        msg.sms.message = msg.sms.message.replace(RegExp(tag, 'g'), msg.sms.fields[field])
    });
}
var SPACE = global.get("SPACE");
if (["Development", "US Test"].indexOf(SPACE) >= 0) {
msg.sms.message = "[" + SPACE + "] " + msg.sms.message;
}
if(msg.sms.hasOwnProperty("to")) {
    if (Array.isArray(msg.sms.to)) {
        msg.sms_list = cleanPhoneNumbers(msg.sms.to);
    } else {
        msg.sms_list = cleanPhoneNumbers(msg.sms.to.splice(","));
    }
}
if(msg.sms.hasOwnProperty("to_voice")) {
    if (Array.isArray(msg.sms.to_voice)) {
        msg.sms_voice_list = cleanPhoneNumbers(msg.sms.to_voice);
    } else {
        msg.sms_voice_list = cleanPhoneNumbers(msg.sms.to_voice.splice(","));
    }
}
return msg;

function cleanPhoneNumbers(list) {
    var clean_list = [];
    list.forEach(function(phone){
        if(phone == null) {
            //delete entry
        } else if (phone.length <= 9 || phone === "" || phone === "\s+" || phone === "null") {
            //delete entry
        } else {
            clean_list.push(phone)
        }
    });
    return clean_list;
}
===Function   End===
  
  
---------- Node Type: ->switch<-   ->template_type<-      ID: 57cdc08a.c8efa       Wires: 20c6f0d6.45b89,4802e9c2.173bf8
           checkall: true
           repair: false
           rules: [{"vt":"str","t":"eq","v":"help_ticket"},{"t":"else"}]
           outputs: 2
           propertyType: msg
           property: sms.template_type
  
  
---------- Node Type: ->function<-   ->SMS Debug<-      ID: f9cb1c7.d26aee       Wires: 13885be8.270ac4
           outputs: 1
           noerr: 0
===Function Start===
node.warn({"Sms": msg});
if(msg.api.hasOwnProperty("debug") && (msg.api.debug === true || msg.api.debug.override)) {
    if(msg.hasOwnProperty("debug") && msg.debug.hasOwnProperty("sms")){
        if(msg.debug.sms.hasOwnProperty("to")){
            if (Array.isArray(msg.debug.sms.to)) {
                msg.sms_list = msg.debug.sms.to;
            } else {
                msg.sms_list = [msg.debug.sms.to];
            }
        }
        if(msg.debug.sms.hasOwnProperty("to_voice")){
            if (Array.isArray(msg.debug.sms.to_voice)) {
                msg.sms_voice_list = msg.debug.sms.to_voice;
            } else {
                msg.sms_voice_list = [msg.debug.sms.to_voice];
            }
        }
        if(msg.debug.sms.hasOwnProperty("send") && (msg.debug.sms.send === false)){
            node.warn({"Sms Not Sent to": msg.sms_list});
            delete msg.sms_list;
            node.warn({"Sms Voice Not Sent to": msg.sms_voice_list});
            delete msg.sms_voice_list;
        }
    }
}
return msg;

===Function   End===
  
  
---------- Node Type: ->change<-   ->Help Ticket<-      ID: 20c6f0d6.45b89       Wires: 4eba1c75.b38284
           property: 
           from: 
           rules: [{"p":"sms.template_file","tot":"str","t":"set","pt":"msg","to":"B+L_Eyetelligence_Help_Ticket_00.txt"}]
           reg: false
           to: 
           action: 
  
  
---------- Node Type: ->function<-   ->Template Not Supported<-      ID: 4802e9c2.173bf8       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
node.warn({"Sms Error:" : "SMS template type: " + msg.sms.template_type + " is not supported."})

===Function   End===
  
  
---------- Node Type: ->function<-   ->Check Provider<-      ID: 13885be8.270ac4       Wires: 4250e36d.1e3c0c,36e8c931.b4baa6,410a31fd.1f91e
           outputs: 2
           outputLabels: ["twilio","att"]
           noerr: 0
===Function Start===
msg.sms.provider = global.get("VCAP_SMS");
if(msg.sms.hasOwnProperty("provider")) {
    if(msg.sms.provider.hasOwnProperty("att")) {
        node.warn("ATT");
        return [msg,null];
    }
    if(msg.sms.provider.hasOwnProperty("twilio")) {
        node.warn("TWILIO");
        return [null, msg];
    }
}
// No provider available do nothing
node.warn("WARNING: SMS Provider NOT available");
===Function   End===
  
  
---------- Node Type: ->function<-   ->SMS Object Setup<-      ID: 4eba1c75.b38284       Wires: 68fd1464.02b56c
           outputs: 1
           noerr: 0
===Function Start===
msg.cos = {
    "method": "GET",
    "filename": msg.sms.template_file,
    "container": "sms-templates"
};
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->ATT SMS Setup<-      ID: 4250e36d.1e3c0c       Wires: 2cc5b368.a146ac
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("sms_list") && msg.sms_list.length > 0 ) {
    var att = msg.sms.provider.att;
    var destination = msg.sms_list.join(',').replace(/[+]/g,''); // replacing + in the phone number
    msg.url = att.credentials.sms_url + "?destination=" + destination  +"&text=" + msg.sms.message;
    msg.headers = {
           "content-type": "application/x-www-form-urlencoded",
           "authorization": "Basic " + Buffer.from(att.credentials.username + ":" + att.credentials.password).toString('base64')
    };
    node.warn({"ATT SMS sent to: ": msg.sms_list})
    return msg;
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->ATT Voice Setup<-      ID: 36e8c931.b4baa6       Wires: eccdac94.14b49
           outputs: 1
           noerr: 0
===Function Start===
if(msg.hasOwnProperty("sms_voice_list") && msg.sms_voice_list.length > 0 ) {
    var att = msg.sms.provider.att;
    var destination = msg.sms_voice_list.join('&destination=').replace(/[+]/g,'');
    msg.url = att.credentials.voice_url + "?subAction=20" + "&destination="+ destination + "&text=" + msg.sms.message + "&loop=" + att.loop;
    msg.headers = {
           "content-type": "application/x-www-form-urlencoded",
           "authorization": "Basic " + Buffer.from(att.credentials.username + ":" + att.credentials.password).toString('base64')
    };
    node.warn({"ATT Voice sent to: ": msg.sms_voice_list})
    return msg;
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->Twilio Process SMS List<-      ID: 410a31fd.1f91e       Wires: 41619fef.427f2,120eb9f2.662d36
           outputs: 2
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("sms_list")  && msg.sms_list.length > 0) {
    msg.topic = msg.sms_list.pop();
    if (msg.sms_list.length === 0) 
    {
        return [msg, null];
    }
    return [msg, msg];
}



===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Object Storage 2.1<-      ID: 68fd1464.02b56c       Wires: 1762d850.0daed8
  
---------- Node Type: ->http request<-   ->AT&T SMS<-      ID: 2cc5b368.a146ac       Wires: f817388b.ecb6c8
           tls: 
           url: 
           ret: txt
           method: POST
  
  
---------- Node Type: ->http request<-   ->AT&T Voice<-      ID: eccdac94.14b49       Wires: f817388b.ecb6c8
           tls: 
           url: 
           ret: txt
           method: POST
  
  
---------- Node Type: ->function<-   ->Twilio Setup<-      ID: 41619fef.427f2       Wires: ede39252.d15c7
           outputs: 1
           noerr: 0
===Function Start===
tw = msg.sms.provider.twilio.credentials;
msg.url = tw.twilio_api_base_url + "2010-04-01/Accounts/" + tw.twilio_account_sid + "/Messages.json";
msg.sms.headers = {
       "content-type": "application/x-www-form-urlencoded",
       "authorization": "Basic " + Buffer.from(tw.twilio_account_sid + ":" + tw.twilio_auth_token).toString('base64')
};
msg.sms.body = { "From": tw.twilio_phone_number, "To": msg.topic, "Body": msg.sms.message};
msg.payload = msg.sms.body;
msg.headers = msg.sms.headers;
node.warn({"Twilio SMS sent to: ": msg.topic});
return msg;
===Function   End===
  
  
---------- Node Type: ->link out<-   ->sms loop in<-      ID: 120eb9f2.662d36       Wires: <end>
           links: ["39badb90.713a24"]
  
  
---------- Node Type: ->function<-   ->SMS Object Return<-      ID: 1762d850.0daed8       Wires: 812ba212.bb63c
           outputs: 1
           noerr: 0
===Function Start===
msg.sms.template = msg.cos.return.toString("utf-8")
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->ATT Debug<-      ID: f817388b.ecb6c8       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if (msg.statusCode !== 200) {
    node.warn({"WARNING ATT Send Error": msg.payload});
}
===Function   End===
  
  
---------- Node Type: ->http request<-   ->Twilio SMS<-      ID: ede39252.d15c7       Wires: <end>
           tls: 
           url: 
           ret: txt
           method: POST
  
***********************************************************************************************************
NOT FOUND! Subflow Item: 125   ->Sim Http 1.0<- 

***********************************************************************************************************
Processing Subflow Item: 126   ->Support Users 2.1<-    ID: e08f785c.844a68      Wires: [{"y":120,"x":60,"wires":[{"id":"ea8d6a75.315508"}]}]
===Info Start===

===info   End===
  
---------- Node Type: ->function<-   ->Check support_users<-      ID: ea8d6a75.315508       Wires: ,6eed9503.cb2ebc
           outputs: 2
           outputLabels: ["ignore","find admin"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("support_users") && msg.support_users.length > 0) {
    return [msg,null]
}
msg.records.returns.push("warning");
msg.warning = ["No associated support person was found. Admin users have been contacted."]
msg.cloudant = {
    "request": "/stellaris_documents/_find",
    "method": "POST",
    "return_obj": "docs",
    "object": "support_users",
    "selector": {
        "$and": [
            {"doc_type": "user"},
            {"status": "active"},
            {"sub_roles": {
                "$or": [{"$elemMatch": { "$eq": "Admin" }}]
                }
            }]
    }
};
return [null,msg];
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Cloudant Http 2.2<-      ID: 6eed9503.cb2ebc       Wires: 7dbf778a.7d5328
  
---------- Node Type: ->function<-   ->Clean Up<-      ID: 7dbf778a.7d5328       Wires: 1c822c95.90be83
           outputs: 1
           noerr: 0
===Function Start===

return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: 1c822c95.90be83       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"Support Users ": msg});
}
===Function   End===
  

***********************************************************************************************************
Processing Subflow Item: 127   ->User Mgmt 2.0<-    ID: 81f022a0.cad36      Wires: [{"y":140,"x":60,"wires":[{"id":"f43d6fba.3663a"}]}]
===Info Start===
Management of User PII stored in memory
1. add user PII to cloudant user records
2. sort cloudant records by PII fields
3. Search user records by PII fields
4. down filter cloudant user lists by PII fields

msg.userMgmt = {
    "method": "Add PII" //add PII to json or array
    "object": "users" //msg.users contains an array of users
    "fields": ["first_name", "last_name"] //limit the fields to be added. All if property is missing
}
===info   End===
  
---------- Node Type: ->function<-   ->Setup<-      ID: f43d6fba.3663a       Wires: 48548ede.50f03,5fc9bcaf.f9e084,e4337144.2e964
           outputs: 3
           outputLabels: ["skip","execute","no users"]
           noerr: 0
===Function Start===
if (msg.hasOwnProperty("userMgmt") && msg.userMgmt.hasOwnProperty("method")){
    if (global.get("userIds").length > 0) {
        return [null,msg,null];
    } else {
        return [null,null,msg]
    }
    if (msg.userMgmt.hasOwnProperty("fields") && msg.userMgmt.fields.length > 0) {
        var allowedFields = ["first_name", "last_name", "email", "mobile_phone"]; //list of allowed PII that can be added in a return
        msg.userMgmt.forEach(function(field){
            if (allowedFields.indexOf(field) < 0 ){
                delete msg.userMgmt.fields[field];
            }
        })
    }
}
return [msg,null,null];
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: 48548ede.50f03       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"User Mgmt": msg});
}
===Function   End===
  
  
---------- Node Type: ->switch<-   ->Method<-      ID: 5fc9bcaf.f9e084       Wires: 207026df.2c3b6a,98820bb3.984f78
           checkall: false
           repair: false
           rules: [{"vt":"str","t":"eq","v":"Add PII"},{"t":"else"}]
           outputs: 2
           propertyType: msg
           property: userMgmt.method
  
  
---------- Node Type: ->function<-   ->Users Not Available<-      ID: e4337144.2e964       Wires: 5bc5d1d3.c4a37
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User Mgmt: Users Not Available"
})
===Function   End===
  
  
---------- Node Type: ->function<-   ->Add PII<-      ID: 207026df.2c3b6a       Wires: e72b0ed8.94d46
           outputs: 1
           noerr: 0
===Function Start===
var users = global.get("users");
var userIds = global.get("userIds");
if (msg.userMgmt.hasOwnProperty("object")){
    var object = msg.userMgmt.object;
} else {
    var object = payload;
}
if (Array.isArray(msg[object])){
    msg[object].forEach(function(obj)
    {
        var userIdx = userIds.indexOf(obj._id);
        addPii(obj,users[userIdx]);
        
    });    
} else {
    var userIdx = userIds.indexOf(msg[object]._id);
    addPii(obj,users[userIdx]); 
}
return msg;

//Add PII information
function addPii(userData,userPii) {
    userEmpty = {
            "first_name": "",
            "last_name": "",
            "email": "",
            "mobile_phone": "",
            "PII": true
    }
    if (userPii !== null) {
        userPii = Object.assign({}, userEmpty, userPii); //needed to add PII debug field
    } else {
        userPii = userEmpty;
    }
    if (msg.userMgmt.hasOwnProperty("fields") && msg.userMgmt.fields.length > 0) {
        Object.keys(userPii).forEach(function(field) {
            if (msg.userMgmt.fields.indexOf(field) < 0 && field !== "PII") {
                delete userPii[field];
            }
        })
    }
    userData = Object.assign(userData, userPii);
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->Method Not Supported<-      ID: 98820bb3.984f78       Wires: 5bc5d1d3.c4a37
           outputs: 1
           noerr: 0
===Function Start===
if(!msg.hasOwnProperty("errors")){msg.errors = []}
msg.errors.push({
    "code": 400,
    "message": "User Mgmt: Method not supported"
})
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 5bc5d1d3.c4a37       Wires: <end>
  
---------- Node Type: ->function<-   ->Cleanup<-      ID: e72b0ed8.94d46       Wires: 48548ede.50f03
           outputs: 1
           noerr: 0
===Function Start===
return msg;
===Function   End===
  

***********************************************************************************************************
Processing Subflow Item: 128   ->Webbing Http 2.0<-    ID: 98ce8d35.4c824      Wires: [{"y":140,"x":40,"wires":[{"id":"d5efcd6a.a13f8"}]}]
===Info Start===

===info   End===
  
---------- Node Type: ->function<-   ->Webbing URL<-      ID: d5efcd6a.a13f8       Wires: 9d1d2a7b.4eaba8
           outputs: 1
           noerr: 0
===Function Start===
if(msg.webbing && !msg.webbing.server){
    var webbing = global.get("VCAP_WEBBING");
    if(webbing) {
        msg.webbing.server = webbing.credentials.url;
        msg.webbing.credentials = webbing.credentials;
    }
}
if(!msg.webbing.fields) { msg.webbing.fields = {} }
msg.webbing.fields = Object.assign(msg.webbing.fields, {
    "username": msg.webbing.credentials.username,
    "password": msg.webbing.credentials.password,
    "key": msg.webbing.credentials.key
})
msg.webbing.body = msg.webbing.template;
Object.keys(msg.webbing.fields).forEach(function(field) {
    var tag = "{{{" + field + "}}}";
    msg.webbing.body = msg.webbing.body.replace(RegExp(tag, 'g'), msg.webbing.fields[field])
});
msg.payload = msg.webbing.body;
msg.headers = {
    "content-type": "text/xml"
    };
msg.url = msg.webbing.server + msg.webbing.request
//node.warn({"Webbing Send": msg});
return msg;
===Function   End===
  
  
---------- Node Type: ->http request<-   ->Webbing http<-      ID: 9d1d2a7b.4eaba8       Wires: b4dd2fd0.51266
           tls: 
           url: 
           ret: txt
           method: POST
  
  
---------- Node Type: ->function<-   ->XML Options<-      ID: b4dd2fd0.51266       Wires: a3b42444.7b1dd8
           outputs: 1
           noerr: 0
===Function Start===
//node.warn({"Webbing RAW Returns": msg})
msg.options = {
    "explicitArray": false,
    "ignoreAttrs": true
}
return msg;
===Function   End===
  
  
---------- Node Type: ->xml<-   -><-      ID: a3b42444.7b1dd8       Wires: d7b1951f.eb54e8
           attr: 
           chr: 
           property: payload
  
  
---------- Node Type: ->function<-   ->SOAP Body<-      ID: d7b1951f.eb54e8       Wires: ffd58de0.27778
           outputs: 1
           noerr: 0
===Function Start===
//node.warn({"After XML with Options": msg})
delete msg.options
msg.payload = msg.payload["soap:Envelope"]["soap:Body"]
return msg;
===Function   End===
  
  
---------- Node Type: ->switch<-   ->200<-      ID: ffd58de0.27778       Wires: 7bf7f662.04e238,f0ae01ee.f87be
           checkall: true
           repair: false
           rules: [{"vt":"str","t":"eq","v":"200"},{"t":"else"}]
           outputs: 2
           propertyType: msg
           property: statusCode
  
  
---------- Node Type: ->function<-   ->Webbing Response<-      ID: 7bf7f662.04e238       Wires: 634242b2.d749bc
           outputs: 1
           noerr: 0
===Function Start===
msg.webbing.success = (eval("msg.payload." + msg.webbing.base_return + ".Success") === "true")
if(!msg.webbing.success) {
    msg.webbing.error = {
        "code": eval("msg.payload." + msg.webbing.base_return + ".ResponseCode"),
        "description": eval("msg.payload." + msg.webbing.base_return + ".ResponseDescription")
    }
} else {
    if(msg.webbing.return_obj) {
        msg.webbing.response = eval("msg.payload." + msg.webbing.base_return + "." + msg.webbing.return_obj);
    } else {
        msg.webbing.response = eval("msg.payload." + msg.webbing.base_return);
    }
    if(msg.webbing.object) {
        msg[msg.webbing.object] = msg.webbing.response
    }
    msg.payload = {};
    delete msg.statusCode;
    delete msg.url;
    delete msg.responseUrl;
    delete msg.headers;
    delete msg.topic;
    delete msg.responseCookies;
}
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->SOAP Fault<-      ID: f0ae01ee.f87be       Wires: b7fcf5d6.9a9428
           outputs: 1
           noerr: 0
===Function Start===
delete msg.options
msg.payload = msg.payload["soap:Fault"]
return msg;
===Function   End===
  
  
---------- Node Type: ->switch<-   ->Success<-      ID: 634242b2.d749bc       Wires: e59ad422.3f49f8,a6a3d1e6.9b9d5
           checkall: true
           repair: false
           rules: [{"t":"true"},{"t":"false"}]
           outputs: 2
           propertyType: msg
           property: webbing.success
  
  
---------- Node Type: ->function<-   ->Webbing Error<-      ID: b7fcf5d6.9a9428       Wires: 66c66e0a.4408b
           outputs: 1
           noerr: 0
===Function Start===
node.warn({"Webbing Error": msg})
if(!msg.errors){msg.errors = []}
var message = msg.payload;
message.code = msg.statusCode;
message.source = "webbing";
msg.errors.push({
    "code": 400,
    "message": message
})
return msg;
===Function   End===
  
  
---------- Node Type: ->function<-   ->debug<-      ID: e59ad422.3f49f8       Wires: <end>
           outputs: 1
           noerr: 0
===Function Start===
if(msg.api.hasOwnProperty("debug") && msg.api.debug === true) {
    node.warn({"Webbing Http": msg});
}
===Function   End===
  
  
---------- Node Type: ->function<-   ->Webbing Request Error<-      ID: a6a3d1e6.9b9d5       Wires: 66c66e0a.4408b
           outputs: 1
           noerr: 0
===Function Start===
node.warn({"Webbing Error": msg})
if(!msg.errors){msg.errors = []}
var message = msg.webbing.error
message.source = "webbing";
msg.errors.push({
    "code": 400,
    "message": message
})
return msg;
===Function   End===
  
  
---------- Node Type: ->subflow<-   ->Return Error 2.1<-      ID: 66c66e0a.4408b       Wires: <end>
Program End!
